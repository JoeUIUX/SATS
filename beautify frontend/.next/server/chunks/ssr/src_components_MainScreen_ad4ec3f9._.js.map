{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/MainScreen/MainScreen.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"aboutButton\": \"MainScreen-module__4v2AYG__aboutButton\",\n  \"aboutSection\": \"MainScreen-module__4v2AYG__aboutSection\",\n  \"actionButtons\": \"MainScreen-module__4v2AYG__actionButtons\",\n  \"addProfileButton\": \"MainScreen-module__4v2AYG__addProfileButton\",\n  \"bottomSection\": \"MainScreen-module__4v2AYG__bottomSection\",\n  \"cancelButton\": \"MainScreen-module__4v2AYG__cancelButton\",\n  \"checkoutButton\": \"MainScreen-module__4v2AYG__checkoutButton\",\n  \"checkoutSection\": \"MainScreen-module__4v2AYG__checkoutSection\",\n  \"content\": \"MainScreen-module__4v2AYG__content\",\n  \"dark\": \"MainScreen-module__4v2AYG__dark\",\n  \"deleteButton\": \"MainScreen-module__4v2AYG__deleteButton\",\n  \"docx\": \"MainScreen-module__4v2AYG__docx\",\n  \"docx-wrapper\": \"MainScreen-module__4v2AYG__docx-wrapper\",\n  \"downloadButton\": \"MainScreen-module__4v2AYG__downloadButton\",\n  \"dragItem\": \"MainScreen-module__4v2AYG__dragItem\",\n  \"dropHereText\": \"MainScreen-module__4v2AYG__dropHereText\",\n  \"dropZone\": \"MainScreen-module__4v2AYG__dropZone\",\n  \"dropZoneArea\": \"MainScreen-module__4v2AYG__dropZoneArea\",\n  \"dropdownButton\": \"MainScreen-module__4v2AYG__dropdownButton\",\n  \"droppableBox\": \"MainScreen-module__4v2AYG__droppableBox\",\n  \"editButton\": \"MainScreen-module__4v2AYG__editButton\",\n  \"editButtons\": \"MainScreen-module__4v2AYG__editButtons\",\n  \"editModeButtons\": \"MainScreen-module__4v2AYG__editModeButtons\",\n  \"editableArea\": \"MainScreen-module__4v2AYG__editableArea\",\n  \"editableTextarea\": \"MainScreen-module__4v2AYG__editableTextarea\",\n  \"emptyDropZone\": \"MainScreen-module__4v2AYG__emptyDropZone\",\n  \"hidden\": \"MainScreen-module__4v2AYG__hidden\",\n  \"hiddenDropZone\": \"MainScreen-module__4v2AYG__hiddenDropZone\",\n  \"imageContainer\": \"MainScreen-module__4v2AYG__imageContainer\",\n  \"imageWrapper\": \"MainScreen-module__4v2AYG__imageWrapper\",\n  \"isDragging\": \"MainScreen-module__4v2AYG__isDragging\",\n  \"isDropped\": \"MainScreen-module__4v2AYG__isDropped\",\n  \"isEnabled\": \"MainScreen-module__4v2AYG__isEnabled\",\n  \"isOver\": \"MainScreen-module__4v2AYG__isOver\",\n  \"mainScreen\": \"MainScreen-module__4v2AYG__mainScreen\",\n  \"menu\": \"MainScreen-module__4v2AYG__menu\",\n  \"menuItem\": \"MainScreen-module__4v2AYG__menuItem\",\n  \"profileActions\": \"MainScreen-module__4v2AYG__profileActions\",\n  \"profileButtonGroup\": \"MainScreen-module__4v2AYG__profileButtonGroup\",\n  \"profileContainer\": \"MainScreen-module__4v2AYG__profileContainer\",\n  \"profileDropdown\": \"MainScreen-module__4v2AYG__profileDropdown\",\n  \"profileHeading\": \"MainScreen-module__4v2AYG__profileHeading\",\n  \"profilePage\": \"MainScreen-module__4v2AYG__profilePage\",\n  \"profileSidebarItem\": \"MainScreen-module__4v2AYG__profileSidebarItem\",\n  \"profileSubtext\": \"MainScreen-module__4v2AYG__profileSubtext\",\n  \"profilesButton\": \"MainScreen-module__4v2AYG__profilesButton\",\n  \"removeDraggedItemsButton\": \"MainScreen-module__4v2AYG__removeDraggedItemsButton\",\n  \"removeImageButton\": \"MainScreen-module__4v2AYG__removeImageButton\",\n  \"retractExpandSidebarButton\": \"MainScreen-module__4v2AYG__retractExpandSidebarButton\",\n  \"richTextEditor\": \"MainScreen-module__4v2AYG__richTextEditor\",\n  \"saveButton\": \"MainScreen-module__4v2AYG__saveButton\",\n  \"scrollableContainer\": \"MainScreen-module__4v2AYG__scrollableContainer\",\n  \"settingsButton\": \"MainScreen-module__4v2AYG__settingsButton\",\n  \"settingsContainer\": \"MainScreen-module__4v2AYG__settingsContainer\",\n  \"sidebar\": \"MainScreen-module__4v2AYG__sidebar\",\n  \"sidebarHeader\": \"MainScreen-module__4v2AYG__sidebarHeader\",\n  \"startTestButton\": \"MainScreen-module__4v2AYG__startTestButton\",\n  \"threeDModelButton\": \"MainScreen-module__4v2AYG__threeDModelButton\",\n  \"toggleButton\": \"MainScreen-module__4v2AYG__toggleButton\",\n  \"topSection\": \"MainScreen-module__4v2AYG__topSection\",\n  \"uploadButton\": \"MainScreen-module__4v2AYG__uploadButton\",\n  \"uploadContainer\": \"MainScreen-module__4v2AYG__uploadContainer\",\n  \"uploadNote\": \"MainScreen-module__4v2AYG__uploadNote\",\n  \"uploadedFileName\": \"MainScreen-module__4v2AYG__uploadedFileName\",\n  \"uploadedImage\": \"MainScreen-module__4v2AYG__uploadedImage\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/MainScreen/DraggableBox.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSortable } from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport { CSSProperties } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styles from \"./MainScreen.module.css\";\r\n\r\ninterface DraggableBoxProps {\r\n  id: string;\r\n  header: string;\r\n  options: string[];\r\n  data?: {\r\n    type: string;\r\n    [key: string]: any;\r\n  };\r\n  isDropped?: boolean;\r\n  isInBottomSection?: boolean;\r\n  className?: string;\r\n  removeDroppedItem?: (id: string) => void;\r\n  isCheckoutEditing?: boolean;\r\n  checkedOptions?: Record<string, boolean>; // prop to track checked state\r\n  onOptionChange?: (id: string, option: string, checked: boolean) => void;\r\n}\r\n\r\nconst DraggableBox: React.FC<DraggableBoxProps> = ({ \r\n  id, \r\n  header, \r\n  options, \r\n  data, \r\n  isDropped, \r\n  isInBottomSection, \r\n  removeDroppedItem, \r\n  isCheckoutEditing = false,\r\n  className,\r\n  checkedOptions = {}, // Default to empty object\r\n  onOptionChange // Handler for checkbox changes\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging\r\n  } = useSortable({\r\n    id: id,\r\n    data: {\r\n      type: \"draggable-item\",\r\n      isDraggable: !isDropped || isCheckoutEditing,\r\n      isDropped: isDropped\r\n    },\r\n    disabled: false\r\n  });\r\n\r\n  const isDarkMode = document.documentElement.classList.contains(\"dark\");\r\n\r\n  const defaultBgColor = isDarkMode ? \"#2d2d2d\" : \"#f8f9fa\";  \r\n  const droppedBgColor = defaultBgColor; \r\n\r\n  const shouldApplyEffect = isInBottomSection && isDropped && !isCheckoutEditing;\r\n\r\n  // Calculate height dynamically based on the max number of options in all dropped items\r\n  const baseHeight = 80; // Base height for header and padding\r\n  const optionHeight = 24; // Height per option\r\n  const maxVisibleOptions = 10; // Allow up to 10 options before scrolling\r\n  const totalHeight = baseHeight + (Math.min(options.length, maxVisibleOptions) * optionHeight);\r\n  const requiresScroll = options.length > maxVisibleOptions;\r\n\r\n  const [maxHeight, setMaxHeight] = useState(totalHeight);\r\n\r\n  useEffect(() => {\r\n    const allDroppedBoxes = document.querySelectorAll('[data-dropped=\"true\"]');\r\n    let highest = totalHeight;\r\n\r\n    allDroppedBoxes.forEach(box => {\r\n      const optionCount = box.querySelectorAll(\"label\").length;\r\n      const calculatedHeight = baseHeight + (Math.min(optionCount, maxVisibleOptions) * optionHeight);\r\n      if (calculatedHeight > highest) {\r\n        highest = calculatedHeight;\r\n      }\r\n    });\r\n\r\n    setMaxHeight(highest);\r\n  }, [options.length, isDropped]);\r\n\r\n  const style: CSSProperties = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition: \"background-color 0.3s ease-in-out, opacity 0.3s ease-in-out\",\r\n    padding: \"8px\",\r\n    margin: \"0\",\r\n    backgroundColor: isDropped ? droppedBgColor : defaultBgColor,\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    cursor: shouldApplyEffect ? \"not-allowed\" : isDragging ? \"grabbing\" : \"grab\", // Only disable cursor in bottom section\r\n    display: \"inline-block\",\r\n    width: \"145px\",\r\n    height: `${maxHeight}px`, // Apply max height across all boxes\r\n    boxSizing: \"border-box\",\r\n    opacity: shouldApplyEffect ? 0.5 : 1, // Only make translucent in bottom section\r\n    color: isDarkMode ? \"#ffffff\" : \"black\",\r\n    position: \"relative\",\r\n    zIndex: isDragging ? 999 : 1, // Ensure correct layering\r\n    touchAction: \"none\",\r\n    userSelect: \"none\",\r\n    overflowY: requiresScroll ? \"auto\" : \"hidden\", // Only enable scrolling after 10 options\r\n    overflowX: \"hidden\", \r\n    whiteSpace: \"normal\", \r\n    pointerEvents: shouldApplyEffect ? \"none\" : \"auto\", // Only make unselectable in bottom section\r\n  };\r\n\r\n  // Handle checkbox change\r\n  const handleCheckboxChange = (option: string, checked: boolean) => {\r\n    if (onOptionChange) {\r\n      onOptionChange(id, option, checked);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      {...attributes}\r\n      {...(isDropped && !isCheckoutEditing ? {} : listeners)}\r\n      data-draggable-id={id}\r\n      data-dropped={isDropped ? \"true\" : \"false\"}\r\n      className={className}\r\n    >\r\n{isDropped && removeDroppedItem && isCheckoutEditing && (\r\n  <button\r\n    onClick={() => removeDroppedItem(id)}\r\n    className={styles.removeDraggedItemsButton}\r\n  >\r\n    ✖\r\n  </button>\r\n)}\r\n\r\n      <h4 style={{ textAlign: \"center\", wordWrap: \"break-word\" }}>{header}</h4>\r\n      {options.map(option => (\r\n        <label key={option} style={{ \r\n          display: \"flex\", \r\n          alignItems: \"center\", \r\n          fontSize: \"12px\", \r\n          marginBottom: \"4px\", \r\n          textAlign: \"left\" \r\n        }}>\r\n          <input \r\n            type=\"checkbox\" \r\n            disabled={isDropped && !isCheckoutEditing}\r\n            style={{ marginRight: \"6px\" }}\r\n            checked={checkedOptions[option] || false}\r\n            onChange={(e) => handleCheckboxChange(option, e.target.checked)}\r\n          />\r\n          <span>{option}</span>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableBox;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/MainScreen/MainScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styles from \"./MainScreen.module.css\";\r\nimport ToTestList from \"../ToTestList/ToTestList\";\r\nimport { FaCube, FaCheck, FaTimes, FaWrench, FaBars, FaCog, FaPlus, FaEdit, FaTrash, FaInfoCircle, FaPlay } from \"react-icons/fa\";\r\nimport { FaDownload } from \"react-icons/fa\";\r\nimport mammoth from \"mammoth\"; // Import mammoth for `.docx` extraction, npm install mammoth\r\nimport { renderAsync } from \"docx-preview\"; // npm install docx-preview\r\nimport { Document, Packer, Paragraph } from \"docx\"; // npm install docx\r\nimport { EditorContent, useEditor } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport { Profile } from '@/types/types';\r\nimport Table from \"@tiptap/extension-table\";\r\nimport TableRow from \"@tiptap/extension-table-row\";\r\nimport TableCell from \"@tiptap/extension-table-cell\";\r\nimport TableHeader from \"@tiptap/extension-table-header\";\r\nimport BulletList from \"@tiptap/extension-bullet-list\";\r\nimport OrderedList from \"@tiptap/extension-ordered-list\";\r\nimport ListItem from \"@tiptap/extension-list-item\";\r\nimport TurndownService from \"turndown\";\r\nimport { DragOverlay, DndContext, closestCorners, closestCenter, pointerWithin, getFirstCollision, useSensor, useSensors, PointerSensor } from \"@dnd-kit/core\";\r\nimport { Collision, CollisionDetection } from \"@dnd-kit/core\";\r\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\r\nimport DraggableBox from \"../MainScreen/DraggableBox\"; // Import Draggable Box\r\nimport { useDroppable } from \"@dnd-kit/core\";\r\nimport { useDndContext } from \"@dnd-kit/core\";\r\nimport { rectIntersection } from \"@dnd-kit/core\";\r\nimport { DragEndEvent, UniqueIdentifier } from '@dnd-kit/core';\r\nimport ThreeDModelWindow from \"@/components/ModelWindow/ThreeDModelWindow\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { WindowName } from \"@/types/types\";\r\nimport CheckoutTestProgress from \"@/components/CheckoutTestProgress/CheckoutTestProgress\";\r\nimport { connectToMcc, setSimulationMode } from \"@/utils/mccUtils\";\r\nimport SettingsWindow from \"@/components/SettingsWindow/SettingsWindow\";\r\n\r\nconst API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\"; // fall back\r\n// Ensure this is correct\r\n\r\ninterface DroppableContainerType {\r\n  id: string;\r\n  data: {\r\n    type: string;\r\n    accepts: string[];\r\n    isDropZone?: boolean;\r\n  };\r\n}\r\n\r\ninterface CollisionRect {\r\n  top: number;\r\n  bottom: number;\r\n  left: number;\r\n  right: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface CollisionData {\r\n  droppableContainer: DroppableContainerType;\r\n  value: number;\r\n  rect: CollisionRect;\r\n}\r\n\r\ninterface CustomCollision {\r\n  id: string;\r\n  data: CollisionData;\r\n}\r\n\r\ninterface DraggableItem {\r\n  id: string;\r\n  header: string;\r\n  options: string[];\r\n  isDropped: boolean;\r\n  checkedOptions: Record<string, boolean>;\r\n}\r\n\r\ninterface MainScreenProps {\r\n  openToTestList: (forceRender?: boolean) => void; // accept optional parameter\r\n  closeToTestList: () => void;\r\n  openServerWindow: () => void;\r\n  openModelWindow: (profileId?: number) => void;\r\n  closeModelWindow: () => void; \r\n  showToTestList: boolean; \r\n  showThreeDModelWindow: boolean; \r\n  threeDModelProfileId: number | null; \r\n  windowZIndexes: { [key in WindowName]: number }; \r\n  bringWindowToFront: (windowName: WindowName) => void;\r\n  zIndexCounter: number;\r\n  navigateWithState?: (to: string, options?: any) => void;\r\n  showSettingsWindow: boolean;\r\n  openSettingsWindow: () => void;\r\n  closeSettingsWindow: () => void;\r\n}\r\n\r\nconst MainScreen: React.FC<MainScreenProps> = ({ \r\n  openToTestList, \r\n  closeToTestList,\r\n  openServerWindow, \r\n  openModelWindow,\r\n  closeModelWindow,\r\n  showToTestList, \r\n  showThreeDModelWindow,\r\n  threeDModelProfileId,\r\n  windowZIndexes,\r\n  bringWindowToFront,\r\n  zIndexCounter,\r\n  showSettingsWindow,\r\n  openSettingsWindow,\r\n  closeSettingsWindow,\r\n}): React.ReactElement => {\r\n\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [isProfileDropdownOpen, setIsProfileDropdownOpen] = useState(false);\r\n  const [profiles, setProfiles] = useState<Profile[]>([]);\r\n  const [selectedProfile, setSelectedProfile] = useState<string | null>(null);\r\n  const [showAbout, setShowAbout] = useState(false);\r\n  const [uploadedText, setUploadedText] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false); // for aboutSection\r\n  const [tempDescription, setTempDescription] = useState(\"\");\r\n  const [uploadedImages, setUploadedImages] = useState<{ src: string; alt: string }[]>([]);\r\n  const [uploadedFileName, setUploadedFileName] = useState<string | null>(null);\r\n  const [profileData, setProfileData] = useState<{ \r\n    [key: string]: { \r\n      description: string; \r\n      images: { src: string; alt: string }[]; \r\n      uploadedFileName?: string; // Store filename per profile\r\n    } \r\n  }>({});\r\n  const [showCheckout, setShowCheckout] = useState(false);\r\n  const [isCheckoutEditing, setIsCheckoutEditing] = useState(false); // For checkoutSection\r\n  const [droppedItems, setDroppedItems] = useState<DraggableItem[]>([]);\r\n  // Manage draggable items\r\n  const createDefaultCheckedOptions = (options: string[]): Record<string, boolean> => {\r\n  const checkedOptions: Record<string, boolean> = {};\r\n  options.forEach(option => {\r\n    checkedOptions[option] = true;\r\n  });\r\n  return checkedOptions;\r\n};\r\nconst [items, setItems] = useState<DraggableItem[]>([\r\n  { \r\n    id: \"1\", \r\n    header: \"OBC-1\", \r\n    options: [\"eMMC\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"eMMC\"])\r\n  },\r\n  { \r\n    id: \"2\", \r\n    header: \"OBC-2\", \r\n    options: [\"SD Card\", \"EEPROM\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"SD Card\", \"EEPROM\"])\r\n  },\r\n  { \r\n    id: \"3\", \r\n    header: \"S-Band\", \r\n    options: [\"Telemetry\", \"Ground Pass\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"Telemetry\", \"Ground Pass\"])\r\n  },\r\n  { \r\n    id: \"4\", \r\n    header: \"UHF\", \r\n    options: [\"Telemetry\", \"Ground Pass\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"Telemetry\", \"Ground Pass\"])\r\n  },\r\n  { \r\n    id: \"5\", \r\n    header: \"HEPS\", \r\n    options: [\"Solar Panel\", \"Heater\", \"Hdrm\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"Solar Panel\", \"Heater\", \"Hdrm\"])\r\n  },\r\n  { \r\n    id: \"6\", \r\n    header: \"ADCS\", \r\n    options: [\"Version Check\", \"Gyroscope\", \"Magnetometer\", \"Star Tracker\", \"FOG\", \"Fine Sun Sensor\", \"Coarse Sun Sensor\", \"Earth Sensor\", \"Reaction Wheel\", \"Magnetic Torquer\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"Version Check\", \"Gyroscope\", \"Magnetometer\", \"Star Tracker\", \"FOG\", \"Fine Sun Sensor\", \"Coarse Sun Sensor\", \"Earth Sensor\", \"Reaction Wheel\", \"Magnetic Torquer\"])\r\n  },\r\n  { \r\n    id: \"7\", \r\n    header: \"GPS\", \r\n    options: [\"Version Check\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"Version Check\"])\r\n  },\r\n  { \r\n    id: \"8\", \r\n    header: \"Propulsion\", \r\n    options: [\"ECU-1 PMA\", \"ECU-1 PPU-1\", \"ECU-2 PMA\", \"ECU-2 PPU-2\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"ECU-1 PMA\", \"ECU-1 PPU-1\", \"ECU-2 PMA\", \"ECU-2 PPU-2\"])\r\n  },\r\n  { \r\n    id: \"9\", \r\n    header: \"PCS\", \r\n    options: [\"SD Card\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"SD Card\"])\r\n  },\r\n  { \r\n    id: \"10\", \r\n    header: \"LEOCAM\", \r\n    options: [\"LEOCAM\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"LEOCAM\"])\r\n  },\r\n  { \r\n    id: \"11\", \r\n    header: \"X-Band\", \r\n    options: [\"Telecommand\", \"Telemetry\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"Telecommand\", \"Telemetry\"])\r\n  },\r\n  { \r\n    id: \"12\", \r\n    header: \"AOD\", \r\n    options: [\"AOD\"], \r\n    isDropped: false, \r\n    checkedOptions: createDefaultCheckedOptions([\"AOD\"])\r\n  },\r\n]);\r\n  const [activeId, setActiveId] = useState<string | null>(null);\r\n  const [dummyState, setDummyState] = useState(false); // state for forcing re-renders\r\n  const [sortableKey, setSortableKey] = useState(0);\r\n  const [show3DModel, setShow3DModel] = useState(false); // Manage pop-up visibility\r\n  const [selectedProfileId, setSelectedProfileId] = useState<number | null>(null);\r\n  const [showCheckoutTest, setShowCheckoutTest] = useState(false);\r\n  const [mccSocket, setMccSocket] = useState<any>(null);\r\n  // state to store the real MCC socket\r\nconst [realMccSocket, setRealMccSocket] = useState<any>(null);\r\nconst [settingsWindowVisible, setSettingsWindowVisible] = useState(showSettingsWindow);\r\n  \r\n  // In MainScreen.tsx, add this after your state declarations but before your functions\r\n  const dragTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined);\r\n\r\n  const removeDroppedItem = (itemId: string) => {\r\n    if (dragTimeoutRef.current) {\r\n      clearTimeout(dragTimeoutRef.current);\r\n    }\r\n  \r\n    console.log(`🗑️ Attempting to remove item ${itemId} from top section`);\r\n  \r\n    // Remove from `droppedItems`\r\n    setDroppedItems(prev => {\r\n      const updatedDroppedItems = prev.filter(item => item.id !== itemId);\r\n      console.log(\"✅ Updated dropped items after removal:\", updatedDroppedItems);\r\n      return [...updatedDroppedItems]; // Force reactivity\r\n    });\r\n  \r\n    // Ensure item is draggable again by updating `items` state\r\n    setItems(prev => {\r\n      const updatedItems = prev.map(item => {\r\n        if (item.id === itemId) {\r\n          console.log(`✅ Resetting isDropped for item ${itemId}`);\r\n          return { ...item, isDropped: false };\r\n        }\r\n        return item;\r\n      });\r\n      console.log(\"✅ Updated items after removal:\", updatedItems);\r\n      return [...updatedItems]; // Ensure a new array reference for reactivity\r\n    });\r\n  \r\n    // Reset DOM attributes to make the item draggable again\r\n    setTimeout(() => {\r\n      const bottomItem = document.querySelector(`[data-draggable-id=\"${itemId}\"]`) as HTMLElement;\r\n      if (bottomItem) {\r\n        console.log(`✅ Resetting DOM attributes for item ${itemId}`);\r\n        bottomItem.removeAttribute('data-dropped');\r\n        bottomItem.style.pointerEvents = 'auto';\r\n        bottomItem.style.opacity = '1';\r\n        bottomItem.style.cursor = 'grab';\r\n      }\r\n    }, 50);\r\n  \r\n    setActiveId(null);\r\n    setDragging(false);\r\n  \r\n    // FULL Reset of Drop Zones and SortableContext\r\n    setTimeout(() => {\r\n      console.log(\"🔄 FORCING FULL Reset of Drop Zones and SortableContext...\");\r\n      setDroppedItems(prev => [...prev]);\r\n      setItems(prev => [...prev]); // ✅ Ensure full re-render\r\n  \r\n      // Force SortableContext to reset\r\n      setSortableKey(prev => prev + 1);\r\n    }, 200);\r\n  };\r\n  \r\n// Add a function to handle checkbox changes\r\nconst handleOptionChange = (itemId: string, option: string, checked: boolean) => {\r\n  console.log(`Checkbox changed: ${itemId}, option: ${option}, checked: ${checked}`);\r\n  // Update items if the item is in the bottom section\r\n  setItems(prevItems => \r\n    prevItems.map(item => \r\n      item.id === itemId \r\n        ? { \r\n            ...item, \r\n            checkedOptions: { \r\n              ...item.checkedOptions, \r\n              [option]: checked \r\n            } \r\n          }\r\n        : item\r\n    )\r\n  );\r\n  \r\n  // Update droppedItems if the item is in the top section\r\n  setDroppedItems(prevItems => \r\n    prevItems.map(item => \r\n      item.id === itemId \r\n        ? { \r\n            ...item, \r\n            checkedOptions: { \r\n              ...item.checkedOptions, \r\n              [option]: checked \r\n            } \r\n          }\r\n        : item\r\n    )\r\n  );\r\n  \r\n  // Save the updated state to the database\r\n  handleSaveCheckout();\r\n};\r\n  \r\n  \r\n  const observerRef = useRef<MutationObserver | null>(null);\r\n\r\n  const renderCount = useRef(0); // Track how many times it runs\r\n\r\n  useEffect(() => {\r\n    if (!isCheckoutEditing) return;\r\n  \r\n    renderCount.current += 1;\r\n    console.log(`🔁 useEffect executed ${renderCount.current} times`);\r\n  \r\n    const dropZones = document.querySelectorAll('[data-droppable-id]');\r\n    dropZones.forEach(zone => {\r\n      zone.setAttribute('data-droppable', 'true');\r\n      zone.setAttribute('data-type', 'container');\r\n    });\r\n  \r\n  }, [isCheckoutEditing]);\r\n  \r\n  \r\n  \r\n  \r\n\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"🔄 Drop zones reloaded due to dragging state\");\r\n  }, [dragging]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchProfiles();\r\n  }, []);\r\n\r\n  const fetchProfiles = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/profiles`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch profiles.\");\r\n      }\r\n  \r\n      const data = await response.json();\r\n  \r\n      let profileMap: {\r\n        [key: string]: { description: string; images: { src: string; alt: string }[], uploadedFileName?: string };\r\n      } = {};\r\n  \r\n      data.forEach((profile: Profile) => {\r\n        profileMap[profile.name] = {\r\n          description: profile.description || \"\",\r\n          images: profile.images && Array.isArray(profile.images)\r\n            ? profile.images.map(img => \r\n                typeof img === \"string\" \r\n                  ? { src: img, alt: \"Uploaded image\" } \r\n                  : img) \r\n            : [],\r\n          uploadedFileName: profile.uploadedFileName || \"\",\r\n        };\r\n      });\r\n  \r\n      setProfiles(data);\r\n      setProfileData(profileMap);\r\n    } catch (error) {\r\n      console.error(\"Error fetching profiles:\", error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const toggleSidebar = () => setIsSidebarOpen(!isSidebarOpen);\r\n  const toggleProfileDropdown = () => setIsProfileDropdownOpen(!isProfileDropdownOpen);\r\n  const toggleAbout = () => {\r\n    if (!selectedProfile) return;\r\n    setShowAbout(!showAbout);\r\n  };\r\n\r\n\r\n  const addProfile = async () => {\r\n    let profileName = prompt(\"Enter profile name:\");\r\n  \r\n    if (!profileName || profileName.trim() === \"\") {\r\n      alert(\"Profile name cannot be empty.\");\r\n      return;\r\n    }\r\n  \r\n    profileName = profileName.trim();\r\n  \r\n    if (profiles.some((profile) => profile.name.toLowerCase() === profileName.toLowerCase())) {\r\n      alert(\"Profile name already exists! Choose a different name.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`${API_URL}/profiles`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ name: profileName, description: \"\", images: [] }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorMessage = await response.json();\r\n        throw new Error(errorMessage.error || \"Failed to create profile.\");\r\n      }\r\n  \r\n      const newProfile = await response.json();\r\n      setProfiles([...profiles, newProfile]);\r\n  \r\n      // Initialize profile data\r\n      setProfileData((prev) => ({\r\n        ...prev,\r\n        [newProfile.name]: { description: \"\", images: [] },\r\n      }));\r\n    } catch (error: unknown) {\r\n      console.error(\"Error adding profile:\", error);\r\n      if (error instanceof Error) {\r\n        alert(error.message);\r\n      } else {\r\n        alert(\"An unexpected error occurred.\");\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n  const deleteProfile = async (profileName: string) => {\r\n    const confirmDelete = window.confirm(`Are you sure you want to delete the profile: ${profileName}?`);\r\n    if (!confirmDelete) {\r\n      return; // Cancel deletion if user clicks \"Cancel\"\r\n    }\r\n  \r\n    try {\r\n      await fetch(`${API_URL}/profiles/${profileName}`, { method: \"DELETE\" });\r\n      setProfiles(profiles.filter((profile) => profile.name !== profileName));\r\n      setSelectedProfile(null);\r\n    } catch (error) {\r\n      console.error(\"Error deleting profile:\", error);\r\n    }\r\n  };\r\n  \r\n  const convertImageToBase64 = async (imageUrl: string): Promise<string> => {\r\n    try {\r\n      const response = await fetch(imageUrl);\r\n      const blob = await response.blob();\r\n      return new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result as string);\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error converting image to Base64:\", error);\r\n      return \"\";\r\n    }\r\n  };\r\n  \r\n  let formattedHtml = \"\";\r\n\r\n  const turndownService = new TurndownService();\r\n  turndownService.addRule(\"list\", {\r\n    filter: [\"ul\", \"ol\"],\r\n    replacement: function (content: string, node: Node) {\r\n      return (node as HTMLElement).outerHTML; // Typecast `node` as `HTMLElement`\r\n    },\r\n  });\r\n  \r\n  \r\n/* Function to handle file uploads */\r\nconst handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  if (!selectedProfile) return;\r\n\r\n  const file = event.target.files?.[0];\r\n  if (!file) return;\r\n\r\n  const fileName = file.name;\r\n\r\n  // Store the file name (avoid unnecessary re-renders)\r\n  setProfileData((prevData) => ({\r\n    ...prevData,\r\n    [selectedProfile]: {\r\n      ...prevData[selectedProfile],\r\n      uploadedFileName: fileName,\r\n    },\r\n  }));\r\n\r\n  const reader = new FileReader();\r\n\r\n  if (file.type === \"text/plain\") {\r\n    reader.onload = (e) => {\r\n      if (e.target?.result) {\r\n        const uploadedText = e.target.result.toString().trim();\r\n        console.log(\"Extracted Text Content:\", uploadedText);\r\n        setUploadedText(uploadedText);\r\n        autoSaveToDatabase(uploadedText, uploadedImages);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  } else if (file.name.endsWith(\".docx\")) {\r\n    reader.onload = async (e) => {\r\n      if (e.target?.result instanceof ArrayBuffer) {\r\n        try {\r\n          let formattedHtml = \"\";\r\n\r\n          // Extract HTML using `mammoth.convertToHtml()`\r\n          const mammothResult = await mammoth.convertToHtml({ arrayBuffer: e.target.result });\r\n          let extractedHtml = mammothResult.value.trim();\r\n\r\n          console.log(\"Mammoth Extracted Content (With Lists):\", extractedHtml);\r\n\r\n          // Preserve bullet points & numbered lists properly\r\n          formattedHtml = extractedHtml\r\n            .replace(/<p>\\s*•\\s*/g, \"<ul><li>\") // Fix unordered lists\r\n            .replace(/<p>\\s*\\d+\\.\\s*/g, \"<ol><li>\") // Fix ordered lists\r\n            .replace(/<\\/p>\\s*<p>/g, \"</li><li>\") // Ensure list items are correctly wrapped\r\n            .replace(/<\\/p>/g, \"</li></ul>\") // Close unordered lists properly\r\n            .replace(/<\\/ol><\\/li>/g, \"</ol>\") // Close ordered lists properly\r\n            .replace(/<\\/li><\\/ul>(?!<\\/li>)/g, \"</ul>\"); // Remove misaligned list endings\r\n\r\n          console.log(\"Final Processed HTML (Fixed Lists):\", formattedHtml);\r\n\r\n          // Process `docx-preview` but DO NOT append it to the UI\r\n          const docxContainer = document.createElement(\"div\");\r\n          await renderAsync(e.target.result, docxContainer);\r\n\r\n          // Extract only relevant content, ignoring `docx-preview` elements\r\n          const extractedBodyContent = docxContainer.querySelector(\"article\")?.innerHTML || \"\";\r\n\r\n          // Ensure used the most structured version\r\n          formattedHtml = extractedBodyContent.includes(formattedHtml)\r\n            ? extractedBodyContent\r\n            : extractedBodyContent || formattedHtml;\r\n\r\n          const tempContainer = document.createElement(\"div\");\r\n          tempContainer.innerHTML = formattedHtml;\r\n          tempContainer.querySelectorAll(\"section.docx, .docx-wrapper\").forEach((el) => el.remove());\r\n          formattedHtml = tempContainer.innerHTML.trim();\r\n\r\n          formattedHtml = formattedHtml\r\n            .replace(/<table/g, '<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\"') \r\n            .replace(/<td/g, '<td style=\"padding: 8px; border: 1px solid black;\"') \r\n            .replace(/<ul/g, '<ul style=\"padding-left: 20px; list-style-type: disc; margin-top: 10px; margin-bottom: 10px;\"') \r\n            .replace(/<ol/g, '<ol style=\"padding-left: 20px; list-style-type: decimal; margin-top: 10px; margin-bottom: 10px;\"') \r\n            .replace(/<li/g, '<li style=\"margin-bottom: 5px;\"'); // ✅ Ensure list items have proper spacing\r\n\r\n          formattedHtml = formattedHtml.replace(/<li><strong>/g, \"<p><strong>\").replace(/<\\/strong><\\/li>/g, \"</strong></p>\");\r\n\r\n          // Extract images & convert to Base64\r\n          const extractedImages = await Promise.all(\r\n            Array.from(docxContainer.querySelectorAll(\"img\")).map(async (img) => {\r\n              const base64Image = await convertImageToBase64(img.src);\r\n              return { src: base64Image, alt: img.alt || \"Uploaded image\" };\r\n            })\r\n          );\r\n\r\n          // Store only cleaned & formatted content without `docx-preview`\r\n          setUploadedText(formattedHtml.trim());\r\n          setUploadedImages(extractedImages);\r\n          autoSaveToDatabase(formattedHtml.trim(), extractedImages);\r\n\r\n          document.querySelectorAll(\"section.docx, .docx-wrapper\").forEach((el) => el.remove());\r\n        } catch (error) {\r\n          console.error(\"Error processing .docx:\", error);\r\n        }\r\n      }\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  } else if (file.type.startsWith(\"image/\")) {\r\n    reader.onload = (e) => {\r\n      if (e.target?.result) {\r\n        const base64Image = e.target.result.toString();\r\n        const newImage = { src: base64Image, alt: \"Uploaded image\" };\r\n\r\n        setUploadedImages((prevImages) => [...prevImages, newImage]);\r\n        autoSaveToDatabase(uploadedText, [...uploadedImages, newImage]);\r\n      }\r\n    };\r\n    reader.readAsDataURL(file);\r\n  } else {\r\n    alert(\"Invalid file type. Please upload a .txt, .docx, or an image file.\");\r\n  }\r\n};\r\n\r\n\r\n/* Function to Start Editing */\r\nconst startEditing = () => {\r\n  if (!selectedProfile) return;\r\n  \r\n  setTempDescription(profileData[selectedProfile]?.description || \"\");\r\n  setIsEditing(true);\r\n\r\n  if (editor) {\r\n      editor.commands.setContent(profileData[selectedProfile]?.description || \"\");\r\n  }\r\n};\r\n\r\n\r\n/* Function to Save Edited Description */\r\nconst saveEditedDescription = async () => {\r\n  if (!selectedProfile) return;\r\n\r\n  const formattedText = editor?.getHTML() || \"\";\r\n\r\n  try {\r\n    await fetch(`${API_URL}/profiles/${selectedProfile}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        description: formattedText,\r\n        images: uploadedImages, // ✅ Save updated images\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      }),\r\n    });\r\n\r\n    // Update profileData to reflect saved changes\r\n    setProfileData((prevData) => ({\r\n      ...prevData,\r\n      [selectedProfile]: {\r\n        description: formattedText,\r\n        images: uploadedImages, // ✅ Store updated images in state\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      },\r\n    }));\r\n\r\n    setIsEditing(false);\r\n  } catch (error) {\r\n    console.error(\"Error saving description:\", error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst removeImage = (index: number) => {\r\n  if (!selectedProfile || !isEditing) return; // Ensure in edit mode\r\n\r\n  setProfileData((prevData) => {\r\n    const updatedImages = (prevData[selectedProfile]?.images || []).filter((_, i) => i !== index);\r\n\r\n    return {\r\n      ...prevData,\r\n      [selectedProfile]: {\r\n        ...prevData[selectedProfile],\r\n        images: updatedImages,\r\n      },\r\n    };\r\n  });\r\n\r\n  // Temporarily update images during editing\r\n  setUploadedImages((prevImages) => prevImages.filter((_, i) => i !== index));\r\n};\r\n\r\n\r\n\r\n/* Sanitize Extracted HTML */\r\nconst sanitizeHTML = (html: string): string => {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, \"text/html\");\r\n\r\n  // Ensure lists (`<ul>`, `<ol>`, `<li>`) are preserved\r\n  doc.querySelectorAll(\"p:empty, div:empty\").forEach((node) => node.remove());\r\n  doc.querySelectorAll(\"br\").forEach((node) => node.remove());\r\n\r\n  // Log extracted HTML to verify if lists exist before rendering\r\n  console.log(\"Sanitized HTML Output:\", doc.body.innerHTML);\r\n\r\n  return doc.body.innerHTML;\r\n};\r\n\r\n\r\n/* Save to File */\r\nconst saveToFile = (format = \"txt\") => {\r\n  if (!uploadedText) {\r\n    alert(\"No content to save.\");\r\n    return;\r\n  }\r\n\r\n  if (!selectedProfile) {\r\n    alert(\"No profile selected.\");\r\n    return;\r\n  }\r\n\r\n  const sanitizedProfileName = selectedProfile.replace(/[^a-zA-Z0-9_-]/g, \"\");\r\n  const readableText = convertHtmlToPlainText(uploadedText); // Convert HTML to plain text\r\n\r\n  if (format === \"txt\") {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([readableText], { type: \"text/plain\" }); // Save as plain text\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = `${sanitizedProfileName}_Specifications.txt`;\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  } else if (format === \"docx\") {\r\n    const doc = new Document({\r\n      sections: [\r\n        {\r\n          properties: {},\r\n          children: readableText.split(\"\\n\").map(line => new Paragraph(line)), // Split into paragraphs\r\n        },\r\n      ],\r\n    });\r\n\r\n    Packer.toBlob(doc).then((blob) => {\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.download = `${sanitizedProfileName}_Specifications.docx`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    });\r\n  }\r\n};\r\n\r\nconst cancelEditing = () => {\r\n  setIsEditing(false);\r\n};\r\n\r\nconst autoSaveToDatabase = async (text: string, images: { src: string; alt: string }[]) => {\r\n  if (!selectedProfile) {\r\n    alert(\"No profile selected.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API_URL}/profiles/${selectedProfile}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        description: text,\r\n        images: images.map(img => img.src), // Ensure only the src is saved\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      console.log(\"Profile updated automatically.\");\r\n    } else {\r\n      console.error(\"Error saving profile.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error saving profile:\", error);\r\n  }\r\n};\r\n\r\n\r\nconst convertHtmlToPlainText = (html: string): string => {\r\n  const doc = new DOMParser().parseFromString(html, \"text/html\");\r\n  return doc.body.textContent || \"\";\r\n};\r\n\r\nconst editor = useEditor({\r\n  extensions: [\r\n    StarterKit.configure({\r\n      bulletList: false, // Disable default list handling\r\n      orderedList: false,\r\n    }),\r\n    Table.configure({\r\n      resizable: true,\r\n    }),\r\n    TableRow,\r\n    TableCell,\r\n    TableHeader,\r\n    BulletList, // Enable bullet points\r\n    OrderedList, // Enable numbered lists\r\n    ListItem,    // Enable list items\r\n  ],\r\n  content: uploadedText, // Initialize with the uploaded content\r\n  onUpdate: ({ editor }) => setTempDescription(editor.getHTML()), // Update state with editor changes\r\n  editorProps: {\r\n    attributes: {\r\n      class: \"prose focus:outline-none\",\r\n    },\r\n  },\r\n  immediatelyRender: false, // Fix SSR Hydration Mismatch\r\n});\r\n\r\n\r\n// Reset editor content when uploadedText changes\r\nuseEffect(() => {\r\n  if (editor && uploadedText) {\r\n    editor.commands.setContent(uploadedText); // Dynamically update editor content\r\n  }\r\n}, [uploadedText, editor]);\r\n\r\nconst handleProfileSelect = (profileName: string) => {\r\n  if (!profileName) return; // Prevent errors\r\n\r\n  setSelectedProfile(profileName);\r\n  setShowAbout(false); // Close About Section when switching profiles\r\n\r\n  // Ensure images are correctly set and do not become undefined\r\n  const profile = profileData[profileName] || { description: \"\", images: [], uploadedFileName: \"\" };\r\n\r\n  setUploadedImages(profile.images.length ? profile.images : []); // Ensure images exist\r\n  setUploadedText(profile.description);\r\n};\r\n\r\nconst toggleCheckout = async () => {\r\n  if (!selectedProfile) return;\r\n  \r\n  if (!showCheckout) {\r\n    // If opening the checkout section, ensure items are loaded\r\n    await handleLoadCheckout(selectedProfile);\r\n  }\r\n  \r\n  setShowCheckout(!showCheckout);\r\n};\r\n\r\nconst toggleCheckoutEditMode = () => {\r\n  console.log(\"Toggling Checkout Edit Mode\");\r\n  setIsCheckoutEditing(prev => !prev);\r\n};\r\n\r\n\r\nconst { active } = useDndContext(); // Get active drag item\r\n\r\n// Define droppable state\r\nconst { isOver: isOverTop, setNodeRef: topSectionRef } = useDroppable({\r\n  id: \"top-section\",\r\n  data: {\r\n    type: \"container\",\r\n    accepts: [\"draggable-item\"],\r\n    isDropZone: true,\r\n  },\r\n  disabled: false, // Ensure it's always active\r\n});\r\n\r\nconst { isOver: isOverBottom, setNodeRef: bottomSectionRef } = useDroppable({\r\n  id: \"bottom-section\",\r\n  data: {\r\n    accepts: [\"draggable-item\"],\r\n    type: \"container\"\r\n  }\r\n});\r\n\r\n// after the useDroppable hooks\r\nuseEffect(() => {\r\n  console.log(\"Active Dragging Type:\", active?.data?.current?.type);\r\n}, [active]);\r\n\r\n\r\n// state to track the background color, to match checkout section's dynamic background\r\nconst [checkoutBgColor, setCheckoutBgColor] = useState('var(--background-color, #ffffff)');\r\n\r\n// effect to update the background color when the theme changes\r\nuseEffect(() => {\r\n  const updateBackgroundColor = () => {\r\n    const isDarkMode = document.documentElement.classList.contains('dark');\r\n    setCheckoutBgColor(isDarkMode ? 'var(--dark-bg, #1a1a1a)' : 'var(--light-bg, #ffffff)');\r\n  };\r\n\r\n  // Initial update\r\n  updateBackgroundColor();\r\n\r\n  // Create observer for theme changes\r\n  const observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      if (mutation.attributeName === 'class') {\r\n        updateBackgroundColor();\r\n      }\r\n    });\r\n  });\r\n\r\n  // Start observing theme changes\r\n  observer.observe(document.documentElement, {\r\n    attributes: true,\r\n    attributeFilter: ['class'],\r\n  });\r\n\r\n  return () => observer.disconnect();\r\n}, []);\r\n\r\nconst lastValidDropZoneRef = useRef<string | null>(null);\r\n\r\nlet lastValidDropZone: { id: string } | null = null;\r\n\r\n// collision detection w better sensitivity\r\nconst customCollisionDetection: CollisionDetection = (args) => {\r\n  const { collisionRect, droppableContainers } = args;\r\n  const validDropZoneIds = new Set([\"top-section\", \"bottom-section\", \"1\", \"2\"]);\r\n\r\n  // Create expanded collision rect with larger detection area\r\n  const expandedRect = {\r\n    ...collisionRect,\r\n    width: collisionRect.width + 60,    // Increased detection area\r\n    height: collisionRect.height + 60,   \r\n    left: collisionRect.left - 30,      \r\n    right: collisionRect.right + 30,    \r\n    top: collisionRect.top - 30,        \r\n    bottom: collisionRect.bottom + 30    \r\n  };\r\n\r\n  return droppableContainers\r\n    .filter(container => validDropZoneIds.has(String(container.id)))\r\n    .map(container => {\r\n      const element = document.querySelector(`[data-droppable-id=\"${container.id}\"]`);\r\n      if (!element) return null;\r\n\r\n      const rect = element.getBoundingClientRect();\r\n      const isTopSection = container.id === \"top-section\" || container.id === \"1\";\r\n      \r\n      // Add padding for better drop detection\r\n      const adjustedRect = {\r\n        top: rect.top - (isTopSection ? 40 : 20),\r\n        bottom: rect.bottom + (isTopSection ? 40 : 20),\r\n        left: rect.left - (isTopSection ? 40 : 20),\r\n        right: rect.right + (isTopSection ? 40 : 20),\r\n        width: rect.width + (isTopSection ? 80 : 40),\r\n        height: rect.height + (isTopSection ? 80 : 40)\r\n      };\r\n\r\n      // More lenient intersection check\r\n      const intersects = (\r\n        expandedRect.left < adjustedRect.right &&\r\n        expandedRect.right > adjustedRect.left &&\r\n        expandedRect.top < adjustedRect.bottom &&\r\n        expandedRect.bottom > adjustedRect.top\r\n      );\r\n\r\n      if (!intersects) return null;\r\n\r\n      return {\r\n        id: String(container.id),\r\n        data: {\r\n          droppableContainer: {\r\n            id: String(container.id),\r\n            data: {\r\n              type: \"container\",\r\n              accepts: [\"draggable-item\"],\r\n              isDropZone: isTopSection\r\n            }\r\n          },\r\n          value: isTopSection ? 2 : 1,\r\n          rect: adjustedRect\r\n        }\r\n      } as CustomCollision;\r\n    })\r\n    .filter((collision): collision is CustomCollision => collision !== null)\r\n    .sort((a, b) => b.data.value - a.data.value);\r\n};\r\n\r\nuseEffect(() => {\r\n  if (!isCheckoutEditing) return; // Prevent execution if not in edit mode\r\n\r\n  console.log(\"✅ Registering Drop Zones (One-Time)\");\r\n\r\n  const topSection = document.querySelector('[data-droppable-id=\"1\"]');\r\n  const bottomSection = document.querySelector('[data-droppable-id=\"2\"]');\r\n\r\n  if (topSection) {\r\n    topSection.setAttribute('data-droppable', 'true');\r\n    topSection.setAttribute('data-type', 'container');\r\n  }\r\n\r\n  if (bottomSection) {\r\n    bottomSection.setAttribute('data-droppable', 'true');\r\n    bottomSection.setAttribute('data-type', 'container');\r\n  }\r\n\r\n  console.log(\"🔍 Found Drop Zones:\", topSection, bottomSection);\r\n\r\n  return () => {\r\n    console.log(\"🛑 Cleaning up Drop Zones (Once)\");\r\n  };\r\n}, [isCheckoutEditing]);\r\n\r\n\r\nconst sensors = useSensors(\r\n  useSensor(PointerSensor, {\r\n    activationConstraint: {\r\n      distance: 2,\r\n      tolerance: 5\r\n    },\r\n  })\r\n);\r\n\r\n\r\n// handleDragEnd function to preserve checkedOptions\r\nconst handleDragEnd = (event: DragEndEvent) => {\r\n  const { active, over } = event;\r\n  setActiveId(null);\r\n  setDragging(false);\r\n\r\n  if (!over) {\r\n    console.log(\"❌ No valid drop target detected\");\r\n    return;\r\n  }\r\n\r\n  const dropZoneId = String(over.id);\r\n  const draggedItemId = String(active.id);\r\n\r\n  console.log(`🛠️ Handling drop of item ${draggedItemId} into zone ${dropZoneId}`);\r\n\r\n  const draggedItem = items.find(item => item.id === draggedItemId) || \r\n                     droppedItems.find(item => item.id === draggedItemId);\r\n\r\n  if (!draggedItem) {\r\n    console.log(\"❌ Dragged item not found\");\r\n    return;\r\n  }\r\n\r\n  const isTopSection = dropZoneId === \"top-section\" || dropZoneId === \"1\";\r\n  const isBottomSection = dropZoneId === \"bottom-section\" || dropZoneId === \"2\";\r\n\r\n  // Preserve checkedOptions when moving between sections\r\n  setDroppedItems(prevDroppedItems => {\r\n    const alreadyInTop = prevDroppedItems.some(item => item.id === draggedItemId);\r\n\r\n    if (isTopSection && !alreadyInTop) {\r\n      console.log(`✅ Adding item ${draggedItemId} to top section`);\r\n      return [...prevDroppedItems, { \r\n        ...draggedItem, \r\n        isDropped: true,\r\n        // Preserve checked options, or use default if none exist\r\n        checkedOptions: draggedItem.checkedOptions && Object.keys(draggedItem.checkedOptions).length > 0\r\n          ? draggedItem.checkedOptions \r\n          : createDefaultCheckedOptions(draggedItem.options)\r\n      }];\r\n    } \r\n    \r\n    if (isBottomSection) {\r\n      console.log(`✅ Removing item ${draggedItemId} from top section`);\r\n      return prevDroppedItems.filter(item => item.id !== draggedItemId);\r\n    }\r\n\r\n    return prevDroppedItems;\r\n  });\r\n\r\n  setItems(prevItems => {\r\n    const updatedItems = prevItems.map(item =>\r\n      item.id === draggedItemId ? { \r\n        ...item, \r\n        isDropped: isTopSection,\r\n        // Preserve checked options, or use default if none exist\r\n        checkedOptions: item.checkedOptions && Object.keys(item.checkedOptions).length > 0\r\n          ? item.checkedOptions \r\n          : createDefaultCheckedOptions(item.options)\r\n      } : item\r\n    );\r\n    console.log(\"✅ Updated items after drop:\", updatedItems);\r\n    return [...updatedItems]; // Ensure a new array reference for reactivity\r\n  });\r\n\r\n  // After updating state, save the checkout items to the database\r\n  setTimeout(() => {\r\n    handleSaveCheckout();\r\n  }, 200);\r\n\r\n  // Rest of the function remains the same...\r\n  setTimeout(() => {\r\n    console.log(\"🔄 FORCING FULL Reset of Drop Zones and SortableContext...\");\r\n    setDroppedItems(prev => [...prev]);\r\n    setItems(prev => [...prev]); // ✅ Ensure full re-render\r\n\r\n    // Force SortableContext to reset\r\n    setSortableKey(prev => prev + 1);\r\n  }, 200);\r\n};\r\n\r\n// \"Start Test\" button handler to only test checked options\r\nconst handleStartTest = () => {\r\n  console.log(\"🚀 Start Test button clicked\");\r\n  \r\n  // Check if droppedItems is empty\r\n  if (droppedItems.length === 0) {\r\n    console.warn(\"⚠️ No items in droppedItems, CheckoutTestProgress won't render\");\r\n    alert(\"Please add components to the checkout section before starting the test.\");\r\n    return;\r\n  }\r\n  \r\n  // Filter the droppedItems and update the main state for visual consistency\r\n  const itemsWithCheckedOptions = droppedItems.map(item => {\r\n    // Get the options that are checked (true in checkedOptions)\r\n    const checkedOptionsList = Object.entries(item.checkedOptions || {})\r\n      .filter(([_, isChecked]) => isChecked)\r\n      .map(([option]) => option);\r\n    \r\n    // If no options are checked, include all options as a fallback AND mark them as visually checked\r\n    if (checkedOptionsList.length === 0) {\r\n      console.log(`⚠️ No options checked for ${item.header}, using all options as fallback and marking them as checked`);\r\n      \r\n      // Create a new checkedOptions object with all options set to true\r\n      const allOptionsChecked: Record<string, boolean> = {};\r\n      item.options.forEach(option => {\r\n        allOptionsChecked[option] = true;\r\n      });\r\n      \r\n      return {\r\n        ...item,\r\n        options: item.options, // Keep all options\r\n        checkedOptions: allOptionsChecked // Mark all as visually checked\r\n      };\r\n    }\r\n    \r\n    // Return a version of the item with only the checked options\r\n    return {\r\n      ...item,\r\n      options: checkedOptionsList // Replace with only the checked options\r\n    };\r\n  });\r\n  \r\n  // Update the actual droppedItems state to reflect the visual changes\r\n  setDroppedItems(prev => {\r\n    return prev.map(item => {\r\n      const updatedItem = itemsWithCheckedOptions.find(updated => updated.id === item.id);\r\n      if (updatedItem && Object.keys(item.checkedOptions || {}).length === 0) {\r\n        console.log(`Updating visual state for ${item.header} to show all options as checked`);\r\n        return {\r\n          ...item,\r\n          checkedOptions: updatedItem.checkedOptions\r\n        };\r\n      }\r\n      return item;\r\n    });\r\n  });\r\n  \r\n  // Also update the items state for consistency\r\n  setItems(prev => {\r\n    return prev.map(item => {\r\n      const updatedItem = itemsWithCheckedOptions.find(updated => updated.id === item.id);\r\n      if (updatedItem && Object.keys(item.checkedOptions || {}).length === 0) {\r\n        return {\r\n          ...item,\r\n          checkedOptions: updatedItem.checkedOptions\r\n        };\r\n      }\r\n      return item;\r\n    });\r\n  });\r\n  \r\n  // Make sure there's at least one item with options to test\r\n  const hasTestableItems = itemsWithCheckedOptions.some(item => item.options.length > 0);\r\n  \r\n  if (!hasTestableItems) {\r\n    alert(\"Please check at least one option in the checkout section before starting the test.\");\r\n    return;\r\n  }\r\n  \r\n  // Store the filtered items for the test window to use\r\n  localStorage.setItem('checkoutTestItems', JSON.stringify(itemsWithCheckedOptions));\r\n  \r\n  // Store a flag in localStorage to signal that the window should be open\r\n  localStorage.setItem('showCheckoutTest', 'true');\r\n  \r\n  // Ensure we have a socket ready\r\n  if (!mccSocket) {\r\n    // Initialize a simulated socket\r\n    const simSocket = {\r\n      simulateRead: (params: string[]) => params.map(p => `${p}=simulated`),\r\n      send: async () => Promise.resolve(),\r\n      receive: async () => Promise.resolve(\"simulated\")\r\n    };\r\n    setMccSocket(simSocket);\r\n  }\r\n  \r\n  // Update the state\r\n  setShowCheckoutTest(true);\r\n  \r\n  // Force a re-render\r\n  setDummyState(prev => !prev);\r\n  \r\n  console.log(\"CheckoutTest window should now be visible with checked options:\", itemsWithCheckedOptions);\r\n};\r\n\r\nuseEffect(() => {\r\n  // Check localStorage on component mount\r\n  const shouldShowWindow = localStorage.getItem('showCheckoutTest') === 'true';\r\n  \r\n  if (shouldShowWindow) {\r\n    console.log(\"🔄 Restoring CheckoutTest window from localStorage\");\r\n    setShowCheckoutTest(true);\r\n  }\r\n}, []);\r\n\r\n// handleCloseCheckoutTest to also clear localStorage\r\nconst handleCloseCheckoutTest = () => {\r\n  console.log(\"🔴 Closing checkout test window\");\r\n  localStorage.removeItem('showCheckoutTest');\r\n  setShowCheckoutTest(false);\r\n};\r\n\r\n// effect to maintain drop zones\r\nconst hasUpdatedDropZones = useRef(false); // Prevent multiple updates\r\n\r\nuseEffect(() => {\r\n  if (!isCheckoutEditing) return;\r\n\r\n  const startTime = performance.now(); // Start time measurement\r\n  console.log(\"⏳ Starting expensive operation...\");\r\n\r\n  // Simulating work\r\n  const dropZones = document.querySelectorAll('[data-droppable-id]');\r\n  dropZones.forEach(zone => {\r\n    zone.setAttribute('data-droppable', 'true');\r\n    zone.setAttribute('data-type', 'container');\r\n  });\r\n\r\n  const endTime = performance.now(); // End time measurement\r\n  console.log(`⚡ Expensive operation took ${endTime - startTime}ms`);\r\n}, [isCheckoutEditing]);\r\n\r\n\r\n\r\n// useEffect to monitor state changes\r\nuseEffect(() => {\r\n  const itemsStatus = items.map(item => ({\r\n    id: item.id,\r\n    isDropped: item.isDropped,\r\n  }));\r\n  console.log('Items status:', itemsStatus);\r\n  console.log('Dropped items:', droppedItems);\r\n}, [items, droppedItems]);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🔵 Drop zones mounted:\", document.querySelectorAll(\"[data-droppable]\"));\r\n\r\n  setTimeout(() => {\r\n    const dropZones = document.querySelectorAll(\"[data-droppable]\");\r\n    console.log(\"✅ Drop zones found in DOM:\", dropZones);\r\n\r\n    dropZones.forEach((zone) => {\r\n      console.log(\"📍 Drop Zone Element:\", zone);\r\n      console.log(\"👉 Attributes:\", zone.attributes);\r\n      console.log(\"📏 Bounding Rect:\", zone.getBoundingClientRect());\r\n    });\r\n  }, 500); // Delay ensures elements are fully rendered\r\n\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🔄 Drop zones reloaded. Current drop zones:\", document.querySelectorAll(\"[data-droppable]\"));\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  document.querySelectorAll(\"[data-droppable]\").forEach((el) =>\r\n    console.log(\"🔍 Found Drop Zone ID:\", el.id)\r\n  );\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  document.querySelectorAll(\"[data-droppable]\").forEach((el) =>\r\n    console.log(\"✅ Drop Zone Element ID:\", el.id)\r\n  );\r\n}, []);\r\n\r\nconst [, setRender] = useState(false);\r\n\r\nuseEffect(() => {\r\n  setTimeout(() => {\r\n    console.log(\"✅ Forcing a re-render to ensure drop zones exist.\");\r\n    setRender(prev => !prev); // Toggle state to trigger re-render\r\n  }, 100);\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🛠️ isCheckoutEditing changed:\", isCheckoutEditing);\r\n}, [isCheckoutEditing]);\r\n\r\nconst dropZoneStyle: React.CSSProperties = {\r\n  minHeight: \"250px\",\r\n  width: \"100%\",\r\n  padding: \"20px\",\r\n  boxSizing: \"border-box\",\r\n  border: isOverTop ? \"2px solid #2196F3\" : \"2px dashed #ccc\",\r\n  backgroundColor: isOverTop ? \"rgba(33, 150, 243, 0.1)\" : \"transparent\",\r\n  position: \"relative\",\r\n  zIndex: 1,\r\n  touchAction: \"none\",\r\n  userSelect: \"none\" as const,\r\n  overflow: \"visible\"\r\n};\r\n\r\n//handleSaveCheckout function to save the checked options state\r\nconst handleSaveCheckout = async () => {\r\n  if (!selectedProfile) {\r\n    console.log(\"❌ No active profile selected\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    console.log(\"💾 Saving checkout items with checkbox states:\", droppedItems);\r\n    \r\n    // Create a complete copy of droppedItems with all necessary properties\r\n    const itemsToSave = droppedItems.map(item => ({\r\n      id: item.id,\r\n      header: item.header,\r\n      options: item.options,\r\n      isDropped: true,\r\n      checkedOptions: item.checkedOptions || {} // Ensure always have checkedOptions\r\n    }));\r\n    \r\n    // Retry logic for better persistence\r\n    const saveWithRetry = async (retries = 3) => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/checkout/save`, {\r\n          method: \"POST\",\r\n          headers: { \r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            profile_id: selectedProfile,\r\n            items: itemsToSave,\r\n          }),\r\n          mode: 'cors',  // Explicitly use CORS mode\r\n          credentials: 'omit'  // Don't send credentials\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Server error: ${response.status}`);\r\n        }\r\n\r\n        return await response.json();\r\n      } catch (error) {\r\n        if (retries > 0) {\r\n          console.log(`⚠️ Retry saving (${retries} attempts left)...`);\r\n          await new Promise(resolve => setTimeout(resolve, 500));\r\n          return saveWithRetry(retries - 1);\r\n        }\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    const result = await saveWithRetry();\r\n    console.log(`✅ Checkout items saved for profile ${selectedProfile}:`, result);\r\n    \r\n    // Also save to localStorage as a backup\r\n    localStorage.setItem(`checkout_items_${selectedProfile}`, \r\n                         JSON.stringify(itemsToSave));\r\n  } catch (error) {\r\n    console.error(\"❌ Error saving checkout items:\", error);\r\n    \r\n    // Try to save to localStorage as a fallback\r\n    localStorage.setItem(`checkout_items_${selectedProfile}`, \r\n                       JSON.stringify(droppedItems));\r\n  }\r\n};\r\n\r\n\r\nconst handleCancelCheckout = async () => {\r\n  if (!selectedProfile) {\r\n    console.log(\"❌ No active profile selected\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API_URL}/checkout/load/${selectedProfile}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    setDroppedItems(result.items);\r\n    console.log(`🔄 Restored checkout items for profile ${selectedProfile}:`, result.items);\r\n  } catch (error) {\r\n    console.error(\"❌ Error loading previous checkout items:\", error);\r\n  }\r\n};\r\n\r\n// handleLoadCheckout function with proper typing\r\n// with better error handling and CORS configuration\r\n\r\nconst handleLoadCheckout = async (profileId: string) => {\r\n  try {\r\n    console.log(`📝 Loading checkout items for profile: ${profileId}`);\r\n    \r\n    // Create AbortController to set a timeout on the fetch\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout\r\n    \r\n    const response = await fetch(`${API_URL}/checkout/load/${profileId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      mode: 'cors',       // Explicitly set CORS mode\r\n      credentials: 'omit', // Don't send credentials\r\n      signal: controller.signal // timeout signal\r\n    });\r\n    \r\n    // Clear the timeout\r\n    clearTimeout(timeoutId);\r\n    \r\n    console.log(`📝 Response status: ${response.status}`);\r\n    \r\n    if (!response.ok) {\r\n      console.warn(`Server returned error status: ${response.status}`);\r\n      throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    // Try to parse the response, with error handling for invalid JSON\r\n    const result = await response.json().catch(e => {\r\n      console.error(\"Error parsing JSON response:\", e);\r\n      return { error: \"Invalid JSON response\", items: [] };\r\n    });\r\n    \r\n    if (result.items && Array.isArray(result.items)) {\r\n      // Ensure each item has a checkedOptions object and isDropped flag\r\n      const loadedItems = result.items.map((item: any) => ({\r\n        ...item,\r\n        isDropped: true,\r\n        // Ensure loaded items have proper checked options, or use defaults\r\n        checkedOptions: item.checkedOptions && Object.keys(item.checkedOptions).length > 0\r\n          ? item.checkedOptions \r\n          : createDefaultCheckedOptions(item.options),\r\n      }));\r\n      \r\n      // Set dropped items first\r\n      setDroppedItems(loadedItems);\r\n      \r\n      // Make a copy of the original items\r\n      setItems(prevItems => {\r\n        const updatedItems = [...prevItems];\r\n        \r\n        // Mark dropped items in the items array\r\n        updatedItems.forEach(item => {\r\n          // Check if this item exists in loadedItems\r\n          const matchingItem = loadedItems.find((loaded: DraggableItem) => loaded.id === item.id);\r\n          if (matchingItem) {\r\n            // Update to match the loaded state\r\n            item.isDropped = true;\r\n            item.checkedOptions = {...matchingItem.checkedOptions};\r\n          } else {\r\n            // Make sure it's marked as not dropped but has default checked options\r\n            item.isDropped = false;\r\n            item.checkedOptions = createDefaultCheckedOptions(item.options);\r\n          }\r\n        });\r\n        \r\n        return updatedItems;\r\n      });\r\n      \r\n      console.log(`✅ Loaded checkout items for profile ${profileId}:`, loadedItems);\r\n    } else {\r\n      console.log(`ℹ️ No saved checkout items found for profile ${profileId}`);\r\n      setDroppedItems([]);\r\n      \r\n      // Reset the dropped state in the items array with default checked options\r\n      setItems(prevItems => \r\n        prevItems.map(item => ({\r\n          ...item,\r\n          isDropped: false,\r\n          checkedOptions: createDefaultCheckedOptions(item.options) // Use default checked\r\n        }))\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.error(\"❌ Error loading checkout items for profile:\", error);\r\n    \r\n    // Try fallback from localStorage\r\n    tryLocalStorageFallback(profileId);\r\n  }\r\n};\r\n\r\n// Extract the localStorage fallback into a separate function for better readability\r\nconst tryLocalStorageFallback = (profileId: string) => {\r\n  try {\r\n    const localStorageKey = `checkout_items_${profileId}`;\r\n    const savedItems = localStorage.getItem(localStorageKey);\r\n    \r\n    if (savedItems) {\r\n      console.log(`🔄 Falling back to localStorage for profile ${profileId}`);\r\n      const parsedItems = JSON.parse(savedItems);\r\n      \r\n      if (Array.isArray(parsedItems) && parsedItems.length > 0) {\r\n        setDroppedItems(parsedItems);\r\n        \r\n        // Also update the items array with isDropped flags\r\n        setItems(prevItems => {\r\n          const updatedItems = [...prevItems];\r\n          \r\n          updatedItems.forEach(item => {\r\n            const matchingItem = parsedItems.find((saved: DraggableItem) => saved.id === item.id);\r\n            if (matchingItem) {\r\n              item.isDropped = true;\r\n              item.checkedOptions = {...matchingItem.checkedOptions};\r\n            } else {\r\n              item.isDropped = false;\r\n            }\r\n          });\r\n          \r\n          return updatedItems;\r\n        });\r\n        \r\n        console.log(`✅ Successfully loaded ${parsedItems.length} items from localStorage`);\r\n        return; // Exit early since we successfully restored from localStorage\r\n      }\r\n    }\r\n    \r\n    // If localStorage fallback fails or is empty, reset everything\r\n    resetItemStates();\r\n    \r\n  } catch (localStorageError) {\r\n    console.error(\"❌ Error accessing localStorage fallback:\", localStorageError);\r\n    resetItemStates();\r\n  }\r\n};\r\n\r\n// Extract reset logic to a separate function\r\nconst resetItemStates = () => {\r\n  setDroppedItems([]);\r\n  \r\n  // Reset the items array with default checked options\r\n  setItems(prevItems => \r\n    prevItems.map(item => ({\r\n      ...item,\r\n      isDropped: false,\r\n      checkedOptions: createDefaultCheckedOptions(item.options) // Use default checked instead of empty\r\n    }))\r\n  );\r\n};\r\n\r\n// load checkout items with their checkbox states\r\nconst handleProfileChange = async (profileId: string) => {\r\n  console.log(`🔄 Profile changed: ${profileId}`);\r\n  setSelectedProfile(profileId);\r\n  \r\n  localStorage.setItem('currentProfileId', profileId);\r\n  \r\n  await handleLoadCheckout(profileId);\r\n};\r\n\r\n// useEffect for profile changes to load checkout items immediately\r\nuseEffect(() => {\r\n  if (selectedProfile) {\r\n    // small delay to ensure database connections are ready\r\n    const timer = setTimeout(() => {\r\n      handleLoadCheckout(selectedProfile);\r\n    }, 50);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }\r\n}, [selectedProfile]);\r\n\r\n// effect to ensure items and droppedItems stay in sync\r\nuseEffect(() => {\r\n  // This ensures items marked as dropped appear in droppedItems\r\n  const droppedIds = droppedItems.map(item => item.id);\r\n  \r\n  // Check if there are items that should be in droppedItems but aren't\r\n  const itemsThatShouldBeDropped = items.filter(item => \r\n    item.isDropped && !droppedIds.includes(item.id)\r\n  );\r\n  \r\n  // If found inconsistencies, fix them\r\n  if (itemsThatShouldBeDropped.length > 0) {\r\n    console.log(\"⚠️ Found inconsistent dropped state, fixing...\");\r\n    setDroppedItems(prev => [...prev, ...itemsThatShouldBeDropped]);\r\n  }\r\n}, [items, droppedItems]);\r\n\r\n// useEffect to better initialize the MCC socket\r\nuseEffect(() => {\r\n  if (showCheckoutTest && !mccSocket) {\r\n    // Initialize a simulated MCC socket for testing\r\n    const initMccSocket = async () => {\r\n      try {\r\n        console.log(\"Attempting to create MCC socket...\");\r\n        \r\n        // Force simulation mode for testing purposes\r\n        const socket = await connectToMcc(\"localhost:8080\");\r\n        \r\n        if (socket) {\r\n          setMccSocket(socket);\r\n          console.log(\"✅ MCC socket initialized for testing\");\r\n        } else {\r\n          console.warn(\"⚠️ Socket is null, using simulation fallback\");\r\n          \r\n          // Create a minimal simulation object that implements the necessary methods\r\n          const simulatedSocket = {\r\n            simulateRead: (parameters: string[]) => {\r\n              // Return simulated values for each parameter\r\n              return parameters.map(param => `${param}=simulated`);\r\n            },\r\n            send: async (message: string) => {\r\n              console.log(`[SIM] Sending message: ${message}`);\r\n              return Promise.resolve();\r\n            },\r\n            receive: async () => {\r\n              console.log(`[SIM] Receiving data`);\r\n              return Promise.resolve(\"simulated response\");\r\n            }\r\n          };\r\n          \r\n          setMccSocket(simulatedSocket);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Error initializing MCC socket:\", error);\r\n        \r\n        // Create a fallback simulation\r\n        const simulatedSocket = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Return simulated values for each parameter\r\n            return parameters.map(param => `${param}=simulated`);\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending message: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          }\r\n        };\r\n        \r\n        setMccSocket(simulatedSocket);\r\n      }\r\n    };\r\n    \r\n    initMccSocket();\r\n  }\r\n}, [showCheckoutTest, mccSocket]);\r\n\r\nconsole.log(\"Rendering MainScreen:\");\r\nconsole.log(\"showToTestList:\", showToTestList);\r\nconsole.log(\"showThreeDModelWindow:\", showThreeDModelWindow);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🔍 Checking if CheckoutTestProgress exists:\", !!CheckoutTestProgress);\r\n  if (!CheckoutTestProgress) {\r\n    console.error(\"❌ CheckoutTestProgress component is undefined!\");\r\n  }\r\n}, []);\r\n\r\n// Initialize mccSocket once on component mount instead of waiting\r\nuseEffect(() => {\r\n  // Create a simple simulated socket if it doesn't exist yet\r\n  if (!mccSocket) {\r\n    console.log(\"🔄 Pre-initializing simulated MCC socket\");\r\n    \r\n    // Create a simple simulated socket for testing\r\n    const simulatedSocket = {\r\n      simulateRead: (parameters: string[]) => {\r\n        return parameters.map(param => {\r\n          // Generate simulated values for common parameters\r\n          if (param.includes(\"FW_Ver\")) {\r\n            const version = param.includes(\"Major\") ? \"1\" : \r\n                          param.includes(\"Minor\") ? \"2\" : \"3\";\r\n            return `${param}=${version}`;\r\n          } else if (param.includes(\"3V3\") || param.includes(\"5V\")) {\r\n            // Voltage values in mV\r\n            return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n          } else if (param.includes(\"temp\") || param.includes(\"Temp\")) {\r\n            // Temperature values\r\n            return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n          } else if (param.includes(\"eMMC\")) {\r\n            return `${param}=1`;\r\n          } else {\r\n            return `${param}=simulated`;\r\n          }\r\n        });\r\n      },\r\n      send: async (message: string) => {\r\n        console.log(`[SIM] Sending: ${message}`);\r\n        return Promise.resolve();\r\n      },\r\n      receive: async () => {\r\n        return Promise.resolve(\"simulated response\");\r\n      }\r\n    };\r\n    \r\n    setMccSocket(simulatedSocket);\r\n  }\r\n}, [mccSocket]);\r\n\r\nuseEffect(() => {\r\n\r\n  setSimulationMode(false);\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  // Attempt to retrieve the socket info\r\n  const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n  if (socketInfoStr) {\r\n    try {\r\n      const socketInfo = JSON.parse(socketInfoStr);\r\n      if (socketInfo.isReal && socketInfo.address) {\r\n        console.log(`Reconnecting to real MCC server at ${socketInfo.address}`);\r\n        \r\n        // Create a real socket connection\r\n        connectToMcc(socketInfo.address)\r\n          .then(socket => {\r\n            if (socket) {\r\n              console.log(\"✅ Successfully reconnected to real MCC server\");\r\n              setMccSocket(socket);\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.error(\"❌ Failed to reconnect to MCC server:\", err);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error parsing socket info:\", error);\r\n    }\r\n  }\r\n}, []);\r\n\r\n// Update useEffect to watch for changes from parent\r\nuseEffect(() => {\r\n  setSettingsWindowVisible(showSettingsWindow);\r\n}, [showSettingsWindow]);\r\n\r\nreturn (\r\n  <div className={styles.mainScreen}>\r\n    {!isSidebarOpen && (\r\n      <button\r\n        className={styles.retractExpandSidebarButton}\r\n        onClick={toggleSidebar}\r\n      >\r\n        <FaBars />\r\n      </button>\r\n    )}\r\n\r\n    <div className={`${styles.sidebar} ${isSidebarOpen ? \"\" : styles.hidden}`}>\r\n      <div className={styles.sidebarHeader}>\r\n        <span>Menu</span>\r\n        <button className={styles.toggleButton} onClick={toggleSidebar}>\r\n          ☰\r\n        </button>\r\n      </div>\r\n      <ul className={styles.menu}>\r\n        <li className={styles.menuItem} onClick={() => setSelectedProfile(null)}>\r\n          Home\r\n        </li>\r\n{/* Focused visibility fix for Tests to Conduct button */}\r\n<li \r\n  className={styles.menuItem} \r\n  onClick={(e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    console.log(\"🔍 Focused visibility fix initiated\");\r\n    \r\n    // Toggle the window\r\n    if (showToTestList) {\r\n      console.log(\"Closing ToTestList\");\r\n      closeToTestList();\r\n    } else {\r\n      console.log(\"Opening ToTestList and bringing to front\");\r\n      openToTestList();\r\n      \r\n      // Ensure window is visible and positioned correctly\r\n      setTimeout(() => {\r\n        const toTestListWindow = document.querySelector('[data-window=\"ToTestList\"]');\r\n        if (toTestListWindow) {\r\n          console.log(\"ToTestList found, ensuring visibility and position\");\r\n          \r\n          // Ensure the window is visible\r\n          (toTestListWindow as HTMLElement).style.visibility = 'visible';\r\n          (toTestListWindow as HTMLElement).style.display = 'block';\r\n          (toTestListWindow as HTMLElement).style.opacity = '1';\r\n          \r\n          // Bring to front\r\n          bringWindowToFront(\"ToTestList\");\r\n          \r\n          // Force position to center if it's off-screen\r\n          const windowRect = toTestListWindow.getBoundingClientRect();\r\n          if (windowRect.left < 0 || windowRect.top < 0 || \r\n              windowRect.right > window.innerWidth || windowRect.bottom > window.innerHeight) {\r\n            console.log(\"Window appears to be off-screen, centering it\");\r\n            \r\n            // Try to set position through sessionStorage\r\n            try {\r\n              const centerPosition = {\r\n                x: (window.innerWidth - 800) / 2, \r\n                y: (window.innerHeight - 500) / 2\r\n              };\r\n              sessionStorage.setItem('toTestListPosition', JSON.stringify(centerPosition));\r\n              console.log(\"Set centered position:\", centerPosition);\r\n              \r\n              // Attempt to force position directly\r\n              const draggableElement = toTestListWindow.querySelector('[style*=\"transform\"]');\r\n              if (draggableElement) {\r\n                (draggableElement as HTMLElement).style.transform = \r\n                  `translate(${centerPosition.x}px, ${centerPosition.y}px)`;\r\n              }\r\n              \r\n              // Last resort: reload the page\r\n              window.location.reload();\r\n            } catch (error) {\r\n              console.error(\"Error centering window:\", error);\r\n            }\r\n          }\r\n        }\r\n      }, 100);\r\n    }\r\n  }}\r\n>\r\n  Tests to Conduct\r\n</li>\r\n        <li className={styles.menuItem}>\r\n          <div className={styles.profileContainer}>\r\n            <button\r\n              className={styles.profilesButton}\r\n              onClick={toggleProfileDropdown}\r\n            >\r\n              Profiles\r\n            </button>\r\n            <div className={styles.profileButtonGroup}>\r\n              <button\r\n                className={styles.dropdownButton}\r\n                onClick={toggleProfileDropdown}\r\n              >\r\n                {isProfileDropdownOpen ? \"▲\" : \"▼\"}\r\n              </button>\r\n              <button\r\n                className={styles.addProfileButton}\r\n                onClick={addProfile}\r\n              >\r\n                <FaPlus />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        {isProfileDropdownOpen && (\r\n          <ul className={styles.profileDropdown}>\r\n          {profiles.map((profile) => (\r\n            <li\r\n              key={profile.id || profile.name}\r\n              className={styles.profileSidebarItem}\r\n              onClick={() => {\r\n                handleProfileChange(profile.name); // Ensure checkout items load per profile\r\n              }}\r\n            >\r\n              {profile.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        \r\n        )}\r\n      </ul>\r\n      <div className={styles.settingsContainer}>\r\n      <button \r\n  className={styles.settingsButton} \r\n  onClick={() => {\r\n    openSettingsWindow();\r\n  }}\r\n>\r\n          <FaCog />\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div className={styles.content}>\r\n      {selectedProfile ? (\r\n        <div className={styles.profilePage}>\r\n          <div className={styles.profileHeading}>\r\n            <h1>{selectedProfile}</h1>\r\n            <button\r\n              className={styles.deleteButton}\r\n              onClick={() => deleteProfile(selectedProfile)}\r\n            >\r\n              <FaTrash />\r\n            </button>\r\n          </div>\r\n\r\n          {/* About/Specifications Button Below Profile Name */}\r\n          <button className={styles.aboutButton} onClick={toggleAbout}>\r\n            <FaInfoCircle /> About/Specifications\r\n          </button>\r\n\r\n          {/* Show/Hide About Section */}\r\n          {showAbout && (\r\n            <div\r\n              className={`${styles.aboutSection} ${\r\n                document.documentElement.classList.contains(\"dark\")\r\n                  ? styles.darkMode\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              {/* Editing Mode: Use Tiptap Rich Text Editor */}\r\n              {isEditing ? (\r\n                <>\r\n                  {/* Toolbar for Lists */}\r\n                  <div className=\"toolbar\">\r\n                    <button onClick={() => editor?.chain().focus().toggleBulletList().run()}>\r\n                      Bullet List\r\n                    </button>\r\n                    <button onClick={() => editor?.chain().focus().toggleOrderedList().run()}>\r\n                      Ordered List\r\n                    </button>\r\n                  </div>\r\n\r\n                  <EditorContent editor={editor} className={styles.richTextEditor} />\r\n\r\n                  {/* Show all images outside the editor */}\r\n                  {uploadedImages.length > 0 ? (\r\n                    <div className={styles.imageContainer}>\r\n                      {uploadedImages.map((image, index) => (\r\n                        <div key={index} className={styles.imageWrapper}>\r\n                          <img\r\n                            src={image.src}\r\n                            alt={image.alt}\r\n                            className={styles.uploadedImage}\r\n                          />\r\n                          {/* Remove button only renders in editing mode */}\r\n                          <button\r\n                            className={styles.removeImageButton}\r\n                            onClick={() => removeImage(index)}\r\n                          >\r\n                            ✖\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <p className={styles.imagePlaceholder}>No images uploaded</p>\r\n                  )}\r\n\r\n                  {/* File Upload Section (Only in Editing Mode) */}\r\n                  <div className={styles.uploadContainer}>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".txt, .docx\"\r\n                      onChange={handleFileUpload}\r\n                      className={styles.uploadInput}\r\n                    />\r\n                    {/* Show file name specific to the selected profile */}\r\n                    {selectedProfile &&\r\n                      profileData[selectedProfile]?.uploadedFileName && (\r\n                        <p>Uploaded: {profileData[selectedProfile].uploadedFileName}</p>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                /* Normal Mode: Display Formatted Content */\r\n                <>\r\n                  <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: sanitizeHTML(profileData[selectedProfile]?.description || \"<p>No description available.</p>\"),\r\n                      }}\r\n                  />\r\n                  {/* Show all images outside the editor */}\r\n                  {profileData[selectedProfile]?.images.length > 0 && (\r\n                    <div className={styles.imageContainer}>\r\n                      {selectedProfile && profileData[selectedProfile]?.images.map((image: { src: string; alt: string }, index: number) => (\r\n                        <div key={index} className={styles.imageWrapper}>\r\n                          <img \r\n                             src={image.src} \r\n                             alt={image.alt} \r\n                             className={styles.uploadedImage}\r\n                             onError={(e) => e.currentTarget.src = \"/fallback-image.png\"} // can provide a fallback image if want\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {/* Save, Edit, and Download Buttons */}\r\n                <div className={styles.actionButtons}>\r\n                  {!isEditing && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => saveToFile(\"txt\")}\r\n                        className={styles.downloadButton}\r\n                      >\r\n                        <FaDownload /> Save as .TXT\r\n                      </button>\r\n                      <button\r\n                        onClick={() => saveToFile(\"docx\")}\r\n                        className={styles.downloadButton}\r\n                      >\r\n                        <FaDownload /> Save as .DOCX\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  {isEditing ? (\r\n                    <>\r\n                      <button\r\n                        onClick={saveEditedDescription}\r\n                        className={styles.saveButton}\r\n                      >\r\n                        <FaCheck /> Save\r\n                      </button>\r\n                      <button\r\n                        onClick={cancelEditing}\r\n                        className={styles.cancelButton}\r\n                      >\r\n                        <FaTimes /> Cancel\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button className={styles.editButton} onClick={startEditing}>\r\n                      <FaEdit />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n              {/* Test Type & Checkout Button Located Outside About Section */}\r\n              <h2 className={styles.testTypeHeader}>Test Type</h2>\r\n              <button className={styles.checkoutButton} onClick={toggleCheckout}>\r\n                <FaWrench /> Checkout\r\n              </button>\r\n   \r\n \r\n              {showCheckout && (\r\n                <div className={styles.checkoutSection}\r\n                  style={{\r\n                    backgroundColor: checkoutBgColor,\r\n                    transition: 'background-color 0.3s ease',\r\n                  }}\r\n                >\r\n\r\n{(() => { console.log(\"🔄 Checkout Section Re-rendered\"); return null; })()}\r\n\r\n                <div className={styles.checkoutHeader} style={{ display: 'flex', alignItems: 'center' }}>\r\n                  <h3 style={{ marginRight: '10px' }}>Test Selection:</h3>\r\n                  <button className={styles.editButton} onClick={toggleCheckoutEditMode}>\r\n                    <FaEdit />\r\n                  </button>\r\n        \r\n                  {!isCheckoutEditing && (\r\n  <button \r\n    className={styles.startTestButton} \r\n    style={{ marginLeft: 'auto' }}\r\n    onClick={handleStartTest}\r\n  >\r\n    <FaPlay /> Start Test\r\n  </button>\r\n)}\r\n                </div>\r\n\r\n                <DndContext\r\n  sensors={sensors}\r\n  collisionDetection={customCollisionDetection}\r\n  onDragStart={({ active }) => {\r\n    setActiveId(String(active.id));\r\n    setDragging(true);\r\n  }}\r\n  onDragEnd={handleDragEnd}\r\n  onDragCancel={() => {\r\n    setActiveId(null);\r\n    setDragging(false);\r\n  }}\r\n>\r\n  {/* Top Section Drop Zone */}\r\n  <div\r\n  key=\"top-section\"\r\n  ref={topSectionRef}\r\n  id=\"top-section\"\r\n  data-id=\"1\"\r\n  data-droppable=\"true\"\r\n  data-droppable-id=\"1\"\r\n  data-type=\"container\"\r\n  className={`${styles.topSection} dropZoneArea ${isOverTop ? \"isOver\" : \"\"}`}\r\n  data-is-over={isOverTop ? \"true\" : \"false\"}\r\n  style={dropZoneStyle}\r\n>\r\n    {droppedItems.length === 0 && isCheckoutEditing && (\r\n      <div style={{ \r\n        position: \"absolute\", \r\n        top: \"50%\", \r\n        left: \"50%\", \r\n        transform: \"translate(-50%, -50%)\",\r\n        color: \"#666\",\r\n        fontStyle: \"italic\"\r\n      }}>\r\n        Drop items here\r\n      </div>\r\n    )}\r\n<SortableContext key={sortableKey} items={droppedItems} strategy={verticalListSortingStrategy}>\r\n  {droppedItems.map((item) => (\r\n    <div key={`top-${item.id}`} className={styles.droppableBox} style={{ position: 'relative', overflow: 'visible' }}>\r\n      <DraggableBox \r\n        id={item.id}\r\n        header={item.header}\r\n        options={item.options}\r\n        data={{ type: \"draggable-item\" }}\r\n        isDropped={true}\r\n        removeDroppedItem={removeDroppedItem}\r\n        isCheckoutEditing={isCheckoutEditing}\r\n        checkedOptions={item.checkedOptions} // Pass checked state\r\n        onOptionChange={handleOptionChange} // Pass handler\r\n      />\r\n    </div>\r\n  ))}\r\n</SortableContext>\r\n  </div>\r\n\r\n  {/* Bottom Section */}\r\n  {isCheckoutEditing && (\r\n    <div\r\n    ref={bottomSectionRef}\r\n    id=\"bottom-section\"\r\n    data-id=\"2\"\r\n    data-droppable=\"true\"\r\n    data-droppable-id=\"2\"\r\n    data-type=\"container\"\r\n    data-current='{\"type\": \"container\"}'\r\n    className={styles.bottomSection}\r\n    style={{\r\n      minHeight: \"200px\",\r\n      padding: \"20px\",\r\n      position: \"relative\",\r\n      border: isOverBottom ? \"2px solid #2196F3\" : \"2px dashed #ccc\",\r\n      backgroundColor: isOverBottom ? \"rgba(33, 150, 243, 0.1)\" : \"transparent\",\r\n      touchAction: \"none\",\r\n      userSelect: \"none\",\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(auto-fill, minmax(150px, 1fr))\",\r\n      gap: \"10px\",\r\n      pointerEvents: \"auto\"  // Add this to ensure dragging works\r\n    }}\r\n  >\r\n  <h4>Available Components</h4>\r\n  <SortableContext key={sortableKey} items={items} strategy={verticalListSortingStrategy}>\r\n\r\n  {items.map((item) => {\r\n  const isInTopSection = droppedItems.some(droppedItem => droppedItem.id === item.id);\r\n  return (\r\n    <div\r\n      key={`bottom-${item.id}`}\r\n      className={styles.dragItem}\r\n      data-draggable-id={item.id}\r\n      data-dropped={isInTopSection ? \"true\" : \"false\"}\r\n      style={{\r\n        opacity: isInTopSection ? 0.3 : 1,\r\n        pointerEvents: isInTopSection ? 'none' : 'auto',\r\n        cursor: isInTopSection ? 'not-allowed' : 'grab'\r\n      }}\r\n    >\r\n      <DraggableBox\r\n        id={item.id}\r\n        header={item.header}\r\n        options={item.options}\r\n        data={{ type: \"draggable-item\" }}\r\n        isDropped={isInTopSection}\r\n        isInBottomSection={true} // Ensure it knows it's in the bottom section\r\n        checkedOptions={item.checkedOptions} // Pass checked state\r\n        onOptionChange={handleOptionChange} // Pass handler\r\n      />\r\n    </div>\r\n  );\r\n})}\r\n</SortableContext>\r\n</div>\r\n  )}\r\n\r\n<DragOverlay>\r\n  {activeId ? (\r\n    <DraggableBox\r\n      id={activeId}\r\n      header={(items.find(item => item.id === activeId) || droppedItems.find(item => item.id === activeId))?.header || \"\"}\r\n      options={(items.find(item => item.id === activeId) || droppedItems.find(item => item.id === activeId))?.options || []}\r\n      data={{ type: \"draggable-item\" }}\r\n    />\r\n  ) : null}\r\n</DragOverlay>\r\n\r\n</DndContext>\r\n\r\n              {isCheckoutEditing && (\r\n                <div className={styles.editModeButtons}>\r\n<button className={styles.saveButton} onClick={() => {\r\n                      handleSaveCheckout();\r\n                      toggleCheckoutEditMode(); // Exit edit mode after saving\r\n                  }}>\r\n                    <FaCheck /> Save\r\n                  </button>\r\n                  <button className={styles.cancelButton} onClick={() => {\r\n                      handleCancelCheckout();\r\n                      toggleCheckoutEditMode(); // Exit edit mode after canceling\r\n                  }}>\r\n                    <FaTimes /> Cancel\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <h2 className={styles.ThreeDModelViewerHeader}>Satellite Model Viewer</h2>\r\n{/* Open the 3D Model Viewer for the selected profile */}\r\n<button\r\n  className={styles.threeDModelButton}\r\n  onClick={(e) => {\r\n    e.preventDefault();\r\n    console.log(\"🔘 3D Model button clicked\");\r\n    \r\n    // Find the profile to get its ID\r\n    const profile = profiles.find((p) => p.name === selectedProfile);\r\n    const profileId = profile?.id || 1;\r\n    \r\n    console.log(`📱 Opening 3D Model window for profile ID: ${profileId}`);\r\n    \r\n    // Ensure any pending state updates are completed first\r\n    setTimeout(() => {\r\n      // Call the openModelWindow function provided through props\r\n      openModelWindow(profileId);\r\n      \r\n      // Log the state after opening\r\n      setTimeout(() => {\r\n        console.log(\"🔍 After 3D Model button click:\");\r\n        console.log(\"- showThreeDModelWindow:\", showThreeDModelWindow);\r\n        console.log(\"- threeDModelProfileId:\", threeDModelProfileId);\r\n      }, 100);\r\n    }, 50);\r\n  }}\r\n>\r\n  <FaCube /> 3D Model Viewer\r\n</button>\r\n\r\n          </div>\r\n        ) : (\r\n          <div className={styles.profilePage}>\r\n            <h1 className={styles.profileHeading}>Satellite Automated Testing System</h1>\r\n            <p className={styles.profileSubtext}>Navigate using the side panel</p>\r\n          </div>\r\n        )}\r\n\r\n{(() => {\r\n    console.log(\"🔍 Rendering MainScreen component\");\r\n    console.log(\"- showCheckoutTest:\", showCheckoutTest);\r\n    console.log(\"- droppedItems length:\", droppedItems.length);\r\n    return null;\r\n  })()}\r\n\r\n{(showCheckoutTest || localStorage.getItem('showCheckoutTest') === 'true') && droppedItems.length > 0 && (\r\n  <div id=\"checkout-test-container\" style={{ position: 'relative', zIndex: 9999 }}>\r\n    {(() => {\r\n      console.log(\"⭐ Rendering CheckoutTestProgress window\", {\r\n        showCheckoutTest,\r\n        localStorageValue: localStorage.getItem('showCheckoutTest'),\r\n        droppedItemsLength: droppedItems.length\r\n      });\r\n      return null;\r\n    })()}\r\n    <CheckoutTestProgress\r\n      droppedItems={droppedItems}\r\n      onClose={handleCloseCheckoutTest}\r\n      zIndex={99999}\r\n      onMouseDown={() => {/* Nothing needed here */}}\r\n      sock={mccSocket || {}}\r\n    />\r\n  </div>\r\n)}\r\n      </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default MainScreen;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}