{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/CheckoutTestProgress/components/OBC1TestPanel.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"button\": \"OBC1TestPanel-module___sU2RW__button\",\n  \"buttonIcon\": \"OBC1TestPanel-module___sU2RW__buttonIcon\",\n  \"card\": \"OBC1TestPanel-module___sU2RW__card\",\n  \"cardContent\": \"OBC1TestPanel-module___sU2RW__cardContent\",\n  \"cardHeader\": \"OBC1TestPanel-module___sU2RW__cardHeader\",\n  \"cardIcon\": \"OBC1TestPanel-module___sU2RW__cardIcon\",\n  \"cardTitle\": \"OBC1TestPanel-module___sU2RW__cardTitle\",\n  \"infoCard\": \"OBC1TestPanel-module___sU2RW__infoCard\",\n  \"infoContent\": \"OBC1TestPanel-module___sU2RW__infoContent\",\n  \"infoIcon\": \"OBC1TestPanel-module___sU2RW__infoIcon\",\n  \"infoLabel\": \"OBC1TestPanel-module___sU2RW__infoLabel\",\n  \"infoValue\": \"OBC1TestPanel-module___sU2RW__infoValue\",\n  \"parameterBox\": \"OBC1TestPanel-module___sU2RW__parameterBox\",\n  \"parameterIcon\": \"OBC1TestPanel-module___sU2RW__parameterIcon\",\n  \"parameterLabel\": \"OBC1TestPanel-module___sU2RW__parameterLabel\",\n  \"parameterValue\": \"OBC1TestPanel-module___sU2RW__parameterValue\",\n  \"progressBar\": \"OBC1TestPanel-module___sU2RW__progressBar\",\n  \"progressBarFill\": \"OBC1TestPanel-module___sU2RW__progressBarFill\",\n  \"progressContainer\": \"OBC1TestPanel-module___sU2RW__progressContainer\",\n  \"progressLabel\": \"OBC1TestPanel-module___sU2RW__progressLabel\",\n  \"progressStep\": \"OBC1TestPanel-module___sU2RW__progressStep\",\n  \"progressValue\": \"OBC1TestPanel-module___sU2RW__progressValue\",\n  \"reportButton\": \"OBC1TestPanel-module___sU2RW__reportButton\",\n  \"spin\": \"OBC1TestPanel-module___sU2RW__spin\",\n  \"spinnerIcon\": \"OBC1TestPanel-module___sU2RW__spinnerIcon\",\n  \"statusBadge\": \"OBC1TestPanel-module___sU2RW__statusBadge\",\n  \"table\": \"OBC1TestPanel-module___sU2RW__table\",\n  \"tableBody\": \"OBC1TestPanel-module___sU2RW__tableBody\",\n  \"tableHeader\": \"OBC1TestPanel-module___sU2RW__tableHeader\",\n  \"tableRowAlt\": \"OBC1TestPanel-module___sU2RW__tableRowAlt\",\n  \"tempCard\": \"OBC1TestPanel-module___sU2RW__tempCard\",\n  \"tempGrid\": \"OBC1TestPanel-module___sU2RW__tempGrid\",\n  \"tempLabel\": \"OBC1TestPanel-module___sU2RW__tempLabel\",\n  \"tempValue\": \"OBC1TestPanel-module___sU2RW__tempValue\",\n  \"testPanel\": \"OBC1TestPanel-module___sU2RW__testPanel\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/OBC1TestPanel.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/components/OBC1TestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css';\r\n\r\n// Import the OBC1-specific functions\r\nimport { runOBC1Checkout } from '@/services/checkout/obc1Checkout';\r\nimport { generateOBC1Report } from '@/services/reports/obc1Report';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface OBC1TestPanelProps {\r\n  options: string[];  // Now contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const OBC1TestPanel: React.FC<OBC1TestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // Determine if eMMC option is enabled - this is now based on the filtered options\r\n  const enableEmmc = options.includes('eMMC');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  // Track if we've run tests at least once\r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting OBC-1 Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for common parameters\r\n              if (param.includes(\"FW_Ver\")) {\r\n                const version = param.includes(\"Major\") ? \"1\" : \r\n                               param.includes(\"Minor\") ? \"2\" : \"3\";\r\n                return `${param}=${version}`;\r\n              } else if (param.includes(\"3V3\") || param.includes(\"5V\")) {\r\n                // Voltage values in mV\r\n                return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n              } else if (param.includes(\"temp\") || param.includes(\"Temp\")) {\r\n                // Temperature values\r\n                return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n              } else if (param.includes(\"eMMC\")) {\r\n                return `${param}=1`;\r\n              } else {\r\n                return `${param}=simulated`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the OBC-1 checkout test with progress updates\r\n      const results = await runOBC1Checkout(sock, enableEmmc, (step, percent) => {\r\n        setCurrentStep(step);\r\n        setProgress(percent);\r\n      });\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running OBC-1 checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateOBC1Report(results);\r\n      alert(`OBC-1 report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            OBC-1 Test Status\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              isForceSimulation ? styles.colorWaiting : styles.colorCompleted\r\n            }`}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path d=\"M11 17a1 1 0 001.447.894l4-2A1 1 0 0017 15V9.236a1 1 0 00-1.447-.894l-4 2a1 1 0 00-.553.894V17zM15.211 6.276a1 1 0 000-1.788l-4.764-2.382a1 1 0 00-.894 0L4.789 4.488a1 1 0 000 1.788l4.764 2.382a1 1 0 00.894 0l4.764-2.382zM4.447 8.342A1 1 0 003 9.236V15a1 1 0 00.553.894l4 2A1 1 0 009 17v-5.764a1 1 0 00-.553-.894l-4-2z\" />\r\n              </svg>\r\n              eMMC Testing\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              enableEmmc ? styles.colorCompleted : styles.colorWaiting\r\n            }`}>\r\n              {enableEmmc ? 'ENABLED' : 'DISABLED'}\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n              backgroundColor: isRunning ? '#9ca3af' :\r\n                hasRunTest ? '#4f46e5' : '#10b981',\r\n              color: 'white'\r\n            }}\r\n          >\r\n            {isRunning ? (\r\n              <>\r\n                <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                </svg>\r\n                Running Test...\r\n              </>\r\n            ) : hasRunTest ? (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Re-run Test\r\n              </>\r\n            ) : (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Run Test\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {results && (\r\n        <div className=\"space-y-4 mt-4\">\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #064e3b, #065f46)\" \r\n                  : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n                color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Firmware Information\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <div \r\n                className={styles.infoCard}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                  borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                }}\r\n              >\r\n                <div className={styles.infoIcon}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"#059669\" width=\"20\" height=\"20\">\r\n                    <path fillRule=\"evenodd\" d=\"M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zM4 4h3a3 3 0 006 0h3a2 2 0 012 2v9a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </div>\r\n                <div className={styles.infoContent}>\r\n                  <div \r\n                    className={styles.infoLabel}\r\n                    style={{ color: isDarkMode ? \"#9ca3af\" : \"#6b7280\" }}\r\n                  >\r\n                    OBC-1 Firmware Version\r\n                  </div>\r\n                  <div \r\n                    className={styles.infoValue}\r\n                    style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}\r\n                  >\r\n                    {results.firmware.major}.{results.firmware.minor}.{results.firmware.patch}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                  : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Voltage Measurements\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <table \r\n                className={styles.table}\r\n                style={{\r\n                  color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                }}\r\n              >\r\n                <thead \r\n                  className={styles.tableHeader}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.tableBody}>\r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>3V3 D</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.d3v3.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.d3v3.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.d3v3.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PS 3V3 OBC-2</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.ps3v3Obc2.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.ps3v3Obc2.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.ps3v3Obc2.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PS 5V OBC-2</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.ps5vObc2.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.ps5vObc2.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.ps5vObc2.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the eMMC section only if the eMMC option was checked */}\r\n          {enableEmmc && (\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                    : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n                  color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\r\n                  </svg>\r\n                  eMMC Test Results\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                {results.emmc.emmc0States[0] !== 'N.A.' ? (\r\n                  <table \r\n                    className={styles.table}\r\n                    style={{\r\n                      color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                    }}\r\n                  >\r\n                    <thead \r\n                      className={styles.tableHeader}\r\n                      style={{\r\n                        backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                        color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                      }}\r\n                      >\r\n                        <tr>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Test Stage</th>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0</th>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className={styles.tableBody}>\r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Initial</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[0]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[0]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0 On</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[1]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[1]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0 Off</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[2]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[2]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1 On</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[3]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[3]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1 Off</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[4]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[4]}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  ) : (\r\n                    <div \r\n                      style={{ \r\n                        padding: \"16px\", \r\n                        textAlign: \"center\", \r\n                        color: isDarkMode ? \"#d1d5db\" : \"#6b7280\",\r\n                        fontStyle: \"italic\"\r\n                      }}\r\n                    >\r\n                      eMMC test was not performed\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div>\r\n              <button \r\n                onClick={generateReport}\r\n                className={styles.reportButton}\r\n                style={{\r\n                  backgroundColor: \"#10b981\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Generate Report\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1507, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/OBC2TestPanel.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/components/OBC2TestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css'; // Reuse the same styles as OBC1TestPanel\r\n\r\n// Import the OBC2-specific functions\r\nimport { runOBC2Checkout } from '@/services/checkout/obc2Checkout';\r\nimport { generateOBC2Report } from '@/services/reports/obc2Report';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface OBC2TestPanelProps {\r\n  options: string[];  // Contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const OBC2TestPanel: React.FC<OBC2TestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // Determine if memory options are enabled\r\n  const enableSdCard = options.includes('SD Card');\r\n  const enableEeprom = options.includes('EEPROM');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  // Track if we've run tests at least once\r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting OBC-2 Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for common parameters\r\n              if (param.includes(\"FW_Ver\")) {\r\n                const version = param.includes(\"Major\") ? \"1\" : \r\n                               param.includes(\"Minor\") ? \"2\" : \"3\";\r\n                return `${param}=${version}`;\r\n              } else if (param.includes(\"3V3\") || param.includes(\"3v3\")) {\r\n                // Voltage values in mV\r\n                return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n              } else if (param.includes(\"temp\") || param.includes(\"Temp\")) {\r\n                // Temperature values\r\n                return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n              } else if (param.includes(\"Time\")) {\r\n                // Time values\r\n                return `${param}=${new Date().toISOString()}`;\r\n              } else if (param.includes(\"Uptime\")) {\r\n                // Uptime values\r\n                return `${param}=${3600 + Math.floor(Math.random() * 3600)}`;\r\n              } else if (param.includes(\"InterComm\")) {\r\n                // CAN communication counters\r\n                return `${param}=${10 + Math.floor(Math.random() * 20)}`;\r\n              } else if (param.includes(\"SD_\") || param.includes(\"EEPROM_\")) {\r\n                // Memory counters\r\n                return `${param}=${5 + Math.floor(Math.random() * 10)}`;\r\n              } else {\r\n                return `${param}=simulated`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the OBC-2 checkout test with progress updates\r\n      const results = await runOBC2Checkout(sock, \r\n        { sdCard: enableSdCard, eeprom: enableEeprom }, \r\n        (step, percent) => {\r\n          setCurrentStep(step);\r\n          setProgress(percent);\r\n        }\r\n      );\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running OBC-2 checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateOBC2Report(results);\r\n      alert(`OBC-2 report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            OBC-2 Test Status\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              isForceSimulation ? styles.colorWaiting : styles.colorCompleted\r\n            }`}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\",\r\n              marginTop: '10px'\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path d=\"M11 17a1 1 0 001.447.894l4-2A1 1 0 0017 15V9.236a1 1 0 00-1.447-.894l-4 2a1 1 0 00-.553.894V17zM15.211 6.276a1 1 0 000-1.788l-4.764-2.382a1 1 0 00-.894 0L4.789 4.488a1 1 0 000 1.788l4.764 2.382a1 1 0 00.894 0l4.764-2.382zM4.447 8.342A1 1 0 003 9.236V15a1 1 0 00.553.894l4 2A1 1 0 009 17v-5.764a1 1 0 00-.553-.894l-4-2z\" />\r\n              </svg>\r\n              Memory Testing\r\n            </div>\r\n            <span style={{ display: 'flex', gap: '8px' }}>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableSdCard ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                SD CARD: {enableSdCard ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableEeprom ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                EEPROM: {enableEeprom ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n                backgroundColor: isRunning ? '#9ca3af' :\r\n                  hasRunTest ? '#4f46e5' : '#10b981',\r\n                color: 'white',\r\n                marginTop: '20px'\r\n              }}\r\n            >\r\n              {isRunning ? (\r\n                <>\r\n                  <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                    <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                  </svg>\r\n                  Running Test...\r\n                </>\r\n              ) : hasRunTest ? (\r\n                <>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Re-run Test\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Run Test\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {results && (\r\n          <div className=\"space-y-4 mt-4\">\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #064e3b, #065f46)\" \r\n                    : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n                  color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Firmware Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div \r\n                  className={styles.infoCard}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                  }}\r\n                >\r\n                  <div className={styles.infoIcon}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"#059669\" width=\"20\" height=\"20\">\r\n                      <path fillRule=\"evenodd\" d=\"M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zM4 4h3a3 3 0 006 0h3a2 2 0 012 2v9a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className={styles.infoContent}>\r\n                    <div \r\n                      className={styles.infoLabel}\r\n                      style={{ color: isDarkMode ? \"#9ca3af\" : \"#6b7280\" }}\r\n                    >\r\n                      OBC-2 Firmware Version\r\n                    </div>\r\n                    <div \r\n                      className={styles.infoValue}\r\n                      style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}\r\n                    >\r\n                      {results.firmware.major}.{results.firmware.minor}.{results.firmware.patch}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                    : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                  color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n                }}\r\n                >\r\n                  <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Time Synchronization\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\n                    className={styles.tableHeader}\r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={styles.tableBody}>\r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Before Update</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.time.before} UTC</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>After Update</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.time.after} UTC</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Current Time</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.time.current} UTC</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Uptime Total</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.time.uptime.total} sec</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Uptime Session</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.time.uptime.session} sec</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                    : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n                  color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Voltage Measurements\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\nclassName={styles.tableHeader}\r\nstyle={{\r\n  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n  color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n}}\r\n>\r\n<tr>\r\n  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Status</th>\r\n</tr>\r\n</thead>\r\n<tbody className={styles.tableBody}>\r\n<tr>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>SD Card 3V3</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltage.sdCard.value} mV</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.voltage.sdCard.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n    }`}>\r\n      {results.voltage.sdCard.result}\r\n    </span>\r\n  </td>\r\n</tr>\r\n\r\n<tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Flash 3V3</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltage.flash.value} mV</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.voltage.flash.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n    }`}>\r\n      {results.voltage.flash.result}\r\n    </span>\r\n  </td>\r\n</tr>\r\n\r\n<tr>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>EEPROM 3V3</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltage.eeprom.value} mV</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.voltage.eeprom.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n    }`}>\r\n      {results.voltage.eeprom.result}\r\n    </span>\r\n  </td>\r\n</tr>\r\n\r\n<tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Payload 3V3</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltage.payload.value} mV</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.voltage.payload.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n    }`}>\r\n      {results.voltage.payload.result}\r\n    </span>\r\n  </td>\r\n</tr>\r\n\r\n<tr>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>UHF 3V3</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltage.uhf.value} mV</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.voltage.uhf.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n    }`}>\r\n      {results.voltage.uhf.result}\r\n    </span>\r\n  </td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n\r\n{/* CAN Communication Test Results */}\r\n<div \r\nclassName={styles.card}\r\nstyle={{\r\nbackgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\nborderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n}}\r\n>\r\n<div \r\nclassName={styles.cardHeader} \r\nstyle={{ \r\nbackground: isDarkMode \r\n? \"linear-gradient(to right, #164e63, #0e7490)\" \r\n: \"linear-gradient(to right, #ecfeff, #cffafe)\",\r\ncolor: isDarkMode ? \"#cffafe\" : \"#0e7490\"\r\n}}\r\n>\r\n<h3 className={styles.cardTitle}>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n<path d=\"M13 7H7v6h6V7z\" />\r\n<path fillRule=\"evenodd\" d=\"M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z\" clipRule=\"evenodd\" />\r\n</svg>\r\nCAN Communication Test\r\n</h3>\r\n\r\n{/* Add simulation badge */}\r\n<SimulationBadge isSimulation={isForceSimulation} />\r\n</div>\r\n\r\n<div className={styles.cardContent}>\r\n<div style={{ display: 'flex', gap: '20px', marginBottom: '15px' }}>\r\n<div\r\nstyle={{\r\n  flex: 1,\r\n  padding: '10px',\r\n  backgroundColor: isDarkMode ? '#0c4a6e' : '#e0f2fe',\r\n  borderRadius: '8px',\r\n  textAlign: 'center'\r\n}}\r\n>\r\n<div style={{ fontWeight: 'bold', marginBottom: '8px' }}>Primary CAN</div>\r\n<span className={`${styles.statusBadge} ${\r\n  results.can.primary.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n}`} style={{ fontSize: '14px', padding: '5px 10px' }}>\r\n  {results.can.primary.result}\r\n</span>\r\n</div>\r\n\r\n<div\r\nstyle={{\r\n  flex: 1,\r\n  padding: '10px',\r\n  backgroundColor: isDarkMode ? '#0c4a6e' : '#e0f2fe',\r\n  borderRadius: '8px',\r\n  textAlign: 'center'\r\n}}\r\n>\r\n<div style={{ fontWeight: 'bold', marginBottom: '8px' }}>Secondary CAN</div>\r\n<span className={`${styles.statusBadge} ${\r\n  results.can.secondary.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n}`} style={{ fontSize: '14px', padding: '5px 10px' }}>\r\n  {results.can.secondary.result}\r\n</span>\r\n</div>\r\n</div>\r\n\r\n<div style={{ fontSize: '13px', color: isDarkMode ? '#94a3b8' : '#64748b', marginTop: '10px' }}>\r\nCAN communication test verifies data transfer between OBC-1 and OBC-2 over both primary and secondary CAN buses. \r\nThe test measures successful transmission and acknowledgement of HKP, CFG, MET, ETC, and UHF packets.\r\n</div>\r\n</div>\r\n</div>\r\n\r\n{/* Memory Test Results (if enabled) */}\r\n{(enableSdCard || enableEeprom) && (\r\n<div \r\nclassName={styles.card}\r\nstyle={{\r\nbackgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\nborderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n}}\r\n>\r\n<div \r\nclassName={styles.cardHeader} \r\nstyle={{ \r\nbackground: isDarkMode \r\n  ? \"linear-gradient(to right, #713f12, #854d0e)\" \r\n  : \"linear-gradient(to right, #fffbeb, #fef3c7)\",\r\ncolor: isDarkMode ? \"#fef3c7\" : \"#854d0e\"\r\n}}\r\n>\r\n<h3 className={styles.cardTitle}>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n  <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\r\n</svg>\r\nMemory Test Results\r\n</h3>\r\n\r\n{/* Add simulation badge */}\r\n<SimulationBadge isSimulation={isForceSimulation} />\r\n</div>\r\n\r\n<div className={styles.cardContent}>\r\n{enableSdCard && (\r\n<div style={{ marginBottom: '20px' }}>\r\n  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>\r\n    <h4 style={{ margin: 0 }}>SD Card Test</h4>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.memory.sdCard.result === \"[PASS]\" ? styles.colorCompleted : \r\n      results.memory.sdCard.result === \"Not tested\" ? styles.colorWaiting : styles.colorError\r\n    }`}>\r\n      {results.memory.sdCard.result}\r\n    </span>\r\n  </div>\r\n  \r\n  {results.memory.sdCard.result !== \"Not tested\" && (\r\n    <table className={styles.table} style={{ marginTop: '10px' }}>\r\n      <thead className={styles.tableHeader}>\r\n        <tr>\r\n          <th>Counter</th>\r\n          <th>Before Test</th>\r\n          <th>After Test</th>\r\n          <th>Difference</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>Write Success</td>\r\n          <td>{results.memory.sdCard.before.writeSuccess}</td>\r\n          <td>{results.memory.sdCard.after.writeSuccess}</td>\r\n          <td>{isNaN(Number(results.memory.sdCard.after.writeSuccess) - Number(results.memory.sdCard.before.writeSuccess)) ? \r\n            \"0\" : (Number(results.memory.sdCard.after.writeSuccess) - Number(results.memory.sdCard.before.writeSuccess))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Read Success</td>\r\n          <td>{results.memory.sdCard.before.readSuccess}</td>\r\n          <td>{results.memory.sdCard.after.readSuccess}</td>\r\n          <td>{isNaN(Number(results.memory.sdCard.after.readSuccess) - Number(results.memory.sdCard.before.readSuccess)) ? \r\n            \"0\" : (Number(results.memory.sdCard.after.readSuccess) - Number(results.memory.sdCard.before.readSuccess))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Write Fail</td>\r\n          <td>{results.memory.sdCard.before.writeFail}</td>\r\n          <td>{results.memory.sdCard.after.writeFail}</td>\r\n          <td>{isNaN(Number(results.memory.sdCard.after.writeFail) - Number(results.memory.sdCard.before.writeFail)) ? \r\n            \"0\" : (Number(results.memory.sdCard.after.writeFail) - Number(results.memory.sdCard.before.writeFail))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Read Fail</td>\r\n          <td>{results.memory.sdCard.before.readFail}</td>\r\n          <td>{results.memory.sdCard.after.readFail}</td>\r\n          <td>{isNaN(Number(results.memory.sdCard.after.readFail) - Number(results.memory.sdCard.before.readFail)) ? \r\n            \"0\" : (Number(results.memory.sdCard.after.readFail) - Number(results.memory.sdCard.before.readFail))}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )}\r\n</div>\r\n)}\r\n\r\n{enableEeprom && (\r\n<div>\r\n  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>\r\n    <h4 style={{ margin: 0 }}>EEPROM Test</h4>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.memory.eeprom.result === \"[PASS]\" ? styles.colorCompleted : \r\n      results.memory.eeprom.result === \"Not tested\" ? styles.colorWaiting : styles.colorError\r\n    }`}>\r\n      {results.memory.eeprom.result}\r\n    </span>\r\n  </div>\r\n  \r\n  {results.memory.eeprom.result !== \"Not tested\" && (\r\n    <table className={styles.table} style={{ marginTop: '10px' }}>\r\n      <thead className={styles.tableHeader}>\r\n        <tr>\r\n          <th>Counter</th>\r\n          <th>Before Test</th>\r\n          <th>After Test</th>\r\n          <th>Difference</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>Write Success</td>\r\n          <td>{results.memory.eeprom.before.writeSuccess}</td>\r\n          <td>{results.memory.eeprom.after.writeSuccess}</td>\r\n          <td>{isNaN(Number(results.memory.eeprom.after.writeSuccess) - Number(results.memory.eeprom.before.writeSuccess)) ? \r\n            \"0\" : (Number(results.memory.eeprom.after.writeSuccess) - Number(results.memory.eeprom.before.writeSuccess))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Read Success</td>\r\n          <td>{results.memory.eeprom.before.readSuccess}</td>\r\n          <td>{results.memory.eeprom.after.readSuccess}</td>\r\n          <td>{isNaN(Number(results.memory.eeprom.after.readSuccess) - Number(results.memory.eeprom.before.readSuccess)) ? \r\n            \"0\" : (Number(results.memory.eeprom.after.readSuccess) - Number(results.memory.eeprom.before.readSuccess))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Write Fail</td>\r\n          <td>{results.memory.eeprom.before.writeFail}</td>\r\n          <td>{results.memory.eeprom.after.writeFail}</td>\r\n          <td>{isNaN(Number(results.memory.eeprom.after.writeFail) - Number(results.memory.eeprom.before.writeFail)) ? \r\n            \"0\" : (Number(results.memory.eeprom.after.writeFail) - Number(results.memory.eeprom.before.writeFail))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Read Fail</td>\r\n          <td>{results.memory.eeprom.before.readFail}</td>\r\n          <td>{results.memory.eeprom.after.readFail}</td>\r\n          <td>{isNaN(Number(results.memory.eeprom.after.readFail) - Number(results.memory.eeprom.before.readFail)) ? \r\n            \"0\" : (Number(results.memory.eeprom.after.readFail) - Number(results.memory.eeprom.before.readFail))}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )}\r\n</div>\r\n)}\r\n</div>\r\n</div>\r\n)}\r\n\r\n<div>\r\n<button \r\nonClick={generateReport}\r\nclassName={styles.reportButton}\r\nstyle={{\r\nbackgroundColor: \"#10b981\",\r\ncolor: \"white\"\r\n}}\r\n>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n<path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n</svg>\r\nGenerate Report\r\n</button>\r\n</div>\r\n</div>\r\n)}\r\n</div>\r\n);\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3798, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/CheckoutTestProgress/CheckoutTestProgress.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"checkoutWindow\": \"CheckoutTestProgress-module__GtrGZW__checkoutWindow\",\n  \"closeButton\": \"CheckoutTestProgress-module__GtrGZW__closeButton\",\n  \"colorCompleted\": \"CheckoutTestProgress-module__GtrGZW__colorCompleted\",\n  \"colorError\": \"CheckoutTestProgress-module__GtrGZW__colorError\",\n  \"colorRunning\": \"CheckoutTestProgress-module__GtrGZW__colorRunning\",\n  \"colorWaiting\": \"CheckoutTestProgress-module__GtrGZW__colorWaiting\",\n  \"contentArea\": \"CheckoutTestProgress-module__GtrGZW__contentArea\",\n  \"progressBar\": \"CheckoutTestProgress-module__GtrGZW__progressBar\",\n  \"progressBarFill\": \"CheckoutTestProgress-module__GtrGZW__progressBarFill\",\n  \"progressContainer\": \"CheckoutTestProgress-module__GtrGZW__progressContainer\",\n  \"progressHeading\": \"CheckoutTestProgress-module__GtrGZW__progressHeading\",\n  \"progressHeadingIcon\": \"CheckoutTestProgress-module__GtrGZW__progressHeadingIcon\",\n  \"pulse\": \"CheckoutTestProgress-module__GtrGZW__pulse\",\n  \"pulseAnimation\": \"CheckoutTestProgress-module__GtrGZW__pulseAnimation\",\n  \"realBadge\": \"CheckoutTestProgress-module__GtrGZW__realBadge\",\n  \"realMessage\": \"CheckoutTestProgress-module__GtrGZW__realMessage\",\n  \"resetButton\": \"CheckoutTestProgress-module__GtrGZW__resetButton\",\n  \"runAllButton\": \"CheckoutTestProgress-module__GtrGZW__runAllButton\",\n  \"runAllButtonIcon\": \"CheckoutTestProgress-module__GtrGZW__runAllButtonIcon\",\n  \"simulationBadge\": \"CheckoutTestProgress-module__GtrGZW__simulationBadge\",\n  \"simulationMessage\": \"CheckoutTestProgress-module__GtrGZW__simulationMessage\",\n  \"statusBadge\": \"CheckoutTestProgress-module__GtrGZW__statusBadge\",\n  \"statusCard\": \"CheckoutTestProgress-module__GtrGZW__statusCard\",\n  \"statusCardActive\": \"CheckoutTestProgress-module__GtrGZW__statusCardActive\",\n  \"statusCardTitle\": \"CheckoutTestProgress-module__GtrGZW__statusCardTitle\",\n  \"statusGrid\": \"CheckoutTestProgress-module__GtrGZW__statusGrid\",\n  \"tabButton\": \"CheckoutTestProgress-module__GtrGZW__tabButton\",\n  \"tabButtonActive\": \"CheckoutTestProgress-module__GtrGZW__tabButtonActive\",\n  \"tabIcon\": \"CheckoutTestProgress-module__GtrGZW__tabIcon\",\n  \"tabsContainer\": \"CheckoutTestProgress-module__GtrGZW__tabsContainer\",\n  \"tabsList\": \"CheckoutTestProgress-module__GtrGZW__tabsList\",\n  \"titleIcon\": \"CheckoutTestProgress-module__GtrGZW__titleIcon\",\n  \"windowHeader\": \"CheckoutTestProgress-module__GtrGZW__windowHeader\",\n  \"windowTitle\": \"CheckoutTestProgress-module__GtrGZW__windowTitle\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 3840, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/CheckoutTestProgress.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/CheckoutTestProgress.tsx\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Button } from \"@/components/ui\";\r\nimport { OBC1TestPanel } from \"./components/OBC1TestPanel\";\r\nimport { OBC2TestPanel } from \"./components/OBC2TestPanel\";\r\nimport { SBandTestPanel } from \"./components/SBandTestPanel\";\r\nimport styles from \"./CheckoutTestProgress.module.css\";\r\nimport { setSimulationMode } from '@/utils/mccUtils';\r\n\r\n// Updated interface to include checkedOptions\r\ninterface CheckoutItem {\r\n  id: string;\r\n  header: string;\r\n  options: string[];\r\n  checkedOptions?: Record<string, boolean>; // Optional to maintain backward compatibility\r\n}\r\n\r\ninterface TestResult {\r\n  component: string;\r\n  status: 'running' | 'completed' | 'error' | 'waiting';\r\n  results: any;\r\n  message?: string;\r\n}\r\n\r\ninterface CheckoutTestProgressProps {\r\n  droppedItems: CheckoutItem[];\r\n  onClose: () => void;\r\n  zIndex: number;\r\n  onMouseDown: () => void;\r\n  sock: any;\r\n}\r\n\r\nconst CheckoutTestProgress: React.FC<CheckoutTestProgressProps> = ({\r\n  droppedItems,\r\n  onClose,\r\n  zIndex,\r\n  onMouseDown,\r\n  sock\r\n}) => {\r\n  const [overallProgress, setOverallProgress] = useState<number>(0);\r\n  const [testResults, setTestResults] = useState<Record<string, TestResult>>({});\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n  const [isSavingReport, setIsSavingReport] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<string>(\"\");\r\n  const [initialRunDone, setInitialRunDone] = useState(false);\r\n  const [currentlyRunningTest, setCurrentlyRunningTest] = useState<string | null>(null);\r\n  const [windowSize, setWindowSize] = useState({ width: 0, height: 0 });\r\n  const [filteredDroppedItems, setFilteredDroppedItems] = useState<CheckoutItem[]>([]);\r\n  \r\n  // Use non-null assertion to ensure TypeScript knows this ref will be assigned\r\n  const nodeRef = useRef<HTMLDivElement>(null) as React.RefObject<HTMLDivElement>;\r\n  const [portalElement] = useState(() => {\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"checkoutTestProgress-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n  // Load the filtered items with checked options from localStorage\r\n  useEffect(() => {\r\n    const filteredItemsJson = localStorage.getItem('checkoutTestItems');\r\n    \r\n    if (filteredItemsJson) {\r\n      try {\r\n        const parsedItems = JSON.parse(filteredItemsJson);\r\n        \r\n        if (Array.isArray(parsedItems) && parsedItems.length > 0) {\r\n          console.log(\"📋 Using filtered items with checked options:\", parsedItems);\r\n          setFilteredDroppedItems(parsedItems);\r\n        } else {\r\n          console.log(\"⚠️ No valid filtered items found, using original dropped items\");\r\n          setFilteredDroppedItems(droppedItems);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error parsing filtered items:\", e);\r\n        setFilteredDroppedItems(droppedItems);\r\n      }\r\n    } else {\r\n      // If no filtered items in localStorage, use the original droppedItems\r\n      // but try to only include options that are checked\r\n      console.log(\"⚠️ No filtered items in localStorage, using original items\");\r\n      \r\n      // For backward compatibility - try to filter based on checkedOptions if available\r\n      const backwardCompatibleItems = droppedItems.map(item => {\r\n        if (item.checkedOptions) {\r\n          // Get the list of options that are checked\r\n          const checkedOptionsList = Object.entries(item.checkedOptions)\r\n            .filter(([_, isChecked]) => isChecked)\r\n            .map(([option]) => option);\r\n          \r\n          // Only include checked options if any exist, otherwise keep all options\r\n          return {\r\n            ...item,\r\n            options: checkedOptionsList.length > 0 ? checkedOptionsList : item.options\r\n          };\r\n        }\r\n        \r\n        return item;\r\n      });\r\n      \r\n      setFilteredDroppedItems(backwardCompatibleItems);\r\n    }\r\n  }, [droppedItems]);\r\n\r\n  // Generate component map for easy lookups\r\n  const componentMap = filteredDroppedItems.reduce((acc, item) => {\r\n    acc[item.header] = item;\r\n    return acc;\r\n  }, {} as Record<string, CheckoutItem>);\r\n\r\n  // Set initial active tab to the first filtered item\r\n  useEffect(() => {\r\n    if (filteredDroppedItems.length > 0 && !activeTab) {\r\n      setActiveTab(filteredDroppedItems[0].header);\r\n    }\r\n  }, [filteredDroppedItems, activeTab]);\r\n\r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  // Update progress when test results change\r\n  useEffect(() => {\r\n    updateOverallProgress();\r\n  }, [testResults]);\r\n\r\n  // Run initial tests for all filtered components\r\n  useEffect(() => {\r\n    if (!initialRunDone && filteredDroppedItems.length > 0) {\r\n      // Mark as done\r\n      setInitialRunDone(true);\r\n      \r\n      // Set up all filtered components with initial waiting status\r\n      const initialResults: Record<string, TestResult> = {};\r\n      filteredDroppedItems.forEach(item => {\r\n        initialResults[item.header] = {\r\n          component: item.header,\r\n          status: 'waiting',\r\n          results: null\r\n        };\r\n      });\r\n      \r\n      setTestResults(initialResults);\r\n      \r\n      // Find the first component to test\r\n      runNextTest(initialResults);\r\n    }\r\n  }, [filteredDroppedItems, initialRunDone]);\r\n\r\n  // Update window size on mount\r\n  useEffect(() => {\r\n    // Calculate available screen space (80% of viewport)\r\n    const maxWidth = Math.min(1600, window.innerWidth * 0.8);\r\n    const maxHeight = Math.min(900, window.innerHeight * 0.8);\r\n    \r\n    setWindowSize({\r\n      width: maxWidth,\r\n      height: maxHeight\r\n    });\r\n    \r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      const maxWidth = Math.min(1600, window.innerWidth * 0.8);\r\n      const maxHeight = Math.min(900, window.innerHeight * 0.8);\r\n      \r\n      setWindowSize({\r\n        width: maxWidth,\r\n        height: maxHeight\r\n      });\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Calculate overall progress based on filtered items\r\n  const updateOverallProgress = () => {\r\n    if (filteredDroppedItems.length === 0) return;\r\n\r\n    const completedCount = Object.values(testResults).filter(\r\n      result => result.status === 'completed' || result.status === 'error'\r\n    ).length;\r\n    \r\n    const newProgress = Math.floor((completedCount / filteredDroppedItems.length) * 100);\r\n    setOverallProgress(newProgress);\r\n    \r\n    // Check if all tests are complete\r\n    if (completedCount === filteredDroppedItems.length) {\r\n      setIsComplete(true);\r\n      setCurrentlyRunningTest(null);\r\n    }\r\n  };\r\n\r\n  // Update a specific test result\r\n  const updateTestResult = (component: string, result: Partial<TestResult>) => {\r\n    setTestResults(prev => {\r\n      const updatedResults = {\r\n        ...prev,\r\n        [component]: {\r\n          ...(prev[component] || { component, status: 'waiting', results: null }),\r\n          ...result\r\n        }\r\n      };\r\n      \r\n      // If a test just completed, check if we should run the next one\r\n      if (result.status === 'completed' || result.status === 'error') {\r\n        // Clear the currently running test\r\n        if (currentlyRunningTest === component) {\r\n          setCurrentlyRunningTest(null);\r\n        }\r\n        \r\n        // Find and run next test (with small delay to allow UI to update)\r\n        setTimeout(() => {\r\n          runNextTest(updatedResults);\r\n        }, 500);\r\n      }\r\n      \r\n      return updatedResults;\r\n    });\r\n  };\r\n\r\n  // Find and run the next pending test from filtered items\r\n  const runNextTest = (currentResults: Record<string, TestResult>) => {\r\n    // Don't try to run another test if one is already running\r\n    if (currentlyRunningTest) return;\r\n    \r\n    // Find the next waiting component from filtered items\r\n    const nextComponent = filteredDroppedItems.find(item => \r\n      currentResults[item.header]?.status === 'waiting'\r\n    );\r\n    \r\n    if (nextComponent) {\r\n      // Set as currently running\r\n      setCurrentlyRunningTest(nextComponent.header);\r\n      \r\n      // Mark it as running in the results\r\n      setTestResults(prev => ({\r\n        ...prev,\r\n        [nextComponent.header]: {\r\n          ...(prev[nextComponent.header] || { component: nextComponent.header, results: null }),\r\n          status: 'running'\r\n        }\r\n      }));\r\n      \r\n      // Automatically switch to the tab with the running test\r\n      setActiveTab(nextComponent.header);\r\n    }\r\n  };\r\n\r\n  // Generate and save test report\r\n  const saveTestReport = async () => {\r\n    setIsSavingReport(true);\r\n    \r\n    try {\r\n      // Call report generation for each completed test\r\n      for (const item of filteredDroppedItems) {\r\n        const result = testResults[item.header];\r\n        if (result && result.status === 'completed') {\r\n          // Here you would call the appropriate report generator for each component\r\n          console.log(`Generating report for ${item.header}...`);\r\n          // For example: await generateOBC1Report(result.results);\r\n        }\r\n      }\r\n      \r\n      alert(\"Test reports have been generated and saved successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error generating report:\", error);\r\n      alert(\"Failed to generate test reports.\");\r\n    } finally {\r\n      setIsSavingReport(false);\r\n    }\r\n  };\r\n\r\n  // Run all tests again (reset and restart)\r\n  const runAllTests = () => {\r\n    // Reset all test results to waiting\r\n    const resetResults: Record<string, TestResult> = {};\r\n    filteredDroppedItems.forEach(item => {\r\n      resetResults[item.header] = {\r\n        component: item.header,\r\n        status: 'waiting',\r\n        results: null\r\n      };\r\n    });\r\n    \r\n    setTestResults(resetResults);\r\n    setIsComplete(false);\r\n    setCurrentlyRunningTest(null);\r\n    \r\n    // Start running tests\r\n    runNextTest(resetResults);\r\n  };\r\n\r\n  // Calculate test stage status for each filtered component\r\n  const getTestStatusSummary = () => {\r\n    return filteredDroppedItems.map(item => ({\r\n      component: item.header,\r\n      status: testResults[item.header]?.status || 'waiting',\r\n      isActive: currentlyRunningTest === item.header\r\n    }));\r\n  };\r\n\r\n  // When a tab has a OBC1/OBC2TestPanel that requires options, only pass the filtered options\r\n  const getComponentOptions = (header: string): string[] => {\r\n    const component = filteredDroppedItems.find(item => item.header === header);\r\n    return component?.options || [];\r\n  };\r\n  \r\n  // Safely reuse position from session storage or use defaults\r\n  const savedPosition = (() => {\r\n    try {\r\n      const saved = sessionStorage.getItem('checkoutTestPositionPosition');\r\n      if (saved) {\r\n        const parsed = JSON.parse(saved);\r\n        \r\n        // Validate the saved position - ensure it's within reasonable bounds\r\n        const viewportHeight = window.innerHeight;\r\n        const viewportWidth = window.innerWidth;\r\n        \r\n        return {\r\n          x: Math.min(Math.max(parsed.x, -400), viewportWidth - 450),\r\n          y: Math.min(Math.max(parsed.y, 0), viewportHeight - 100)\r\n        };\r\n      }\r\n      \r\n      // Default center position if no saved position\r\n      return {\r\n        x: Math.max(0, (window.innerWidth - windowSize.width) / 2), \r\n        y: Math.max(0, (window.innerHeight - windowSize.height) / 2)\r\n      };\r\n    } catch (e) {\r\n      // Default center position in case of error\r\n      return {\r\n        x: Math.max(0, (window.innerWidth - windowSize.width) / 2),\r\n        y: Math.max(0, (window.innerHeight - windowSize.height) / 2)\r\n      };\r\n    }\r\n  })();\r\n\r\n  const [position, setPosition] = useState(savedPosition);\r\n\r\n  // Save position to sessionStorage when it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('checkoutTestPositionPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  const getStatusClassName = (status: string): string => {\r\n    switch (status) {\r\n      case 'completed': return styles.colorCompleted;\r\n      case 'error': return styles.colorError;\r\n      case 'running': return `${styles.colorRunning} ${styles.pulseAnimation}`;\r\n      default: return styles.colorWaiting;\r\n    }\r\n  };\r\n\r\n// Near the beginning of your component\r\nuseEffect(() => {\r\n  // Check if we have real socket info saved\r\n  const socketInfo = localStorage.getItem('mccSocketInfo');\r\n  let shouldUseSimulation = true; // Default to simulation\r\n\r\n  if (socketInfo) {\r\n    try {\r\n      const parsed = JSON.parse(socketInfo);\r\n      if (parsed && parsed.isReal) {\r\n        console.log(\"📡 Using real socket based on stored configuration\");\r\n        shouldUseSimulation = false;\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error parsing socket info:\", e);\r\n    }\r\n  }\r\n\r\n  // Set simulation mode based on availability of real connection\r\n  setSimulationMode(shouldUseSimulation);\r\n  console.log(`🔧 Setting simulation mode to: ${shouldUseSimulation}`);\r\n}, []);\r\n\r\n  // Modified component to specifically pass only checked options to the test panels\r\n  return createPortal(\r\n    <Draggable\r\n      nodeRef={nodeRef}\r\n      handle=\".drag-handle\"\r\n      position={position}\r\n      onStop={(e, data) => {\r\n        setPosition({ x: data.x, y: data.y });\r\n      }}\r\n    >\r\n      <div ref={nodeRef} className={styles.checkoutWindow} style={{/* styles */}}>\r\n        {/* Header - Fixed */}\r\n        <div className={`${styles.windowHeader} drag-handle`}>\r\n          <h2 className={styles.windowTitle}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={styles.titleIcon}>\r\n              <path d=\"M20 6v10a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z\"/>\r\n              <path d=\"m10 10 5 3-5 3v-6Z\"/>\r\n            </svg>\r\n            Satellite Checkout Test Control Centre\r\n          </h2>\r\n          \r\n          <button \r\n            className={styles.resetButton}\r\n            onClick={() => {\r\n              setPosition({\r\n                x: (window.innerWidth - windowSize.width) / 2,\r\n                y: (window.innerHeight - windowSize.height) / 2\r\n              });\r\n            }}\r\n          >\r\n            Reset Position\r\n          </button>\r\n          \r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onClose();\r\n            }}\r\n            className={styles.closeButton}\r\n          >\r\n            ✖\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content area with Test Panels */}\r\n        <div className={styles.contentArea}>\r\n{/* Test tabs */}\r\n{filteredDroppedItems.length > 0 ? (\r\n  <div className={styles.tabsContainer}>\r\n    <div className={styles.tabsList}>\r\n      {filteredDroppedItems.map(item => (\r\n        <button\r\n          key={item.header} \r\n          onClick={() => setActiveTab(item.header)}\r\n          className={`${styles.tabButton} ${activeTab === item.header ? styles.tabButtonActive : ''}`}\r\n        >\r\n          {item.header}\r\n          {testResults[item.header]?.status === 'completed' && (\r\n            <span className={styles.tabIcon}>✓</span>\r\n          )}\r\n          {testResults[item.header]?.status === 'error' && (\r\n            <span className={styles.tabIcon}>✗</span>\r\n          )}\r\n          {testResults[item.header]?.status === 'running' && (\r\n            <span className={`${styles.tabIcon} ${styles.pulseAnimation}`}>⟳</span>\r\n          )}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n) : (\r\n  <div className=\"p-6 text-center\">\r\n    <p>No test items with checked options found. Please check at least one option in the Checkout Section and try again.</p>\r\n  </div>\r\n)}\r\n\r\n          {/* Test Content Grid Layout */}\r\n          {filteredDroppedItems.length > 0 && (\r\n            <div style={{ flex: 1, display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '16px', padding: '0 16px 16px 16px', overflow: 'hidden' }}>\r\n              {/* Left Panel - Active test component */}\r\n              <div style={{ overflow: 'auto', height: '100%', display: activeTab ? 'block' : 'none' }}>\r\n                {filteredDroppedItems.map(item => (\r\n                  <div \r\n                    key={item.header} \r\n                    style={{ \r\n                      display: activeTab === item.header ? 'block' : 'none',\r\n                      height: '100%',\r\n                      overflow: 'auto'\r\n                    }}\r\n                  >\r\n                    {/* Render the appropriate test panel based on component type */}\r\n                    {item.header === \"OBC-1\" && (\r\n                      <OBC1TestPanel\r\n                        options={getComponentOptions(item.header)} // Pass only the filtered/checked options\r\n                        sock={sock}\r\n                        onTestComplete={(results) => \r\n                          updateTestResult(item.header, { \r\n                            status: 'completed', \r\n                            results \r\n                          })\r\n                        }\r\n                        onTestError={(error: Error | string | unknown) => \r\n                          updateTestResult(item.header, { \r\n                            status: 'error', \r\n                            message: error instanceof Error ? error.message : String(error) \r\n                          })\r\n                        }\r\n                        onTestStart={() => \r\n                          updateTestResult(item.header, { \r\n                            status: 'running' \r\n                          })\r\n                        }\r\n                        isInitialRun={currentlyRunningTest === item.header}\r\n                      />\r\n                    )}\r\n                    \r\n                    {item.header === \"OBC-2\" && (\r\n  <OBC2TestPanel\r\n    options={getComponentOptions(item.header)}\r\n    sock={sock}\r\n    onTestComplete={(results) => \r\n      updateTestResult(item.header, { \r\n        status: 'completed', \r\n        results \r\n      })\r\n    }\r\n    onTestError={(error: Error | string | unknown) => \r\n      updateTestResult(item.header, { \r\n        status: 'error', \r\n        message: error instanceof Error ? error.message : String(error) \r\n      })\r\n    }\r\n    onTestStart={() => \r\n      updateTestResult(item.header, { \r\n        status: 'running' \r\n      })\r\n    }\r\n    isInitialRun={currentlyRunningTest === item.header}\r\n  />\r\n)}\r\n\r\n                    {/* Add implementations for other component types here */}\r\n                    {/* For now, show a placeholder for unimplemented components */}\r\n                    {![\"OBC-1\", \"OBC-2\"].includes(item.header) && (\r\n                      <div className=\"p-6\">\r\n                        <div style={{\r\n                          padding: '20px',\r\n                          borderRadius: '8px',\r\n                          backgroundColor: isDarkMode ? '#1e1e1e' : '#f9fafb',\r\n                          border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                          marginBottom: '16px',\r\n                          textAlign: 'center'\r\n                        }}>\r\n                          <h3 style={{ marginBottom: '16px', color: isDarkMode ? '#d1d5db' : '#374151' }}>\r\n                            {item.header} Test Panel\r\n                          </h3>\r\n                          <p style={{ marginBottom: '16px', color: isDarkMode ? '#9ca3af' : '#6b7280' }}>\r\n                            Testing options: {getComponentOptions(item.header).join(', ')}\r\n                          </p>\r\n                          <button \r\n                            className={styles.runAllButton}\r\n                            style={{\r\n                              backgroundColor: \"#3b82f6\",\r\n                              color: \"white\",\r\n                              margin: \"16px auto\"\r\n                            }}\r\n                            onClick={() => {\r\n                              // Update status to running\r\n                              updateTestResult(item.header, { status: 'running' });\r\n                              \r\n                              // Simulate a test run\r\n                              setTimeout(() => {\r\n                                updateTestResult(item.header, { \r\n                                  status: 'completed',\r\n                                  results: { \r\n                                    simulated: true,\r\n                                    testedOptions: getComponentOptions(item.header)\r\n                                  }\r\n                                });\r\n                              }, 2000);\r\n                            }}\r\n                          >\r\n                            {testResults[item.header]?.status === 'completed' || \r\n                             testResults[item.header]?.status === 'error' \r\n                              ? \"Re-run Test\" : \"Run Test\"}\r\n                          </button>\r\n                          \r\n                          {/* Show options available for this component */}\r\n                          {item.options.length > 0 && (\r\n                            <div style={{ \r\n                              marginTop: '24px', \r\n                              padding: '12px', \r\n                              backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                              borderRadius: '6px',\r\n                              textAlign: 'left'\r\n                            }}>\r\n                              <h4 style={{ \r\n                                fontSize: '14px', \r\n                                marginBottom: '8px',\r\n                                color: isDarkMode ? '#d1d5db' : '#4b5563' \r\n                              }}>\r\n                                Options to be tested:\r\n                              </h4>\r\n                              <ul style={{ \r\n                                listStyleType: 'disc', \r\n                                paddingLeft: '20px',\r\n                                color: isDarkMode ? '#9ca3af' : '#6b7280'\r\n                              }}>\r\n                                {getComponentOptions(item.header).map((option, index) => (\r\n                                  <li key={index}>{option}</li>\r\n                                ))}\r\n                              </ul>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        \r\n                        {/* Simulated test results for completed tests */}\r\n                        {testResults[item.header]?.status === 'completed' && (\r\n                          <div style={{\r\n                            padding: '20px',\r\n                            borderRadius: '8px',\r\n                            backgroundColor: isDarkMode ? '#1e1e1e' : '#f9fafb',\r\n                            border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n                          }}>\r\n                            <h3 style={{ \r\n                              marginBottom: '16px', \r\n                              color: isDarkMode ? '#d1d5db' : '#374151',\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              gap: '8px'\r\n                            }}>\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                              </svg>\r\n                              {item.header} Test Results\r\n                            </h3>\r\n                            \r\n                            <div style={{\r\n                              backgroundColor: isDarkMode ? '#0d1117' : '#f3f4f6',\r\n                              borderRadius: '6px',\r\n                              padding: '12px',\r\n                              fontFamily: 'monospace',\r\n                              fontSize: '14px',\r\n                              color: isDarkMode ? '#9ca3af' : '#374151'\r\n                            }}>\r\n                              <p>✅ All tests completed successfully</p>\r\n                              <p>⏱️ Test duration: 1.24s</p>\r\n                              <p>🔍 Tested options: {getComponentOptions(item.header).join(', ')}</p>\r\n                            </div>\r\n                            \r\n                            <button \r\n                              style={{\r\n                                marginTop: '16px',\r\n                                padding: '8px 16px',\r\n                                backgroundColor: '#10b981',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '4px',\r\n                                cursor: 'pointer',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                gap: '6px'\r\n                              }}\r\n                            >\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\r\n                              </svg>\r\n                              Generate Report\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              {/* Right Panel - Test Status Overview */}\r\n              <div style={{ overflow: 'auto', height: '100%' }}>\r\n                {/* Overall Progress Card */}\r\n                <div className={styles.progressContainer}>\r\n                  <h3 className={styles.progressHeading}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.progressHeadingIcon}>\r\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    Test Progress\r\n                  </h3>\r\n\r\n                  <div className=\"flex justify-between items-center text-sm mb-2\">\r\n                    <span>{overallProgress}% Complete</span>\r\n                    <span className={`${styles.statusBadge} ${\r\n                      isComplete ? styles.colorCompleted : \r\n                      currentlyRunningTest ? styles.colorRunning : \r\n                      styles.colorWaiting\r\n                    }`}>\r\n                      {isComplete ? \"✅ All Tests Completed\" : \r\n                      currentlyRunningTest ? `⚙️ Running: ${currentlyRunningTest}` : \r\n                      \"⏳ Preparing Tests...\"}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className={styles.progressBar}>\r\n                    <div \r\n                      className={styles.progressBarFill}\r\n                      style={{ \r\n                        width: `${overallProgress}%`,\r\n                        background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                      }}\r\n                    >\r\n                      {overallProgress}%\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Controls */}\r\n                  <div className=\"flex justify-end mt-4\">\r\n                    <button \r\n                      onClick={runAllTests}\r\n                      disabled={currentlyRunningTest !== null}\r\n                      className={styles.runAllButton}\r\n                      style={{\r\n                        backgroundColor: currentlyRunningTest === null ? \"#3b82f6\" : \"#9ca3af\",\r\n                        color: \"white\"\r\n                      }}\r\n                    >\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles.runAllButtonIcon} viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                      </svg>\r\n                      Run All Tests Again\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Test Status Grid */}\r\n                <div className={styles.progressContainer}>\r\n                  <h4 className=\"text-sm font-medium mb-2 flex items-center\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.progressHeadingIcon}>\r\n                      <path d=\"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\" />\r\n                      <path fillRule=\"evenodd\" d=\"M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    Test Status Overview\r\n                  </h4>\r\n                  \r\n                  <div className={styles.statusGrid} style={{ gridTemplateColumns: 'repeat(auto-fill, minmax(140px, 1fr))' }}>\r\n                    {getTestStatusSummary().map((item) => (\r\n                      <div\r\n                        key={item.component}\r\n                        className={`${styles.statusCard} ${item.isActive ? styles.statusCardActive : ''} ${getStatusClassName(item.status)}`}\r\n                        onClick={() => setActiveTab(item.component)}\r\n                      >\r\n                        <div className={styles.statusCardTitle}>{item.component}</div>\r\n                        <div className={`${styles.statusBadge} ${getStatusClassName(item.status)}`}>\r\n                          {item.status === 'completed' && \"✓ Complete\"}\r\n                          {item.status === 'error' && \"✗ Error\"}\r\n                          {item.status === 'running' && \"⟳ Running\"}\r\n                          {item.status === 'waiting' && \"⏱ Waiting\"}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  {/* Save Report Button */}\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\", marginTop: \"8px\" }}>\r\n                    <button\r\n                      onClick={saveTestReport}\r\n                      disabled={!isComplete || isSavingReport || filteredDroppedItems.length === 0}\r\n                      className={styles.runAllButton}\r\n                      style={{\r\n                        backgroundColor: !isComplete || isSavingReport || filteredDroppedItems.length === 0 \r\n                          ? \"#9ca3af\" : \"#10b981\",\r\n                        color: \"white\"\r\n                      }}\r\n                    >\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles.runAllButtonIcon} viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                      </svg>\r\n                      {isSavingReport ? \"Saving...\" : \"Save Reports\"}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Component Options Summary */}\r\n                <div \r\n                  style={{ \r\n                    border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    borderRadius: '8px',\r\n                    backgroundColor: isDarkMode ? '#1e1e1e' : '#ffffff',\r\n                    overflow: 'hidden',\r\n                    marginTop: '16px'\r\n                  }}\r\n                >\r\n                  <div style={{ \r\n                    padding: '12px 16px',\r\n                    backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                    borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    color: isDarkMode ? '#e5e7eb' : '#1f2937',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <h3>Selected Options Summary</h3>\r\n                  </div>\r\n                  \r\n                  <div style={{ padding: '16px' }}>\r\n                    {filteredDroppedItems.map(item => (\r\n                      <div \r\n                        key={item.header}\r\n                        style={{\r\n                          marginBottom: '12px',\r\n                          padding: '12px',\r\n                          backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                          borderRadius: '8px',\r\n                          border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n                        }}\r\n                      >\r\n                        <div style={{ \r\n                          fontSize: '14px', \r\n                          fontWeight: 'bold',\r\n                          marginBottom: '8px',\r\n                          color: isDarkMode ? '#e5e7eb' : '#374151'\r\n                        }}>\r\n                          {item.header}\r\n                        </div>\r\n                        {getComponentOptions(item.header).length > 0 ? (\r\n                          <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280' }}>\r\n                            {getComponentOptions(item.header).map((option, index) => (\r\n                              <div \r\n                                key={index}\r\n                                style={{\r\n                                  padding: '4px 8px',\r\n                                  backgroundColor: isDarkMode ? '#1f2937' : '#f3f4f6',\r\n                                  borderRadius: '4px',\r\n                                  display: 'inline-block',\r\n                                  margin: '0 4px 4px 0',\r\n                                  fontSize: '12px'\r\n                                }}\r\n                              >\r\n                                ✓ {option}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        ) : (\r\n                          <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280', fontStyle: 'italic', fontSize: '12px' }}>\r\n                            No options selected for this component\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Testing Log Output */}\r\n                <div style={{ \r\n                  border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                  borderRadius: '8px',\r\n                  backgroundColor: isDarkMode ? '#1e1e1e' : '#ffffff',\r\n                  overflow: 'hidden',\r\n                  marginTop: '16px'\r\n                }}>\r\n                  <div style={{ \r\n                    padding: '12px 16px',\r\n                    backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                    borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    color: isDarkMode ? '#e5e7eb' : '#1f2937',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <h3>Test Console Output</h3>\r\n                    <button style={{ \r\n                      backgroundColor: 'transparent',\r\n                      border: 'none',\r\n                      color: isDarkMode ? '#d1d5db' : '#6b7280',\r\n                      cursor: 'pointer',\r\n                      fontSize: '12px'\r\n                    }}>\r\n                      Clear\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <div style={{ \r\n                    padding: '12px',\r\n                    maxHeight: '200px',\r\n                    overflowY: 'auto',\r\n                    fontFamily: 'monospace',\r\n                    fontSize: '12px',\r\n                    backgroundColor: isDarkMode ? '#0d1117' : '#f8fafc',\r\n                    color: isDarkMode ? '#d1d5db' : '#374151'\r\n                  }}>\r\n                    {currentlyRunningTest ? (\r\n                      <>\r\n                        <div style={{ color: '#3b82f6' }}>\r\n                          [INFO] {new Date().toLocaleTimeString()} - Starting test for {currentlyRunningTest}\r\n                        </div>\r\n                        <div style={{ color: isDarkMode ? '#d1d5db' : '#6b7280' }}>\r\n                          [DEBUG] {new Date().toLocaleTimeString()} - Initializing test environment\r\n                        </div>\r\n                        <div style={{ color: isDarkMode ? '#d1d5db' : '#6b7280' }}>\r\n                          [DEBUG] {new Date().toLocaleTimeString()} - Testing options: {getComponentOptions(currentlyRunningTest).join(', ')}\r\n                        </div>\r\n                        <div className={styles.pulseAnimation} style={{ color: '#10b981' }}>\r\n                          [INFO] {new Date().toLocaleTimeString()} - Running test procedures...\r\n                        </div>\r\n                      </>\r\n                    ) : isComplete ? (\r\n                      <div style={{ color: '#10b981' }}>\r\n                        [SUCCESS] {new Date().toLocaleTimeString()} - All tests completed successfully!\r\n                      </div>\r\n                    ) : (\r\n                      filteredDroppedItems.length === 0 ? (\r\n                        <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280', fontStyle: 'italic' }}>\r\n                          No test items with checked options found. Please check options in the Checkout Section.\r\n                        </div>\r\n                      ) : (\r\n                        <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280', fontStyle: 'italic' }}>\r\n                          Ready to start tests. Click \"Run All Tests Again\" to begin.\r\n                        </div>\r\n                      )\r\n                    )}\r\n                    \r\n                    {/* Display completed test logs */}\r\n                    {Object.entries(testResults)\r\n                      .filter(([_, result]) => result.status === 'completed' || result.status === 'error')\r\n                      .map(([component, result]) => {\r\n                        const options = getComponentOptions(component);\r\n                        return (\r\n                          <div key={component} style={{ \r\n                            color: result.status === 'completed' ? '#10b981' : '#ef4444',\r\n                            marginTop: '4px'\r\n                          }}>\r\n                            [{result.status === 'completed' ? 'SUCCESS' : 'ERROR'}] {new Date().toLocaleTimeString()} - \r\n                            {result.status === 'completed' \r\n                              ? ` ${component} test completed successfully, options: ${options.join(', ')}` \r\n                              : ` ${component} test failed: ${result.message || 'unknown error'}`}\r\n                          </div>\r\n                        );\r\n                      })\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Draggable>,\r\n    portalElement\r\n  );\r\n};\r\n\r\nexport default CheckoutTestProgress;\r\n                "],"names":[],"mappings":"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","debugId":null}}]
}