{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,8OAAC,oKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\n        \"flex-1 outline-none bg-background dark:bg-background text-foreground dark:text-foreground\", // Added bg-background and text-foreground with dark variants\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/card.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = ({ \r\n  children, \r\n  className = '', \r\n  ...props \r\n}) => {\r\n  return (\r\n    <div \r\n      className={`bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-4 ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardHeader: React.FC<CardHeaderProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`mb-4 ${className}`} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardTitle: React.FC<CardTitleProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <h3 className={`text-lg font-semibold text-gray-900 dark:text-white ${className}`} {...props}>\r\n      {children}\r\n    </h3>\r\n  );\r\n};\r\n\r\ninterface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardContent: React.FC<CardContentProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={className} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardFooter: React.FC<CardFooterProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`mt-4 ${className}`} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;;;;;;AAOO,MAAM,OAA4B,CAAC,EACxC,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,WAAW,CAAC,4FAA4F,EAAE,WAAW;QACpH,GAAG,KAAK;kBAER;;;;;;AAGP;AAOO,MAAM,aAAwC,CAAC,EACpD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QAAI,WAAW,CAAC,KAAK,EAAE,WAAW;QAAG,GAAG,KAAK;kBAC3C;;;;;;AAGP;AAOO,MAAM,YAAsC,CAAC,EAClD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QAAG,WAAW,CAAC,oDAAoD,EAAE,WAAW;QAAG,GAAG,KAAK;kBACzF;;;;;;AAGP;AAOO,MAAM,cAA0C,CAAC,EACtD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QAAI,WAAW;QAAY,GAAG,KAAK;kBACjC;;;;;;AAGP;AAOO,MAAM,aAAwC,CAAC,EACpD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QAAI,WAAW,CAAC,KAAK,EAAE,WAAW;QAAG,GAAG,KAAK;kBAC3C;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/alert.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface AlertProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  variant?: 'default' | 'destructive' | 'warning' | 'success';\r\n}\r\n\r\nexport const Alert: React.FC<AlertProps> = ({\r\n  children,\r\n  className = '',\r\n  variant = 'default',\r\n  ...props\r\n}) => {\r\n  const variantClasses = {\r\n    default: 'bg-blue-50 border-blue-200 text-blue-800 dark:bg-blue-900/50 dark:border-blue-800 dark:text-blue-200',\r\n    destructive: 'bg-red-50 border-red-200 text-red-800 dark:bg-red-900/50 dark:border-red-800 dark:text-red-200',\r\n    warning: 'bg-yellow-50 border-yellow-200 text-yellow-800 dark:bg-yellow-900/50 dark:border-yellow-800 dark:text-yellow-200',\r\n    success: 'bg-green-50 border-green-200 text-green-800 dark:bg-green-900/50 dark:border-green-800 dark:text-green-200'\r\n  };\r\n  \r\n  return (\r\n    <div\r\n      role=\"alert\"\r\n      className={`p-4 mb-4 border rounded-lg ${variantClasses[variant]} ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface AlertTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const AlertTitle: React.FC<AlertTitleProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <h4\r\n      className={`font-medium text-lg mb-1 ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </h4>\r\n  );\r\n};\r\n\r\ninterface AlertDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const AlertDescription: React.FC<AlertDescriptionProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`text-sm ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;;;;AAQO,MAAM,QAA8B,CAAC,EAC1C,QAAQ,EACR,YAAY,EAAE,EACd,UAAU,SAAS,EACnB,GAAG,OACJ;IACC,MAAM,iBAAiB;QACrB,SAAS;QACT,aAAa;QACb,SAAS;QACT,SAAS;IACX;IAEA,qBACE,8OAAC;QACC,MAAK;QACL,WAAW,CAAC,2BAA2B,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW;QAC9E,GAAG,KAAK;kBAER;;;;;;AAGP;AAOO,MAAM,aAAwC,CAAC,EACpD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,WAAW,CAAC,yBAAyB,EAAE,WAAW;QACjD,GAAG,KAAK;kBAER;;;;;;AAGP;AAOO,MAAM,mBAAoD,CAAC,EAChE,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,WAAW,CAAC,QAAQ,EAAE,WAAW;QAChC,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/index.ts"],"sourcesContent":["// components/ui/index.ts\r\nexport * from './button';\r\nexport * from './progress';\r\nexport * from './tabs';\r\nexport * from './card';\r\nexport * from './alert';"],"names":[],"mappings":"AAAA,yBAAyB","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/ToTestList/ToTestList.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actions\": \"ToTestList-module__vY2V8W__actions\",\n  \"addButton\": \"ToTestList-module__vY2V8W__addButton\",\n  \"clearButton\": \"ToTestList-module__vY2V8W__clearButton\",\n  \"closeButton\": \"ToTestList-module__vY2V8W__closeButton\",\n  \"dark\": \"ToTestList-module__vY2V8W__dark\",\n  \"deleteButton\": \"ToTestList-module__vY2V8W__deleteButton\",\n  \"drag-handle\": \"ToTestList-module__vY2V8W__drag-handle\",\n  \"error\": \"ToTestList-module__vY2V8W__error\",\n  \"fadeOut\": \"ToTestList-module__vY2V8W__fadeOut\",\n  \"form\": \"ToTestList-module__vY2V8W__form\",\n  \"header\": \"ToTestList-module__vY2V8W__header\",\n  \"light\": \"ToTestList-module__vY2V8W__light\",\n  \"loadingIndicator\": \"ToTestList-module__vY2V8W__loadingIndicator\",\n  \"popup\": \"ToTestList-module__vY2V8W__popup\",\n  \"popup-show\": \"ToTestList-module__vY2V8W__popup-show\",\n  \"saveStatus\": \"ToTestList-module__vY2V8W__saveStatus\",\n  \"selectedRow\": \"ToTestList-module__vY2V8W__selectedRow\",\n  \"success\": \"ToTestList-module__vY2V8W__success\",\n  \"table\": \"ToTestList-module__vY2V8W__table\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 342, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ToTestList/ToTestList.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styles from \"./ToTestList.module.css\";\r\nimport Draggable from \"react-draggable\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { WindowName } from \"@/types/types\";\r\n\r\ninterface ToTestListProps {\r\n  zIndex: number; \r\n  onMouseDown: () => void; \r\n  onClose: () => void;\r\n  bringWindowToFront: (windowName: WindowName) => void;\r\n  windowZIndexes: { [key: string]: number };\r\n  zIndexCounter: number;\r\n}\r\n\r\ninterface RowData {\r\n  id?: number;  // Database ID\r\n  sn: number;\r\n  test: string;\r\n  satellite: string;\r\n  dateTime: string;\r\n  loggedBy: string;\r\n  selected?: boolean;\r\n}\r\n\r\nconst ToTestList: React.FC<ToTestListProps> = ({ \r\n  zIndex, \r\n  onMouseDown, \r\n  onClose, \r\n  bringWindowToFront, \r\n  windowZIndexes, \r\n  zIndexCounter \r\n}) => {\r\n  // Use MutableRefObject instead of RefObject to satisfy Draggable's requirements\r\n  const nodeRef = useRef<HTMLDivElement>(null);\r\n  const [rows, setRows] = useState<RowData[]>([]);\r\n  const [formData, setFormData] = useState({\r\n    test: \"\",\r\n    satellite: \"\",\r\n    loggedBy: \"\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saveStatus, setSaveStatus] = useState<string | null>(null);\r\n  \r\n  // Important: Add refs to prevent infinite focus loop\r\n  const hasFocused = useRef(false);\r\n  const initialMount = useRef(true);\r\n  const saveTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // API URL from environment or default\r\n  const API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  // Create portal element once on mount\r\n  const [portalElement] = useState(() => {\r\n    // Check if portal already exists\r\n    const existingPortal = document.getElementById(\"toTestList-root\");\r\n    if (existingPortal) {\r\n      return existingPortal;\r\n    }\r\n    \r\n    // Create new portal if needed\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"toTestList-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n  // Important: Store position in sessionStorage to maintain it across renders\r\n  const savedPosition = sessionStorage.getItem('toTestListPosition');\r\n  const defaultPosition = savedPosition ? JSON.parse(savedPosition) : {\r\n    x: (window.innerWidth - 800) / 2, \r\n    y: (window.innerHeight - 500) / 2\r\n  };\r\n\r\n  const [position, setPosition] = useState(defaultPosition);\r\n  \r\n  // Fetch data from the server when component mounts\r\n  useEffect(() => {\r\n    console.log(\"🔵 ToTestList mounted\");\r\n    \r\n    // Focus window, but only once on initial mount\r\n    if (initialMount.current && !hasFocused.current) {\r\n      const focusTimeout = setTimeout(() => {\r\n        console.log(\"🎯 ToTestList initial focusing\");\r\n        onMouseDown();\r\n        hasFocused.current = true;\r\n      }, 50);\r\n      \r\n      initialMount.current = false;\r\n      \r\n      return () => clearTimeout(focusTimeout);\r\n    }\r\n\r\n    // Fetch data from the server\r\n    fetchTestItems();\r\n  }, []); // Empty dependency array - run once on mount\r\n\r\n  // Clean up portal and timers on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      // Clear any pending save timeouts\r\n      if (saveTimeoutRef.current) {\r\n        clearTimeout(saveTimeoutRef.current);\r\n        saveTimeoutRef.current = null;\r\n      }\r\n      \r\n      hasFocused.current = false; // Reset focus state on unmount\r\n      \r\n      // Don't remove the portal element itself - this causes issues\r\n      // Just reset internal state for next mount\r\n    };\r\n  }, []);\r\n\r\n  // Save data to database whenever rows change\r\n  useEffect(() => {\r\n    // Don't save on initial mount\r\n    if (initialMount.current) {\r\n      return;\r\n    }\r\n\r\n    // Clear any existing timeout\r\n    if (saveTimeoutRef.current) {\r\n      clearTimeout(saveTimeoutRef.current);\r\n    }\r\n\r\n    // Set a new timeout to save data\r\n    saveTimeoutRef.current = setTimeout(() => {\r\n      saveTestItems();\r\n    }, 500); // Debounce saves to avoid too many API calls\r\n  }, [rows]);\r\n\r\n  // Save position to sessionStorage whenever it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('toTestListPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  // Fetch test items from the database\r\n  const fetchTestItems = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      console.log(\"📥 Fetching test items from server\");\r\n      const response = await fetch(`${API_URL}/test-items`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching test items: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"📊 Received test items:\", data);\r\n      \r\n      // Map the data to match our expected format\r\n      const formattedRows = data.map((item: any, index: number) => ({\r\n        id: item.id,\r\n        sn: index + 1, // Ensure sequential numbering\r\n        test: item.test,\r\n        satellite: item.satellite,\r\n        dateTime: item.dateTime,\r\n        loggedBy: item.loggedBy,\r\n        selected: false\r\n      }));\r\n      \r\n      setRows(formattedRows);\r\n      \r\n      // Fall back to localStorage if the server returns no data\r\n      if (formattedRows.length === 0) {\r\n        console.log(\"📝 No data from server, checking localStorage\");\r\n        const savedRows = localStorage.getItem(\"toTestListRows\");\r\n        if (savedRows) {\r\n          const parsedRows = JSON.parse(savedRows);\r\n          setRows(parsedRows);\r\n          \r\n          // Save the localStorage data to the server\r\n          saveTestItems(parsedRows);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching test items:\", error);\r\n      \r\n      // Fall back to localStorage on error\r\n      const savedRows = localStorage.getItem(\"toTestListRows\");\r\n      if (savedRows) {\r\n        setRows(JSON.parse(savedRows));\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Save test items to both localStorage and the database\r\n  const saveTestItems = async (itemsToSave = rows) => {\r\n    if (itemsToSave.length === 0) {\r\n      console.log(\"No items to save\");\r\n      return;\r\n    }\r\n    \r\n    // Save to localStorage first (as backup)\r\n    localStorage.setItem(\"toTestListRows\", JSON.stringify(itemsToSave));\r\n    \r\n    // Save to the database\r\n    try {\r\n      console.log(\"💾 Saving test items to server:\", itemsToSave);\r\n      setSaveStatus(\"Saving...\");\r\n      \r\n      const response = await fetch(`${API_URL}/test-items`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ items: itemsToSave }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error saving test items: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"✅ Server response:\", data);\r\n      setSaveStatus(\"Saved\");\r\n      \r\n      // Clear saved status after 2 seconds\r\n      setTimeout(() => setSaveStatus(null), 2000);\r\n    } catch (error) {\r\n      console.error(\"Error saving test items:\", error);\r\n      setSaveStatus(\"Error saving\");\r\n      \r\n      // Clear error status after 3 seconds\r\n      setTimeout(() => setSaveStatus(null), 3000);\r\n    }\r\n  };\r\n\r\n  const addItem = () => {\r\n    if (!formData.test) return; // Prevent adding empty items\r\n    \r\n    const newRow: RowData = {\r\n      sn: rows.length + 1,\r\n      test: formData.test,\r\n      satellite: formData.satellite,\r\n      dateTime: new Date().toLocaleString(),\r\n      loggedBy: formData.loggedBy || \"Anonymous\",\r\n    };\r\n    \r\n    setRows([...rows, newRow]);\r\n    setFormData({ test: \"\", satellite: \"\", loggedBy: \"\" });\r\n  };\r\n\r\n  const deleteItem = async () => {\r\n    const selectedIndex = rows.findIndex((row) => row.selected);\r\n    if (selectedIndex !== -1) {\r\n      const selectedRow = rows[selectedIndex];\r\n      const updatedRows = rows.filter((_, index) => index !== selectedIndex);\r\n\r\n      // Update local state with recalculated S/N\r\n      setRows(\r\n        updatedRows.map((row, index) => ({\r\n          ...row,\r\n          sn: index + 1, // Recalculate S/N\r\n        }))\r\n      );\r\n\r\n      // If the deleted item has an ID, delete it from the server\r\n      if (selectedRow.id) {\r\n        try {\r\n          console.log(`🗑️ Deleting test item ID ${selectedRow.id} from server`);\r\n          \r\n          const response = await fetch(`${API_URL}/test-items/${selectedRow.id}`, {\r\n            method: 'DELETE',\r\n          });\r\n          \r\n          if (!response.ok) {\r\n            throw new Error(`Error deleting test item: ${response.status}`);\r\n          }\r\n          \r\n          console.log(\"✅ Item deleted from server\");\r\n        } catch (error) {\r\n          console.error(\"Error deleting test item:\", error);\r\n        }\r\n      }\r\n\r\n      // Update localStorage\r\n      if (updatedRows.length === 0) {\r\n        localStorage.removeItem(\"toTestListRows\");\r\n      } else {\r\n        localStorage.setItem(\"toTestListRows\", JSON.stringify(updatedRows));\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearList = async () => {\r\n    if (window.confirm(\"Are you sure you want to clear all items?\")) {\r\n      setRows([]);\r\n      localStorage.removeItem(\"toTestListRows\"); // Explicitly clear localStorage\r\n      \r\n      // Clear all items from the server\r\n      try {\r\n        console.log(\"🧹 Clearing all test items from server\");\r\n        \r\n        const response = await fetch(`${API_URL}/test-items/clear`, {\r\n          method: 'DELETE',\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Error clearing test items: ${response.status}`);\r\n        }\r\n        \r\n        console.log(\"✅ All items cleared from server\");\r\n      } catch (error) {\r\n        console.error(\"Error clearing test items:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleRowSelection = (index: number) => {\r\n    const updatedRows = rows.map((row, i) => ({\r\n      ...row,\r\n      selected: i === index ? !row.selected : false,\r\n    }));\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  // When the window is clicked, bring it to front using the passed function\r\n  const handleWindowClick = (e: React.MouseEvent) => {\r\n    // Prevent bringing to front for clicks on inputs and buttons\r\n    if (\r\n      e.target instanceof HTMLInputElement || \r\n      e.target instanceof HTMLButtonElement ||\r\n      (e.target instanceof HTMLElement && e.target.closest('button') !== null)\r\n    ) {\r\n      return;\r\n    }\r\n    \r\n    console.log(`🖱️ Clicked ToTestList, bringing to front`);\r\n    onMouseDown();\r\n  };\r\n\r\n  // Add state to track dark mode\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  \r\n  // Update dark mode state on component mount and when theme changes\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      const isDark = document.documentElement.classList.contains(\"dark\");\r\n      setIsDarkMode(isDark);\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Set up observer for theme changes\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        if (mutation.attributeName === \"class\") {\r\n          checkDarkMode();\r\n        }\r\n      });\r\n    });\r\n    \r\n    observer.observe(document.documentElement, {\r\n      attributes: true,\r\n      attributeFilter: [\"class\"]\r\n    });\r\n    \r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n  \r\n  // Force immediate theme check when component renders\r\n  useEffect(() => {\r\n    setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n  }, []);\r\n\r\n  // Compute actual z-index to use, falling back to provided zIndex if needed\r\n  const effectiveZIndex = windowZIndexes[\"ToTestList\"] || zIndex;\r\n\r\n  // Handle close with confirmation\r\n  const handleClose = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation(); // Prevents accidental reopening\r\n    console.log(\"🔴 ToTestList close button clicked\");\r\n    \r\n    // Update sessionStorage directly to ensure persistence\r\n    try {\r\n      const savedState = sessionStorage.getItem('windowVisibility');\r\n      if (savedState) {\r\n        const state = JSON.parse(savedState);\r\n        state.ToTestList = false;\r\n        sessionStorage.setItem('windowVisibility', JSON.stringify(state));\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error updating sessionStorage:\", e);\r\n    }\r\n    \r\n    onClose();\r\n  };\r\n\r\n  return createPortal(\r\n    <div \r\n      style={{\r\n        position: \"absolute\",\r\n        zIndex: effectiveZIndex,\r\n        opacity: 1,\r\n        visibility: \"visible\",\r\n        pointerEvents: \"auto\",\r\n        display: \"block\", /* Force display */\r\n        willChange: \"z-index\",\r\n        top: 0,          /* Make sure it's not hidden below viewport */\r\n        left: 0          /* Make sure it's not hidden off-screen */\r\n      }}\r\n      data-window=\"ToTestList\"\r\n      id=\"toTestList-window\"\r\n    >\r\n      <Draggable\r\n        nodeRef={nodeRef as React.RefObject<HTMLElement>}\r\n        handle=\".drag-handle\"\r\n        position={position}\r\n        onStop={(e, data) => {\r\n          console.log(`📌 ToTestList moved to: x=${data.x}, y=${data.y}`);\r\n          setPosition({ x: data.x, y: data.y });\r\n        }}\r\n      >\r\n        <div \r\n          ref={nodeRef} \r\n          className={styles.popup} \r\n          style={{ \r\n            position: \"fixed\", \r\n            backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n            color: isDarkMode ? \"#fff\" : \"#000\",\r\n            boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\",\r\n            width: \"800px\", // Add explicit width\r\n            minHeight: \"400px\", // Ensure minimum height  \r\n            userSelect: \"none\", // Prevent text selection during drag\r\n            willChange: \"transform\",\r\n            opacity: 1,\r\n            visibility: \"visible\",\r\n            display: \"block\" /* Force display */\r\n          }}\r\n          onClick={handleWindowClick}\r\n        >\r\n          {/* Window header */}\r\n          <div className={`${styles.header} drag-handle`} style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <h2>Tests to Conduct</h2>\r\n            <button\r\n              onClick={handleClose}\r\n              className={styles.closeButton}\r\n              style={{ \r\n                color: isDarkMode ? \"white\" : \"black\",\r\n                background: \"none\",\r\n                border: \"none\",\r\n                fontSize: \"18px\",\r\n                cursor: \"pointer\"\r\n              }}\r\n            >\r\n              ✖\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Save status indicator */}\r\n          {saveStatus && (\r\n            <div className={styles.saveStatus} style={{\r\n              padding: \"4px 10px\",\r\n              margin: \"0 0 10px 0\",\r\n              fontSize: \"14px\",\r\n              textAlign: \"center\",\r\n              backgroundColor: saveStatus.includes(\"Error\") ? \"#ffdddd\" : \"#ddffdd\",\r\n              color: saveStatus.includes(\"Error\") ? \"#cc0000\" : \"#007700\",\r\n              borderRadius: \"4px\"\r\n            }}>\r\n              {saveStatus}\r\n            </div>\r\n          )}\r\n          \r\n          {/* Loading indicator */}\r\n          {isLoading ? (\r\n            <div className={styles.loadingIndicator} style={{\r\n              textAlign: \"center\",\r\n              padding: \"20px\"\r\n            }}>\r\n              Loading test items...\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <table className={styles.table}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S/N</th>\r\n                    <th>Test</th>\r\n                    <th>Satellite</th>\r\n                    <th>Date/Time Logged</th>\r\n                    <th>Logged by</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows.length === 0 ? (\r\n                    <tr>\r\n    <td \r\n      colSpan={5} \r\n      style={{ \r\n        textAlign: \"center\", \r\n        padding: \"20px\",\r\n        color: \"#000000\", // Always black text\r\n      }}\r\n    >\r\n                        No items added yet. Add a test below.\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    rows.map((row, index) => (\r\n                      <tr\r\n                        key={index}\r\n                        style={{\r\n                          backgroundColor: row.selected\r\n                            ? isDarkMode\r\n                              ? \"#003366\" // Dark blue for dark mode\r\n                              : \"#d0ebff\" // Light blue for light mode\r\n                            : \"transparent\",\r\n                        }}\r\n                        className={row.selected ? styles.selectedRow : \"\"}\r\n                        onClick={(e) => {\r\n                          e.stopPropagation(); // Prevent window click handler\r\n                          toggleRowSelection(index);\r\n                        }}\r\n                      >\r\n                        <td>{row.sn}</td>\r\n                        <td>{row.test}</td>\r\n                        <td>{row.satellite}</td>\r\n                        <td>{row.dateTime}</td>\r\n                        <td>{row.loggedBy}</td>\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n              <div className={styles.form}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Test\"\r\n                  value={formData.test}\r\n                  onChange={(e) => setFormData({ ...formData, test: e.target.value })}\r\n                  onClick={(e) => e.stopPropagation()} // Prevent dragging when interacting with inputs\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Satellite\"\r\n                  value={formData.satellite}\r\n                  onChange={(e) => setFormData({ ...formData, satellite: e.target.value })}\r\n                  onClick={(e) => e.stopPropagation()}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Logged by\"\r\n                  value={formData.loggedBy}\r\n                  onChange={(e) => setFormData({ ...formData, loggedBy: e.target.value })}\r\n                  onClick={(e) => e.stopPropagation()}\r\n                />\r\n                <button \r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    addItem();\r\n                  }} \r\n                  className={styles.addButton}\r\n                >\r\n                  +\r\n                </button>\r\n              </div>\r\n              <div className={styles.actions}>\r\n                <button \r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    deleteItem();\r\n                  }} \r\n                  className={styles.deleteButton}\r\n                  disabled={!rows.some(row => row.selected)}\r\n                >\r\n                  Delete Item\r\n                </button>\r\n                <button \r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    clearList();\r\n                  }} \r\n                  className={styles.clearButton}\r\n                  disabled={rows.length === 0}\r\n                >\r\n                  Clear List\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Draggable>\r\n    </div>,\r\n    portalElement\r\n  );\r\n};\r\n\r\nexport default ToTestList;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1030, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/ServerWindow/ServerWindow.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"buttonContainer\": \"ServerWindow-module__wfqmlq__buttonContainer\",\n  \"closeButton\": \"ServerWindow-module__wfqmlq__closeButton\",\n  \"connectButton\": \"ServerWindow-module__wfqmlq__connectButton\",\n  \"drag-handle\": \"ServerWindow-module__wfqmlq__drag-handle\",\n  \"form\": \"ServerWindow-module__wfqmlq__form\",\n  \"header\": \"ServerWindow-module__wfqmlq__header\",\n  \"input\": \"ServerWindow-module__wfqmlq__input\",\n  \"logWindow\": \"ServerWindow-module__wfqmlq__logWindow\",\n  \"logs\": \"ServerWindow-module__wfqmlq__logs\",\n  \"minimizeButton\": \"ServerWindow-module__wfqmlq__minimizeButton\",\n  \"popup\": \"ServerWindow-module__wfqmlq__popup\",\n  \"popup-show\": \"ServerWindow-module__wfqmlq__popup-show\",\n  \"pulse\": \"ServerWindow-module__wfqmlq__pulse\",\n  \"realBadge\": \"ServerWindow-module__wfqmlq__realBadge\",\n  \"simulationBadge\": \"ServerWindow-module__wfqmlq__simulationBadge\",\n  \"statusBadge\": \"ServerWindow-module__wfqmlq__statusBadge\",\n  \"statusIndicator\": \"ServerWindow-module__wfqmlq__statusIndicator\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 1055, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ServerWindow/ServerWindow.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./ServerWindow.module.css\";\r\nimport Draggable from \"react-draggable\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { WindowName } from \"@/types/types\";\r\nimport { testWebSocketConnection } from \"@/utils/mccUtils\";\r\n\r\ninterface ServerWindowProps {\r\n  onClose: () => void;\r\n  onMinimize: (status: string) => void; // Prop for minimization\r\n  zIndex: number; \r\n  onMouseDown: () => void; \r\n  bringWindowToFront: (windowName: WindowName) => void;\r\n  windowZIndexes: { [key: string]: number };\r\n  zIndexCounter: number;\r\n}\r\n\r\nconst ServerWindow: React.FC<ServerWindowProps> = ({ \r\n  zIndex, \r\n  onMouseDown, \r\n  onClose,\r\n  onMinimize,\r\n  bringWindowToFront, \r\n  windowZIndexes, \r\n  zIndexCounter \r\n}) => {\r\n  const [serverAddress, setServerAddress] = useState<string>(\"\");\r\n  const [serverPort, setServerPort] = useState<string>(\"9377\"); // Default MCC port\r\n  const [status, setStatus] = useState<string>(\"Disconnected\");\r\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\r\n  const [connectFailed, setConnectFailed] = useState<boolean>(false);\r\n  const [logs, setLogs] = useState<{ timestamp: string; message: string }[]>([]);\r\n  const [wsConnectionVerified, setWsConnectionVerified] = useState<boolean>(false);\r\n  const [shouldAutoMinimize, setShouldAutoMinimize] = useState<boolean>(false);\r\n\r\n  const logsEndRef = useRef<HTMLDivElement | null>(null);\r\n  const navigate = useNavigate();\r\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  // Create portal element once on mount\r\n  const [portalElement] = useState(() => {\r\n    const existingPortal = document.getElementById(\"serverWindow-root\");\r\n    if (existingPortal) {\r\n      return existingPortal;\r\n    }\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"serverWindow-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n  // Initialize with previous values from localStorage if available\r\n  useEffect(() => {\r\n    try {\r\n      const socketInfo = localStorage.getItem('mccSocketInfo');\r\n      if (socketInfo) {\r\n        const info = JSON.parse(socketInfo);\r\n        if (info.address) {\r\n          const parts = info.address.split(':');\r\n          if (parts.length === 2) {\r\n            setServerAddress(parts[0]);\r\n            setServerPort(parts[1]);\r\n          }\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error loading saved server info:\", e);\r\n    }\r\n  }, []);\r\n\r\n  // Important: Store position in sessionStorage to maintain it across renders\r\n  const savedPosition = sessionStorage.getItem('serverWindowPosition');\r\n  const defaultPosition = savedPosition ? JSON.parse(savedPosition) : {\r\n    x: (window.innerWidth - 600) / 2, \r\n    y: (window.innerHeight - 500) / 2\r\n  };\r\n\r\n  const [position, setPosition] = useState(defaultPosition);\r\n  const nodeRef = useRef<HTMLDivElement>(null!);\r\n  \r\n  // Auto-scroll logs to bottom when new logs are added\r\n  useEffect(() => {\r\n    if (logsEndRef.current) {\r\n      logsEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [logs]);\r\n\r\n  // Auto-minimize after successful connection and navigation\r\n  useEffect(() => {\r\n    // If shouldAutoMinimize flag is set, minimize the window\r\n    if (shouldAutoMinimize) {\r\n      console.log(\"🔄 Auto-minimizing ServerWindow after navigation\");\r\n      onMinimize(status);\r\n      setShouldAutoMinimize(false);\r\n    }\r\n  }, [shouldAutoMinimize, onMinimize, status]);\r\n\r\n  const appendLog = (message: string) => {\r\n    const timestamp = new Date().toLocaleString();\r\n    setLogs((prevLogs) => [...prevLogs, { timestamp, message }]);\r\n  };\r\n\r\n  // When the window is clicked, bring it to front\r\n  const handleWindowClick = () => {\r\n    console.log(`Clicked ServerWindow, bringing to front`);\r\n    onMouseDown();\r\n  };\r\n\r\n  // Handle minimize button click - call the parent component's onMinimize function\r\n  const handleMinimize = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    console.log(\"Minimizing ServerWindow, current status:\", status);\r\n    onMinimize(status);\r\n  };\r\n\r\n  // Directly test WebSocket connectivity\r\n  const testDirectWebSocketConnection = async (address: string, port: string): Promise<boolean> => {\r\n    try {\r\n      appendLog(`Testing direct WebSocket connection to ws://${address}:${port}...`);\r\n      const isConnected = await testWebSocketConnection(`${address}:${port}`);\r\n      \r\n      if (isConnected) {\r\n        appendLog(\"✅ Direct WebSocket connection successful!\");\r\n        appendLog(\"✅ REAL CONNECTION MODE is possible\");\r\n        setWsConnectionVerified(true);\r\n      } else {\r\n        appendLog(\"❌ Direct WebSocket connection failed.\");\r\n        appendLog(\"⚠️ This indicates SIMULATION MODE will likely be used\");\r\n      }\r\n      \r\n      return isConnected;\r\n    } catch (error) {\r\n      appendLog(`WebSocket test error: ${error instanceof Error ? error.message : String(error)}`);\r\n      appendLog(\"⚠️ Due to test error, SIMULATION MODE will be used\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleConnect = async () => {\r\n    console.log(\"Connect button pressed\");\r\n    \r\n    // Reset status\r\n    setConnectFailed(false);\r\n    setWsConnectionVerified(false);\r\n    \r\n    // Trim any whitespace from inputs\r\n    const trimmedAddress = serverAddress.trim();\r\n    const trimmedPort = serverPort.trim();\r\n    \r\n    if (!trimmedAddress || !trimmedPort) {\r\n      alert(\"Please provide both Server Address and Port.\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log(\"Starting connection process\");\r\n      setIsConnecting(true);\r\n      setStatus(\"Connecting...\");\r\n      appendLog(`Attempting to connect to MCC server at ${trimmedAddress}:${trimmedPort} via proxy...`);\r\n      \r\n      // First try to check if the proxy server is running\r\n      try {\r\n        appendLog(\"🔍 Checking if proxy server is running...\");\r\n        \r\n        const proxyCheck = await fetch(\"http://localhost:8080\", {\r\n          method: 'GET',\r\n          mode: 'cors',\r\n          headers: {\r\n            'Accept': 'text/plain'\r\n          }\r\n        });\r\n        \r\n        if (proxyCheck.ok) {\r\n          appendLog(\"✅ Proxy server is running and accessible\");\r\n        } else {\r\n          appendLog(`❌ Proxy server returned status ${proxyCheck.status}`);\r\n          appendLog(\"ℹ️ Please start the proxy server using 'node mcc-proxy.js'\");\r\n          setStatus(\"Proxy Unavailable\");\r\n          setConnectFailed(true);\r\n          setIsConnecting(false);\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Proxy check error:\", error);\r\n        appendLog(\"❌ Proxy server is not running or not reachable\");\r\n        appendLog(\"ℹ️ Please start the proxy server using 'node mcc-proxy.js'\");\r\n        setStatus(\"Proxy Unavailable\");\r\n        setConnectFailed(true);\r\n        setIsConnecting(false);\r\n        return;\r\n      }\r\n      \r\n      // Perform WebSocket connectivity test - this helps determine if we can use real mode\r\n      const wsConnected = await testDirectWebSocketConnection(trimmedAddress, trimmedPort);\r\n      \r\n      // Try to connect via the proxy and backend\r\n      console.log(`Sending connection request to ${backendUrl}/connect_mcc`);\r\n      \r\n      const response = await fetch(`${backendUrl}/connect_mcc`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          server_address: trimmedAddress,\r\n          server_port: trimmedPort,\r\n          server_id: \"mcc_client\",\r\n          force_real: wsConnected, // Only force real mode if websocket test succeeded\r\n          use_proxy: true\r\n        }),\r\n      });\r\n      \r\n      // Process the response\r\n      let result;\r\n      let errorText = \"\";\r\n      \r\n      try {\r\n        // Try to parse the response as JSON\r\n        result = await response.json();\r\n        console.log(\"Backend response:\", result);\r\n      } catch (error) {\r\n        // If parsing fails, get the raw text\r\n        errorText = await response.text();\r\n        console.error(\"Non-JSON response:\", errorText);\r\n        appendLog(`HTTP error! Status: ${response.status} - ${errorText}`);\r\n        setStatus(\"Connection Error\");\r\n        setConnectFailed(true);\r\n        setIsConnecting(false);\r\n        return;\r\n      }\r\n      \r\n      console.log(\"Successfully parsed response:\", result);\r\n      \r\n      // Handle different response statuses\r\n      if (result.status === \"success\") {\r\n        console.log(\"Connection successful, handling success case\");\r\n        // Verify if this is a fully verified connection or just a simulated success\r\n        if (result.verified === true) {\r\n          setStatus(\"Connected\");\r\n          appendLog(`✅ ${result.message}`);\r\n          if (wsConnected) {\r\n            appendLog(\"✅ WebSocket and backend connection tests both successful!\");\r\n            appendLog(\"✅ USING REAL CONNECTION MODE - Test results will use real data\");\r\n          } else {\r\n            appendLog(\"⚠️ Backend reports success but WebSocket test failed.\");\r\n            appendLog(\"🔄 ENTERING SIMULATION MODE - Test results will be simulated\");\r\n          }\r\n        } else if (result.simulation === true) {\r\n          setStatus(\"Connected (Simulation)\");\r\n          appendLog(`ℹ️ ${result.message}`);\r\n          appendLog(\"🔄 SIMULATION MODE ACTIVE - All test results will be generated\");\r\n          appendLog(\"ℹ️ No real hardware communication will occur\");\r\n        } else {\r\n          setStatus(\"Connected (Unverified)\");\r\n          appendLog(`⚠️ ${result.message}`);\r\n          appendLog(\"🔄 SIMULATION MODE ACTIVE (Unverified Connection)\");\r\n          appendLog(\"⚠️ Connection reported as successful but not fully verified.\");\r\n        }\r\n      \r\n        // Save the socket connection info in localStorage\r\n        const mccSocketInfo = {\r\n          isReal: !result.simulation && (result.verified || wsConnected),\r\n          address: `${trimmedAddress}:${trimmedPort}`,\r\n          simulation: result.simulation || !wsConnected,\r\n          verified: result.verified || wsConnected\r\n        };\r\n        \r\n        // Store in localStorage so it persists across navigation\r\n        localStorage.setItem('mccSocketInfo', JSON.stringify(mccSocketInfo));\r\n        appendLog(\"📦 Connection information saved for use in the application.\");\r\n        \r\n        // Add explicit simulation status indicator\r\n        if (mccSocketInfo.simulation) {\r\n          appendLog(\"⚠️ SIMULATION MODE will be used for all hardware operations\");\r\n        } else {\r\n          appendLog(\"✅ REAL MODE will be used for hardware operations\");\r\n        }\r\n        \r\n        // Check if ToTestList is visible from sessionStorage\r\n        const savedVisibility = sessionStorage.getItem('windowVisibility');\r\n        let windowVisibility = { \r\n          ToTestList: false,\r\n          ServerWindow: true, // Keep ServerWindow visible\r\n          ThreeDModelWindow: false\r\n        };\r\n        \r\n        if (savedVisibility) {\r\n          try {\r\n            const parsedVisibility = JSON.parse(savedVisibility);\r\n            windowVisibility.ToTestList = parsedVisibility.ToTestList || false;\r\n            windowVisibility.ThreeDModelWindow = parsedVisibility.ThreeDModelWindow || false;\r\n          } catch (e) {\r\n            console.error(\"Error parsing window visibility:\", e);\r\n          }\r\n        }\r\n        \r\n        // Store window state in sessionStorage for persistence with ServerWindow visible\r\n        sessionStorage.setItem('windowVisibility', JSON.stringify(windowVisibility));\r\n        console.log(\"Saved window state before navigation:\", windowVisibility);\r\n        \r\n        // Navigate to main screen\r\n        appendLog(\"🚀 Navigating to main application screen...\");\r\n        console.log(\"📱 About to navigate to /main\");\r\n        \r\n        // Set flag to auto-minimize after navigation\r\n        setShouldAutoMinimize(true);\r\n        \r\n        // Add a small delay to ensure all state updates complete\r\n        setTimeout(() => {\r\n          try {\r\n            navigate(\"/main\");\r\n            console.log(\"📱 Navigation command executed\");\r\n          } catch (error) {\r\n            console.error(\"Navigation error:\", error);\r\n            appendLog(`❌ Error navigating to main screen: ${error}`);\r\n          }\r\n        }, 500);\r\n      } else if (result.status === \"partial\") {\r\n        setStatus(\"Partial Connection\");\r\n        appendLog(`⚠️ ${result.message}`);\r\n        appendLog(\"🔄 SIMULATION MODE ACTIVE - Partial connection detected\");\r\n        appendLog(\"⚠️ The application will use simulation mode for all features.\");\r\n        setConnectFailed(true);\r\n      } else {\r\n        setStatus(\"Failed to Connect\");\r\n        appendLog(`❌ ${result.message}`);\r\n        appendLog(\"🔄 SIMULATION MODE will be used if you continue to main screen\");\r\n        setConnectFailed(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error connecting to MCC:\", error);\r\n      setStatus(\"Connection Error\");\r\n      appendLog(`❌ Connection error: ${error instanceof Error ? error.message : String(error)}`);\r\n      appendLog(\"🔄 SIMULATION MODE will be used if you continue to main screen\");\r\n      setConnectFailed(true);\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      const isDark = document.documentElement.classList.contains(\"dark\");\r\n      setIsDarkMode(isDark);\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Set up observer for theme changes\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        if (mutation.attributeName === \"class\") {\r\n          checkDarkMode();\r\n        }\r\n      });\r\n    });\r\n    \r\n    observer.observe(document.documentElement, {\r\n      attributes: true,\r\n      attributeFilter: [\"class\"]\r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  // Get the effective z-index value\r\n  const effectiveZIndex = windowZIndexes[\"ServerWindow\"] || zIndex;\r\n  \r\n  // Save position to sessionStorage whenever it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('serverWindowPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  // Get status color based on connection state\r\n  const getStatusColor = () => {\r\n    if (status === 'Connected') return '#10b981'; // Green\r\n    if (status === 'Connected (Simulation)') return '#f59e0b'; // Amber\r\n    if (status === 'Connecting...') return '#3b82f6'; // Blue\r\n    if (status.includes('Failed') || status.includes('Error') || status === 'Server Unreachable') {\r\n      return '#ef4444'; // Red\r\n    }\r\n    return '#6b7280'; // Gray\r\n  };\r\n\r\n  return createPortal(\r\n    <Draggable\r\n      nodeRef={nodeRef}\r\n      handle=\".drag-handle\"\r\n      position={position}\r\n      onStop={(e, d) => {\r\n        console.log(`ServerWindow moved to: x=${d.x}, y=${d.y}`);\r\n        setPosition({ x: d.x, y: d.y });\r\n      }}\r\n    >\r\n      <div \r\n        ref={nodeRef}\r\n        className={styles.popup}\r\n        data-window=\"ServerWindow\"\r\n        id=\"serverWindow-wrapper\"\r\n        style={{ \r\n          position: \"fixed\",\r\n          zIndex: effectiveZIndex,\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n          color: isDarkMode ? \"#fff\" : \"#000\",\r\n          border: `1px solid ${isDarkMode ? \"#333\" : \"#ddd\"}`,\r\n          borderRadius: \"10px\",\r\n          boxShadow: \"0 4px 20px rgba(0, 0, 0, 0.2)\"\r\n        }}\r\n        onClick={handleWindowClick}\r\n      >\r\n        <div className={`${styles.header} drag-handle`}>\r\n          <h2>Server Connection</h2>\r\n          <div className={styles.buttonContainer}>\r\n            <button\r\n              onClick={handleMinimize}\r\n              className={styles.minimizeButton}\r\n              title=\"Minimize\"\r\n            >\r\n              —\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                onClose();\r\n              }}\r\n              className={styles.closeButton}\r\n              title=\"Close\"\r\n            >\r\n              ✖\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className={styles.form}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Server Address\"\r\n            value={serverAddress}\r\n            onChange={(e) => setServerAddress(e.target.value)}\r\n            className={styles.input}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Port\"\r\n            value={serverPort}\r\n            onChange={(e) => setServerPort(e.target.value)}\r\n            className={styles.input}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          <button \r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleConnect();\r\n            }} \r\n            className={styles.connectButton}\r\n            disabled={isConnecting}\r\n            style={{ \r\n              backgroundColor: isConnecting ? '#9ca3af' : connectFailed ? '#ef4444' : '#00bcd4',\r\n              cursor: isConnecting ? 'wait' : 'pointer'\r\n            }}\r\n          >\r\n            {isConnecting ? \"Connecting...\" : connectFailed ? \"Retry\" : \"Connect\"}\r\n          </button>\r\n        </div>\r\n        \r\n        <div style={{ \r\n          padding: '8px 0',\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center'\r\n        }}>\r\n          <div className={styles.statusIndicator}>\r\n            Status: \r\n            <span style={{ \r\n              color: getStatusColor(),\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: '8px'\r\n            }}>\r\n              {status}\r\n              \r\n              {/* Pulse animation for \"Connecting...\" state */}\r\n              {status === 'Connecting...' && (\r\n                <span className={styles.pulse}>⟲</span>\r\n              )}\r\n            </span>\r\n            \r\n            {/* Show simulation badge when appropriate */}\r\n            {(status.includes('Simulation') || \r\n              (status === 'Connected' && serverAddress.toLowerCase() === 'localhost') ||\r\n              status === 'Partial Connection') && (\r\n              <span className={`${styles.statusBadge} ${styles.simulationBadge}`}>\r\n                SIMULATION MODE\r\n              </span>\r\n            )}\r\n            \r\n            {/* Only show real mode badge when verified and not localhost */}\r\n            {status === 'Connected' && \r\n              wsConnectionVerified && \r\n              serverAddress.toLowerCase() !== 'localhost' && (\r\n              <span className={`${styles.statusBadge} ${styles.realBadge}`}>\r\n                REAL CONNECTION\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {wsConnectionVerified && (\r\n            <span style={{\r\n              backgroundColor: '#10b981', \r\n              color: 'white', \r\n              padding: '2px 8px', \r\n              borderRadius: '9999px', \r\n              fontSize: '12px'\r\n            }}>\r\n              WebSocket Verified\r\n            </span>\r\n          )}\r\n        </div>\r\n        \r\n        <div className={styles.logs}>\r\n          <h3>Connection Logs</h3>\r\n          <div\r\n            className={styles.logWindow}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#2a2a2a\" : \"#f5f5f5\",\r\n              maxHeight: '180px',\r\n              overflowY: 'auto'\r\n            }}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            {logs.map((log, index) => (\r\n              <div key={index} style={{ display: \"flex\", alignItems: \"flex-start\", marginBottom: '4px' }}>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    minWidth: \"150px\",\r\n                    marginRight: \"8px\",\r\n                    textAlign: \"right\",\r\n                    fontSize: '12px',\r\n                    color: isDarkMode ? '#9ca3af' : '#6b7280'\r\n                  }}\r\n                >\r\n                  [{log.timestamp}]\r\n                </span>\r\n                <span style={{ \r\n                  flex: 1,\r\n                  color: log.message.includes('✅') ? '#10b981' :\r\n                          log.message.includes('❌') ? '#ef4444' :\r\n                          log.message.includes('⚠️') ? '#f59e0b' :\r\n                          log.message.includes('SIMULATION MODE') ? '#ff9800' :\r\n                          log.message.includes('REAL MODE') ? '#4caf50' :\r\n                          isDarkMode ? '#f3f4f6' : '#1f2937',\r\n                  fontWeight: log.message.includes('SIMULATION MODE') || log.message.includes('REAL MODE') ? 'bold' : 'normal'\r\n                }}>\r\n                  {log.message}\r\n                </span>\r\n              </div>\r\n            ))}\r\n            <div ref={logsEndRef}></div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Tips and information */}\r\n        <div style={{ \r\n          marginTop: '10px', \r\n          padding: '10px', \r\n          backgroundColor: isDarkMode ? '#374151' : '#f0f9ff',\r\n          borderRadius: '6px',\r\n          fontSize: '12px'\r\n        }}>\r\n          <p style={{ margin: '0 0 4px 0', fontWeight: 'bold' }}>Connection Notes:</p>\r\n          <ul style={{ margin: '0', paddingLeft: '20px' }}>\r\n            <li>Ensure the MCC server is running at the specified address/port</li>\r\n            <li>Verify MCC Proxy <code>mcc-proxy.js</code> is running</li>\r\n            <li>Simulation mode will be used if there is no connection</li>\r\n            <li>Minimise this window to keep the connection while working</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Draggable>,\r\n    portalElement\r\n  );\r\n}\r\n\r\nexport default ServerWindow;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAYA,MAAM,eAA4C,CAAC,EACjD,MAAM,EACN,WAAW,EACX,OAAO,EACP,UAAU,EACV,kBAAkB,EAClB,cAAc,EACd,aAAa,EACd;IACC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,SAAS,mBAAmB;IACjF,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAC1D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAC5D,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA4C,EAAE;IAC7E,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAC1E,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAEtE,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IACjD,MAAM,WAAW,CAAA,GAAA,uJAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,aAAa,QAAQ,GAAG,CAAC,qBAAqB,IAAI;IAExD,sCAAsC;IACtC,MAAM,CAAC,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,MAAM,iBAAiB,SAAS,cAAc,CAAC;QAC/C,IAAI,gBAAgB;YAClB,OAAO;QACT;QACA,MAAM,UAAU,SAAS,aAAa,CAAC;QACvC,QAAQ,EAAE,GAAG;QACb,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,OAAO;IACT;IAEA,iEAAiE;IACjE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI;YACF,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACd,MAAM,OAAO,KAAK,KAAK,CAAC;gBACxB,IAAI,KAAK,OAAO,EAAE;oBAChB,MAAM,QAAQ,KAAK,OAAO,CAAC,KAAK,CAAC;oBACjC,IAAI,MAAM,MAAM,KAAK,GAAG;wBACtB,iBAAiB,KAAK,CAAC,EAAE;wBACzB,cAAc,KAAK,CAAC,EAAE;oBACxB;gBACF;YACF;QACF,EAAE,OAAO,GAAG;YACV,QAAQ,KAAK,CAAC,oCAAoC;QACpD;IACF,GAAG,EAAE;IAEL,4EAA4E;IAC5E,MAAM,gBAAgB,eAAe,OAAO,CAAC;IAC7C,MAAM,kBAAkB,gBAAgB,KAAK,KAAK,CAAC,iBAAiB;QAClE,GAAG,CAAC,OAAO,UAAU,GAAG,GAAG,IAAI;QAC/B,GAAG,CAAC,OAAO,WAAW,GAAG,GAAG,IAAI;IAClC;IAEA,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAEvC,qDAAqD;IACrD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,WAAW,OAAO,EAAE;YACtB,WAAW,OAAO,CAAC,cAAc,CAAC;gBAAE,UAAU;YAAS;QACzD;IACF,GAAG;QAAC;KAAK;IAET,2DAA2D;IAC3D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,yDAAyD;QACzD,IAAI,oBAAoB;YACtB,QAAQ,GAAG,CAAC;YACZ,WAAW;YACX,sBAAsB;QACxB;IACF,GAAG;QAAC;QAAoB;QAAY;KAAO;IAE3C,MAAM,YAAY,CAAC;QACjB,MAAM,YAAY,IAAI,OAAO,cAAc;QAC3C,QAAQ,CAAC,WAAa;mBAAI;gBAAU;oBAAE;oBAAW;gBAAQ;aAAE;IAC7D;IAEA,gDAAgD;IAChD,MAAM,oBAAoB;QACxB,QAAQ,GAAG,CAAC,CAAC,uCAAuC,CAAC;QACrD;IACF;IAEA,iFAAiF;IACjF,MAAM,iBAAiB,CAAC;QACtB,EAAE,eAAe;QACjB,EAAE,cAAc;QAChB,QAAQ,GAAG,CAAC,4CAA4C;QACxD,WAAW;IACb;IAEA,uCAAuC;IACvC,MAAM,gCAAgC,OAAO,SAAiB;QAC5D,IAAI;YACF,UAAU,CAAC,4CAA4C,EAAE,QAAQ,CAAC,EAAE,KAAK,GAAG,CAAC;YAC7E,MAAM,cAAc,MAAM,CAAA,GAAA,wHAAA,CAAA,0BAAuB,AAAD,EAAE,GAAG,QAAQ,CAAC,EAAE,MAAM;YAEtE,IAAI,aAAa;gBACf,UAAU;gBACV,UAAU;gBACV,wBAAwB;YAC1B,OAAO;gBACL,UAAU;gBACV,UAAU;YACZ;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,UAAU,CAAC,sBAAsB,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO,QAAQ;YAC3F,UAAU;YACV,OAAO;QACT;IACF;IAEA,MAAM,gBAAgB;QACpB,QAAQ,GAAG,CAAC;QAEZ,eAAe;QACf,iBAAiB;QACjB,wBAAwB;QAExB,kCAAkC;QAClC,MAAM,iBAAiB,cAAc,IAAI;QACzC,MAAM,cAAc,WAAW,IAAI;QAEnC,IAAI,CAAC,kBAAkB,CAAC,aAAa;YACnC,MAAM;YACN;QACF;QAEA,IAAI;YACF,QAAQ,GAAG,CAAC;YACZ,gBAAgB;YAChB,UAAU;YACV,UAAU,CAAC,uCAAuC,EAAE,eAAe,CAAC,EAAE,YAAY,aAAa,CAAC;YAEhG,oDAAoD;YACpD,IAAI;gBACF,UAAU;gBAEV,MAAM,aAAa,MAAM,MAAM,yBAAyB;oBACtD,QAAQ;oBACR,MAAM;oBACN,SAAS;wBACP,UAAU;oBACZ;gBACF;gBAEA,IAAI,WAAW,EAAE,EAAE;oBACjB,UAAU;gBACZ,OAAO;oBACL,UAAU,CAAC,+BAA+B,EAAE,WAAW,MAAM,EAAE;oBAC/D,UAAU;oBACV,UAAU;oBACV,iBAAiB;oBACjB,gBAAgB;oBAChB;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,sBAAsB;gBACpC,UAAU;gBACV,UAAU;gBACV,UAAU;gBACV,iBAAiB;gBACjB,gBAAgB;gBAChB;YACF;YAEA,qFAAqF;YACrF,MAAM,cAAc,MAAM,8BAA8B,gBAAgB;YAExE,2CAA2C;YAC3C,QAAQ,GAAG,CAAC,CAAC,8BAA8B,EAAE,WAAW,YAAY,CAAC;YAErE,MAAM,WAAW,MAAM,MAAM,GAAG,WAAW,YAAY,CAAC,EAAE;gBACxD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACnB,gBAAgB;oBAChB,aAAa;oBACb,WAAW;oBACX,YAAY;oBACZ,WAAW;gBACb;YACF;YAEA,uBAAuB;YACvB,IAAI;YACJ,IAAI,YAAY;YAEhB,IAAI;gBACF,oCAAoC;gBACpC,SAAS,MAAM,SAAS,IAAI;gBAC5B,QAAQ,GAAG,CAAC,qBAAqB;YACnC,EAAE,OAAO,OAAO;gBACd,qCAAqC;gBACrC,YAAY,MAAM,SAAS,IAAI;gBAC/B,QAAQ,KAAK,CAAC,sBAAsB;gBACpC,UAAU,CAAC,oBAAoB,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,WAAW;gBACjE,UAAU;gBACV,iBAAiB;gBACjB,gBAAgB;gBAChB;YACF;YAEA,QAAQ,GAAG,CAAC,iCAAiC;YAE7C,qCAAqC;YACrC,IAAI,OAAO,MAAM,KAAK,WAAW;gBAC/B,QAAQ,GAAG,CAAC;gBACZ,4EAA4E;gBAC5E,IAAI,OAAO,QAAQ,KAAK,MAAM;oBAC5B,UAAU;oBACV,UAAU,CAAC,EAAE,EAAE,OAAO,OAAO,EAAE;oBAC/B,IAAI,aAAa;wBACf,UAAU;wBACV,UAAU;oBACZ,OAAO;wBACL,UAAU;wBACV,UAAU;oBACZ;gBACF,OAAO,IAAI,OAAO,UAAU,KAAK,MAAM;oBACrC,UAAU;oBACV,UAAU,CAAC,GAAG,EAAE,OAAO,OAAO,EAAE;oBAChC,UAAU;oBACV,UAAU;gBACZ,OAAO;oBACL,UAAU;oBACV,UAAU,CAAC,GAAG,EAAE,OAAO,OAAO,EAAE;oBAChC,UAAU;oBACV,UAAU;gBACZ;gBAEA,kDAAkD;gBAClD,MAAM,gBAAgB;oBACpB,QAAQ,CAAC,OAAO,UAAU,IAAI,CAAC,OAAO,QAAQ,IAAI,WAAW;oBAC7D,SAAS,GAAG,eAAe,CAAC,EAAE,aAAa;oBAC3C,YAAY,OAAO,UAAU,IAAI,CAAC;oBAClC,UAAU,OAAO,QAAQ,IAAI;gBAC/B;gBAEA,yDAAyD;gBACzD,aAAa,OAAO,CAAC,iBAAiB,KAAK,SAAS,CAAC;gBACrD,UAAU;gBAEV,2CAA2C;gBAC3C,IAAI,cAAc,UAAU,EAAE;oBAC5B,UAAU;gBACZ,OAAO;oBACL,UAAU;gBACZ;gBAEA,qDAAqD;gBACrD,MAAM,kBAAkB,eAAe,OAAO,CAAC;gBAC/C,IAAI,mBAAmB;oBACrB,YAAY;oBACZ,cAAc;oBACd,mBAAmB;gBACrB;gBAEA,IAAI,iBAAiB;oBACnB,IAAI;wBACF,MAAM,mBAAmB,KAAK,KAAK,CAAC;wBACpC,iBAAiB,UAAU,GAAG,iBAAiB,UAAU,IAAI;wBAC7D,iBAAiB,iBAAiB,GAAG,iBAAiB,iBAAiB,IAAI;oBAC7E,EAAE,OAAO,GAAG;wBACV,QAAQ,KAAK,CAAC,oCAAoC;oBACpD;gBACF;gBAEA,iFAAiF;gBACjF,eAAe,OAAO,CAAC,oBAAoB,KAAK,SAAS,CAAC;gBAC1D,QAAQ,GAAG,CAAC,yCAAyC;gBAErD,0BAA0B;gBAC1B,UAAU;gBACV,QAAQ,GAAG,CAAC;gBAEZ,6CAA6C;gBAC7C,sBAAsB;gBAEtB,yDAAyD;gBACzD,WAAW;oBACT,IAAI;wBACF,SAAS;wBACT,QAAQ,GAAG,CAAC;oBACd,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,qBAAqB;wBACnC,UAAU,CAAC,mCAAmC,EAAE,OAAO;oBACzD;gBACF,GAAG;YACL,OAAO,IAAI,OAAO,MAAM,KAAK,WAAW;gBACtC,UAAU;gBACV,UAAU,CAAC,GAAG,EAAE,OAAO,OAAO,EAAE;gBAChC,UAAU;gBACV,UAAU;gBACV,iBAAiB;YACnB,OAAO;gBACL,UAAU;gBACV,UAAU,CAAC,EAAE,EAAE,OAAO,OAAO,EAAE;gBAC/B,UAAU;gBACV,iBAAiB;YACnB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,UAAU;YACV,UAAU,CAAC,oBAAoB,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO,QAAQ;YACzF,UAAU;YACV,iBAAiB;QACnB,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,sBAAsB;IACtB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,MAAM,SAAS,SAAS,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;YAC3D,cAAc;QAChB;QAEA,gBAAgB;QAChB;QAEA,oCAAoC;QACpC,MAAM,WAAW,IAAI,iBAAiB,CAAC;YACrC,UAAU,OAAO,CAAC,CAAC;gBACjB,IAAI,SAAS,aAAa,KAAK,SAAS;oBACtC;gBACF;YACF;QACF;QAEA,SAAS,OAAO,CAAC,SAAS,eAAe,EAAE;YACzC,YAAY;YACZ,iBAAiB;gBAAC;aAAQ;QAC5B;QAEA,OAAO,IAAM,SAAS,UAAU;IAClC,GAAG,EAAE;IAEL,kCAAkC;IAClC,MAAM,kBAAkB,cAAc,CAAC,eAAe,IAAI;IAE1D,sDAAsD;IACtD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe,OAAO,CAAC,wBAAwB,KAAK,SAAS,CAAC;IAChE,GAAG;QAAC;KAAS;IAEb,6CAA6C;IAC7C,MAAM,iBAAiB;QACrB,IAAI,WAAW,aAAa,OAAO,WAAW,QAAQ;QACtD,IAAI,WAAW,0BAA0B,OAAO,WAAW,QAAQ;QACnE,IAAI,WAAW,iBAAiB,OAAO,WAAW,OAAO;QACzD,IAAI,OAAO,QAAQ,CAAC,aAAa,OAAO,QAAQ,CAAC,YAAY,WAAW,sBAAsB;YAC5F,OAAO,WAAW,MAAM;QAC1B;QACA,OAAO,WAAW,OAAO;IAC3B;IAEA,qBAAO,CAAA,GAAA,4MAAA,CAAA,eAAY,AAAD,gBAChB,8OAAC,yJAAA,CAAA,UAAS;QACR,SAAS;QACT,QAAO;QACP,UAAU;QACV,QAAQ,CAAC,GAAG;YACV,QAAQ,GAAG,CAAC,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;YACvD,YAAY;gBAAE,GAAG,EAAE,CAAC;gBAAE,GAAG,EAAE,CAAC;YAAC;QAC/B;kBAEA,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,6JAAA,CAAA,UAAM,CAAC,KAAK;YACvB,eAAY;YACZ,IAAG;YACH,OAAO;gBACL,UAAU;gBACV,QAAQ;gBACR,iBAAiB,aAAa,YAAY;gBAC1C,OAAO,aAAa,SAAS;gBAC7B,QAAQ,CAAC,UAAU,EAAE,aAAa,SAAS,QAAQ;gBACnD,cAAc;gBACd,WAAW;YACb;YACA,SAAS;;8BAET,8OAAC;oBAAI,WAAW,GAAG,6JAAA,CAAA,UAAM,CAAC,MAAM,CAAC,YAAY,CAAC;;sCAC5C,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;4BAAI,WAAW,6JAAA,CAAA,UAAM,CAAC,eAAe;;8CACpC,8OAAC;oCACC,SAAS;oCACT,WAAW,6JAAA,CAAA,UAAM,CAAC,cAAc;oCAChC,OAAM;8CACP;;;;;;8CAGD,8OAAC;oCACC,SAAS,CAAC;wCACR,EAAE,eAAe;wCACjB;oCACF;oCACA,WAAW,6JAAA,CAAA,UAAM,CAAC,WAAW;oCAC7B,OAAM;8CACP;;;;;;;;;;;;;;;;;;8BAKL,8OAAC;oBAAI,WAAW,6JAAA,CAAA,UAAM,CAAC,IAAI;;sCACzB,8OAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,iBAAiB,EAAE,MAAM,CAAC,KAAK;4BAChD,WAAW,6JAAA,CAAA,UAAM,CAAC,KAAK;4BACvB,SAAS,CAAC,IAAM,EAAE,eAAe;;;;;;sCAEnC,8OAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4BAC7C,WAAW,6JAAA,CAAA,UAAM,CAAC,KAAK;4BACvB,SAAS,CAAC,IAAM,EAAE,eAAe;;;;;;sCAEnC,8OAAC;4BACC,SAAS,CAAC;gCACR,EAAE,eAAe;gCACjB;4BACF;4BACA,WAAW,6JAAA,CAAA,UAAM,CAAC,aAAa;4BAC/B,UAAU;4BACV,OAAO;gCACL,iBAAiB,eAAe,YAAY,gBAAgB,YAAY;gCACxE,QAAQ,eAAe,SAAS;4BAClC;sCAEC,eAAe,kBAAkB,gBAAgB,UAAU;;;;;;;;;;;;8BAIhE,8OAAC;oBAAI,OAAO;wBACV,SAAS;wBACT,SAAS;wBACT,gBAAgB;wBAChB,YAAY;oBACd;;sCACE,8OAAC;4BAAI,WAAW,6JAAA,CAAA,UAAM,CAAC,eAAe;;gCAAE;8CAEtC,8OAAC;oCAAK,OAAO;wCACX,OAAO;wCACP,SAAS;wCACT,YAAY;wCACZ,KAAK;oCACP;;wCACG;wCAGA,WAAW,iCACV,8OAAC;4CAAK,WAAW,6JAAA,CAAA,UAAM,CAAC,KAAK;sDAAE;;;;;;;;;;;;gCAKlC,CAAC,OAAO,QAAQ,CAAC,iBACf,WAAW,eAAe,cAAc,WAAW,OAAO,eAC3D,WAAW,oBAAoB,mBAC/B,8OAAC;oCAAK,WAAW,GAAG,6JAAA,CAAA,UAAM,CAAC,WAAW,CAAC,CAAC,EAAE,6JAAA,CAAA,UAAM,CAAC,eAAe,EAAE;8CAAE;;;;;;gCAMrE,WAAW,eACV,wBACA,cAAc,WAAW,OAAO,6BAChC,8OAAC;oCAAK,WAAW,GAAG,6JAAA,CAAA,UAAM,CAAC,WAAW,CAAC,CAAC,EAAE,6JAAA,CAAA,UAAM,CAAC,SAAS,EAAE;8CAAE;;;;;;;;;;;;wBAMjE,sCACC,8OAAC;4BAAK,OAAO;gCACX,iBAAiB;gCACjB,OAAO;gCACP,SAAS;gCACT,cAAc;gCACd,UAAU;4BACZ;sCAAG;;;;;;;;;;;;8BAMP,8OAAC;oBAAI,WAAW,6JAAA,CAAA,UAAM,CAAC,IAAI;;sCACzB,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;4BACC,WAAW,6JAAA,CAAA,UAAM,CAAC,SAAS;4BAC3B,OAAO;gCACL,iBAAiB,aAAa,YAAY;gCAC1C,WAAW;gCACX,WAAW;4BACb;4BACA,SAAS,CAAC,IAAM,EAAE,eAAe;;gCAEhC,KAAK,GAAG,CAAC,CAAC,KAAK,sBACd,8OAAC;wCAAgB,OAAO;4CAAE,SAAS;4CAAQ,YAAY;4CAAc,cAAc;wCAAM;;0DACvF,8OAAC;gDACC,OAAO;oDACL,YAAY;oDACZ,UAAU;oDACV,aAAa;oDACb,WAAW;oDACX,UAAU;oDACV,OAAO,aAAa,YAAY;gDAClC;;oDACD;oDACG,IAAI,SAAS;oDAAC;;;;;;;0DAElB,8OAAC;gDAAK,OAAO;oDACX,MAAM;oDACN,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,YAC3B,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,YAC5B,IAAI,OAAO,CAAC,QAAQ,CAAC,QAAQ,YAC7B,IAAI,OAAO,CAAC,QAAQ,CAAC,qBAAqB,YAC1C,IAAI,OAAO,CAAC,QAAQ,CAAC,eAAe,YACpC,aAAa,YAAY;oDACjC,YAAY,IAAI,OAAO,CAAC,QAAQ,CAAC,sBAAsB,IAAI,OAAO,CAAC,QAAQ,CAAC,eAAe,SAAS;gDACtG;0DACG,IAAI,OAAO;;;;;;;uCAvBN;;;;;8CA2BZ,8OAAC;oCAAI,KAAK;;;;;;;;;;;;;;;;;;8BAKd,8OAAC;oBAAI,OAAO;wBACV,WAAW;wBACX,SAAS;wBACT,iBAAiB,aAAa,YAAY;wBAC1C,cAAc;wBACd,UAAU;oBACZ;;sCACE,8OAAC;4BAAE,OAAO;gCAAE,QAAQ;gCAAa,YAAY;4BAAO;sCAAG;;;;;;sCACvD,8OAAC;4BAAG,OAAO;gCAAE,QAAQ;gCAAK,aAAa;4BAAO;;8CAC5C,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;;wCAAG;sDAAiB,8OAAC;sDAAK;;;;;;wCAAmB;;;;;;;8CAC9C,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;8CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;cAKZ;AAEJ;uCAEe","debugId":null}},
    {"offset": {"line": 1785, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/ModelWindow/ThreeDModelWindow.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"closeButton\": \"ThreeDModelWindow-module__5BjfpW__closeButton\",\n  \"content\": \"ThreeDModelWindow-module__5BjfpW__content\",\n  \"dark\": \"ThreeDModelWindow-module__5BjfpW__dark\",\n  \"drag-handle\": \"ThreeDModelWindow-module__5BjfpW__drag-handle\",\n  \"header\": \"ThreeDModelWindow-module__5BjfpW__header\",\n  \"light\": \"ThreeDModelWindow-module__5BjfpW__light\",\n  \"paused\": \"ThreeDModelWindow-module__5BjfpW__paused\",\n  \"popup\": \"ThreeDModelWindow-module__5BjfpW__popup\",\n  \"popup-show\": \"ThreeDModelWindow-module__5BjfpW__popup-show\",\n  \"rotate-icon\": \"ThreeDModelWindow-module__5BjfpW__rotate-icon\",\n  \"spin\": \"ThreeDModelWindow-module__5BjfpW__spin\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 1804, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ModelWindow/ThreeDModelWindow.jsx"],"sourcesContent":["// ThreeDModelWindow.jsx - Performance-optimized for large models\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Draggable from \"react-draggable\";\r\nimport styles from \"./ThreeDModelWindow.module.css\";\r\n\r\n// Create a global variable outside the component to persist across renders\r\nlet globalPortalElement = null;\r\n\r\n// Component implementation with fixed visibility\r\nconst ThreeDModelWindow = (props) => {\r\n  const {\r\n    profileId,\r\n    zIndex,\r\n    onMouseDown,\r\n    onClose,\r\n    windowZIndexes,\r\n    showThreeDModelWindow,\r\n    zIndexCounter,\r\n    bringWindowToFront\r\n  } = props;\r\n  \r\n  // Refs\r\n  const portalRef = useRef(null);\r\n  const hasCalledOnMouseDownRef = useRef(false);\r\n  const threeInstanceRef = useRef(null);\r\n  const nodeRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const isInitializedRef = useRef(false);\r\n  const modelRef = useRef(null);\r\n  const threeRef = useRef(null);\r\n  const controlsRef = useRef(null);\r\n  const loaderRef = useRef(null);\r\n  const dracoLoaderRef = useRef(null); // For draco compression\r\n  const dataFetchedRef = useRef(false);\r\n  const lastProfileIdRef = useRef(null);\r\n  const portalCleanupDone = useRef(false);\r\n  const isAutoRotatingRef = useRef(true);\r\n  const resizeTimeoutRef = useRef(null); // For resize throttling\r\n\r\n  // State\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [modelPath, setModelPath] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [loadError, setLoadError] = useState(null);\r\n  const [loadingProgress, setLoadingProgress] = useState(0);\r\n  const [loadingBytes, setLoadingBytes] = useState(0); // Add bytes loaded\r\n  const [totalBytes, setTotalBytes] = useState(0); // Add total bytes\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const [isModelReady, setIsModelReady] = useState(false);\r\n  const [portalError, setPortalError] = useState(false);\r\n  const [portalCreated, setPortalCreated] = useState(false);\r\n  const [isAutoRotating, setIsAutoRotating] = useState(true);\r\n  const [adaptiveBackgroundColor, setAdaptiveBackgroundColor] = useState(null);\r\n  const [modelStats, setModelStats] = useState({ vertices: 0, size: 0 }); // Track model stats\r\n  const [showDetailedStats, setShowDetailedStats] = useState(false); // Toggle for stats display\r\n  \r\n  const API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  // Z-index management\r\n  const effectiveZIndex = windowZIndexes?.ThreeDModelWindow || zIndex;\r\n\r\n  useEffect(() => {\r\n    console.log(`ThreeDModelWindow z-index updated to ${effectiveZIndex}`);\r\n  }, [effectiveZIndex]);\r\n\r\n  // Create or get the portal element only once on component mount\r\n  useEffect(() => {\r\n    // Create portal element if it doesn't exist globally\r\n    if (!globalPortalElement) {\r\n      globalPortalElement = document.createElement(\"div\");\r\n      globalPortalElement.id = \"threeDModelWindow-root\";\r\n      document.body.appendChild(globalPortalElement);\r\n      console.log(\"🌐 Created global portal element for 3D Model Window\");\r\n    }\r\n    \r\n    // Set the portal reference\r\n    portalRef.current = globalPortalElement;\r\n    \r\n    // Only clean up Three.js resources on unmount, but DON'T remove the portal element\r\n    return () => {\r\n      console.log(\"⚠️ ThreeDModelWindow unmounting - cleaning up resources but keeping portal\");\r\n      \r\n      // Prevent React from removing Three.js nodes directly\r\n      const restore = preventReactTreeCleanup(containerRef);\r\n      \r\n      // Cancel animation frames\r\n      if (window.threeDModelAnimationFrame) {\r\n        cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n        delete window.threeDModelAnimationFrame;\r\n      }\r\n      \r\n      // Clean up Three.js resources directly\r\n      if (threeInstanceRef.current && threeInstanceRef.current.removeListeners) {\r\n        threeInstanceRef.current.removeListeners();\r\n      }\r\n      \r\n      if (threeInstanceRef.current && threeInstanceRef.current.renderer) {\r\n        threeInstanceRef.current.renderer.dispose();\r\n      }\r\n      \r\n      // Clean up Draco loader if it exists\r\n      if (dracoLoaderRef.current) {\r\n        dracoLoaderRef.current.dispose && dracoLoaderRef.current.dispose();\r\n        dracoLoaderRef.current = null;\r\n      }\r\n\r\n      // Clear all timeouts\r\n      if (resizeTimeoutRef.current) {\r\n        clearTimeout(resizeTimeoutRef.current);\r\n      }\r\n      \r\n      threeInstanceRef.current = null;\r\n      isInitializedRef.current = false;\r\n      portalRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  const handleWindowClick = () => {\r\n    console.log(\"🖱️ Clicked ThreeDModelWindow, bringing to front\");\r\n    if (onMouseDown) {\r\n      onMouseDown();\r\n    }\r\n  };\r\n\r\n  // Implement a custom close handler that cleans up properly\r\n  const handleClose = () => {\r\n    console.log(\"🔴 User closing ThreeDModelWindow\");\r\n    \r\n    // Call the provided onClose function\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Toggle auto rotation\r\n  const toggleAutoRotation = () => {\r\n    const newState = !isAutoRotating;\r\n    \r\n    // Update React state\r\n    setIsAutoRotating(newState);\r\n    \r\n    // Update ref for direct access\r\n    isAutoRotatingRef.current = newState;\r\n    \r\n    // Apply directly to the OrbitControls if they exist\r\n    if (controlsRef.current) {\r\n      console.log(`🔄 Directly setting autoRotate to ${newState}`);\r\n      controlsRef.current.autoRotate = newState;\r\n    }\r\n    \r\n    // Also update in threeInstance for other code to reference\r\n    if (threeInstanceRef.current) {\r\n      threeInstanceRef.current.autoRotate = newState;\r\n      console.log(`🔄 Auto-rotation ${newState ? 'enabled' : 'disabled'} in threeInstance`);\r\n    }\r\n  };\r\n\r\n  // Add this helper outside your component\r\n  const preventReactTreeCleanup = (targetRef) => {\r\n    if (!targetRef || !targetRef.current) return;\r\n    \r\n    // Save any existing DOM content to a document fragment\r\n    const fragment = document.createDocumentFragment();\r\n    while (targetRef.current.firstChild) {\r\n      fragment.appendChild(targetRef.current.firstChild);\r\n    }\r\n    \r\n    // Replace the ref's content with a dummy element that React can safely remove\r\n    const placeholder = document.createElement('div');\r\n    targetRef.current.appendChild(placeholder);\r\n    \r\n    // Return a cleanup function that can restore the original content if needed\r\n    return () => {\r\n      if (targetRef.current) {\r\n        targetRef.current.appendChild(fragment);\r\n      }\r\n    };\r\n  };\r\n\r\n  // Add keyframes animation\r\n  useEffect(() => {\r\n    const pulseAnimation = `\r\n      @keyframes pulse {\r\n        0% { opacity: 0.6; }\r\n        50% { opacity: 1; }\r\n        100% { opacity: 0.6; }\r\n      }\r\n      @keyframes spin {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n      }\r\n    `;\r\n    \r\n    const styleEl = document.createElement('style');\r\n    styleEl.innerHTML = pulseAnimation;\r\n    document.head.appendChild(styleEl);\r\n    \r\n    return () => {\r\n      if (document.head.contains(styleEl)) {\r\n        document.head.removeChild(styleEl);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Path testing effect with proper conditional\r\n  useEffect(() => {\r\n    // Always call the hook, but guard the internal logic\r\n    if (!modelPath || !API_URL || !showThreeDModelWindow) return;\r\n\r\n    const pathTestKey = `${modelPath}-${profileId}`;\r\n    if (window._testedPaths && window._testedPaths[pathTestKey]) return;\r\n\r\n    // Initialize tracking object if needed\r\n    if (!window._testedPaths) window._testedPaths = {};\r\n    window._testedPaths[pathTestKey] = true;\r\n\r\n    // Now perform the tests\r\n    const testPaths = [\r\n        modelPath,\r\n        `${API_URL}${modelPath.startsWith('/') ? '' : '/'}${modelPath}`,\r\n        `/models/profile_${profileId}.glb`,\r\n        `${window.location.origin}/models/profile_${profileId}.glb`,\r\n        `${API_URL}/models/profile_${profileId}.glb`\r\n    ];\r\n\r\n    console.log(\"🧪 Testing all possible model paths (one-time check):\");\r\n    testPaths.forEach((path, index) => {\r\n        fetch(path, { method: 'HEAD' })\r\n            .then(response => {\r\n                console.log(`Path ${index + 1}: ${path} - ${response.status} ${response.ok ? '✓' : '✗'}`);\r\n            })\r\n            .catch(err => {\r\n                console.log(`Path ${index + 1}: ${path} - Error: ${err.message}`);\r\n            });\r\n    });\r\n  }, [modelPath, API_URL, profileId, showThreeDModelWindow]);\r\n\r\n  // API URL validation\r\n  useEffect(() => {\r\n    // GUARD: Only run once per API URL\r\n    if (!API_URL || window._checkedApiUrl === API_URL) return;\r\n    window._checkedApiUrl = API_URL;\r\n    \r\n    let baseUrl = API_URL;\r\n    \r\n    // Check if API_URL ends with a slash and remove it for consistency\r\n    if (baseUrl.endsWith('/')) {\r\n      baseUrl = baseUrl.slice(0, -1);\r\n    }\r\n    \r\n    // Validate and log the API URL\r\n    console.log(`🔗 Using API URL: ${baseUrl}`);\r\n    \r\n    // Verify that the server is reachable - only once per URL\r\n    fetch(`${baseUrl}/profiles`, { \r\n      method: 'HEAD',\r\n      headers: { 'Cache-Control': 'no-cache' } \r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          console.log(`✅ API server is reachable (${response.status})`);\r\n        } else {\r\n          console.warn(`⚠️ API server returned status ${response.status}`);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(`❌ Cannot reach API server: ${err.message}`);\r\n      });\r\n  }, [API_URL]);\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    // Only execute the fetch if we're showing the window and have an API URL\r\n    if (!showThreeDModelWindow || !API_URL) {\r\n      // We need to still reset this flag when not visible\r\n      if (!showThreeDModelWindow) {\r\n        hasCalledOnMouseDownRef.current = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Skip if we've already fetched data for this profile\r\n    if (dataFetchedRef.current && lastProfileIdRef.current === profileId) {\r\n      console.log(`🔄 Skipping redundant API call for profile ${profileId}`);\r\n      return;\r\n    }\r\n\r\n    console.log(`🪟 ThreeDModelWindow mounted for profile ${profileId}`);\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/profile/${profileId}`);\r\n        if (!response.ok) throw new Error(`Failed to fetch model data: ${response.status}`);\r\n\r\n        const data = await response.json();\r\n        console.log(\"📄 Model data response:\", data);\r\n\r\n        if (isMounted) {\r\n          if (data.model_path) {\r\n            setModelPath(data.model_path);\r\n            console.log(`🔗 Setting model path to: ${data.model_path}`);\r\n          } else {\r\n            setLoadError(\"No 3D model available for this profile\");\r\n            setIsLoading(false);\r\n          }\r\n          \r\n          // Mark as fetched to prevent repeated calls\r\n          dataFetchedRef.current = true;\r\n          lastProfileIdRef.current = profileId;\r\n        }\r\n      } catch (error) {\r\n        if (isMounted) {\r\n          console.error(\"❌ Error fetching model data:\", error);\r\n          setLoadError(error instanceof Error ? error.message : \"Failed to load model\");\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    if (onMouseDown && !hasCalledOnMouseDownRef.current) {\r\n      console.log(\"📱 Bringing 3D Model Window to front (one-time call)\");\r\n      onMouseDown();\r\n      hasCalledOnMouseDownRef.current = true; // Mark that we've called it\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      \r\n      // Only reset fetch flag if profileId changed\r\n      if (lastProfileIdRef.current !== profileId) {\r\n        dataFetchedRef.current = false;\r\n      }\r\n    };\r\n  }, [profileId, showThreeDModelWindow, API_URL, onMouseDown]);\r\n  \r\n  // Helper function to properly dispose of Three.js resources\r\n  function disposeNode(node) {\r\n    if (!node) return;\r\n    \r\n    if (node.geometry) {\r\n      node.geometry.dispose();\r\n    }\r\n    \r\n    if (node.material) {\r\n      if (Array.isArray(node.material)) {\r\n        node.material.forEach(material => disposeMaterial(material));\r\n      } else {\r\n        disposeMaterial(node.material);\r\n      }\r\n    }\r\n  }\r\n\r\n  function disposeMaterial(material) {\r\n    if (!material) return;\r\n    \r\n    // Dispose of all material properties that could be textures\r\n    Object.keys(material).forEach(prop => {\r\n      if (material[prop] && material[prop].isTexture) {\r\n        material[prop].dispose();\r\n      }\r\n    });\r\n    \r\n    material.dispose();\r\n  }\r\n  \r\n  // Top-level cleanup function with improved resource disposal\r\n  const cleanup = () => {\r\n    try {\r\n      console.log(\"🧹 Running top-level cleanup\");\r\n      \r\n      // Cancel any animation frames\r\n      if (window.threeDModelAnimationFrame) {\r\n        cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n        delete window.threeDModelAnimationFrame;\r\n      }\r\n\r\n      // Clear any pending resize timeouts\r\n      if (resizeTimeoutRef.current) {\r\n        clearTimeout(resizeTimeoutRef.current);\r\n        resizeTimeoutRef.current = null;\r\n      }\r\n      \r\n      // Properly dispose of model resources\r\n      if (modelRef.current) {\r\n        modelRef.current.traverse(disposeNode);\r\n      }\r\n      \r\n      // Clear Three.js resources\r\n      if (threeInstanceRef.current) {\r\n        // Dispose scene and renderer if they exist\r\n        if (threeInstanceRef.current.renderer) {\r\n          threeInstanceRef.current.renderer.dispose();\r\n        }\r\n        \r\n        // Remove event listeners if they were added\r\n        if (threeInstanceRef.current.removeListeners) {\r\n          threeInstanceRef.current.removeListeners();\r\n        }\r\n        \r\n        // Clear the reference\r\n        threeInstanceRef.current = null;\r\n      }\r\n\r\n      // Clear controls reference\r\n      if (controlsRef.current) {\r\n        controlsRef.current.dispose && controlsRef.current.dispose();\r\n        controlsRef.current = null;\r\n      }\r\n      \r\n      // Clear loader reference\r\n      loaderRef.current = null;\r\n      \r\n      // Clear Draco loader reference\r\n      if (dracoLoaderRef.current) {\r\n        dracoLoaderRef.current.dispose && dracoLoaderRef.current.dispose();\r\n        dracoLoaderRef.current = null;\r\n      }\r\n\r\n      // Reset the initialization flag but DON'T clear container contents through React\r\n      isInitializedRef.current = false;\r\n      setIsModelReady(false);\r\n      \r\n      // Reset model reference\r\n      modelRef.current = null;\r\n      \r\n      // Reset adaptive background color\r\n      setAdaptiveBackgroundColor(null);\r\n    } catch (error) {\r\n      console.error(\"❌ Safe Cleanup Error:\", error);\r\n    }\r\n  };\r\n  \r\n  // Setup Three.js after component is fully mounted\r\n  useEffect(() => {\r\n    if (!showThreeDModelWindow || !containerRef.current || !modelPath || isInitializedRef.current) {\r\n      return;\r\n    }\r\n    \r\n    console.log(\"🔧 Ready to initialize Three.js:\", {\r\n      showThreeDModelWindow,\r\n      containerExists: !!containerRef.current,\r\n      modelPath,\r\n      alreadyInitialized: isInitializedRef.current\r\n    });\r\n    \r\n    // Delay Three.js initialization to ensure DOM stability\r\n    const initTimer = setTimeout(() => {\r\n      if (containerRef.current) {\r\n        console.log(\"⏱️ Delayed initialization starting now\");\r\n        initThreeJS();\r\n      } else {\r\n        console.log(\"❌ Container no longer exists after delay\");\r\n      }\r\n    }, 300);\r\n    \r\n    return () => {\r\n      clearTimeout(initTimer);\r\n    };\r\n  }, [showThreeDModelWindow, modelPath]);\r\n\r\n  // Initialize Three.js safely with performance optimizations\r\n  const initThreeJS = () => {\r\n    // Early exit if already initialized or container disappeared\r\n    if (isInitializedRef.current || !containerRef.current) return;\r\n    isInitializedRef.current = true;\r\n    \r\n    import('three')\r\n      .then(THREE => {\r\n        // Store THREE reference for use in other functions\r\n        threeRef.current = THREE;\r\n        \r\n        // First import DRACOLoader for compression support\r\n        import('three/examples/jsm/loaders/DRACOLoader.js')\r\n          .then(({ DRACOLoader }) => {\r\n            // Then import GLTFLoader\r\n            import('three/examples/jsm/loaders/GLTFLoader.js')\r\n              .then(({ GLTFLoader }) => {\r\n                // Finally import OrbitControls\r\n                import('three/examples/jsm/controls/OrbitControls.js')\r\n                  .then(({ OrbitControls }) => {\r\n                    // Safe check if component is still mounted\r\n                    if (!containerRef.current) {\r\n                      console.log(\"Container no longer exists, aborting Three.js setup\");\r\n                      return;\r\n                    }\r\n                    \r\n                    try {\r\n                      // Setup Three.js scene\r\n                      const width = containerRef.current.clientWidth;\r\n                      const height = containerRef.current.clientHeight;\r\n                      \r\n                      // Create renderer with optimizations\r\n                      const renderer = new THREE.WebGLRenderer({ \r\n                        antialias: true,\r\n                        alpha: true,\r\n                        powerPreference: \"high-performance\", // Performance optimization\r\n                        precision: \"mediump\" // Medium precision is usually sufficient\r\n                      });\r\n                      \r\n                      // Optimize renderer settings\r\n                      renderer.setSize(width, height);\r\n                      // Limit pixel ratio for high DPI displays\r\n                      renderer.setPixelRatio(window.devicePixelRatio > 1 ? 2 : 1);\r\n                      \r\n                      // Create scene with frustum culling enabled\r\n                      const scene = new THREE.Scene();\r\n                      scene.frustumCulled = true; // Enable frustum culling\r\n                      scene.background = new THREE.Color(isDarkMode ? 0x1a1a1a : 0xf5f5f5);\r\n                      \r\n                      // Create camera\r\n                      const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);\r\n                      camera.position.set(5, 5, 10);\r\n                      \r\n                      // Add lights\r\n                      const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\r\n                      scene.add(ambientLight);\r\n                      \r\n                      const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\r\n                      directionalLight.position.set(10, 10, 5);\r\n                      scene.add(directionalLight);\r\n                      \r\n                      // Create controls with auto-rotation\r\n                      const controls = new OrbitControls(camera, renderer.domElement);\r\n                      controls.enableDamping = true;\r\n                      controls.dampingFactor = 0.05; // Add damping for smoother movement\r\n                      \r\n                      // Get the initial auto-rotation state from state/ref\r\n                      controls.autoRotate = isAutoRotatingRef.current;\r\n                      controls.autoRotateSpeed = 1.0; // Slower for better performance\r\n                      \r\n                      // Store controls in ref for direct access from UI\r\n                      controlsRef.current = controls;\r\n                      \r\n                      // Log the initial auto-rotation state\r\n                      console.log(`🔄 Controls created with autoRotate=${controls.autoRotate}`);\r\n                      \r\n                      // Add renderer to container\r\n                      if (containerRef.current) {\r\n                        containerRef.current.appendChild(renderer.domElement);\r\n                      } else {\r\n                        console.error(\"Container lost during initialization\");\r\n                        return;\r\n                      }\r\n                      \r\n                      // Function to clean up resources\r\n                      const cleanupThreeResources = () => {\r\n                        try {\r\n                          // Cancel any animation frames first\r\n                          if (window.threeDModelAnimationFrame) {\r\n                            cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n                            delete window.threeDModelAnimationFrame;\r\n                          }\r\n                          \r\n                          // Dispose of resources\r\n                          if (controls) controls.dispose();\r\n                          \r\n                          // Remove DOM elements carefully\r\n                          if (renderer && renderer.domElement) {\r\n                            try {\r\n                              const parent = renderer.domElement.parentNode;\r\n                              if (parent && parent.contains(renderer.domElement)) {\r\n                                parent.removeChild(renderer.domElement);\r\n                              }\r\n                            } catch (e) {\r\n                              console.warn(\"Could not remove renderer element:\", e);\r\n                            }\r\n                            renderer.dispose();\r\n                          }\r\n                          \r\n                          // Clear references\r\n                          scene.clear();\r\n                          \r\n                          isInitializedRef.current = false;\r\n                        } catch (error) {\r\n                          console.error(\"❌ Local cleanup error:\", error);\r\n                        }\r\n                      };\r\n                      \r\n                      // Function to calculate dominant color from a model\r\n                      const calculateDominantColor = (model) => {\r\n                        try {\r\n                          // Make sure we have a valid THREE reference\r\n                          if (!threeRef.current) {\r\n                            console.error(\"THREE not available for color calculation\");\r\n                            return null;\r\n                          }\r\n                          \r\n                          // Create a small offscreen renderer to capture the model\r\n                          const offscreenRenderer = new threeRef.current.WebGLRenderer({ \r\n                            antialias: false, // Turn off for performance\r\n                            preserveDrawingBuffer: true \r\n                          });\r\n                          offscreenRenderer.setSize(16, 16); // Smaller for better performance\r\n                          \r\n                          // Create temporary camera and scene\r\n                          const tempScene = new threeRef.current.Scene();\r\n                          const tempCamera = new threeRef.current.PerspectiveCamera(45, 1, 0.1, 1000);\r\n                          tempCamera.position.set(5, 5, 10);\r\n                          \r\n                          // Add model to temp scene\r\n                          tempScene.add(model.clone());\r\n                          \r\n                          // Add lighting\r\n                          const ambientLight = new threeRef.current.AmbientLight(0xffffff, 0.7);\r\n                          tempScene.add(ambientLight);\r\n                          \r\n                          // Render the scene\r\n                          offscreenRenderer.render(tempScene, tempCamera);\r\n                          \r\n                          // Get pixel data\r\n                          const gl = offscreenRenderer.getContext();\r\n                          const pixels = new Uint8Array(16 * 16 * 4);\r\n                          gl.readPixels(0, 0, 16, 16, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n                          \r\n                          // Calculate average color, skipping black/transparent pixels\r\n                          let r = 0, g = 0, b = 0, total = 0;\r\n                          \r\n                          for (let i = 0; i < pixels.length; i += 4) {\r\n                            // Skip transparent or black pixels\r\n                            if (pixels[i+3] > 10 && (pixels[i] > 5 || pixels[i+1] > 5 || pixels[i+2] > 5)) {\r\n                              r += pixels[i];\r\n                              g += pixels[i+1];\r\n                              b += pixels[i+2];\r\n                              total++;\r\n                            }\r\n                          }\r\n                          \r\n                          // Cleanup\r\n                          offscreenRenderer.dispose();\r\n                          \r\n                          if (total === 0) return null; // No valid pixels\r\n                          \r\n                          // Get average\r\n                          r = Math.floor(r / total);\r\n                          g = Math.floor(g / total);\r\n                          b = Math.floor(b / total);\r\n                          \r\n                          // Create a contrasting background color (inverted with reduced intensity)\r\n                          const invR = 255 - r;\r\n                          const invG = 255 - g;\r\n                          const invB = 255 - b;\r\n                          \r\n                          // Create a subtle background (blend inverted with white/black)\r\n                          const baseColor = isDarkMode ? 0 : 255;\r\n                          const blendFactor = 0.85; // Subtlety factor\r\n                          \r\n                          const bgR = Math.floor(invR * (1-blendFactor) + baseColor * blendFactor);\r\n                          const bgG = Math.floor(invG * (1-blendFactor) + baseColor * blendFactor);\r\n                          const bgB = Math.floor(invB * (1-blendFactor) + baseColor * blendFactor);\r\n                          \r\n                          console.log(`🎨 Detected dominant color: rgb(${r},${g},${b})`);\r\n                          console.log(`🎨 Created background color: rgb(${bgR},${bgG},${bgB})`);\r\n                          \r\n                          return new threeRef.current.Color(bgR/255, bgG/255, bgB/255);\r\n                        } catch (err) {\r\n                          console.error(\"❌ Error calculating dominant color:\", err);\r\n                          return null;\r\n                        }\r\n                      };\r\n                      \r\n                      // Make sure we have the correct full path to the model\r\n                      let fullModelPath = modelPath;\r\n                      if (modelPath) {\r\n                        if (modelPath.startsWith('http')) {\r\n                          // Already a full URL\r\n                          fullModelPath = modelPath;\r\n                        } else if (modelPath.startsWith('/models/')) {\r\n                          // This is a path to the API server's models folder\r\n                          fullModelPath = `${API_URL}${modelPath}`;\r\n                        } else if (modelPath.startsWith('/')) {\r\n                          // Some other absolute path\r\n                          fullModelPath = `${API_URL}${modelPath}`;\r\n                        } else {\r\n                          // Relative path\r\n                          fullModelPath = `${API_URL}/${modelPath}`;\r\n                        }\r\n                      }\r\n\r\n                      console.log('🔍 Path Construction (Improved):');\r\n                      console.log(`- Original model path: \"${modelPath}\"`);\r\n                      console.log(`- API URL: \"${API_URL}\"`);\r\n                      console.log(`- Using path: \"${fullModelPath}\"`);\r\n\r\n                      // Only use these two paths for model loading:\r\n                      const priorityPaths = [\r\n                        fullModelPath,\r\n                        `${API_URL}/models/profile_${profileId}.glb`\r\n                      ];\r\n\r\n                      // Add timeout handling with longer initial timeout\r\n                      let loadTimeout = setTimeout(() => {\r\n                        console.warn(\"⚠️ Model loading timeout - retrying with cache busting...\");\r\n                        retryLoading();\r\n                      }, 30000); // 30 second timeout for large models\r\n\r\n                      // Setup Draco compression loader for better performance\r\n                      const dracoLoader = new DRACOLoader();\r\n                      dracoLoader.setDecoderPath('https://www.gstatic.com/draco/versioned/decoders/1.5.5/');\r\n                      dracoLoader.setDecoderConfig({ type: 'js' });\r\n                      dracoLoaderRef.current = dracoLoader;\r\n                      \r\n                      // Create the loader with Draco compression\r\n                      const loader = new GLTFLoader();\r\n                      loader.setDRACOLoader(dracoLoader);\r\n                      loaderRef.current = loader;\r\n                      \r\n                      const retryLoading = () => {\r\n                        clearTimeout(loadTimeout);\r\n                        console.log(\"🔄 Retrying model load with cache busting...\");\r\n                        \r\n                        // Try with a cache-busting parameter\r\n                        const cacheBuster = `?t=${Date.now()}`;\r\n                        \r\n                        // Try a different path construction approach on retry\r\n                        const retryPath = modelPath?.startsWith('/')\r\n                          ? `${window.location.origin}${modelPath}${cacheBuster}`\r\n                          : `${fullModelPath}${cacheBuster}`;\r\n                        \r\n                        console.log(`🔄 Retry path: ${retryPath}`);\r\n                        \r\n                        // Use loaderRef.current instead of loader\r\n                        if (loaderRef.current) {\r\n                          loaderRef.current.load(\r\n                            retryPath,\r\n                            onModelLoaded,\r\n                            onProgress,\r\n                            onError\r\n                          );\r\n                        } else {\r\n                          console.error(\"❌ Loader is not available for retry\");\r\n                          setLoadError(\"Cannot load model: loader unavailable\");\r\n                          setIsLoading(false);\r\n                        }\r\n                      };\r\n\r\n                      // Helper function to simplify geometry for better performance\r\n                      const optimizeMesh = (mesh) => {\r\n                        // Skip non-mesh objects\r\n                        if (!mesh.isMesh) return mesh;\r\n                      \r\n                        // Skip already optimized meshes\r\n                        if (mesh.userData.optimized) return mesh;\r\n                      \r\n                        try {\r\n                          // Get original geometry\r\n                          const geometry = mesh.geometry;\r\n                          \r\n                          // Skip non-BufferGeometry\r\n                          if (!geometry.isBufferGeometry) return mesh;\r\n                          \r\n                          // Skip geometries with missing attributes\r\n                          if (!geometry.attributes.position) return mesh;\r\n                          \r\n                          // Mark as optimized to avoid processing it again\r\n                          mesh.userData.optimized = true;\r\n                          \r\n                          // Add frustum culling\r\n                          mesh.frustumCulled = true;\r\n                          \r\n                          return mesh;\r\n                        } catch (err) {\r\n                          console.warn(\"Error optimizing mesh:\", err);\r\n                          return mesh;\r\n                        }\r\n                      };\r\n\r\n                      // Create Level of Detail for large models\r\n                      const setupLOD = (model, box, size) => {\r\n                        try {\r\n                          // If the model isn't very large, return it as is\r\n                          if (countVertices(model) < 100000) {\r\n                            return model;\r\n                          }\r\n                          \r\n                          // If THREE.LOD isn't available, return the original model\r\n                          if (!threeRef.current.LOD) {\r\n                            return model;\r\n                          }\r\n                          \r\n                          console.log(\"📊 Setting up LOD for large model\");\r\n                          \r\n                          // Create a new LOD object\r\n                          const lod = new threeRef.current.LOD();\r\n                          \r\n                          // Add the original model as the highest detail level\r\n                          lod.addLevel(model, 0);\r\n                          \r\n                          // Clone the model for lower detail levels\r\n                          const simplifiedModel = model.clone();\r\n                          \r\n                          // Simplify the model by traversing it and applying optimizations\r\n                          simplifiedModel.traverse((node) => {\r\n                            if (node.isMesh) {\r\n                              optimizeMesh(node);\r\n                            }\r\n                          });\r\n                          \r\n                          // Add the simplified model for viewing at a distance\r\n                          lod.addLevel(simplifiedModel, size * 1.5);\r\n                          \r\n                          // Return the LOD object\r\n                          return lod;\r\n                        } catch (err) {\r\n                          console.warn(\"Failed to setup LOD:\", err);\r\n                          return model;\r\n                        }\r\n                      };\r\n\r\n                      // Model loaded handler with performance optimizations\r\n                      const onModelLoaded = (gltf) => {\r\n                        clearTimeout(loadTimeout);\r\n                        \r\n                        if (!containerRef.current) {\r\n                          cleanupThreeResources();\r\n                          return;\r\n                        }\r\n                        \r\n                        try {\r\n                          console.log(\"✅ Model loaded successfully - processing model data\");\r\n                          const model = gltf.scene;\r\n                          \r\n                          // Store model in ref for rotation controls\r\n                          modelRef.current = model;\r\n                          \r\n                          // Center and scale model\r\n                          const box = new THREE.Box3().setFromObject(model);\r\n                          const center = new THREE.Vector3();\r\n                          box.getCenter(center);\r\n                          \r\n                          model.position.sub(center);\r\n                          \r\n                          const size = box.getSize(new THREE.Vector3()).length();\r\n                          const scale = 5 / size;\r\n                          model.scale.set(scale, scale, scale);\r\n                          \r\n                          // Add more detailed diagnostic logging\r\n                          const vertexCount = countVertices(model);\r\n                          console.log(`📊 Model stats: vertices=${vertexCount}, size=${size}`);\r\n                          \r\n                          // Store model stats for UI display\r\n                          setModelStats({\r\n                            vertices: vertexCount,\r\n                            triangles: Math.round(vertexCount / 3),\r\n                            size: size,\r\n                            fileSize: totalBytes > 0 ? \r\n                                     (totalBytes / (1024 * 1024)).toFixed(2) + \" MB\" : \r\n                                     \"Unknown\"\r\n                          });\r\n                          \r\n                          // Optimize entire model for better performance\r\n                          model.traverse((node) => {\r\n                            if (node.isMesh) {\r\n                              // Apply optimizations to each mesh\r\n                              optimizeMesh(node);\r\n                              \r\n                              // Simplify material if possible\r\n                              if (node.material) {\r\n                                if (node.material.map) {\r\n                                  // Downscale textures for better performance\r\n                                  node.material.map.minFilter = THREE.LinearFilter;\r\n                                  node.material.map.magFilter = THREE.LinearFilter;\r\n                                  node.material.map.anisotropy = 1; // Lower anisotropy for performance\r\n                                }\r\n                              }\r\n                            }\r\n                          });\r\n                          \r\n                          // Calculate and set adaptive background color based on model\r\n                          try {\r\n                            console.log(\"🎨 Analyzing model for dominant color...\");\r\n                            const dominantColor = calculateDominantColor(model);\r\n                            if (dominantColor) {\r\n                              scene.background = dominantColor;\r\n                              setAdaptiveBackgroundColor(dominantColor.getStyle());\r\n                              console.log(`🎨 Set background to: ${dominantColor.getStyle()}`);\r\n                            }\r\n                          } catch (err) {\r\n                            console.error(\"❌ Error setting adaptive background:\", err);\r\n                          }\r\n                          \r\n                          // Apply Level of Detail for large models\r\n                          const finalModel = vertexCount > 100000 ? \r\n                                            setupLOD(model, box, size) : \r\n                                            model;\r\n                          \r\n                          scene.add(finalModel);\r\n                          \r\n                          setIsLoading(false);\r\n                          setIsModelReady(true);\r\n                          console.log(\"✅ Model successfully added to scene\");\r\n                        } catch (err) {\r\n                          console.error(\"❌ Error processing loaded model:\", err);\r\n                          setLoadError(`Error processing model: ${err.message}`);\r\n                          setIsLoading(false);\r\n                        }\r\n                      };\r\n\r\n                      // Helper function to count vertices (for diagnostics)\r\n                      const countVertices = (model) => {\r\n                        let count = 0;\r\n                        model.traverse((obj) => {\r\n                          if (obj.isMesh && obj.geometry) {\r\n                            const position = obj.geometry.getAttribute('position');\r\n                            if (position) count += position.count;\r\n                          }\r\n                        });\r\n                        return count;\r\n                      };\r\n\r\n                      // Improved progress tracking\r\n                      const onProgress = (progress) => {\r\n                        try {\r\n                          // Log all progress events for debugging\r\n                          console.log(`📊 Progress: loaded=${progress.loaded} bytes, total=${progress.total || 'unknown'} bytes`);\r\n                          \r\n                          // Store bytes loaded for better user feedback\r\n                          setLoadingBytes(progress.loaded || 0);\r\n                          \r\n                          // Ensure we have valid progress values\r\n                          if (progress.total > 0) {\r\n                            setTotalBytes(progress.total);\r\n                            const percent = Math.round((progress.loaded / progress.total) * 100);\r\n                            setLoadingProgress(percent);\r\n                            console.log(`📊 Loading progress: ${percent}%`);\r\n                          } else {\r\n                            // If we can't calculate percentage, show indeterminate progress\r\n                            console.log(`📊 Loading in progress (bytes: ${progress.loaded})`);\r\n                            // Simulate progress to give user feedback\r\n                            setLoadingProgress((prev) => (prev < 90 ? prev + 5 : prev));\r\n                          }\r\n                        } catch (err) {\r\n                          console.warn(\"⚠️ Error reporting progress:\", err);\r\n                          // Keep advancing progress to provide feedback\r\n                          setLoadingProgress((prev) => (prev < 90 ? prev + 5 : prev));\r\n                        }\r\n                      };\r\n\r\n                      const onError = (error) => {\r\n                        clearTimeout(loadTimeout);\r\n                        console.error(\"❌ Error loading model:\", error);\r\n                        \r\n                        // Direct fetch check for file existence\r\n                        console.log(`🔍 Checking if GLB file exists at: ${fullModelPath}`);\r\n                        fetch(fullModelPath, { method: 'HEAD' })\r\n                          .then(response => {\r\n                            console.log(`📋 HEAD check for ${fullModelPath}: ${response.status} ${response.ok ? '✓' : '✗'}`);\r\n                            if (!response.ok) {\r\n                              console.log('⚠️ Primary file path returned error, will try alternatives');\r\n                            }\r\n                          })\r\n                          .catch(err => {\r\n                            console.log(`❌ Error checking file: ${err.message}`);\r\n                          });\r\n\r\n                        // Detailed error reporting\r\n                        if (error.target && error.target instanceof XMLHttpRequest) {\r\n                          console.error(`❌ XHR Error Status: ${error.target.status}`);\r\n                          console.error(`❌ XHR Error Response: ${error.target.responseText || 'No response'}`);\r\n                        }\r\n                        \r\n                        setLoadError(`Error loading model: ${error.message || \"Unknown error\"}`);\r\n                        setIsLoading(false);\r\n                        \r\n                        // Attempt to provide more specific error information\r\n                        if (error.message && error.message.includes(\"404\")) {\r\n                          setLoadError(`Model file not found (404). Check if '${fullModelPath}' exists on the server.`);\r\n                        } else if (error.message && error.message.includes(\"Failed to fetch\")) {\r\n                          setLoadError(\"Network error. Check your internet connection or server status.\");\r\n                        } else if (error.message && error.message.includes(\"Unexpected token\")) {\r\n                          setLoadError(\"Invalid model format. The file may be corrupted or not a valid GLB file.\");\r\n                        } else if (error.message && error.message.includes(\"Cross-Origin\")) {\r\n                          setLoadError(\"Cross-origin (CORS) error. Server configuration issue.\");\r\n                        }\r\n                      };\r\n\r\n                      // Log the paths we'll try\r\n                      console.log('🚀 Will attempt to load from:', priorityPaths);\r\n\r\n                      // Load model with proper loader reference\r\n                      const tryLoadModel = (path, onSuccess, onProgress, onError) => {\r\n                        console.log(`🔄 Attempting to load model from: ${path}`);\r\n                        // Make sure we use the loader from the ref\r\n                        if (loaderRef.current) {\r\n                          loaderRef.current.load(path, onSuccess, onProgress, onError);\r\n                        } else {\r\n                          console.error(\"❌ Loader is not available\");\r\n                          setLoadError(\"Cannot load model: loader unavailable\");\r\n                          setIsLoading(false);\r\n                        }\r\n                      };\r\n\r\n                      // Start with the first path\r\n                      tryLoadModel(priorityPaths[0], onModelLoaded, onProgress, (error) => {\r\n                        console.error(`❌ Failed to load from primary path: ${error.message}`);\r\n                        \r\n                        // If that fails, try the second path\r\n                        if (priorityPaths.length > 1) {\r\n                          console.log(`🔄 Trying fallback path: ${priorityPaths[1]}`);\r\n                          tryLoadModel(priorityPaths[1], onModelLoaded, onProgress, (finalError) => {\r\n                            console.error(`❌ All paths failed: ${finalError.message}`);\r\n                            setLoadError(\"Could not load model file. Please upload a model file.\");\r\n                            setIsLoading(false);\r\n                          });\r\n                        } else {\r\n                          setLoadError(`Error loading model: ${error.message}`);\r\n                          setIsLoading(false);\r\n                        }\r\n                      });\r\n\r\n                      // Optimized animation loop\r\n                      const animate = () => {\r\n                        if (!containerRef.current) {\r\n                          if (window.threeDModelAnimationFrame) {\r\n                            cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n                            delete window.threeDModelAnimationFrame;\r\n                          }\r\n                          return;\r\n                        }\r\n                        \r\n                        // Update controls - this is critical for auto-rotation to work\r\n                        if (controlsRef.current) {\r\n                          // Ensure auto-rotation state is always synced from React state\r\n                          controlsRef.current.autoRotate = isAutoRotatingRef.current;\r\n                          controlsRef.current.update();\r\n                        }\r\n                        \r\n                        renderer.render(scene, camera);\r\n                        window.threeDModelAnimationFrame = requestAnimationFrame(animate);\r\n                      };\r\n                      \r\n                      // Throttled resize handler for better performance\r\n                      const handleResize = () => {\r\n                        if (resizeTimeoutRef.current) {\r\n                          clearTimeout(resizeTimeoutRef.current);\r\n                        }\r\n                        \r\n                        resizeTimeoutRef.current = setTimeout(() => {\r\n                          if (!containerRef.current) return;\r\n                          \r\n                          const width = containerRef.current.clientWidth;\r\n                          const height = containerRef.current.clientHeight;\r\n                          \r\n                          renderer.setSize(width, height);\r\n                          camera.aspect = width / height;\r\n                          camera.updateProjectionMatrix();\r\n                        }, 100); // 100ms throttle\r\n                      };\r\n                      \r\n                      window.addEventListener('resize', handleResize);\r\n                      \r\n                      // Store instance functions for cleanup\r\n                      threeInstanceRef.current = {\r\n                        animate,\r\n                        renderer,\r\n                        removeListeners: () => {\r\n                          window.removeEventListener('resize', handleResize);\r\n                          if (resizeTimeoutRef.current) {\r\n                            clearTimeout(resizeTimeoutRef.current);\r\n                            resizeTimeoutRef.current = null;\r\n                          }\r\n                        },\r\n                        autoRotate: isAutoRotatingRef.current\r\n                      };\r\n                      \r\n                      // Start animation loop\r\n                      animate();\r\n                      \r\n                    } catch (error) {\r\n                      console.error(\"Error initializing Three.js:\", error);\r\n                      setLoadError(\"Failed to initialize 3D viewer\");\r\n                      setIsLoading(false);\r\n                    }\r\n                  });\r\n              });\r\n          });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error loading Three.js libraries:\", error);\r\n        setLoadError(\"Failed to load 3D libraries\");\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  \r\n  // Format file size for display\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return \"0 Bytes\";\r\n    const k = 1024;\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\r\n  };\r\n  \r\n  // Handle file upload\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) {\r\n      setUploadStatus('Error: No file selected');\r\n      return;\r\n    }\r\n    \r\n    if (!selectedFile.name.endsWith('.glb')) {\r\n      setUploadStatus('Error: Only .glb files are supported');\r\n      return;\r\n    }\r\n    \r\n    // Check file size (100MB limit)\r\n    const maxSize = 100 * 1024 * 1024; // 100MB in bytes\r\n    if (selectedFile.size > maxSize) {\r\n      setUploadStatus(`Error: File exceeds 100MB limit (${(selectedFile.size/1024/1024).toFixed(2)}MB)`);\r\n      return;\r\n    }\r\n    \r\n    // Clean up existing Three.js instance before uploading\r\n    cleanup();\r\n    isInitializedRef.current = false;\r\n    \r\n    setIsLoading(true);\r\n    setUploadStatus('Uploading model...');\r\n    \r\n    // Create FormData with progress tracking\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('profile_id', String(profileId));\r\n    \r\n    try {\r\n      console.log(`📤 Starting upload for ${selectedFile.name}`);\r\n      \r\n      // Track upload progress using XMLHttpRequest\r\n      const xhr = new XMLHttpRequest();\r\n      \r\n      // Set up progress tracking\r\n      xhr.upload.addEventListener('progress', (event) => {\r\n        if (event.lengthComputable) {\r\n          const percentComplete = Math.round((event.loaded / event.total) * 100);\r\n          setUploadStatus(`Uploading: ${percentComplete}%`);\r\n          console.log(`📤 Upload progress: ${percentComplete}%`);\r\n        }\r\n      });\r\n      \r\n      // Create a promise to handle the XHR response\r\n      const uploadPromise = new Promise((resolve, reject) => {\r\n        xhr.addEventListener('load', () => {\r\n          if (xhr.status >= 200 && xhr.status < 300) {\r\n            try {\r\n              const response = JSON.parse(xhr.responseText);\r\n              resolve(response);\r\n            } catch (e) {\r\n              reject(new Error('Invalid response format'));\r\n            }\r\n          } else {\r\n            reject(new Error(`Server returned ${xhr.status}: ${xhr.statusText}`));\r\n          }\r\n        });\r\n        \r\n        xhr.addEventListener('error', () => {\r\n          reject(new Error('Network error during upload'));\r\n        });\r\n        \r\n        xhr.addEventListener('abort', () => {\r\n          reject(new Error('Upload aborted'));\r\n        });\r\n      });\r\n      \r\n      // Set up the request\r\n      xhr.open('POST', `${API_URL}/api/upload-glb`, true);\r\n      xhr.send(formData);\r\n      \r\n      // Wait for the upload to complete\r\n      const result = await uploadPromise;\r\n      \r\n      console.log('✅ Upload successful:', result);\r\n      \r\n      // Reset data fetched flag to load new model\r\n      dataFetchedRef.current = false;\r\n      \r\n      setModelPath(result.model_path);\r\n      setUploadStatus('Model uploaded successfully! Loading model...');\r\n      setLoadError(null);\r\n      setSelectedFile(null);\r\n      \r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n      \r\n      // Preload the model with direct fetch to validate\r\n      const modelUrl = result.model_path.startsWith('http') \r\n        ? result.model_path \r\n        : `${API_URL}${result.model_path.startsWith('/') ? '' : '/'}${result.model_path}`;\r\n        \r\n      console.log(`🔎 Checking uploaded model at: ${modelUrl}`);\r\n      \r\n      // Validate the uploaded file with a HEAD request\r\n      fetch(modelUrl, { method: 'HEAD' })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            console.log('✅ Uploaded model file is accessible');\r\n          } else {\r\n            console.warn(`⚠️ Uploaded model file returned status ${response.status}`);\r\n            setUploadStatus(`Warning: Model may not load correctly (HTTP ${response.status})`);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error('❌ Error validating uploaded file:', err);\r\n        });\r\n      \r\n      // Automatically hide success message after delay\r\n      setTimeout(() => {\r\n        setUploadStatus(null);\r\n      }, 5000);\r\n    } catch (error) {\r\n      console.error('❌ Error uploading model:', error);\r\n      setUploadStatus(`Error: ${error.message}`);\r\n      setLoadError(`Upload failed: ${error.message}`);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Check if portal is ready before attempting to render\r\n  const portalReady = !!portalRef.current;\r\n\r\n  // Don't render if window shouldn't be visible or portal ref isn't ready\r\n  // CRITICAL FIX: Always place useState, useRef, useEffect BEFORE any conditional return\r\n  if (!showThreeDModelWindow || !portalReady) {\r\n    console.log(\"🚫 Not rendering ThreeDModelWindow - visibility:\", showThreeDModelWindow, \"portal ready:\", portalReady);\r\n    return null;\r\n  }\r\n  \r\n  // Get position from sessionStorage or use default\r\n  const defaultPosition = {\r\n    x: Math.max(0, (window.innerWidth - 600) / 2),\r\n    y: Math.max(0, (window.innerHeight - 550) / 2)\r\n  };\r\n  \r\n  console.log(\"📍 Model window position:\", defaultPosition);\r\n  console.log(\"✅ Rendering ThreeDModelWindow - visibility:\", showThreeDModelWindow);\r\n  console.log(\"📊 Z-index:\", effectiveZIndex);\r\n\r\n  try {\r\n    // Use portalRef.current instead of portalElement\r\n    return createPortal(\r\n      <div \r\n        className=\"three-model-window-container\" \r\n        style={{ \r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          zIndex: effectiveZIndex,\r\n          pointerEvents: \"none\" // Allow clicks to pass through the container but not the window\r\n        }}\r\n      >\r\n        <Draggable\r\n          nodeRef={nodeRef}\r\n          handle=\".drag-handle\"\r\n          defaultPosition={defaultPosition}\r\n          bounds=\"parent\"\r\n        >\r\n          <div \r\n            ref={nodeRef} \r\n            style={{ \r\n              position: \"absolute\",\r\n              zIndex: effectiveZIndex,\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n              color: isDarkMode ? \"#fff\" : \"#000\",\r\n              width: \"600px\",\r\n              borderRadius: \"10px\",\r\n              boxShadow: \"0 4px 20px rgba(0, 0, 0, 0.3)\",\r\n              overflow: \"hidden\",\r\n              pointerEvents: \"auto\", // Ensure clicks work on the window\r\n              visibility: \"visible\",\r\n              opacity: 1,\r\n              willChange: \"transform, z-index\"\r\n            }}\r\n            onClick={handleWindowClick}\r\n          >\r\n            <div \r\n              className=\"drag-handle\"\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                padding: \"15px\",\r\n                backgroundColor: isDarkMode ? \"#2c2c2c\" : \"#f0f0f0\",\r\n                borderTopLeftRadius: \"10px\",\r\n                borderTopRightRadius: \"10px\",\r\n                cursor: \"grab\"\r\n              }}\r\n            >\r\n              <h2 style={{ margin: 0 }}>Satellite Model Viewer</h2>\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation(); // Prevent event bubbling to the window\r\n                  handleClose();\r\n                }}\r\n                style={{ \r\n                  color: isDarkMode ? \"white\" : \"black\",\r\n                  background: \"none\",\r\n                  border: \"none\",\r\n                  fontSize: \"18px\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n              >\r\n                ✖\r\n              </button>\r\n            </div>\r\n            \r\n            <div style={{ padding: \"20px\" }}>\r\n              {/* Upload status message */}\r\n              {uploadStatus && (\r\n                <div style={{ \r\n                  margin: \"10px 0\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"4px\",\r\n                  backgroundColor: uploadStatus.includes('Error') \r\n                    ? (isDarkMode ? \"#3d0000\" : \"#ffdddd\") \r\n                    : (isDarkMode ? \"#004d00\" : \"#ddffdd\"),\r\n                  color: uploadStatus.includes('Error')\r\n                    ? (isDarkMode ? \"#ff8080\" : \"#d00000\")\r\n                    : (isDarkMode ? \"#80ff80\" : \"#00b000\")\r\n                }}>\r\n                  {uploadStatus}\r\n                </div>\r\n              )}\r\n\r\n              {/* Control buttons */}\r\n              <div style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                marginBottom: \"10px\"\r\n              }}>\r\n                {/* Stats toggle button */}\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setShowDetailedStats(!showDetailedStats);\r\n                  }}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    padding: \"8px 14px\",\r\n                    backgroundColor: showDetailedStats ? \"#00bcd4\" : (isDarkMode ? \"#444\" : \"#f0f0f0\"),\r\n                    color: showDetailedStats ? \"white\" : (isDarkMode ? \"#fff\" : \"#444\"),\r\n                    border: \"none\",\r\n                    borderRadius: \"4px\",\r\n                    cursor: \"pointer\",\r\n                    fontSize: \"14px\",\r\n                    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                    transition: \"all 0.2s ease\"\r\n                  }}\r\n                >\r\n                  {showDetailedStats ? \"Hide Stats\" : \"Show Stats\"}\r\n                </button>\r\n                \r\n                {/* Auto-rotation toggle button */}\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    toggleAutoRotation();\r\n                  }}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    padding: \"8px 14px\",\r\n                    backgroundColor: isAutoRotating ? \"#00bcd4\" : (isDarkMode ? \"#444\" : \"#f0f0f0\"),\r\n                    color: isAutoRotating ? \"white\" : (isDarkMode ? \"#fff\" : \"#444\"),\r\n                    border: \"none\",\r\n                    borderRadius: \"4px\",\r\n                    cursor: \"pointer\",\r\n                    fontSize: \"14px\",\r\n                    fontWeight: \"bold\",\r\n                    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                    transition: \"all 0.2s ease\"\r\n                  }}\r\n                >\r\n                  <span style={{ \r\n                    display: \"inline-block\",\r\n                    marginRight: \"8px\",\r\n                    animation: isAutoRotating ? \"spin 2s linear infinite\" : \"none\" \r\n                  }}>\r\n                    🔄\r\n                  </span>\r\n                  {isAutoRotating ? \"Stop Rotation\" : \"Auto-Rotate\"}\r\n                </button>\r\n              </div>\r\n\r\n              {/* Model stats (when toggled) */}\r\n              {showDetailedStats && modelStats.vertices > 0 && (\r\n                <div style={{\r\n                  backgroundColor: isDarkMode ? \"#111\" : \"#f5f5f5\",\r\n                  borderRadius: \"4px\",\r\n                  padding: \"8px 12px\",\r\n                  marginBottom: \"10px\",\r\n                  fontSize: \"14px\"\r\n                }}>\r\n                  <div><strong>Vertices:</strong> {modelStats.vertices.toLocaleString()}</div>\r\n                  <div><strong>Triangles:</strong> {modelStats.triangles.toLocaleString()}</div>\r\n                  {totalBytes > 0 && (\r\n                    <div><strong>File Size:</strong> {formatFileSize(totalBytes)}</div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {/* 3D Model Viewer */}\r\n              <div \r\n                ref={containerRef}\r\n                id=\"model-container\"\r\n                style={{ \r\n                  height: \"400px\", \r\n                  marginBottom: \"20px\",\r\n                  borderRadius: \"4px\",\r\n                  overflow: \"hidden\",\r\n                  border: `1px solid ${isDarkMode ? \"#333\" : \"#ddd\"}`,\r\n                  position: \"relative\",\r\n                  backgroundColor: adaptiveBackgroundColor || (isDarkMode ? \"#111\" : \"#f5f5f5\")\r\n                }}\r\n              >\r\n                {/* Enhanced loading overlay */}\r\n                {isLoading && (\r\n                  <div style={{ \r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    backgroundColor: isDarkMode ? \"rgba(0,0,0,0.7)\" : \"rgba(255,255,255,0.7)\",\r\n                    zIndex: 10\r\n                  }}>\r\n                    <div style={{ marginBottom: \"20px\", textAlign: \"center\" }}>\r\n                      <div style={{ fontSize: \"18px\", marginBottom: \"8px\" }}>\r\n                        Loading 3D model...\r\n                      </div>\r\n                      <div style={{ fontSize: \"14px\", opacity: 0.8 }}>\r\n                        {loadingProgress > 0 ? \r\n                          `${loadingProgress}% (${formatFileSize(loadingBytes)})` : \r\n                          \"Initializing...\"}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div style={{ \r\n                      width: \"70%\", \r\n                      height: \"12px\", \r\n                      backgroundColor: isDarkMode ? \"#333\" : \"#ddd\",\r\n                      borderRadius: \"6px\",\r\n                      overflow: \"hidden\",\r\n                      boxShadow: \"inset 0 1px 3px rgba(0,0,0,0.2)\"\r\n                    }}>\r\n                      <div style={{\r\n                        width: `${loadingProgress > 0 ? loadingProgress : 5}%`,\r\n                        height: \"100%\",\r\n                        backgroundColor: loadingProgress > 0 ? \"#00bcd4\" : \"#999\",\r\n                        transition: \"width 0.3s ease\",\r\n                        animation: loadingProgress === 0 ? \"pulse 1.5s infinite\" : \"none\"\r\n                      }} />\r\n                    </div>\r\n                    \r\n                    {/* Add retry button if stuck for too long */}\r\n                    {loadingProgress === 0 && (\r\n                      <button \r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          console.log(\"🔄 Manual retry requested\");\r\n                          // Force remount of component\r\n                          cleanup();\r\n                          isInitializedRef.current = false;\r\n                          setModelPath(null);\r\n                          setTimeout(() => {\r\n                            fetch(`${API_URL}/api/profile/${profileId}`)\r\n                              .then(res => res.json())\r\n                              .then(data => {\r\n                                if (data.model_path) {\r\n                                  setModelPath(data.model_path);\r\n                                  console.log(\"🔄 Forced model reload\");\r\n                                }\r\n                              });\r\n                          }, 500);\r\n                        }}\r\n                        style={{\r\n                          marginTop: \"20px\",\r\n                          padding: \"8px 16px\",\r\n                          backgroundColor: isDarkMode ? \"#444\" : \"#eee\",\r\n                          border: \"none\",\r\n                          borderRadius: \"4px\",\r\n                          cursor: \"pointer\",\r\n                          color: isDarkMode ? \"#fff\" : \"#000\"\r\n                        }}\r\n                      >\r\n                        Retry Loading\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                \r\n                {/* Error message */}\r\n                {loadError && !isLoading && (\r\n                  <div style={{ \r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    backgroundColor: isDarkMode ? \"#1a1a1a\" : \"#f5f5f5\",\r\n                    color: \"#e74c3c\",\r\n                    padding: \"20px\",\r\n                    textAlign: \"center\",\r\n                    zIndex: 10\r\n                  }}>\r\n                    <div style={{ marginBottom: \"20px\" }}>\r\n                      <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                        <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n                        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />\r\n                        <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div>{loadError}</div>\r\n                  </div>\r\n                )}\r\n                \r\n                {/* No model message */}\r\n                {!modelPath && !isLoading && !loadError && (\r\n                  <div style={{ \r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    backgroundColor: isDarkMode ? \"#1a1a1a\" : \"#f5f5f5\",\r\n                    zIndex: 10\r\n                  }}>\r\n                    <div style={{ marginBottom: \"10px\" }}>No 3D model available</div>\r\n                    <div style={{ fontSize: \"14px\", opacity: 0.7 }}>Upload a .glb file below</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* File Upload Section */}\r\n              <div style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                gap: \"10px\",\r\n                padding: \"15px\",\r\n                backgroundColor: isDarkMode ? \"#111\" : \"#f5f5f5\",\r\n                borderRadius: \"4px\",\r\n                border: \"1px solid \" + (isDarkMode ? \"#333\" : \"#ddd\"),\r\n                marginTop: \"10px\"\r\n              }}>\r\n                <p style={{ margin: 0, fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n                  Upload 3D Model\r\n                </p>\r\n                \r\n                <div style={{ fontSize: \"14px\", opacity: 0.8, marginBottom: \"8px\" }}>\r\n                  Accepts <b>.glb</b> files - Max size: 100MB\r\n                </div>\r\n                \r\n                <div style={{ display: \"flex\", gap: \"10px\", alignItems: \"center\" }}>\r\n                  <input \r\n                    type=\"file\" \r\n                    accept=\".glb\"\r\n                    ref={fileInputRef}\r\n                    onClick={(e) => e.stopPropagation()}\r\n                    onChange={(e) => {\r\n                      if (e.target.files && e.target.files.length > 0) {\r\n                        const file = e.target.files[0];\r\n                        console.log(`📦 Selected file: ${file.name}, size: ${(file.size/1024/1024).toFixed(2)}MB`);\r\n                        setSelectedFile(file);\r\n                      }\r\n                    }}\r\n                    style={{ \r\n                      flex: 1,\r\n                      padding: \"8px\",\r\n                      border: \"1px solid \" + (isDarkMode ? \"#444\" : \"#ccc\"),\r\n                      borderRadius: \"4px\",\r\n                      backgroundColor: isDarkMode ? \"#222\" : \"#fff\",\r\n                      color: isDarkMode ? \"#fff\" : \"#000\"\r\n                    }}\r\n                  />\r\n                  \r\n                  <button \r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleFileUpload();\r\n                    }}\r\n                    disabled={!selectedFile || isLoading}\r\n                    style={{\r\n                      padding: \"10px 16px\",\r\n                      backgroundColor: selectedFile && !isLoading ? \"#4caf50\" : \"#ccc\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      borderRadius: \"4px\",\r\n                      cursor: selectedFile && !isLoading ? \"pointer\" : \"not-allowed\",\r\n                      fontWeight: \"bold\",\r\n                      minWidth: \"80px\"\r\n                    }}\r\n                  >\r\n                    {isLoading ? \"Uploading...\" : \"Upload\"}\r\n                  </button>\r\n                </div>\r\n                \r\n                {selectedFile && (\r\n                  <div style={{\r\n                    marginTop: \"8px\",\r\n                    padding: \"8px\",\r\n                    backgroundColor: isDarkMode ? \"#222\" : \"#e7f7e7\",\r\n                    borderRadius: \"4px\",\r\n                    fontSize: \"14px\"\r\n                  }}>\r\n                    <div>Selected: <b>{selectedFile.name}</b></div>\r\n                    <div>Size: {(selectedFile.size/1024/1024).toFixed(2)}MB</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Draggable>\r\n      </div>,\r\n      portalRef.current\r\n    );\r\n  } catch (err) {\r\n    console.error(\"Error rendering portal:\", err);\r\n    setPortalError(true);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default ThreeDModelWindow;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3557, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/WelcomeWindow/WelcomeWindow.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"buttonContainer\": \"WelcomeWindow-module__WdKywW__buttonContainer\",\n  \"buttonWithNotification\": \"WelcomeWindow-module__WdKywW__buttonWithNotification\",\n  \"dark\": \"WelcomeWindow-module__WdKywW__dark\",\n  \"dateTime\": \"WelcomeWindow-module__WdKywW__dateTime\",\n  \"logo\": \"WelcomeWindow-module__WdKywW__logo\",\n  \"notificationDot\": \"WelcomeWindow-module__WdKywW__notificationDot\",\n  \"welcomeButton\": \"WelcomeWindow-module__WdKywW__welcomeButton\",\n  \"welcomeHeader\": \"WelcomeWindow-module__WdKywW__welcomeHeader\",\n  \"welcomeWindow\": \"WelcomeWindow-module__WdKywW__welcomeWindow\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 3574, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/WelcomeWindow/WelcomeWindow.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport ToTestList from \"../ToTestList/ToTestList\"; // Import the ToTestList popup window React Component\r\nimport ServerWindow from \"../ServerWindow/ServerWindow\"; // Import Server Window Component\r\nimport styles from \"./WelcomeWindow.module.css\";\r\nimport { WindowName } from \"@/types/types\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Use require if not using images.d.ts\r\n//const logo = require(\"../../assets/logo.jpg\");\r\n\r\nconst WelcomeWindow: React.FC<{\r\n  openToTestList: () => void;\r\n  openServerWindow: () => void;\r\n}> = ({ \r\n  openToTestList,\r\n  openServerWindow\r\n}) => {\r\n\r\n  const [dateTime, setDateTime] = useState<string | null>(null);\r\n  const [showToTestList, setShowToTestList] = useState(false);\r\n  const [showServerWindow, setShowServerWindow] = useState(false);\r\n  const [hasTests, setHasTests] = useState(false); // Track if there are rows in the list\r\n  const nodeRef = useRef<HTMLDivElement>(null!);\r\n  const navigate = useNavigate();\r\n\r\n  // Check if the page is in dark mode\r\n  const isDarkMode = document.documentElement.classList.contains(\"dark\");\r\n\r\n// Function to format date and time as DD/MM/YYYY HH:MM:SS Timezone\r\nconst formatDateTime = (date: Date) => {\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const year = date.getFullYear();\r\n  const hours = String(date.getHours()).padStart(2, \"0\");\r\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n  const seconds = String(date.getSeconds()).padStart(2, \"0\");\r\n  \r\n  // Add timezone information\r\n\r\n  // in format e.g. \"America/New_York\" or \"Asia/Singapore\"\r\n  // const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n\r\n  // alternative, in format e.g. \"GMT+0800\"\r\n  const timezoneOffset = date.toTimeString().split(' ')[1];\r\n  \r\n  // update const here accordingly as timezone or timezoneOffset\r\n  return `${day}/${month}/${year} ${hours}:${minutes}:${seconds} (${timezoneOffset})`;\r\n};\r\n\r\n  // Update the date/time every second\r\n  useEffect(() => {\r\n    const updateDateTime = () => setDateTime(formatDateTime(new Date()));\r\n    updateDateTime();\r\n    const interval = setInterval(updateDateTime, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Check for rows in localStorage\r\n  useEffect(() => {\r\n    const savedRows = localStorage.getItem(\"toTestListRows\");\r\n    const hasRows = savedRows ? JSON.parse(savedRows).length > 0 : false;\r\n    // setHasTests is always passed a valid boolean (true or false).\r\n    // may receive null or an empty string due to the logic\r\n    // without true / false and just > 0\r\n    setHasTests(hasRows);\r\n  }, [showToTestList]);\r\n\r\n  const handleToTestListOpen = () => {\r\n    console.log(\"Calling openToTestList\");\r\n    openToTestList(); // This will invoke the function from page.tsx\r\n  };\r\n\r\n  const handleToTestListClose = () => {\r\n    console.log(\"ToTestList closed\");\r\n    setShowToTestList(false);\r\n  };\r\n\r\n  const handleServerWindowOpen = () => {\r\n    console.log(\"Calling openServerWindow\");\r\n    openServerWindow(); // This will invoke the function from page.tsx\r\n  };\r\n\r\n  const handleServerWindowClose = () => {\r\n    console.log(\"ServerWindow closed\");\r\n    setShowServerWindow(false);\r\n  };\r\n  \r\n  return (\r\n    <Draggable nodeRef={nodeRef} handle={`.${styles.welcomeHeader}`} positionOffset={{ x: \"-50%\", y: \"-50%\" }}>\r\n      <div\r\n        ref={nodeRef}\r\n        className={styles.welcomeWindow}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          minHeight: \"200px\",\r\n          background: isDarkMode\r\n            ? \"linear-gradient(135deg, #000000, #1a1a1a)\"\r\n            : \"linear-gradient(135deg, #ffffff, #e6f7ff)\",\r\n        }}\r\n    >\r\n      <header className={`${styles.welcomeHeader} drag-handle`}>\r\n      <img \r\n          src=\"/assets/SaRCLogo.png\" \r\n          alt=\"Satellite Research Centre Logo\" \r\n          className={styles.logo} \r\n          draggable=\"false\" \r\n          onDragStart={(e) => e.preventDefault()}\r\n        />\r\n        <h2>Satellite Research Centre</h2>\r\n        <h1>Satellite Automated Testing System</h1>\r\n        {dateTime && <p className={styles.dateTime}>{dateTime}</p>}\r\n      </header>\r\n      <div className={styles.buttonContainer}>\r\n        <div className={styles.buttonWithNotification}>\r\n          <button\r\n            className={styles.welcomeButton}\r\n            onClick={handleToTestListOpen}\r\n          >\r\n            Tests to Conduct\r\n          </button>\r\n          {hasTests && <span className={styles.notificationDot}></span>}\r\n        </div>\r\n        <button\r\n          className={styles.welcomeButton}\r\n          onClick={handleServerWindowOpen}\r\n        >\r\n          MCC\r\n        </button>\r\n      </div>\r\n    </div>\r\n</Draggable>\r\n  );\r\n};\r\n\r\nexport default WelcomeWindow;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3771, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/Taskbar/Taskbar.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"pulse\": \"Taskbar-module__gjB6Va__pulse\",\n  \"pulseAnimation\": \"Taskbar-module__gjB6Va__pulseAnimation\",\n  \"statusConnected\": \"Taskbar-module__gjB6Va__statusConnected\",\n  \"statusError\": \"Taskbar-module__gjB6Va__statusError\",\n  \"statusIndicator\": \"Taskbar-module__gjB6Va__statusIndicator\",\n  \"statusSimulation\": \"Taskbar-module__gjB6Va__statusSimulation\",\n  \"statusWaiting\": \"Taskbar-module__gjB6Va__statusWaiting\",\n  \"taskAppear\": \"Taskbar-module__gjB6Va__taskAppear\",\n  \"taskbar\": \"Taskbar-module__gjB6Va__taskbar\",\n  \"taskbarItem\": \"Taskbar-module__gjB6Va__taskbarItem\",\n  \"taskbarItemIcon\": \"Taskbar-module__gjB6Va__taskbarItemIcon\",\n  \"taskbarItemProgress\": \"Taskbar-module__gjB6Va__taskbarItemProgress\",\n  \"taskbarItemProgressFill\": \"Taskbar-module__gjB6Va__taskbarItemProgressFill\",\n  \"taskbarItemTitle\": \"Taskbar-module__gjB6Va__taskbarItemTitle\",\n  \"taskbarItems\": \"Taskbar-module__gjB6Va__taskbarItems\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 3794, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/Taskbar/Taskbar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './Taskbar.module.css';\r\n\r\ninterface MinimizedWindow {\r\n  id: string;\r\n  title: string;\r\n  icon?: React.ReactNode;\r\n  status?: string;\r\n  progress?: number;\r\n  onRestore: () => void;\r\n}\r\n\r\ninterface TaskbarProps {\r\n  minimizedWindows: MinimizedWindow[];\r\n}\r\n\r\nconst Taskbar: React.FC<TaskbarProps> = ({ minimizedWindows }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  // Don't render if there are no minimized windows\r\n  if (minimizedWindows.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // Get icon based on window type and status\r\n  const getWindowIcon = (windowId: string, status?: string) => {\r\n    if (windowId === \"ServerWindow\") {\r\n      // Server window with status-based icon\r\n      if (status?.includes(\"Connected\")) {\r\n        return (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <rect x=\"2\" y=\"2\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect>\r\n            <rect x=\"2\" y=\"14\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect>\r\n            <line x1=\"6\" y1=\"6\" x2=\"6.01\" y2=\"6\"></line>\r\n            <line x1=\"6\" y1=\"18\" x2=\"6.01\" y2=\"18\"></line>\r\n          </svg>\r\n        );\r\n      } else if (status?.includes(\"Error\") || status?.includes(\"Failed\")) {\r\n        return (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path>\r\n            <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line>\r\n            <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>\r\n          </svg>\r\n        );\r\n      } else {\r\n        return (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <rect x=\"2\" y=\"2\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect>\r\n            <rect x=\"2\" y=\"14\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect>\r\n            <line x1=\"6\" y1=\"6\" x2=\"6.01\" y2=\"6\"></line>\r\n            <line x1=\"6\" y1=\"18\" x2=\"6.01\" y2=\"18\"></line>\r\n          </svg>\r\n        );\r\n      }\r\n    } else if (windowId === \"ToTestList\") {\r\n      return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <path d=\"M8 6h13\"></path>\r\n          <path d=\"M8 12h13\"></path>\r\n          <path d=\"M8 18h13\"></path>\r\n          <path d=\"M3 6h.01\"></path>\r\n          <path d=\"M3 12h.01\"></path>\r\n          <path d=\"M3 18h.01\"></path>\r\n        </svg>\r\n      );\r\n    } else if (windowId === \"ThreeDModelWindow\") {\r\n      return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path>\r\n          <polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline>\r\n          <line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>\r\n        </svg>\r\n      );\r\n    }\r\n    \r\n    // Default icon for other windows\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n        <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\r\n        <line x1=\"3\" y1=\"9\" x2=\"21\" y2=\"9\"></line>\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  // Get status text for display\r\n  const getStatusText = (windowId: string, status?: string) => {\r\n    if (windowId === \"ServerWindow\") {\r\n      if (status?.includes(\"Connected\")) {\r\n        return status.includes(\"Simulation\") ? \"Sim Mode\" : \"Connected\";\r\n      } else if (status?.includes(\"Error\")) {\r\n        return \"Error\";\r\n      } else if (status?.includes(\"Failed\")) {\r\n        return \"Failed\";\r\n      } else if (status?.includes(\"Partial\")) {\r\n        return \"Partial\";\r\n      } else {\r\n        return status || \"Offline\";\r\n      }\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  // Get status class for the indicator\r\n  const getStatusClass = (windowId: string, status?: string) => {\r\n    if (windowId === \"ServerWindow\") {\r\n      if (status?.includes(\"Connected\")) {\r\n        return status.includes(\"Simulation\") ? styles.statusSimulation : styles.statusConnected;\r\n      } else if (status?.includes(\"Error\") || status?.includes(\"Failed\")) {\r\n        return styles.statusError;\r\n      } else if (status?.includes(\"Partial\")) {\r\n        return styles.statusSimulation;\r\n      } else {\r\n        return styles.statusWaiting;\r\n      }\r\n    }\r\n    return styles.statusWaiting;\r\n  };\r\n\r\n  // Get icon color based on status\r\n  const getIconColor = (windowId: string, status?: string) => {\r\n    if (windowId === \"ServerWindow\") {\r\n      if (status?.includes(\"Connected\")) {\r\n        return status.includes(\"Simulation\") ? \"#f59e0b\" : \"#10b981\";\r\n      } else if (status?.includes(\"Error\") || status?.includes(\"Failed\")) {\r\n        return \"#ef4444\";\r\n      } else if (status?.includes(\"Partial\")) {\r\n        return \"#f59e0b\";\r\n      }\r\n    }\r\n    return isDarkMode ? \"rgba(255, 255, 255, 0.7)\" : \"rgba(17, 24, 39, 0.7)\";\r\n  };\r\n\r\n  return (\r\n    <div className={styles.taskbar}>\r\n      <div className={styles.taskbarItems}>\r\n        {minimizedWindows.map((window) => {\r\n          const statusText = getStatusText(window.id, window.status);\r\n          const iconColor = getIconColor(window.id, window.status);\r\n          const statusClass = getStatusClass(window.id, window.status);\r\n          const isActive = window.status?.includes(\"Running\") || window.status === \"Connecting...\";\r\n          \r\n          return (\r\n            <div \r\n              key={window.id}\r\n              className={styles.taskbarItem}\r\n              onClick={() => {\r\n                console.log(`Restoring window: ${window.id}`);\r\n                window.onRestore();\r\n              }}\r\n            >\r\n              {/* Status indicator dot */}\r\n              <div className={`${styles.statusIndicator} ${statusClass} ${isActive ? styles.pulseAnimation : ''}`}></div>\r\n              \r\n              <span className={styles.taskbarItemIcon} style={{ color: iconColor }}>\r\n                {getWindowIcon(window.id, window.status)}\r\n              </span>\r\n              \r\n              <div style={{ display: 'flex', flexDirection: 'column', overflow: 'hidden', flex: 1 }}>\r\n                <span className={styles.taskbarItemTitle}>\r\n                  {window.title}\r\n                </span>\r\n                {statusText && (\r\n                  <span style={{ \r\n                    fontSize: '10px', \r\n                    color: iconColor,\r\n                    whiteSpace: 'nowrap',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis'\r\n                  }}>\r\n                    {statusText}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              \r\n              {window.progress !== undefined && (\r\n                <div className={styles.taskbarItemProgress}>\r\n                  <div \r\n                    className={styles.taskbarItemProgressFill}\r\n                    style={{ \r\n                      width: `${window.progress}%`,\r\n                      backgroundColor: iconColor\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Taskbar;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4304, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/FontLoader/FontLoader.tsx"],"sourcesContent":["// src/components/FontLoader/FontLoader.tsx\r\nimport React, { useEffect, useState } from 'react';\r\n\r\ninterface FontLoaderProps {\r\n  fontFamily?: string;\r\n}\r\n\r\nconst FontLoader: React.FC<FontLoaderProps> = ({ fontFamily = 'System Default' }) => {\r\n  // Add a state to track loaded fonts and force re-renders when needed\r\n  const [loadedFonts, setLoadedFonts] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Font loading logic - only load non-system fonts\r\n    const loadFonts = async () => {\r\n      // Map of font names to Google Fonts URLs\r\n      const fontUrls: Record<string, string> = {\r\n        'Roboto': 'https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap',\r\n        'Open Sans': 'https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap',\r\n        'Montserrat': 'https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&display=swap',\r\n        'Source Code Pro': 'https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600&display=swap'\r\n      };\r\n\r\n      // Extract the base font name from the fontFamily string\r\n      const baseFontName = fontFamily.split(',')[0].trim().replace(/[\"']/g, '');\r\n      \r\n      // Skip loading for system default\r\n      if (baseFontName === 'Arial' || baseFontName === 'System Default') {\r\n        return;\r\n      }\r\n\r\n      // Find matching font URL\r\n      let fontUrl = '';\r\n      for (const [fontName, url] of Object.entries(fontUrls)) {\r\n        if (baseFontName.includes(fontName) || fontName.includes(baseFontName)) {\r\n          fontUrl = url;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!fontUrl) return;\r\n\r\n      // Add the font link to the document head if not already loaded\r\n      if (!loadedFonts.includes(baseFontName)) {\r\n        const link = document.createElement('link');\r\n        link.href = fontUrl;\r\n        link.rel = 'stylesheet';\r\n        document.head.appendChild(link);\r\n        \r\n        // Update loaded fonts state\r\n        setLoadedFonts(prev => [...prev, baseFontName]);\r\n        \r\n        console.log(`Loaded font: ${baseFontName}`);\r\n      }\r\n\r\n      // Add a specific style element for this font to force the preview to update\r\n      const styleId = `font-preview-style-${baseFontName.replace(/\\s+/g, '-')}`;\r\n      let styleEl = document.getElementById(styleId);\r\n      \r\n      if (!styleEl) {\r\n        styleEl = document.createElement('style');\r\n        styleEl.id = styleId;\r\n        document.head.appendChild(styleEl);\r\n      }\r\n      \r\n      styleEl.textContent = `\r\n        .font-preview-${baseFontName.replace(/\\s+/g, '-')} {\r\n          font-family: ${fontFamily} !important;\r\n        }\r\n      `;\r\n    };\r\n\r\n    loadFonts();\r\n    \r\n    // Force a re-render with setTimeout to ensure the font has loaded\r\n    const forceUpdateTimer = setTimeout(() => {\r\n      // This empty function will trigger a re-render due to the useEffect dependency\r\n      setLoadedFonts(prev => [...prev]);\r\n    }, 100);\r\n    \r\n    return () => clearTimeout(forceUpdateTimer);\r\n  }, [fontFamily, loadedFonts]); // Add loadedFonts as a dependency\r\n\r\n  // This component doesn't render anything visible\r\n  return null;\r\n};\r\n\r\nexport default FontLoader;"],"names":[],"mappings":"AAAA,2CAA2C;;;;AAC3C;;AAMA,MAAM,aAAwC,CAAC,EAAE,aAAa,gBAAgB,EAAE;IAC9E,qEAAqE;IACrE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAE3D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,kDAAkD;QAClD,MAAM,YAAY;YAChB,yCAAyC;YACzC,MAAM,WAAmC;gBACvC,UAAU;gBACV,aAAa;gBACb,cAAc;gBACd,mBAAmB;YACrB;YAEA,wDAAwD;YACxD,MAAM,eAAe,WAAW,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,OAAO,CAAC,SAAS;YAEtE,kCAAkC;YAClC,IAAI,iBAAiB,WAAW,iBAAiB,kBAAkB;gBACjE;YACF;YAEA,yBAAyB;YACzB,IAAI,UAAU;YACd,KAAK,MAAM,CAAC,UAAU,IAAI,IAAI,OAAO,OAAO,CAAC,UAAW;gBACtD,IAAI,aAAa,QAAQ,CAAC,aAAa,SAAS,QAAQ,CAAC,eAAe;oBACtE,UAAU;oBACV;gBACF;YACF;YAEA,IAAI,CAAC,SAAS;YAEd,+DAA+D;YAC/D,IAAI,CAAC,YAAY,QAAQ,CAAC,eAAe;gBACvC,MAAM,OAAO,SAAS,aAAa,CAAC;gBACpC,KAAK,IAAI,GAAG;gBACZ,KAAK,GAAG,GAAG;gBACX,SAAS,IAAI,CAAC,WAAW,CAAC;gBAE1B,4BAA4B;gBAC5B,eAAe,CAAA,OAAQ;2BAAI;wBAAM;qBAAa;gBAE9C,QAAQ,GAAG,CAAC,CAAC,aAAa,EAAE,cAAc;YAC5C;YAEA,4EAA4E;YAC5E,MAAM,UAAU,CAAC,mBAAmB,EAAE,aAAa,OAAO,CAAC,QAAQ,MAAM;YACzE,IAAI,UAAU,SAAS,cAAc,CAAC;YAEtC,IAAI,CAAC,SAAS;gBACZ,UAAU,SAAS,aAAa,CAAC;gBACjC,QAAQ,EAAE,GAAG;gBACb,SAAS,IAAI,CAAC,WAAW,CAAC;YAC5B;YAEA,QAAQ,WAAW,GAAG,CAAC;sBACP,EAAE,aAAa,OAAO,CAAC,QAAQ,KAAK;uBACnC,EAAE,WAAW;;MAE9B,CAAC;QACH;QAEA;QAEA,kEAAkE;QAClE,MAAM,mBAAmB,WAAW;YAClC,+EAA+E;YAC/E,eAAe,CAAA,OAAQ;uBAAI;iBAAK;QAClC,GAAG;QAEH,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;QAAY;KAAY,GAAG,kCAAkC;IAEjE,iDAAiD;IACjD,OAAO;AACT;uCAEe","debugId":null}}]
}