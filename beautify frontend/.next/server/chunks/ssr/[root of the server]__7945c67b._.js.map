{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/MainScreen/MainScreen.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"aboutButton\": \"MainScreen-module__4v2AYG__aboutButton\",\n  \"aboutSection\": \"MainScreen-module__4v2AYG__aboutSection\",\n  \"actionButtons\": \"MainScreen-module__4v2AYG__actionButtons\",\n  \"addProfileButton\": \"MainScreen-module__4v2AYG__addProfileButton\",\n  \"bottomSection\": \"MainScreen-module__4v2AYG__bottomSection\",\n  \"cancelButton\": \"MainScreen-module__4v2AYG__cancelButton\",\n  \"checkoutButton\": \"MainScreen-module__4v2AYG__checkoutButton\",\n  \"checkoutSection\": \"MainScreen-module__4v2AYG__checkoutSection\",\n  \"content\": \"MainScreen-module__4v2AYG__content\",\n  \"dark\": \"MainScreen-module__4v2AYG__dark\",\n  \"deleteButton\": \"MainScreen-module__4v2AYG__deleteButton\",\n  \"docx\": \"MainScreen-module__4v2AYG__docx\",\n  \"docx-wrapper\": \"MainScreen-module__4v2AYG__docx-wrapper\",\n  \"downloadButton\": \"MainScreen-module__4v2AYG__downloadButton\",\n  \"dragItem\": \"MainScreen-module__4v2AYG__dragItem\",\n  \"dropHereText\": \"MainScreen-module__4v2AYG__dropHereText\",\n  \"dropZone\": \"MainScreen-module__4v2AYG__dropZone\",\n  \"dropZoneArea\": \"MainScreen-module__4v2AYG__dropZoneArea\",\n  \"dropdownButton\": \"MainScreen-module__4v2AYG__dropdownButton\",\n  \"droppableBox\": \"MainScreen-module__4v2AYG__droppableBox\",\n  \"editButton\": \"MainScreen-module__4v2AYG__editButton\",\n  \"editButtons\": \"MainScreen-module__4v2AYG__editButtons\",\n  \"editModeButtons\": \"MainScreen-module__4v2AYG__editModeButtons\",\n  \"editableArea\": \"MainScreen-module__4v2AYG__editableArea\",\n  \"editableTextarea\": \"MainScreen-module__4v2AYG__editableTextarea\",\n  \"emptyDropZone\": \"MainScreen-module__4v2AYG__emptyDropZone\",\n  \"hidden\": \"MainScreen-module__4v2AYG__hidden\",\n  \"hiddenDropZone\": \"MainScreen-module__4v2AYG__hiddenDropZone\",\n  \"imageContainer\": \"MainScreen-module__4v2AYG__imageContainer\",\n  \"imageWrapper\": \"MainScreen-module__4v2AYG__imageWrapper\",\n  \"isDragging\": \"MainScreen-module__4v2AYG__isDragging\",\n  \"isDropped\": \"MainScreen-module__4v2AYG__isDropped\",\n  \"isEnabled\": \"MainScreen-module__4v2AYG__isEnabled\",\n  \"isOver\": \"MainScreen-module__4v2AYG__isOver\",\n  \"mainScreen\": \"MainScreen-module__4v2AYG__mainScreen\",\n  \"menu\": \"MainScreen-module__4v2AYG__menu\",\n  \"menuItem\": \"MainScreen-module__4v2AYG__menuItem\",\n  \"profileActions\": \"MainScreen-module__4v2AYG__profileActions\",\n  \"profileButtonGroup\": \"MainScreen-module__4v2AYG__profileButtonGroup\",\n  \"profileContainer\": \"MainScreen-module__4v2AYG__profileContainer\",\n  \"profileDropdown\": \"MainScreen-module__4v2AYG__profileDropdown\",\n  \"profileHeading\": \"MainScreen-module__4v2AYG__profileHeading\",\n  \"profilePage\": \"MainScreen-module__4v2AYG__profilePage\",\n  \"profileSidebarItem\": \"MainScreen-module__4v2AYG__profileSidebarItem\",\n  \"profileSubtext\": \"MainScreen-module__4v2AYG__profileSubtext\",\n  \"profilesButton\": \"MainScreen-module__4v2AYG__profilesButton\",\n  \"removeDraggedItemsButton\": \"MainScreen-module__4v2AYG__removeDraggedItemsButton\",\n  \"removeImageButton\": \"MainScreen-module__4v2AYG__removeImageButton\",\n  \"retractExpandSidebarButton\": \"MainScreen-module__4v2AYG__retractExpandSidebarButton\",\n  \"richTextEditor\": \"MainScreen-module__4v2AYG__richTextEditor\",\n  \"saveButton\": \"MainScreen-module__4v2AYG__saveButton\",\n  \"scrollableContainer\": \"MainScreen-module__4v2AYG__scrollableContainer\",\n  \"settingsButton\": \"MainScreen-module__4v2AYG__settingsButton\",\n  \"settingsContainer\": \"MainScreen-module__4v2AYG__settingsContainer\",\n  \"sidebar\": \"MainScreen-module__4v2AYG__sidebar\",\n  \"sidebarHeader\": \"MainScreen-module__4v2AYG__sidebarHeader\",\n  \"startTestButton\": \"MainScreen-module__4v2AYG__startTestButton\",\n  \"threeDModelButton\": \"MainScreen-module__4v2AYG__threeDModelButton\",\n  \"toggleButton\": \"MainScreen-module__4v2AYG__toggleButton\",\n  \"topSection\": \"MainScreen-module__4v2AYG__topSection\",\n  \"uploadButton\": \"MainScreen-module__4v2AYG__uploadButton\",\n  \"uploadContainer\": \"MainScreen-module__4v2AYG__uploadContainer\",\n  \"uploadNote\": \"MainScreen-module__4v2AYG__uploadNote\",\n  \"uploadedFileName\": \"MainScreen-module__4v2AYG__uploadedFileName\",\n  \"uploadedImage\": \"MainScreen-module__4v2AYG__uploadedImage\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/MainScreen/DraggableBox.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSortable } from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport { CSSProperties } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styles from \"./MainScreen.module.css\";\r\n\r\ninterface DraggableBoxProps {\r\n  id: string;\r\n  header: string;\r\n  options: string[];\r\n  data?: {\r\n    type: string;\r\n    [key: string]: any;\r\n  };\r\n  isDropped?: boolean;\r\n  isInBottomSection?: boolean;\r\n  className?: string;\r\n  removeDroppedItem?: (id: string) => void;\r\n  isCheckoutEditing?: boolean;\r\n  checkedOptions?: Record<string, boolean>; // New prop to track checked state\r\n  onOptionChange?: (id: string, option: string, checked: boolean) => void; // New handler\r\n}\r\n\r\nconst DraggableBox: React.FC<DraggableBoxProps> = ({ \r\n  id, \r\n  header, \r\n  options, \r\n  data, \r\n  isDropped, \r\n  isInBottomSection, \r\n  removeDroppedItem, \r\n  isCheckoutEditing = false,\r\n  className,\r\n  checkedOptions = {}, // Default to empty object\r\n  onOptionChange // Handler for checkbox changes\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging\r\n  } = useSortable({\r\n    id: id,\r\n    data: {\r\n      type: \"draggable-item\",\r\n      isDraggable: !isDropped || isCheckoutEditing,\r\n      isDropped: isDropped\r\n    },\r\n    disabled: false\r\n  });\r\n\r\n  const isDarkMode = document.documentElement.classList.contains(\"dark\");\r\n\r\n  const defaultBgColor = isDarkMode ? \"#2d2d2d\" : \"#f8f9fa\";  \r\n  const droppedBgColor = defaultBgColor; \r\n\r\n  const shouldApplyEffect = isInBottomSection && isDropped && !isCheckoutEditing;\r\n\r\n  // Calculate height dynamically based on the max number of options in all dropped items\r\n  const baseHeight = 80; // Base height for header and padding\r\n  const optionHeight = 24; // Height per option\r\n  const maxVisibleOptions = 10; // Allow up to 10 options before scrolling\r\n  const totalHeight = baseHeight + (Math.min(options.length, maxVisibleOptions) * optionHeight);\r\n  const requiresScroll = options.length > maxVisibleOptions;\r\n\r\n  const [maxHeight, setMaxHeight] = useState(totalHeight);\r\n\r\n  useEffect(() => {\r\n    const allDroppedBoxes = document.querySelectorAll('[data-dropped=\"true\"]');\r\n    let highest = totalHeight;\r\n\r\n    allDroppedBoxes.forEach(box => {\r\n      const optionCount = box.querySelectorAll(\"label\").length;\r\n      const calculatedHeight = baseHeight + (Math.min(optionCount, maxVisibleOptions) * optionHeight);\r\n      if (calculatedHeight > highest) {\r\n        highest = calculatedHeight;\r\n      }\r\n    });\r\n\r\n    setMaxHeight(highest);\r\n  }, [options.length, isDropped]);\r\n\r\n  const style: CSSProperties = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition: \"background-color 0.3s ease-in-out, opacity 0.3s ease-in-out\",\r\n    padding: \"8px\",\r\n    margin: \"0\",\r\n    backgroundColor: isDropped ? droppedBgColor : defaultBgColor,\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    cursor: shouldApplyEffect ? \"not-allowed\" : isDragging ? \"grabbing\" : \"grab\", // ✅ Only disable cursor in bottom section\r\n    display: \"inline-block\",\r\n    width: \"145px\",\r\n    height: `${maxHeight}px`, // ✅ Apply max height across all boxes\r\n    boxSizing: \"border-box\",\r\n    opacity: shouldApplyEffect ? 0.5 : 1, // ✅ Only make translucent in bottom section\r\n    color: isDarkMode ? \"#ffffff\" : \"black\",\r\n    position: \"relative\",\r\n    zIndex: isDragging ? 999 : 1, // ✅ Ensure correct layering\r\n    touchAction: \"none\",\r\n    userSelect: \"none\",\r\n    overflowY: requiresScroll ? \"auto\" : \"hidden\", // ✅ Only enable scrolling after 10 options\r\n    overflowX: \"hidden\", \r\n    whiteSpace: \"normal\", \r\n    pointerEvents: shouldApplyEffect ? \"none\" : \"auto\", // ✅ Only make unselectable in bottom section\r\n  };\r\n\r\n  // Handle checkbox change\r\n  const handleCheckboxChange = (option: string, checked: boolean) => {\r\n    if (onOptionChange) {\r\n      onOptionChange(id, option, checked);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      {...attributes}\r\n      {...(isDropped && !isCheckoutEditing ? {} : listeners)}\r\n      data-draggable-id={id}\r\n      data-dropped={isDropped ? \"true\" : \"false\"}\r\n      className={className}\r\n    >\r\n{isDropped && removeDroppedItem && isCheckoutEditing && (\r\n  <button\r\n    onClick={() => removeDroppedItem(id)}\r\n    className={styles.removeDraggedItemsButton}\r\n  >\r\n    ✖\r\n  </button>\r\n)}\r\n\r\n      <h4 style={{ textAlign: \"center\", wordWrap: \"break-word\" }}>{header}</h4>\r\n      {options.map(option => (\r\n        <label key={option} style={{ \r\n          display: \"flex\", \r\n          alignItems: \"center\", \r\n          fontSize: \"12px\", \r\n          marginBottom: \"4px\", \r\n          textAlign: \"left\" \r\n        }}>\r\n          <input \r\n            type=\"checkbox\" \r\n            disabled={isDropped && !isCheckoutEditing}\r\n            style={{ marginRight: \"6px\" }}\r\n            checked={checkedOptions[option] || false}\r\n            onChange={(e) => handleCheckboxChange(option, e.target.checked)}\r\n          />\r\n          <span>{option}</span>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableBox;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;;;;;;AAmBA,MAAM,eAA4C,CAAC,EACjD,EAAE,EACF,MAAM,EACN,OAAO,EACP,IAAI,EACJ,SAAS,EACT,iBAAiB,EACjB,iBAAiB,EACjB,oBAAoB,KAAK,EACzB,SAAS,EACT,iBAAiB,CAAC,CAAC,EACnB,cAAc,AAAC,+BAA+B;EAC/C;IACC,MAAM,EACJ,UAAU,EACV,SAAS,EACT,UAAU,EACV,SAAS,EACT,UAAU,EACV,UAAU,EACX,GAAG,CAAA,GAAA,mKAAA,CAAA,cAAW,AAAD,EAAE;QACd,IAAI;QACJ,MAAM;YACJ,MAAM;YACN,aAAa,CAAC,aAAa;YAC3B,WAAW;QACb;QACA,UAAU;IACZ;IAEA,MAAM,aAAa,SAAS,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;IAE/D,MAAM,iBAAiB,aAAa,YAAY;IAChD,MAAM,iBAAiB;IAEvB,MAAM,oBAAoB,qBAAqB,aAAa,CAAC;IAE7D,uFAAuF;IACvF,MAAM,aAAa,IAAI,qCAAqC;IAC5D,MAAM,eAAe,IAAI,oBAAoB;IAC7C,MAAM,oBAAoB,IAAI,0CAA0C;IACxE,MAAM,cAAc,aAAc,KAAK,GAAG,CAAC,QAAQ,MAAM,EAAE,qBAAqB;IAChF,MAAM,iBAAiB,QAAQ,MAAM,GAAG;IAExC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kBAAkB,SAAS,gBAAgB,CAAC;QAClD,IAAI,UAAU;QAEd,gBAAgB,OAAO,CAAC,CAAA;YACtB,MAAM,cAAc,IAAI,gBAAgB,CAAC,SAAS,MAAM;YACxD,MAAM,mBAAmB,aAAc,KAAK,GAAG,CAAC,aAAa,qBAAqB;YAClF,IAAI,mBAAmB,SAAS;gBAC9B,UAAU;YACZ;QACF;QAEA,aAAa;IACf,GAAG;QAAC,QAAQ,MAAM;QAAE;KAAU;IAE9B,MAAM,QAAuB;QAC3B,WAAW,qKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC,YAAY;QACZ,SAAS;QACT,QAAQ;QACR,iBAAiB,YAAY,iBAAiB;QAC9C,QAAQ;QACR,cAAc;QACd,QAAQ,oBAAoB,gBAAgB,aAAa,aAAa;QACtE,SAAS;QACT,OAAO;QACP,QAAQ,GAAG,UAAU,EAAE,CAAC;QACxB,WAAW;QACX,SAAS,oBAAoB,MAAM;QACnC,OAAO,aAAa,YAAY;QAChC,UAAU;QACV,QAAQ,aAAa,MAAM;QAC3B,aAAa;QACb,YAAY;QACZ,WAAW,iBAAiB,SAAS;QACrC,WAAW;QACX,YAAY;QACZ,eAAe,oBAAoB,SAAS;IAC9C;IAEA,yBAAyB;IACzB,MAAM,uBAAuB,CAAC,QAAgB;QAC5C,IAAI,gBAAgB;YAClB,eAAe,IAAI,QAAQ;QAC7B;IACF;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,OAAO;QACN,GAAG,UAAU;QACb,GAAI,aAAa,CAAC,oBAAoB,CAAC,IAAI,SAAS;QACrD,qBAAmB;QACnB,gBAAc,YAAY,SAAS;QACnC,WAAW;;YAEhB,aAAa,qBAAqB,mCACjC,8OAAC;gBACC,SAAS,IAAM,kBAAkB;gBACjC,WAAW,yJAAA,CAAA,UAAM,CAAC,wBAAwB;0BAC3C;;;;;;0BAKG,8OAAC;gBAAG,OAAO;oBAAE,WAAW;oBAAU,UAAU;gBAAa;0BAAI;;;;;;YAC5D,QAAQ,GAAG,CAAC,CAAA,uBACX,8OAAC;oBAAmB,OAAO;wBACzB,SAAS;wBACT,YAAY;wBACZ,UAAU;wBACV,cAAc;wBACd,WAAW;oBACb;;sCACE,8OAAC;4BACC,MAAK;4BACL,UAAU,aAAa,CAAC;4BACxB,OAAO;gCAAE,aAAa;4BAAM;4BAC5B,SAAS,cAAc,CAAC,OAAO,IAAI;4BACnC,UAAU,CAAC,IAAM,qBAAqB,QAAQ,EAAE,MAAM,CAAC,OAAO;;;;;;sCAEhE,8OAAC;sCAAM;;;;;;;mBAdG;;;;;;;;;;;AAmBpB;uCAEe","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,8OAAC,oKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE","debugId":null}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\n        \"flex-1 outline-none bg-background dark:bg-background text-foreground dark:text-foreground\", // Added bg-background and text-foreground with dark variants\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/card.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = ({ \r\n  children, \r\n  className = '', \r\n  ...props \r\n}) => {\r\n  return (\r\n    <div \r\n      className={`bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-4 ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardHeader: React.FC<CardHeaderProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`mb-4 ${className}`} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardTitle: React.FC<CardTitleProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <h3 className={`text-lg font-semibold text-gray-900 dark:text-white ${className}`} {...props}>\r\n      {children}\r\n    </h3>\r\n  );\r\n};\r\n\r\ninterface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardContent: React.FC<CardContentProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={className} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardFooter: React.FC<CardFooterProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`mt-4 ${className}`} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;;;;;;AAOO,MAAM,OAA4B,CAAC,EACxC,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,WAAW,CAAC,4FAA4F,EAAE,WAAW;QACpH,GAAG,KAAK;kBAER;;;;;;AAGP;AAOO,MAAM,aAAwC,CAAC,EACpD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QAAI,WAAW,CAAC,KAAK,EAAE,WAAW;QAAG,GAAG,KAAK;kBAC3C;;;;;;AAGP;AAOO,MAAM,YAAsC,CAAC,EAClD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QAAG,WAAW,CAAC,oDAAoD,EAAE,WAAW;QAAG,GAAG,KAAK;kBACzF;;;;;;AAGP;AAOO,MAAM,cAA0C,CAAC,EACtD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QAAI,WAAW;QAAY,GAAG,KAAK;kBACjC;;;;;;AAGP;AAOO,MAAM,aAAwC,CAAC,EACpD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QAAI,WAAW,CAAC,KAAK,EAAE,WAAW;QAAG,GAAG,KAAK;kBAC3C;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/alert.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface AlertProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  variant?: 'default' | 'destructive' | 'warning' | 'success';\r\n}\r\n\r\nexport const Alert: React.FC<AlertProps> = ({\r\n  children,\r\n  className = '',\r\n  variant = 'default',\r\n  ...props\r\n}) => {\r\n  const variantClasses = {\r\n    default: 'bg-blue-50 border-blue-200 text-blue-800 dark:bg-blue-900/50 dark:border-blue-800 dark:text-blue-200',\r\n    destructive: 'bg-red-50 border-red-200 text-red-800 dark:bg-red-900/50 dark:border-red-800 dark:text-red-200',\r\n    warning: 'bg-yellow-50 border-yellow-200 text-yellow-800 dark:bg-yellow-900/50 dark:border-yellow-800 dark:text-yellow-200',\r\n    success: 'bg-green-50 border-green-200 text-green-800 dark:bg-green-900/50 dark:border-green-800 dark:text-green-200'\r\n  };\r\n  \r\n  return (\r\n    <div\r\n      role=\"alert\"\r\n      className={`p-4 mb-4 border rounded-lg ${variantClasses[variant]} ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface AlertTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const AlertTitle: React.FC<AlertTitleProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <h4\r\n      className={`font-medium text-lg mb-1 ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </h4>\r\n  );\r\n};\r\n\r\ninterface AlertDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const AlertDescription: React.FC<AlertDescriptionProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`text-sm ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;;;;AAQO,MAAM,QAA8B,CAAC,EAC1C,QAAQ,EACR,YAAY,EAAE,EACd,UAAU,SAAS,EACnB,GAAG,OACJ;IACC,MAAM,iBAAiB;QACrB,SAAS;QACT,aAAa;QACb,SAAS;QACT,SAAS;IACX;IAEA,qBACE,8OAAC;QACC,MAAK;QACL,WAAW,CAAC,2BAA2B,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW;QAC9E,GAAG,KAAK;kBAER;;;;;;AAGP;AAOO,MAAM,aAAwC,CAAC,EACpD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,WAAW,CAAC,yBAAyB,EAAE,WAAW;QACjD,GAAG,KAAK;kBAER;;;;;;AAGP;AAOO,MAAM,mBAAoD,CAAC,EAChE,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,WAAW,CAAC,QAAQ,EAAE,WAAW;QAChC,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/index.ts"],"sourcesContent":["// components/ui/index.ts\r\nexport * from './button';\r\nexport * from './progress';\r\nexport * from './tabs';\r\nexport * from './card';\r\nexport * from './alert';"],"names":[],"mappings":"AAAA,yBAAyB","debugId":null}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/CheckoutTestProgress/components/OBC1TestPanel.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"button\": \"OBC1TestPanel-module___sU2RW__button\",\n  \"buttonIcon\": \"OBC1TestPanel-module___sU2RW__buttonIcon\",\n  \"card\": \"OBC1TestPanel-module___sU2RW__card\",\n  \"cardContent\": \"OBC1TestPanel-module___sU2RW__cardContent\",\n  \"cardHeader\": \"OBC1TestPanel-module___sU2RW__cardHeader\",\n  \"cardIcon\": \"OBC1TestPanel-module___sU2RW__cardIcon\",\n  \"cardTitle\": \"OBC1TestPanel-module___sU2RW__cardTitle\",\n  \"infoCard\": \"OBC1TestPanel-module___sU2RW__infoCard\",\n  \"infoContent\": \"OBC1TestPanel-module___sU2RW__infoContent\",\n  \"infoIcon\": \"OBC1TestPanel-module___sU2RW__infoIcon\",\n  \"infoLabel\": \"OBC1TestPanel-module___sU2RW__infoLabel\",\n  \"infoValue\": \"OBC1TestPanel-module___sU2RW__infoValue\",\n  \"parameterBox\": \"OBC1TestPanel-module___sU2RW__parameterBox\",\n  \"parameterIcon\": \"OBC1TestPanel-module___sU2RW__parameterIcon\",\n  \"parameterLabel\": \"OBC1TestPanel-module___sU2RW__parameterLabel\",\n  \"parameterValue\": \"OBC1TestPanel-module___sU2RW__parameterValue\",\n  \"progressBar\": \"OBC1TestPanel-module___sU2RW__progressBar\",\n  \"progressBarFill\": \"OBC1TestPanel-module___sU2RW__progressBarFill\",\n  \"progressContainer\": \"OBC1TestPanel-module___sU2RW__progressContainer\",\n  \"progressLabel\": \"OBC1TestPanel-module___sU2RW__progressLabel\",\n  \"progressStep\": \"OBC1TestPanel-module___sU2RW__progressStep\",\n  \"progressValue\": \"OBC1TestPanel-module___sU2RW__progressValue\",\n  \"reportButton\": \"OBC1TestPanel-module___sU2RW__reportButton\",\n  \"spin\": \"OBC1TestPanel-module___sU2RW__spin\",\n  \"spinnerIcon\": \"OBC1TestPanel-module___sU2RW__spinnerIcon\",\n  \"statusBadge\": \"OBC1TestPanel-module___sU2RW__statusBadge\",\n  \"table\": \"OBC1TestPanel-module___sU2RW__table\",\n  \"tableBody\": \"OBC1TestPanel-module___sU2RW__tableBody\",\n  \"tableHeader\": \"OBC1TestPanel-module___sU2RW__tableHeader\",\n  \"tableRowAlt\": \"OBC1TestPanel-module___sU2RW__tableRowAlt\",\n  \"tempCard\": \"OBC1TestPanel-module___sU2RW__tempCard\",\n  \"tempGrid\": \"OBC1TestPanel-module___sU2RW__tempGrid\",\n  \"tempLabel\": \"OBC1TestPanel-module___sU2RW__tempLabel\",\n  \"tempValue\": \"OBC1TestPanel-module___sU2RW__tempValue\",\n  \"testPanel\": \"OBC1TestPanel-module___sU2RW__testPanel\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/utils/mccUtils.ts"],"sourcesContent":["// src/utils/mccUtils.ts\r\n// TypeScript implementation that supports both real and simulated modes\r\n\r\n// Define environment configuration\r\nconst MCC_CONFIG = {\r\n    // Use environment variables or a default\r\n    SIMULATION_MODE: process.env.REACT_APP_MCC_SIMULATION === 'true' \r\n                    || process.env.NODE_ENV === 'development',\r\n    LOG_LEVEL: process.env.REACT_APP_MCC_LOG_LEVEL || 'info',\r\n  };\r\n  \r\n  // Socket interface to standardize both real and simulated connections\r\n  export interface IMccSocket {\r\n    send: (message: string) => Promise<void>;\r\n    receive: (maxBytes?: number, timeout?: number) => Promise<string>;\r\n    close: () => void;\r\n  }\r\n  \r\n  // Logger for MCC operations\r\n  const mccLogger = {\r\n    debug: (message: string, ...args: any[]) => {\r\n      if (MCC_CONFIG.LOG_LEVEL === 'debug') {\r\n        console.debug(`[MCC] ${message}`, ...args);\r\n      }\r\n    },\r\n    info: (message: string, ...args: any[]) => {\r\n      if (['debug', 'info'].includes(MCC_CONFIG.LOG_LEVEL)) {\r\n        console.info(`[MCC] ${message}`, ...args);\r\n      }\r\n    },\r\n    warn: (message: string, ...args: any[]) => {\r\n      console.warn(`[MCC] ${message}`, ...args);\r\n    },\r\n    error: (message: string, ...args: any[]) => {\r\n      console.error(`[MCC] ${message}`, ...args);\r\n    }\r\n  };\r\n  \r\n  // Simulated MCC Socket implementation\r\n  class SimulatedMccSocket implements IMccSocket {\r\n    private readonly simulatedData: Map<string, string>;\r\n    private readonly delays: boolean;\r\n    \r\n    constructor(delays = true) {\r\n      this.simulatedData = new Map();\r\n      this.delays = delays;\r\n      \r\n      // Initialize with some default values\r\n      this.simulatedData.set(\"OBC1_FW_Ver_Major\", \"1\");\r\n      this.simulatedData.set(\"OBC1_FW_Ver_Minor\", \"2\");\r\n      this.simulatedData.set(\"OBC1_FW_Ver_Patch\", \"3\");\r\n      this.simulatedData.set(\"OBC1_3V3_D\", \"3300\");\r\n      this.simulatedData.set(\"OBC1_PS_3V3_OBC2_V\", \"3298\");\r\n      this.simulatedData.set(\"OBC1_PS_5V_OBC2_V\", \"5042\");\r\n      this.simulatedData.set(\"OBC1_PS_5V_OBC2_I\", \"120\");\r\n      this.simulatedData.set(\"OBC1_PS_3V3_OBC2_I\", \"80\");\r\n      this.simulatedData.set(\"OBC1_thruster_ch1_T\", \"24.5\");\r\n      this.simulatedData.set(\"OBC1_thruster_ch2_T\", \"25.2\");\r\n      this.simulatedData.set(\"OBC1_leocam_ch1_T\", \"22.1\");\r\n      this.simulatedData.set(\"OBC1_leocam_ch2_T\", \"23.0\");\r\n      this.simulatedData.set(\"OBC1_leocam_ch3_T\", \"22.7\");\r\n      this.simulatedData.set(\"OBC1_leocam_ch4_T\", \"23.5\");\r\n      this.simulatedData.set(\"OBC1_Q8_eMMC0_state\", \"1\");\r\n      this.simulatedData.set(\"OBC1_Q8_eMMC1_state\", \"0\");\r\n      this.simulatedData.set(\"OBC1_vcc_pspll\", \"0.85\");\r\n      this.simulatedData.set(\"OBC1_vcc_psbatt\", \"1.20\");\r\n      this.simulatedData.set(\"OBC1_vccint\", \"1.00\");\r\n      this.simulatedData.set(\"OBC1_vccbram\", \"1.00\");\r\n      this.simulatedData.set(\"OBC1_vccaux\", \"1.80\");\r\n      this.simulatedData.set(\"OBC1_ps_temp\", \"45.2\");\r\n      this.simulatedData.set(\"OBC1_remote_temp\", \"42.3\");\r\n      this.simulatedData.set(\"OBC1_pl_temp\", \"47.1\");\r\n      this.simulatedData.set(\"OBC1_Sys_uptime\", \"12345\");\r\n      this.simulatedData.set(\"OBC1_Sys_loads_1m\", \"0.25\");\r\n      this.simulatedData.set(\"OBC1_Sys_loads_5m\", \"0.30\");\r\n      this.simulatedData.set(\"OBC1_Sys_loads_15m\", \"0.28\");\r\n      this.simulatedData.set(\"OBC1_Sys_totalram\", \"1048576\");\r\n      this.simulatedData.set(\"OBC1_Sys_freeram\", \"524288\");\r\n      this.simulatedData.set(\"OBC1_Sys_sharedram\", \"65536\");\r\n      this.simulatedData.set(\"OBC1_Sys_bufferram\", \"32768\");\r\n      this.simulatedData.set(\"OBC1_Sys_totalswap\", \"2097152\");\r\n      this.simulatedData.set(\"OBC1_Sys_freeswap\", \"2097152\");\r\n      this.simulatedData.set(\"OBC1_Sys_procs\", \"68\");\r\n      this.simulatedData.set(\"OBC1_Sys_totalhigh\", \"0\");\r\n      this.simulatedData.set(\"OBC1_Sys_freehigh\", \"0\");\r\n      this.simulatedData.set(\"OBC1_Sys_mem_unit\", \"1\");\r\n      \r\n      mccLogger.info(`Initialized simulated MCC socket with ${this.simulatedData.size} parameters`);\r\n    }\r\n    \r\n    public async send(message: string): Promise<void> {\r\n      mccLogger.debug(`[SIM] Sending: ${message.trim()}`);\r\n      \r\n      // Parse the message to update simulated data if it's a set command\r\n      if (message.includes('.value=')) {\r\n        const [param, valueStr] = message.trim().split('.value=');\r\n        const value = valueStr.trim();\r\n        this.simulatedData.set(param, value);\r\n        mccLogger.debug(`[SIM] Set ${param} to ${value}`);\r\n      }\r\n      \r\n      // Add simulated delay if enabled\r\n      if (this.delays) {\r\n        await new Promise(resolve => setTimeout(resolve, 50 + Math.random() * 100));\r\n      }\r\n      \r\n      return Promise.resolve();\r\n    }\r\n    \r\n    public async receive(maxBytes = 4096, timeout = 5000): Promise<string> {\r\n      // This would contain the read logic for parameters that have been \r\n      // requested with param.log=true in a real implementation\r\n      \r\n      // In our simulation, just get the last parameters from the log=true messages\r\n      const loggedParams = Array.from(this.simulatedData.keys())\r\n        .filter(key => key.endsWith('.log') && this.simulatedData.get(key) === 'true');\r\n      \r\n      // Add simulated delay if enabled\r\n      if (this.delays) {\r\n        await new Promise(resolve => setTimeout(resolve, 100 + Math.random() * 200));\r\n      }\r\n      \r\n      // For simulation, if log=true isn't set (because we don't track it),\r\n      // we'll just respond to the actual parameter name\r\n      // Extract parameter names from something like \"param.log=true\\n\"\r\n      const responses: string[] = [];\r\n      \r\n      // Extract all parameters from buffer that may have been sent with .log=true\r\n      const requestBuffer = this.recentRequests.join('\\n');\r\n      const paramMatches = Array.from(requestBuffer.matchAll(/([A-Za-z0-9_]+)\\.log=true/g));\r\n      \r\n      if (paramMatches.length > 0) {\r\n        for (const match of paramMatches) {\r\n          const param = match[1];\r\n          // Check if we have this parameter\r\n          if (this.simulatedData.has(param)) {\r\n            responses.push(`${param}=${this.simulatedData.get(param)}`);\r\n          } else {\r\n            // Generate a random value for simulation\r\n            const randomValue = (Math.random() * 100).toFixed(2);\r\n            responses.push(`${param}=${randomValue}`);\r\n          }\r\n        }\r\n      }\r\n      \r\n      mccLogger.debug(`[SIM] Received response: ${responses.join('\\n')}`);\r\n      return responses.join('\\n');\r\n    }\r\n    \r\n    public close(): void {\r\n      mccLogger.info('[SIM] Closed simulated MCC socket');\r\n    }\r\n    \r\n    // Track recent requests for simulation purposes\r\n    private recentRequests: string[] = [];\r\n    \r\n    // Helper method to simulate reading multiple parameters\r\n    public simulateRead(parameters: string[]): string[] {\r\n      return parameters.map(param => {\r\n        const value = this.simulatedData.get(param) || 'simulated';\r\n        return `${param}=${value}`;\r\n      });\r\n    }\r\n  }\r\n  \r\n  // Real MCC Socket implementation using WebSocket\r\n  class RealMccSocket implements IMccSocket {\r\n    private readonly socket: WebSocket;\r\n    private readonly callbacks: Map<string, (data: string) => void>;\r\n    private readonly timeouts: Map<string, NodeJS.Timeout>;\r\n    \r\n    constructor(socket: WebSocket) {\r\n      this.socket = socket;\r\n      this.callbacks = new Map();\r\n      this.timeouts = new Map();\r\n      \r\n      // Set up message handler\r\n      this.socket.onmessage = this.handleMessage.bind(this);\r\n      this.socket.onerror = this.handleError.bind(this);\r\n      this.socket.onclose = this.handleClose.bind(this);\r\n      \r\n      mccLogger.info('Initialized real MCC socket connection');\r\n    }\r\n    \r\n    private handleMessage(event: MessageEvent): void {\r\n      const data = event.data;\r\n      mccLogger.debug(`[REAL] Received: ${data}`);\r\n      \r\n      // Call any registered callbacks\r\n      for (const [id, callback] of this.callbacks) {\r\n        callback(data);\r\n        \r\n        // Remove the callback and its timeout\r\n        this.callbacks.delete(id);\r\n        const timeout = this.timeouts.get(id);\r\n        if (timeout) {\r\n          clearTimeout(timeout);\r\n          this.timeouts.delete(id);\r\n        }\r\n      }\r\n    }\r\n    \r\n    private handleError(event: Event): void {\r\n      mccLogger.error(`[REAL] WebSocket error: ${event}`);\r\n      \r\n      // Reject all pending callbacks with the error\r\n      for (const [id, callback] of this.callbacks) {\r\n        callback(`ERROR: WebSocket error occurred`);\r\n        this.callbacks.delete(id);\r\n        \r\n        const timeout = this.timeouts.get(id);\r\n        if (timeout) {\r\n          clearTimeout(timeout);\r\n          this.timeouts.delete(id);\r\n        }\r\n      }\r\n    }\r\n    \r\n    private handleClose(event: CloseEvent): void {\r\n      mccLogger.warn(`[REAL] WebSocket closed: ${event.code} ${event.reason}`);\r\n      \r\n      // Reject all pending callbacks\r\n      for (const [id, callback] of this.callbacks) {\r\n        callback(`ERROR: WebSocket closed: ${event.code} ${event.reason}`);\r\n        this.callbacks.delete(id);\r\n        \r\n        const timeout = this.timeouts.get(id);\r\n        if (timeout) {\r\n          clearTimeout(timeout);\r\n          this.timeouts.delete(id);\r\n        }\r\n      }\r\n    }\r\n    \r\n    public async send(message: string): Promise<void> {\r\n      mccLogger.debug(`[REAL] Sending: ${message.trim()}`);\r\n      \r\n      return new Promise<void>((resolve, reject) => {\r\n        if (this.socket.readyState !== WebSocket.OPEN) {\r\n          mccLogger.error('[REAL] Socket not open');\r\n          reject(new Error('Socket not open'));\r\n          return;\r\n        }\r\n        \r\n        try {\r\n          this.socket.send(message);\r\n          resolve();\r\n        } catch (error) {\r\n          mccLogger.error(`[REAL] Send error: ${error}`);\r\n          reject(error);\r\n        }\r\n      });\r\n    }\r\n    \r\n    public async receive(maxBytes = 4096, timeout = 5000): Promise<string> {\r\n      return new Promise<string>((resolve, reject) => {\r\n        const id = `receive-${Date.now()}-${Math.random()}`;\r\n        \r\n        // Create a timeout handler\r\n        const timeoutId = setTimeout(() => {\r\n          this.callbacks.delete(id);\r\n          reject(new Error(`Receive timeout after ${timeout}ms`));\r\n        }, timeout);\r\n        \r\n        // Store the timeout and callback\r\n        this.timeouts.set(id, timeoutId);\r\n        this.callbacks.set(id, resolve);\r\n      });\r\n    }\r\n    \r\n    public close(): void {\r\n      mccLogger.info('[REAL] Closing MCC socket');\r\n      this.socket.close();\r\n      \r\n      // Clear all timeouts\r\n      for (const timeoutId of this.timeouts.values()) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n      this.timeouts.clear();\r\n      this.callbacks.clear();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Create an MCC socket connection based on configuration\r\n   * \r\n   * @param serverAddress Server address in format \"host:port\"\r\n   * @returns A promise that resolves to an IMccSocket interface\r\n   */\r\n  export async function createMccSocket(serverAddress: string): Promise<IMccSocket> {\r\n    // Check if we should use simulation mode\r\n    if (MCC_CONFIG.SIMULATION_MODE) {\r\n      mccLogger.info(`Creating simulated MCC socket (address: ${serverAddress})`);\r\n      return new SimulatedMccSocket();\r\n    }\r\n    \r\n    // Otherwise, create a real WebSocket connection\r\n    mccLogger.info(`Connecting to real MCC server at ${serverAddress}`);\r\n    \r\n    // Extract host and port from server address\r\n    const [host, portStr] = serverAddress.split(\":\");\r\n    const port = parseInt(portStr, 10);\r\n    \r\n    try {\r\n      // Create a WebSocket connection\r\n      const socket = new WebSocket(`ws://${host}:${port}`);\r\n      \r\n      // Wait for the connection to open\r\n      await new Promise<void>((resolve, reject) => {\r\n        socket.onopen = () => resolve();\r\n        socket.onerror = (err) => reject(new Error(`WebSocket connection error: ${err}`));\r\n        \r\n        // Add a timeout\r\n        setTimeout(() => reject(new Error('Connection timeout')), 5000);\r\n      });\r\n      \r\n      return new RealMccSocket(socket);\r\n    } catch (error) {\r\n      mccLogger.error(`Failed to connect to MCC server: ${error}`);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Connect to the MCC server - a backwards-compatible wrapper for createMccSocket\r\n   * \r\n   * @param serverAddress Server address in format \"host:port\"\r\n   * @returns A promise that resolves to an IMccSocket interface\r\n   */\r\n  export async function connectToMcc(serverAddress: string): Promise<IMccSocket | null> {\r\n    try {\r\n      return await createMccSocket(serverAddress);\r\n    } catch (error) {\r\n      mccLogger.error(`Connection error: ${error}`);\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  /**\r\n * Send a command to set a parameter value over a socket connection\r\n * \r\n * @param sock The socket connection to the MCC server\r\n * @param parameter The parameter name to set\r\n * @param value The value to set\r\n * @returns A promise that resolves when the command is sent\r\n */\r\nexport async function mccifSet(sock: any, parameter: string, value: any): Promise<void> {\r\n    // Format the message in the same way as the Python implementation\r\n    const message = `${parameter}.value=${value}\\n`;\r\n    \r\n    // Check if we're in development mode and sock might be missing\r\n    if (!sock) {\r\n      console.warn(`Using simulation fallback for ${parameter}=${value}`);\r\n      return Promise.resolve();\r\n    }\r\n    \r\n    // Handle simulation mode using the older API\r\n    if (sock && typeof sock.simulateRead === 'function') {\r\n      console.log(`Using simulation mode to set ${parameter}=${value}`);\r\n      if (typeof sock.send === 'function') {\r\n        return sock.send(message);\r\n      }\r\n      return Promise.resolve();\r\n    }\r\n    \r\n    // Handle simulation mode using the newer API\r\n    if (sock instanceof SimulatedMccSocket) {\r\n      return sock.send(message);\r\n    }\r\n    \r\n    // Handle the IMccSocket interface\r\n    if (sock && typeof sock.send === 'function') {\r\n      return sock.send(message);\r\n    }\r\n    \r\n    // If no valid socket is available, log the error but don't throw\r\n    console.error(\"No valid socket connection available\");\r\n    return Promise.resolve(); // Don't reject, just continue\r\n  }\r\n  \r\n  /**\r\n * Read parameter values over a socket connection\r\n * \r\n * @param sock The socket connection to the MCC server\r\n * @param parameters Array of parameter names to read\r\n * @returns A promise that resolves to an array of response strings\r\n */\r\nexport async function mccifRead(sock: any, parameters: string[]): Promise<string[]> {\r\n    // Check if sock is missing entirely\r\n    if (!sock) {\r\n      console.warn(\"Using fallback simulation for missing socket\");\r\n      return parameters.map(param => {\r\n        // Generate simulated values for common parameters\r\n        if (param.includes(\"FW_Ver\")) {\r\n          const version = param.includes(\"Major\") ? \"1\" : \r\n                          param.includes(\"Minor\") ? \"2\" : \"3\";\r\n          return `${param}=${version}`;\r\n        } else if (param.includes(\"3V3\") || param.includes(\"5V\")) {\r\n          // Voltage values in mV\r\n          return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n        } else if (param.includes(\"temp\") || param.includes(\"Temp\")) {\r\n          // Temperature values\r\n          return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n        } else {\r\n          return `${param}=simulated`;\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Check if we're in simulation mode (old API)\r\n    if (sock && typeof sock.simulateRead === 'function') {\r\n      console.log(`Using simulation API to read ${parameters.length} parameters`);\r\n      return sock.simulateRead(parameters);\r\n    }\r\n    \r\n    // Handle simulation mode (new API)\r\n    if (sock instanceof SimulatedMccSocket) {\r\n      return sock.simulateRead(parameters);\r\n    }\r\n    \r\n    // For real socket connection or anything implementing the IMccSocket interface\r\n    if (sock && typeof sock.send === 'function' && typeof sock.receive === 'function') {\r\n      try {\r\n        // Construct message to enable logging for each parameter\r\n        let message = \"\";\r\n        for (const param of parameters) {\r\n          message += `${param}.log=true\\n`;\r\n        }\r\n        \r\n        // Send the message\r\n        await sock.send(message);\r\n        \r\n        // Receive the response\r\n        const response = await sock.receive(4096, 20000); // 20 second timeout\r\n        \r\n        // Process the response\r\n        const lines = response.split('\\n');\r\n        const result = lines.slice(0, parameters.length);\r\n        \r\n        // Disable logging\r\n        message = \"\";\r\n        for (const param of parameters) {\r\n          message += `${param}.log=false\\n`;\r\n        }\r\n        await sock.send(message);\r\n        \r\n        return result;\r\n      } catch (error) {\r\n        console.error(`MCC read error: ${error}`);\r\n        // Return simulated values instead of throwing\r\n        return parameters.map(param => `${param}=simulated_fallback`);\r\n      }\r\n    }\r\n    \r\n    // If we're in development mode without a real server or proper simulation, return hardcoded values\r\n    console.warn(\"No valid socket connection available, using fallback simulated values\");\r\n    \r\n    // Create a simple fallback\r\n    return parameters.map(param => {\r\n      switch (param) {\r\n        case \"OBC1_FW_Ver_Major\":\r\n          return \"OBC1_FW_Ver_Major=1\";\r\n        case \"OBC1_FW_Ver_Minor\":\r\n          return \"OBC1_FW_Ver_Minor=2\";\r\n        case \"OBC1_FW_Ver_Patch\":\r\n          return \"OBC1_FW_Ver_Patch=3\";\r\n        case \"OBC1_3V3_D\":\r\n          return \"OBC1_3V3_D=3300\";\r\n        case \"OBC1_PS_3V3_OBC2_V\":\r\n          return \"OBC1_PS_3V3_OBC2_V=3298\";\r\n        case \"OBC1_PS_5V_OBC2_V\":\r\n          return \"OBC1_PS_5V_OBC2_V=5042\";\r\n        case \"OBC1_thruster_ch1_T\":\r\n          return \"OBC1_thruster_ch1_T=24.5\";\r\n        case \"OBC1_thruster_ch2_T\":\r\n          return \"OBC1_thruster_ch2_T=25.2\";\r\n        case \"OBC1_Q8_eMMC0_state\":\r\n          return \"OBC1_Q8_eMMC0_state=1\";\r\n        case \"OBC1_Q8_eMMC1_state\":\r\n          return \"OBC1_Q8_eMMC1_state=0\";\r\n        default:\r\n          return `${param}=simulated`;\r\n      }\r\n    });\r\n  }\r\n  \r\n  // Export a helper to check if we're in simulation mode\r\n  export function isSimulationMode(): boolean {\r\n    return MCC_CONFIG.SIMULATION_MODE;\r\n  }\r\n  \r\n  // Export a helper to toggle simulation mode at runtime\r\n  export function setSimulationMode(enabled: boolean): void {\r\n    MCC_CONFIG.SIMULATION_MODE = enabled;\r\n    mccLogger.info(`Simulation mode ${enabled ? 'enabled' : 'disabled'}`);\r\n  }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1058, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/services/checkout/obc1Checkout.ts"],"sourcesContent":["// src/services/checkout/obc1Checkout.ts\r\nimport { mccifSet, mccifRead } from '@/utils/mccUtils';\r\n\r\n// Progress callback type\r\ntype ProgressCallback = (step: string, percent: number) => void;\r\n\r\n/**\r\n * Run the OBC-1 checkout test suite\r\n * \r\n * @param sock Socket connection to the MCC server\r\n * @param enableEmmc Whether to test the eMMC functionality\r\n * @param onProgress Callback for progress updates\r\n * @returns The test results\r\n */\r\nexport async function runOBC1Checkout(\r\n  sock: any, \r\n  enableEmmc: boolean,\r\n  onProgress: ProgressCallback = () => {}\r\n): Promise<any> {\r\n  try {\r\n    // Initialize the results object\r\n    const results = {\r\n      firmware: { major: '', minor: '', patch: '' },\r\n      kernel: { \r\n        uptime: '', \r\n        loads: { oneMinute: '', fiveMinute: '', fifteenMinute: '' },\r\n        memory: { \r\n          totalRam: '', freeRam: '', sharedRam: '', bufferRam: '', \r\n          totalSwap: '', freeSwap: '', memUnit: '', totalHigh: '', freeHigh: '' \r\n        },\r\n        processes: ''\r\n      },\r\n      fpga: { \r\n        voltages: { \r\n          vccPspll: '', vccPsbatt: '', vccint: '', vccbram: '', vccaux: '' \r\n          // Add others as needed\r\n        },\r\n        temperatures: { psTemp: '', remoteTemp: '', plTemp: '' }\r\n      },\r\n      vi: {\r\n        d3v3: { value: '', pass: false },\r\n        ps3v3Obc2: { value: '', pass: false },\r\n        ps5vObc2: { value: '', pass: false },\r\n        ps5vObc2I: '',\r\n        ps3v3Obc2I: ''\r\n      },\r\n      temperatures: {\r\n        thruster1: '',\r\n        thruster2: '',\r\n        leocam: ['', '', '', ''] \r\n      },\r\n      emmc: {\r\n        emmc0States: [] as string[],  // Define explicit type as string array\r\n        emmc1States: [] as string[]   // Define explicit type as string array\r\n      },\r\n      reportGenerated: false\r\n    };\r\n\r\n    // Step 1: Read firmware version (5%)\r\n    onProgress('Reading Firmware Version', 5);\r\n    const fwVars = [\"OBC1_FW_Ver_Major\", \"OBC1_FW_Ver_Minor\", \"OBC1_FW_Ver_Patch\"];\r\n    \r\n    try {\r\n      const fwResults = await mccifRead(sock, fwVars);\r\n      results.firmware.major = fwResults[0].split('=')[1];\r\n      results.firmware.minor = fwResults[1].split('=')[1];\r\n      results.firmware.patch = fwResults[2].split('=')[1];\r\n    } catch (error) {\r\n      console.error(\"Error reading firmware version:\", error);\r\n      // Continue with other tests despite this error\r\n    }\r\n\r\n    // Step 2: Read kernel info (20%)\r\n    onProgress('Reading Kernel Information', 20);\r\n    const kernelVars = [\r\n      \"OBC1_Sys_uptime\", \"OBC1_Sys_loads_1m\", \"OBC1_Sys_loads_5m\", \"OBC1_Sys_loads_15m\",\r\n      \"OBC1_Sys_totalram\", \"OBC1_Sys_freeram\", \"OBC1_Sys_sharedram\", \"OBC1_Sys_bufferram\",\r\n      \"OBC1_Sys_totalswap\", \"OBC1_Sys_freeswap\", \"OBC1_Sys_procs\", \"OBC1_Sys_pad\",\r\n      \"OBC1_Sys_totalhigh\", \"OBC1_Sys_freehigh\", \"OBC1_Sys_mem_unit\"\r\n    ];\r\n    \r\n    try {\r\n      const kernelResults = await mccifRead(sock, kernelVars);\r\n      results.kernel.uptime = kernelResults[0].split('=')[1];\r\n      results.kernel.loads.oneMinute = kernelResults[1].split('=')[1];\r\n      results.kernel.loads.fiveMinute = kernelResults[2].split('=')[1];\r\n      results.kernel.loads.fifteenMinute = kernelResults[3].split('=')[1];\r\n      results.kernel.memory.totalRam = kernelResults[4].split('=')[1];\r\n      results.kernel.memory.freeRam = kernelResults[5].split('=')[1];\r\n      results.kernel.memory.sharedRam = kernelResults[6].split('=')[1];\r\n      results.kernel.memory.bufferRam = kernelResults[7].split('=')[1];\r\n      results.kernel.memory.totalSwap = kernelResults[8].split('=')[1];\r\n      results.kernel.memory.freeSwap = kernelResults[9].split('=')[1];\r\n      results.kernel.processes = kernelResults[10].split('=')[1];\r\n      // Skip pad\r\n      results.kernel.memory.totalHigh = kernelResults[12].split('=')[1];\r\n      results.kernel.memory.freeHigh = kernelResults[13].split('=')[1];\r\n      results.kernel.memory.memUnit = kernelResults[14].split('=')[1];\r\n    } catch (error) {\r\n      console.error(\"Error reading kernel info:\", error);\r\n      // Continue with other tests despite this error\r\n    }\r\n\r\n    // Step 3: Read FPGA values (40%)\r\n    onProgress('Reading FPGA Values', 40);\r\n    const fpgaVars = [\r\n      \"OBC1_vcc_pspll\", \"OBC1_vcc_psbatt\", \"OBC1_vccint\", \"OBC1_vccbram\", \"OBC1_vccaux\",\r\n      \"OBC1_vcc_psddr_pll\", \"OBC1_vccpsintfp_ddr\", \"OBC1_vccint1\", \"OBC1_vccaux1\", \"OBC1_vccvrefp\",\r\n      \"OBC1_vccvrefn\", \"OBC1_vccbram1\", \"OBC1_vccplintlp\", \"OBC1_vccplintfp\", \"OBC1_vccplaux\",\r\n      \"OBC1_vccams\", \"OBC1_vccpsintlp\", \"OBC1_vccpsintfp\", \"OBC1_vccpsaux\", \"OBC1_vccpsddr\",\r\n      \"OBC1_vccpsio3\", \"OBC1_vccpsio0\", \"OBC1_vccpsio1\", \"OBC1_vccpsio2\", \"OBC1_psmgtravcc\",\r\n      \"OBC1_psmgtravtt\", \"OBC1_vccams1\", \"OBC1_ps_temp\", \"OBC1_remote_temp\", \"OBC1_pl_temp\"\r\n    ];\r\n    \r\n    try {\r\n      const fpgaResults = await mccifRead(sock, fpgaVars);\r\n      \r\n      // First 27 are voltages, last 3 are temperatures\r\n      results.fpga.voltages.vccPspll = fpgaResults[0].split('=')[1];\r\n      results.fpga.voltages.vccPsbatt = fpgaResults[1].split('=')[1];\r\n      results.fpga.voltages.vccint = fpgaResults[2].split('=')[1];\r\n      results.fpga.voltages.vccbram = fpgaResults[3].split('=')[1];\r\n      results.fpga.voltages.vccaux = fpgaResults[4].split('=')[1];\r\n      // ... Set other voltages\r\n\r\n      results.fpga.temperatures.psTemp = fpgaResults[27].split('=')[1];\r\n      results.fpga.temperatures.remoteTemp = fpgaResults[28].split('=')[1];\r\n      results.fpga.temperatures.plTemp = fpgaResults[29].split('=')[1];\r\n    } catch (error) {\r\n      console.error(\"Error reading FPGA values:\", error);\r\n      // Continue with other tests despite this error\r\n    }\r\n\r\n    // Step 4: Read voltage and current (60%)\r\n    onProgress('Reading Voltage and Current', 60);\r\n    const viVars = [\r\n      \"OBC1_3V3_D\", \"OBC1_PS_3V3_OBC2_V\", \"OBC1_PS_5V_OBC2_V\", \r\n      \"OBC1_PS_5V_OBC2_I\", \"OBC1_PS_3V3_OBC2_I\"\r\n    ];\r\n    \r\n    try {\r\n      const viResults = await mccifRead(sock, viVars);\r\n      \r\n      const d3v3Value = viResults[0].split('=')[1];\r\n      const ps3v3Obc2Value = viResults[1].split('=')[1];\r\n      const ps5vObc2Value = viResults[2].split('=')[1];\r\n      \r\n      results.vi.d3v3 = { \r\n        value: d3v3Value, \r\n        pass: checkVoltage(d3v3Value, true) \r\n      };\r\n      results.vi.ps3v3Obc2 = { \r\n        value: ps3v3Obc2Value, \r\n        pass: checkVoltage(ps3v3Obc2Value, true) \r\n      };\r\n      results.vi.ps5vObc2 = { \r\n        value: ps5vObc2Value, \r\n        pass: checkVoltage(ps5vObc2Value, false) \r\n      };\r\n      results.vi.ps5vObc2I = viResults[3].split('=')[1];\r\n      results.vi.ps3v3Obc2I = viResults[4].split('=')[1];\r\n    } catch (error) {\r\n      console.error(\"Error reading voltage and current:\", error);\r\n      // Continue with other tests despite this error\r\n    }\r\n\r\n    // Step 5: Read temperature sensors (80%)\r\n    onProgress('Reading Temperature Sensors', 80);\r\n    const tempVars = [\r\n      \"OBC1_thruster_ch1_T\", \"OBC1_thruster_ch2_T\", \r\n      \"OBC1_leocam_ch1_T\", \"OBC1_leocam_ch2_T\",\r\n      \"OBC1_leocam_ch3_T\", \"OBC1_leocam_ch4_T\"\r\n    ];\r\n    \r\n    try {\r\n      const tempResults = await mccifRead(sock, tempVars);\r\n      \r\n      results.temperatures.thruster1 = tempResults[0].split('=')[1];\r\n      results.temperatures.thruster2 = tempResults[1].split('=')[1];\r\n      results.temperatures.leocam[0] = tempResults[2].split('=')[1];\r\n      results.temperatures.leocam[1] = tempResults[3].split('=')[1];\r\n      results.temperatures.leocam[2] = tempResults[4].split('=')[1];\r\n      results.temperatures.leocam[3] = tempResults[5].split('=')[1];\r\n    } catch (error) {\r\n      console.error(\"Error reading temperature sensors:\", error);\r\n      // Continue with other tests despite this error\r\n    }\r\n\r\n    // Step 6: EMMC test if enabled (90-100%)\r\n    if (enableEmmc) {\r\n      onProgress('Testing eMMC', 90);\r\n      \r\n      const emmcVars = [\"OBC1_Q8_eMMC0_state\", \"OBC1_Q8_eMMC1_state\"];\r\n      \r\n      try {\r\n        // Initial check\r\n        const emmcResult1 = await mccifRead(sock, emmcVars);\r\n        results.emmc.emmc0States.push(emmcResult1[0].split('=')[1]);\r\n        results.emmc.emmc1States.push(emmcResult1[1].split('=')[1]);\r\n        \r\n        // Test eMMC0\r\n        await mccifSet(sock, \"OBC1_Emmc_Control\", 1);\r\n        const emmcResult2 = await mccifRead(sock, emmcVars);\r\n        results.emmc.emmc0States.push(emmcResult2[0].split('=')[1]);\r\n        results.emmc.emmc1States.push(emmcResult2[1].split('=')[1]);\r\n        \r\n        await mccifSet(sock, \"OBC1_Emmc_Control\", 3);\r\n        await new Promise(resolve => setTimeout(resolve, 2000)); // Wait 2 seconds\r\n        \r\n        await mccifSet(sock, \"OBC1_Emmc_Control\", 5);\r\n        const emmcResult3 = await mccifRead(sock, emmcVars);\r\n        results.emmc.emmc0States.push(emmcResult3[0].split('=')[1]);\r\n        results.emmc.emmc1States.push(emmcResult3[1].split('=')[1]);\r\n        \r\n        // Test eMMC1\r\n        await mccifSet(sock, \"OBC1_Emmc_Control\", 2);\r\n        const emmcResult4 = await mccifRead(sock, emmcVars);\r\n        results.emmc.emmc0States.push(emmcResult4[0].split('=')[1]);\r\n        results.emmc.emmc1States.push(emmcResult4[1].split('=')[1]);\r\n        \r\n        await mccifSet(sock, \"OBC1_Emmc_Control\", 4);\r\n        await new Promise(resolve => setTimeout(resolve, 2000)); // Wait 2 seconds\r\n        \r\n        await mccifSet(sock, \"OBC1_Emmc_Control\", 6);\r\n        const emmcResult5 = await mccifRead(sock, emmcVars);\r\n        results.emmc.emmc0States.push(emmcResult5[0].split('=')[1]);\r\n        results.emmc.emmc1States.push(emmcResult5[1].split('=')[1]);\r\n      } catch (error) {\r\n        console.error(\"Error during eMMC test:\", error);\r\n        // Fill with N/A values if the test fails\r\n        results.emmc.emmc0States = Array(6).fill('N.A.');\r\n        results.emmc.emmc1States = Array(6).fill('N.A.');\r\n      }\r\n    } else {\r\n      // If eMMC test is disabled, set empty results\r\n      results.emmc.emmc0States = Array(6).fill('N.A.');\r\n      results.emmc.emmc1States = Array(6).fill('N.A.');\r\n    }\r\n\r\n    // Complete checkout (100%)\r\n    onProgress('Checkout Complete', 100);\r\n    \r\n    return results;\r\n    \r\n  } catch (error) {\r\n    console.error('Error during OBC-1 checkout:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Check if voltage is within acceptable range\r\n * \r\n * @param value Voltage value as a string (in mV)\r\n * @param isThreeVolt Whether this is a 3.3V check (true) or 5V check (false)\r\n * @returns True if the voltage is within acceptable range\r\n */\r\nfunction checkVoltage(value: string, isThreeVolt: boolean): boolean {\r\n  const numValue = parseFloat(value);\r\n  \r\n  if (isThreeVolt) {\r\n    // 3.3V check (typically 3000-3600 mV)\r\n    return numValue >= 3000 && numValue <= 3600;\r\n  } else {\r\n    // 5V check (typically 4750-5250 mV)\r\n    return numValue >= 4750 && numValue <= 5250;\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1374, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/services/reports/obc1Report.ts"],"sourcesContent":["// src/services/reports/obc1Report.ts\r\nimport { Document, Packer, Paragraph, TextRun, HeadingLevel, Table, TableRow, TableCell, BorderStyle, WidthType, AlignmentType } from 'docx';\r\nimport { saveAs } from 'file-saver';\r\n\r\n/**\r\n * Generate a Word document report for OBC-1 checkout results\r\n * \r\n * @param results The OBC-1 test results\r\n * @returns A promise that resolves to the filename of the saved report\r\n */\r\nexport async function generateOBC1Report(results: any): Promise<string> {\r\n  // Get current date and time for the report filename\r\n  const now = new Date();\r\n  const dateStr = now.toISOString().split('T')[0]; // YYYY-MM-DD\r\n  const timeStr = now.toTimeString().split(' ')[0].replace(/:/g, '-'); // HH-MM-SS\r\n  const filename = `OBC-1_Checkout_${dateStr}_${timeStr}.docx`;\r\n  \r\n  // Create the document\r\n  const doc = new Document({\r\n    sections: [{\r\n      properties: {},\r\n      children: [\r\n        // Title\r\n        new Paragraph({\r\n          text: \"OBC-1 Automated Self Check Out Test\",\r\n          heading: HeadingLevel.HEADING_1,\r\n          spacing: { after: 200 }\r\n        }),\r\n        \r\n        // Test metadata\r\n        new Paragraph({\r\n          text: `Test Version: 24.3.21`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Test Date: ${now.toLocaleDateString()}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Test Time: ${now.toLocaleTimeString()}`,\r\n          spacing: { after: 200 }\r\n        }),\r\n        \r\n        // Separator\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200 }\r\n        }),\r\n        \r\n        // Firmware Version section\r\n        new Paragraph({\r\n          text: \"* Firmware Version:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Current OBC-1 Firmware Version: ${results.firmware.major}.${results.firmware.minor}.${results.firmware.patch}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // Kernel Information section\r\n        new Paragraph({\r\n          text: \"* Kernel Information:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        \r\n        // Create kernel info table\r\n        createKernelInfoTable(results),\r\n        \r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // FPGA section\r\n        new Paragraph({\r\n          text: \"* FPGA Voltage Current Temperature Summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        \r\n        // Create FPGA info paragraphs\r\n        ...createFpgaInfoParagraphs(results),\r\n        \r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // Voltage Current Temperature section\r\n        new Paragraph({\r\n          text: \"* Voltage Current Temperature Summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        \r\n        // Create VI info paragraphs\r\n        ...createViInfoParagraphs(results),\r\n        \r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // eMMC section (if enabled)\r\n        new Paragraph({\r\n          text: \"* eMMC test summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        \r\n        // Create eMMC info paragraphs\r\n        ...createEmmcInfoParagraphs(results),\r\n        \r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n      ]\r\n    }]\r\n  });\r\n  \r\n  // Generate the document\r\n  const buffer = await Packer.toBuffer(doc);\r\n  \r\n  // Save the file\r\n  const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' });\r\n  saveAs(blob, filename);\r\n  \r\n  // Mark the report as generated\r\n  results.reportGenerated = true;\r\n  \r\n  return filename;\r\n}\r\n\r\n// Helper function to create kernel info table\r\nfunction createKernelInfoTable(results: any): Table {\r\n  const rows = [\r\n    ['Uptime', `${results.kernel.uptime} s`],\r\n    ['1 minute average loads', results.kernel.loads.oneMinute],\r\n    ['5 minutes average loads', results.kernel.loads.fiveMinute],\r\n    ['15 minutes average loads', results.kernel.loads.fifteenMinute],\r\n    ['Total usable main memory size', `${results.kernel.memory.totalRam} bytes`],\r\n    ['Available memory size', `${results.kernel.memory.freeRam} bytes`],\r\n    ['Amount of shared memory', `${results.kernel.memory.sharedRam} bytes`],\r\n    ['Memory used by buffers', `${results.kernel.memory.bufferRam} bytes`],\r\n    ['Total swap space size', `${results.kernel.memory.totalSwap} bytes`],\r\n    ['Swap space still available', `${results.kernel.memory.freeSwap} bytes`],\r\n    ['Number of current processes', `${results.kernel.processes} bytes`],\r\n    ['Total high memory size', `${results.kernel.memory.totalHigh} bytes`],\r\n    ['Available high memory size', `${results.kernel.memory.freeHigh} bytes`],\r\n    ['Memory unit size in bytes', `${results.kernel.memory.memUnit} bytes`]\r\n  ].map(row => new TableRow({\r\n    children: [\r\n      new TableCell({\r\n        children: [new Paragraph(row[0])],\r\n        width: { size: 60, type: WidthType.PERCENTAGE }\r\n      }),\r\n      new TableCell({\r\n        children: [new Paragraph(row[1])],\r\n        width: { size: 40, type: WidthType.PERCENTAGE }\r\n      })\r\n    ]\r\n  }));\r\n\r\n  return new Table({\r\n    rows,\r\n    width: { size: 100, type: WidthType.PERCENTAGE },\r\n    borders: {\r\n      top: { style: BorderStyle.SINGLE, size: 1 },\r\n      bottom: { style: BorderStyle.SINGLE, size: 1 },\r\n      left: { style: BorderStyle.SINGLE, size: 1 },\r\n      right: { style: BorderStyle.SINGLE, size: 1 },\r\n      insideHorizontal: { style: BorderStyle.SINGLE, size: 1 },\r\n      insideVertical: { style: BorderStyle.SINGLE, size: 1 }\r\n    }\r\n  });\r\n}\r\n\r\n// Helper function to create FPGA info paragraphs\r\nfunction createFpgaInfoParagraphs(results: any): Paragraph[] {\r\n  return [\r\n    new Paragraph(`vcc_pspll       : ${padString(results.fpga.voltages.vccPspll, 4)} V`),\r\n    new Paragraph(`vcc_psbatt      : ${padString(results.fpga.voltages.vccPsbatt, 4)} V`),\r\n    new Paragraph(`vccint          : ${padString(results.fpga.voltages.vccint, 4)} V`),\r\n    new Paragraph(`vccbram         : ${padString(results.fpga.voltages.vccbram, 4)} V`),\r\n    new Paragraph(`vccaux          : ${padString(results.fpga.voltages.vccaux, 4)} V`),\r\n    // ... add other voltages as needed\r\n    new Paragraph(`ps_temp         : ${padString(results.fpga.temperatures.psTemp, 4)} deg C`),\r\n    new Paragraph(`remote_temp     : ${padString(results.fpga.temperatures.remoteTemp, 4)} deg C`),\r\n    new Paragraph(`pl_temp         : ${padString(results.fpga.temperatures.plTemp, 4)} deg C`)\r\n  ];\r\n}\r\n\r\n// Helper function to create VI info paragraphs\r\nfunction createViInfoParagraphs(results: any): Paragraph[] {\r\n  return [\r\n    new Paragraph(`OBC-1 3V3 D V           : ${padString(results.vi.d3v3.value, 4)} mV`),\r\n    new Paragraph(`OBC-1 PS 3V3 OBC-2 V    : ${padString(results.vi.ps3v3Obc2.value, 4)} mV`),\r\n    new Paragraph(`OBC-1 PS 5V OBC-2 V     : ${padString(results.vi.ps5vObc2.value, 4)} mV`),\r\n    new Paragraph(`OBC-1 PS 5V OBC-2 I     : ${padString(results.vi.ps5vObc2I, 4)} mA`),\r\n    new Paragraph(`OBC-1 PS 3V3 OBC-2 I    : ${padString(results.vi.ps3v3Obc2I, 4)} mA`),\r\n    new Paragraph(``),\r\n    new Paragraph(`Thruster thermistor 1   : ${padString(results.temperatures.thruster1, 3)} deg C`),\r\n    new Paragraph(`Thruster thermistor 2   : ${padString(results.temperatures.thruster2, 3)} deg C`),\r\n    new Paragraph(`LEOCAM thermistor 1     : ${padString(results.temperatures.leocam[0], 3)} deg C`),\r\n    new Paragraph(`LEOCAM thermistor 2     : ${padString(results.temperatures.leocam[1], 3)} deg C`),\r\n    new Paragraph(`LEOCAM thermistor 3     : ${padString(results.temperatures.leocam[2], 3)} deg C`),\r\n    new Paragraph(`LEOCAM thermistor 4     : ${padString(results.temperatures.leocam[3], 3)} deg C`)\r\n  ];\r\n}\r\n\r\n// Helper function to create eMMC info paragraphs\r\nfunction createEmmcInfoParagraphs(results: any): Paragraph[] {\r\n  if (results.emmc.emmc0States.length === 0 || results.emmc.emmc0States[0] === 'N.A.') {\r\n    return [new Paragraph('eMMC test was not performed')];\r\n  }\r\n  \r\n  return [\r\n    new Paragraph('eMMC state before on eMMC-0 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[0], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[0], 3)}`),\r\n    new Paragraph('eMMC state after on eMMC-0 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[1], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[1], 3)}`),\r\n    new Paragraph('eMMC state after off eMMC-0 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[2], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[2], 3)}`),\r\n    new Paragraph('eMMC state before on eMMC-1 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[3], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[3], 3)}`),\r\n    new Paragraph('eMMC state after on eMMC-1 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[4], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[4], 3)}`),\r\n    new Paragraph('eMMC state after off eMMC-1 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[5], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[5], 3)}`)\r\n];\r\n}\r\n\r\n/**\r\n* Utility function to pad a string to a specific length\r\n* \r\n* @param value The string value to pad\r\n* @param length The desired length\r\n* @returns The padded string\r\n*/\r\nfunction padString(value: string, length: number): string {\r\nif (!value) return ''.padStart(length, ' ');\r\nreturn value.padStart(length, ' ');\r\n}\r\n        "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1774, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/OBC1TestPanel.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/components/OBC1TestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css';\r\n\r\n// Import the OBC1-specific functions\r\nimport { runOBC1Checkout } from '@/services/checkout/obc1Checkout';\r\nimport { generateOBC1Report } from '@/services/reports/obc1Report';\r\n\r\ninterface OBC1TestPanelProps {\r\n  options: string[];  // Now contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const OBC1TestPanel: React.FC<OBC1TestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  \r\n  // Determine if eMMC option is enabled - this is now based on the filtered options\r\n  const enableEmmc = options.includes('eMMC');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Track if we've run tests at least once\r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting OBC-1 Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for common parameters\r\n              if (param.includes(\"FW_Ver\")) {\r\n                const version = param.includes(\"Major\") ? \"1\" : \r\n                               param.includes(\"Minor\") ? \"2\" : \"3\";\r\n                return `${param}=${version}`;\r\n              } else if (param.includes(\"3V3\") || param.includes(\"5V\")) {\r\n                // Voltage values in mV\r\n                return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n              } else if (param.includes(\"temp\") || param.includes(\"Temp\")) {\r\n                // Temperature values\r\n                return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n              } else {\r\n                return `${param}=simulated`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          }\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the OBC-1 checkout test with progress updates\r\n      const results = await runOBC1Checkout(sock, enableEmmc, (step, percent) => {\r\n        setCurrentStep(step);\r\n        setProgress(percent);\r\n      });\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running OBC-1 checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateOBC1Report(results);\r\n      alert(`OBC-1 report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            OBC-1 Test Status\r\n          </h3>\r\n          <span className={`${styles.statusBadge} ${\r\n            isRunning ? styles.colorRunning : \r\n            results ? styles.colorCompleted : \r\n            styles.colorWaiting\r\n          }`}>\r\n            {isRunning ? 'Running...' : results ? 'Complete' : 'Ready'}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path d=\"M11 17a1 1 0 001.447.894l4-2A1 1 0 0017 15V9.236a1 1 0 00-1.447-.894l-4 2a1 1 0 00-.553.894V17zM15.211 6.276a1 1 0 000-1.788l-4.764-2.382a1 1 0 00-.894 0L4.789 4.488a1 1 0 000 1.788l4.764 2.382a1 1 0 00.894 0l4.764-2.382zM4.447 8.342A1 1 0 003 9.236V15a1 1 0 00.553.894l4 2A1 1 0 009 17v-5.764a1 1 0 00-.553-.894l-4-2z\" />\r\n              </svg>\r\n              eMMC Testing\r\n            </div>\r\n            <span className={`${styles.parameterValue} ${\r\n              enableEmmc ? styles.colorCompleted : styles.colorWaiting\r\n            }`}>\r\n              {enableEmmc ? 'ENABLED' : 'DISABLED'}\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n              backgroundColor: isRunning ? '#9ca3af' :\r\n                hasRunTest ? '#4f46e5' : '#10b981',\r\n              color: 'white'\r\n            }}\r\n          >\r\n            {isRunning ? (\r\n              <>\r\n                <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                </svg>\r\n                Running Test...\r\n              </>\r\n            ) : hasRunTest ? (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Re-run Test\r\n              </>\r\n            ) : (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Run Test\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {results && (\r\n        <div className=\"space-y-4 mt-4\">\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #064e3b, #065f46)\" \r\n                  : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n                color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Firmware Information\r\n              </h3>\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <div \r\n                className={styles.infoCard}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                  borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                }}\r\n              >\r\n                <div className={styles.infoIcon}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"#059669\" width=\"20\" height=\"20\">\r\n                    <path fillRule=\"evenodd\" d=\"M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zM4 4h3a3 3 0 006 0h3a2 2 0 012 2v9a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </div>\r\n                <div className={styles.infoContent}>\r\n                  <div \r\n                    className={styles.infoLabel}\r\n                    style={{ color: isDarkMode ? \"#9ca3af\" : \"#6b7280\" }}\r\n                  >\r\n                    OBC-1 Firmware Version\r\n                  </div>\r\n                  <div \r\n                    className={styles.infoValue}\r\n                    style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}\r\n                  >\r\n                    {results.firmware.major}.{results.firmware.minor}.{results.firmware.patch}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                  : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Voltage Measurements\r\n              </h3>\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <table \r\n                className={styles.table}\r\n                style={{\r\n                  color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                }}\r\n              >\r\n                <thead \r\n                  className={styles.tableHeader}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.tableBody}>\r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>3V3 D</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.d3v3.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.d3v3.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.d3v3.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PS 3V3 OBC-2</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.ps3v3Obc2.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.ps3v3Obc2.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.ps3v3Obc2.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PS 5V OBC-2</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.ps5vObc2.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.ps5vObc2.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.ps5vObc2.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the eMMC section only if the eMMC option was checked */}\r\n          {enableEmmc && (\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                    : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n                  color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\r\n                  </svg>\r\n                  eMMC Test Results\r\n                </h3>\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                {results.emmc.emmc0States[0] !== 'N.A.' ? (\r\n                  <table \r\n                    className={styles.table}\r\n                    style={{\r\n                      color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                    }}\r\n                  >\r\n                    <thead \r\n                      className={styles.tableHeader}\r\n                      style={{\r\n                        backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                        color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                      }}\r\n                    >\r\n                      <tr>\r\n                        <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Test Stage</th>\r\n                        <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0</th>\r\n                        <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody className={styles.tableBody}>\r\n                      <tr>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Initial</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[0]}</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[0]}</td>\r\n                      </tr>\r\n                      \r\n                      <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0 On</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[1]}</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[1]}</td>\r\n                      </tr>\r\n                      \r\n                      <tr>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0 Off</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[2]}</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[2]}</td>\r\n                      </tr>\r\n                      \r\n                      <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1 On</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[3]}</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[3]}</td>\r\n                      </tr>\r\n                      \r\n                      <tr>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1 Off</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[4]}</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[4]}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                ) : (\r\n                  <div \r\n                    style={{ \r\n                      padding: \"16px\", \r\n                      textAlign: \"center\", \r\n                      color: isDarkMode ? \"#d1d5db\" : \"#6b7280\",\r\n                      fontStyle: \"italic\"\r\n                    }}\r\n                  >\r\n                    eMMC test was not performed\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div>\r\n            <button \r\n              onClick={generateReport}\r\n              className={styles.reportButton}\r\n              style={{\r\n                backgroundColor: \"#10b981\",\r\n                color: \"white\"\r\n              }}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              Generate Report\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3105, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/CheckoutTestProgress/CheckoutTestProgress.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"checkoutWindow\": \"CheckoutTestProgress-module__GtrGZW__checkoutWindow\",\n  \"closeButton\": \"CheckoutTestProgress-module__GtrGZW__closeButton\",\n  \"colorCompleted\": \"CheckoutTestProgress-module__GtrGZW__colorCompleted\",\n  \"colorError\": \"CheckoutTestProgress-module__GtrGZW__colorError\",\n  \"colorRunning\": \"CheckoutTestProgress-module__GtrGZW__colorRunning\",\n  \"colorWaiting\": \"CheckoutTestProgress-module__GtrGZW__colorWaiting\",\n  \"contentArea\": \"CheckoutTestProgress-module__GtrGZW__contentArea\",\n  \"progressBar\": \"CheckoutTestProgress-module__GtrGZW__progressBar\",\n  \"progressBarFill\": \"CheckoutTestProgress-module__GtrGZW__progressBarFill\",\n  \"progressContainer\": \"CheckoutTestProgress-module__GtrGZW__progressContainer\",\n  \"progressHeading\": \"CheckoutTestProgress-module__GtrGZW__progressHeading\",\n  \"progressHeadingIcon\": \"CheckoutTestProgress-module__GtrGZW__progressHeadingIcon\",\n  \"pulse\": \"CheckoutTestProgress-module__GtrGZW__pulse\",\n  \"pulseAnimation\": \"CheckoutTestProgress-module__GtrGZW__pulseAnimation\",\n  \"resetButton\": \"CheckoutTestProgress-module__GtrGZW__resetButton\",\n  \"runAllButton\": \"CheckoutTestProgress-module__GtrGZW__runAllButton\",\n  \"runAllButtonIcon\": \"CheckoutTestProgress-module__GtrGZW__runAllButtonIcon\",\n  \"statusBadge\": \"CheckoutTestProgress-module__GtrGZW__statusBadge\",\n  \"statusCard\": \"CheckoutTestProgress-module__GtrGZW__statusCard\",\n  \"statusCardActive\": \"CheckoutTestProgress-module__GtrGZW__statusCardActive\",\n  \"statusCardTitle\": \"CheckoutTestProgress-module__GtrGZW__statusCardTitle\",\n  \"statusGrid\": \"CheckoutTestProgress-module__GtrGZW__statusGrid\",\n  \"tabButton\": \"CheckoutTestProgress-module__GtrGZW__tabButton\",\n  \"tabButtonActive\": \"CheckoutTestProgress-module__GtrGZW__tabButtonActive\",\n  \"tabIcon\": \"CheckoutTestProgress-module__GtrGZW__tabIcon\",\n  \"tabsContainer\": \"CheckoutTestProgress-module__GtrGZW__tabsContainer\",\n  \"tabsList\": \"CheckoutTestProgress-module__GtrGZW__tabsList\",\n  \"titleIcon\": \"CheckoutTestProgress-module__GtrGZW__titleIcon\",\n  \"windowHeader\": \"CheckoutTestProgress-module__GtrGZW__windowHeader\",\n  \"windowTitle\": \"CheckoutTestProgress-module__GtrGZW__windowTitle\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 3143, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/CheckoutTestProgress.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/CheckoutTestProgress.tsx\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Button } from \"@/components/ui\";\r\nimport { OBC1TestPanel } from \"./components/OBC1TestPanel\";\r\nimport styles from \"./CheckoutTestProgress.module.css\";\r\n\r\n// Updated interface to include checkedOptions\r\ninterface CheckoutItem {\r\n  id: string;\r\n  header: string;\r\n  options: string[];\r\n  checkedOptions?: Record<string, boolean>; // Optional to maintain backward compatibility\r\n}\r\n\r\ninterface TestResult {\r\n  component: string;\r\n  status: 'running' | 'completed' | 'error' | 'waiting';\r\n  results: any;\r\n  message?: string;\r\n}\r\n\r\ninterface CheckoutTestProgressProps {\r\n  droppedItems: CheckoutItem[];\r\n  onClose: () => void;\r\n  zIndex: number;\r\n  onMouseDown: () => void;\r\n  sock: any;\r\n}\r\n\r\nconst CheckoutTestProgress: React.FC<CheckoutTestProgressProps> = ({\r\n  droppedItems,\r\n  onClose,\r\n  zIndex,\r\n  onMouseDown,\r\n  sock\r\n}) => {\r\n  const [overallProgress, setOverallProgress] = useState<number>(0);\r\n  const [testResults, setTestResults] = useState<Record<string, TestResult>>({});\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n  const [isSavingReport, setIsSavingReport] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<string>(\"\");\r\n  const [initialRunDone, setInitialRunDone] = useState(false);\r\n  const [currentlyRunningTest, setCurrentlyRunningTest] = useState<string | null>(null);\r\n  const [windowSize, setWindowSize] = useState({ width: 0, height: 0 });\r\n  const [filteredDroppedItems, setFilteredDroppedItems] = useState<CheckoutItem[]>([]);\r\n  \r\n  // Use non-null assertion to ensure TypeScript knows this ref will be assigned\r\n  const nodeRef = useRef<HTMLDivElement>(null) as React.RefObject<HTMLDivElement>;\r\n  const [portalElement] = useState(() => {\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"checkoutTestProgress-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n  // Load the filtered items with checked options from localStorage\r\n  useEffect(() => {\r\n    const filteredItemsJson = localStorage.getItem('checkoutTestItems');\r\n    \r\n    if (filteredItemsJson) {\r\n      try {\r\n        const parsedItems = JSON.parse(filteredItemsJson);\r\n        \r\n        if (Array.isArray(parsedItems) && parsedItems.length > 0) {\r\n          console.log(\"📋 Using filtered items with checked options:\", parsedItems);\r\n          setFilteredDroppedItems(parsedItems);\r\n        } else {\r\n          console.log(\"⚠️ No valid filtered items found, using original dropped items\");\r\n          setFilteredDroppedItems(droppedItems);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error parsing filtered items:\", e);\r\n        setFilteredDroppedItems(droppedItems);\r\n      }\r\n    } else {\r\n      // If no filtered items in localStorage, use the original droppedItems\r\n      // but try to only include options that are checked\r\n      console.log(\"⚠️ No filtered items in localStorage, using original items\");\r\n      \r\n      // For backward compatibility - try to filter based on checkedOptions if available\r\n      const backwardCompatibleItems = droppedItems.map(item => {\r\n        if (item.checkedOptions) {\r\n          // Get the list of options that are checked\r\n          const checkedOptionsList = Object.entries(item.checkedOptions)\r\n            .filter(([_, isChecked]) => isChecked)\r\n            .map(([option]) => option);\r\n          \r\n          // Only include checked options if any exist, otherwise keep all options\r\n          return {\r\n            ...item,\r\n            options: checkedOptionsList.length > 0 ? checkedOptionsList : item.options\r\n          };\r\n        }\r\n        \r\n        return item;\r\n      });\r\n      \r\n      setFilteredDroppedItems(backwardCompatibleItems);\r\n    }\r\n  }, [droppedItems]);\r\n\r\n  // Generate component map for easy lookups\r\n  const componentMap = filteredDroppedItems.reduce((acc, item) => {\r\n    acc[item.header] = item;\r\n    return acc;\r\n  }, {} as Record<string, CheckoutItem>);\r\n\r\n  // Set initial active tab to the first filtered item\r\n  useEffect(() => {\r\n    if (filteredDroppedItems.length > 0 && !activeTab) {\r\n      setActiveTab(filteredDroppedItems[0].header);\r\n    }\r\n  }, [filteredDroppedItems, activeTab]);\r\n\r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  // Update progress when test results change\r\n  useEffect(() => {\r\n    updateOverallProgress();\r\n  }, [testResults]);\r\n\r\n  // Run initial tests for all filtered components\r\n  useEffect(() => {\r\n    if (!initialRunDone && filteredDroppedItems.length > 0) {\r\n      // Mark as done\r\n      setInitialRunDone(true);\r\n      \r\n      // Set up all filtered components with initial waiting status\r\n      const initialResults: Record<string, TestResult> = {};\r\n      filteredDroppedItems.forEach(item => {\r\n        initialResults[item.header] = {\r\n          component: item.header,\r\n          status: 'waiting',\r\n          results: null\r\n        };\r\n      });\r\n      \r\n      setTestResults(initialResults);\r\n      \r\n      // Find the first component to test\r\n      runNextTest(initialResults);\r\n    }\r\n  }, [filteredDroppedItems, initialRunDone]);\r\n\r\n  // Update window size on mount\r\n  useEffect(() => {\r\n    // Calculate available screen space (80% of viewport)\r\n    const maxWidth = Math.min(1600, window.innerWidth * 0.8);\r\n    const maxHeight = Math.min(900, window.innerHeight * 0.8);\r\n    \r\n    setWindowSize({\r\n      width: maxWidth,\r\n      height: maxHeight\r\n    });\r\n    \r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      const maxWidth = Math.min(1600, window.innerWidth * 0.8);\r\n      const maxHeight = Math.min(900, window.innerHeight * 0.8);\r\n      \r\n      setWindowSize({\r\n        width: maxWidth,\r\n        height: maxHeight\r\n      });\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Calculate overall progress based on filtered items\r\n  const updateOverallProgress = () => {\r\n    if (filteredDroppedItems.length === 0) return;\r\n\r\n    const completedCount = Object.values(testResults).filter(\r\n      result => result.status === 'completed' || result.status === 'error'\r\n    ).length;\r\n    \r\n    const newProgress = Math.floor((completedCount / filteredDroppedItems.length) * 100);\r\n    setOverallProgress(newProgress);\r\n    \r\n    // Check if all tests are complete\r\n    if (completedCount === filteredDroppedItems.length) {\r\n      setIsComplete(true);\r\n      setCurrentlyRunningTest(null);\r\n    }\r\n  };\r\n\r\n  // Update a specific test result\r\n  const updateTestResult = (component: string, result: Partial<TestResult>) => {\r\n    setTestResults(prev => {\r\n      const updatedResults = {\r\n        ...prev,\r\n        [component]: {\r\n          ...(prev[component] || { component, status: 'waiting', results: null }),\r\n          ...result\r\n        }\r\n      };\r\n      \r\n      // If a test just completed, check if we should run the next one\r\n      if (result.status === 'completed' || result.status === 'error') {\r\n        // Clear the currently running test\r\n        if (currentlyRunningTest === component) {\r\n          setCurrentlyRunningTest(null);\r\n        }\r\n        \r\n        // Find and run next test (with small delay to allow UI to update)\r\n        setTimeout(() => {\r\n          runNextTest(updatedResults);\r\n        }, 500);\r\n      }\r\n      \r\n      return updatedResults;\r\n    });\r\n  };\r\n\r\n  // Find and run the next pending test from filtered items\r\n  const runNextTest = (currentResults: Record<string, TestResult>) => {\r\n    // Don't try to run another test if one is already running\r\n    if (currentlyRunningTest) return;\r\n    \r\n    // Find the next waiting component from filtered items\r\n    const nextComponent = filteredDroppedItems.find(item => \r\n      currentResults[item.header]?.status === 'waiting'\r\n    );\r\n    \r\n    if (nextComponent) {\r\n      // Set as currently running\r\n      setCurrentlyRunningTest(nextComponent.header);\r\n      \r\n      // Mark it as running in the results\r\n      setTestResults(prev => ({\r\n        ...prev,\r\n        [nextComponent.header]: {\r\n          ...(prev[nextComponent.header] || { component: nextComponent.header, results: null }),\r\n          status: 'running'\r\n        }\r\n      }));\r\n      \r\n      // Automatically switch to the tab with the running test\r\n      setActiveTab(nextComponent.header);\r\n    }\r\n  };\r\n\r\n  // Generate and save test report\r\n  const saveTestReport = async () => {\r\n    setIsSavingReport(true);\r\n    \r\n    try {\r\n      // Call report generation for each completed test\r\n      for (const item of filteredDroppedItems) {\r\n        const result = testResults[item.header];\r\n        if (result && result.status === 'completed') {\r\n          // Here you would call the appropriate report generator for each component\r\n          console.log(`Generating report for ${item.header}...`);\r\n          // For example: await generateOBC1Report(result.results);\r\n        }\r\n      }\r\n      \r\n      alert(\"Test reports have been generated and saved successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error generating report:\", error);\r\n      alert(\"Failed to generate test reports.\");\r\n    } finally {\r\n      setIsSavingReport(false);\r\n    }\r\n  };\r\n\r\n  // Run all tests again (reset and restart)\r\n  const runAllTests = () => {\r\n    // Reset all test results to waiting\r\n    const resetResults: Record<string, TestResult> = {};\r\n    filteredDroppedItems.forEach(item => {\r\n      resetResults[item.header] = {\r\n        component: item.header,\r\n        status: 'waiting',\r\n        results: null\r\n      };\r\n    });\r\n    \r\n    setTestResults(resetResults);\r\n    setIsComplete(false);\r\n    setCurrentlyRunningTest(null);\r\n    \r\n    // Start running tests\r\n    runNextTest(resetResults);\r\n  };\r\n\r\n  // Calculate test stage status for each filtered component\r\n  const getTestStatusSummary = () => {\r\n    return filteredDroppedItems.map(item => ({\r\n      component: item.header,\r\n      status: testResults[item.header]?.status || 'waiting',\r\n      isActive: currentlyRunningTest === item.header\r\n    }));\r\n  };\r\n\r\n  // When a tab has a OBC1/OBC2TestPanel that requires options, only pass the filtered options\r\n  const getComponentOptions = (header: string): string[] => {\r\n    const component = filteredDroppedItems.find(item => item.header === header);\r\n    return component?.options || [];\r\n  };\r\n  \r\n  // Safely reuse position from session storage or use defaults\r\n  const savedPosition = (() => {\r\n    try {\r\n      const saved = sessionStorage.getItem('checkoutTestPositionPosition');\r\n      if (saved) {\r\n        const parsed = JSON.parse(saved);\r\n        \r\n        // Validate the saved position - ensure it's within reasonable bounds\r\n        const viewportHeight = window.innerHeight;\r\n        const viewportWidth = window.innerWidth;\r\n        \r\n        return {\r\n          x: Math.min(Math.max(parsed.x, -400), viewportWidth - 450),\r\n          y: Math.min(Math.max(parsed.y, 0), viewportHeight - 100)\r\n        };\r\n      }\r\n      \r\n      // Default center position if no saved position\r\n      return {\r\n        x: Math.max(0, (window.innerWidth - windowSize.width) / 2), \r\n        y: Math.max(0, (window.innerHeight - windowSize.height) / 2)\r\n      };\r\n    } catch (e) {\r\n      // Default center position in case of error\r\n      return {\r\n        x: Math.max(0, (window.innerWidth - windowSize.width) / 2),\r\n        y: Math.max(0, (window.innerHeight - windowSize.height) / 2)\r\n      };\r\n    }\r\n  })();\r\n\r\n  const [position, setPosition] = useState(savedPosition);\r\n\r\n  // Save position to sessionStorage when it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('checkoutTestPositionPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  const getStatusClassName = (status: string): string => {\r\n    switch (status) {\r\n      case 'completed': return styles.colorCompleted;\r\n      case 'error': return styles.colorError;\r\n      case 'running': return `${styles.colorRunning} ${styles.pulseAnimation}`;\r\n      default: return styles.colorWaiting;\r\n    }\r\n  };\r\n\r\n  // Modified component to specifically pass only checked options to the test panels\r\n  return createPortal(\r\n    <Draggable\r\n      nodeRef={nodeRef}\r\n      handle=\".drag-handle\"\r\n      position={position}\r\n      onStop={(e, data) => {\r\n        setPosition({ x: data.x, y: data.y });\r\n      }}\r\n    >\r\n      <div ref={nodeRef} className={styles.checkoutWindow} style={{/* styles */}}>\r\n        {/* Header - Fixed */}\r\n        <div className={`${styles.windowHeader} drag-handle`}>\r\n          <h2 className={styles.windowTitle}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={styles.titleIcon}>\r\n              <path d=\"M20 6v10a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z\"/>\r\n              <path d=\"m10 10 5 3-5 3v-6Z\"/>\r\n            </svg>\r\n            Satellite Checkout Test Control Centre\r\n          </h2>\r\n          \r\n          <button \r\n            className={styles.resetButton}\r\n            onClick={() => {\r\n              setPosition({\r\n                x: (window.innerWidth - windowSize.width) / 2,\r\n                y: (window.innerHeight - windowSize.height) / 2\r\n              });\r\n            }}\r\n          >\r\n            Reset Position\r\n          </button>\r\n          \r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onClose();\r\n            }}\r\n            className={styles.closeButton}\r\n          >\r\n            ✖\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content area with Test Panels */}\r\n        <div className={styles.contentArea}>\r\n          {/* Test tabs */}\r\n          {filteredDroppedItems.length > 0 ? (\r\n            <div className={styles.tabsContainer}>\r\n              <div className={styles.tabsList}>\r\n                {filteredDroppedItems.map(item => (\r\n                  <button\r\n                    key={item.header} \r\n                    onClick={() => setActiveTab(item.header)}\r\n                    className={`${styles.tabButton} ${activeTab === item.header ? styles.tabButtonActive : ''}`}\r\n                  >\r\n                    {item.header}\r\n                    {testResults[item.header]?.status === 'completed' && (\r\n                      <span className={styles.tabIcon}>✓</span>\r\n                    )}\r\n                    {testResults[item.header]?.status === 'error' && (\r\n                      <span className={styles.tabIcon}>✗</span>\r\n                    )}\r\n                    {testResults[item.header]?.status === 'running' && (\r\n                      <span className={`${styles.tabIcon} ${styles.pulseAnimation}`}>⟳</span>\r\n                    )}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"p-6 text-center\">\r\n               <p>No test items with checked options found. Please check at least one option in the Checkout Section and try again.</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Test Content Grid Layout */}\r\n          {filteredDroppedItems.length > 0 && (\r\n            <div style={{ flex: 1, display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '16px', padding: '0 16px 16px 16px', overflow: 'hidden' }}>\r\n              {/* Left Panel - Active test component */}\r\n              <div style={{ overflow: 'auto', height: '100%', display: activeTab ? 'block' : 'none' }}>\r\n                {filteredDroppedItems.map(item => (\r\n                  <div \r\n                    key={item.header} \r\n                    style={{ \r\n                      display: activeTab === item.header ? 'block' : 'none',\r\n                      height: '100%',\r\n                      overflow: 'auto'\r\n                    }}\r\n                  >\r\n                    {/* Render the appropriate test panel based on component type */}\r\n                    {item.header === \"OBC-1\" && (\r\n                      <OBC1TestPanel\r\n                        options={getComponentOptions(item.header)} // Pass only the filtered/checked options\r\n                        sock={sock}\r\n                        onTestComplete={(results) => \r\n                          updateTestResult(item.header, { \r\n                            status: 'completed', \r\n                            results \r\n                          })\r\n                        }\r\n                        onTestError={(error: Error | string | unknown) => \r\n                          updateTestResult(item.header, { \r\n                            status: 'error', \r\n                            message: error instanceof Error ? error.message : String(error) \r\n                          })\r\n                        }\r\n                        onTestStart={() => \r\n                          updateTestResult(item.header, { \r\n                            status: 'running' \r\n                          })\r\n                        }\r\n                        isInitialRun={currentlyRunningTest === item.header}\r\n                      />\r\n                    )}\r\n                    \r\n                    {/* Add implementations for other component types here */}\r\n                    {/* For now, show a placeholder for unimplemented components */}\r\n                    {![\"OBC-1\"].includes(item.header) && (\r\n                      <div className=\"p-6\">\r\n                        <div style={{\r\n                          padding: '20px',\r\n                          borderRadius: '8px',\r\n                          backgroundColor: isDarkMode ? '#1e1e1e' : '#f9fafb',\r\n                          border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                          marginBottom: '16px',\r\n                          textAlign: 'center'\r\n                        }}>\r\n                          <h3 style={{ marginBottom: '16px', color: isDarkMode ? '#d1d5db' : '#374151' }}>\r\n                            {item.header} Test Panel\r\n                          </h3>\r\n                          <p style={{ marginBottom: '16px', color: isDarkMode ? '#9ca3af' : '#6b7280' }}>\r\n                            Testing options: {getComponentOptions(item.header).join(', ')}\r\n                          </p>\r\n                          <button \r\n                            className={styles.runAllButton}\r\n                            style={{\r\n                              backgroundColor: \"#3b82f6\",\r\n                              color: \"white\",\r\n                              margin: \"16px auto\"\r\n                            }}\r\n                            onClick={() => {\r\n                              // Update status to running\r\n                              updateTestResult(item.header, { status: 'running' });\r\n                              \r\n                              // Simulate a test run\r\n                              setTimeout(() => {\r\n                                updateTestResult(item.header, { \r\n                                  status: 'completed',\r\n                                  results: { \r\n                                    simulated: true,\r\n                                    testedOptions: getComponentOptions(item.header)\r\n                                  }\r\n                                });\r\n                              }, 2000);\r\n                            }}\r\n                          >\r\n                            {testResults[item.header]?.status === 'completed' || \r\n                             testResults[item.header]?.status === 'error' \r\n                              ? \"Re-run Test\" : \"Run Test\"}\r\n                          </button>\r\n                          \r\n                          {/* Show options available for this component */}\r\n                          {item.options.length > 0 && (\r\n                            <div style={{ \r\n                              marginTop: '24px', \r\n                              padding: '12px', \r\n                              backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                              borderRadius: '6px',\r\n                              textAlign: 'left'\r\n                            }}>\r\n                              <h4 style={{ \r\n                                fontSize: '14px', \r\n                                marginBottom: '8px',\r\n                                color: isDarkMode ? '#d1d5db' : '#4b5563' \r\n                              }}>\r\n                                Options to be tested:\r\n                              </h4>\r\n                              <ul style={{ \r\n                                listStyleType: 'disc', \r\n                                paddingLeft: '20px',\r\n                                color: isDarkMode ? '#9ca3af' : '#6b7280'\r\n                              }}>\r\n                                {getComponentOptions(item.header).map((option, index) => (\r\n                                  <li key={index}>{option}</li>\r\n                                ))}\r\n                              </ul>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        \r\n                        {/* Simulated test results for completed tests */}\r\n                        {testResults[item.header]?.status === 'completed' && (\r\n                          <div style={{\r\n                            padding: '20px',\r\n                            borderRadius: '8px',\r\n                            backgroundColor: isDarkMode ? '#1e1e1e' : '#f9fafb',\r\n                            border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n                          }}>\r\n                            <h3 style={{ \r\n                              marginBottom: '16px', \r\n                              color: isDarkMode ? '#d1d5db' : '#374151',\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              gap: '8px'\r\n                            }}>\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                              </svg>\r\n                              {item.header} Test Results\r\n                            </h3>\r\n                            \r\n                            <div style={{\r\n                              backgroundColor: isDarkMode ? '#0d1117' : '#f3f4f6',\r\n                              borderRadius: '6px',\r\n                              padding: '12px',\r\n                              fontFamily: 'monospace',\r\n                              fontSize: '14px',\r\n                              color: isDarkMode ? '#9ca3af' : '#374151'\r\n                            }}>\r\n                              <p>✅ All tests completed successfully</p>\r\n                              <p>⏱️ Test duration: 1.24s</p>\r\n                              <p>🔍 Tested options: {getComponentOptions(item.header).join(', ')}</p>\r\n                            </div>\r\n                            \r\n                            <button \r\n                              style={{\r\n                                marginTop: '16px',\r\n                                padding: '8px 16px',\r\n                                backgroundColor: '#10b981',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '4px',\r\n                                cursor: 'pointer',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                gap: '6px'\r\n                              }}\r\n                            >\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\r\n                              </svg>\r\n                              Generate Report\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              {/* Right Panel - Test Status Overview */}\r\n              <div style={{ overflow: 'auto', height: '100%' }}>\r\n                {/* Overall Progress Card */}\r\n                <div className={styles.progressContainer}>\r\n                  <h3 className={styles.progressHeading}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.progressHeadingIcon}>\r\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    Test Progress\r\n                  </h3>\r\n\r\n                  <div className=\"flex justify-between items-center text-sm mb-2\">\r\n                    <span>{overallProgress}% Complete</span>\r\n                    <span className={`${styles.statusBadge} ${\r\n                      isComplete ? styles.colorCompleted : \r\n                      currentlyRunningTest ? styles.colorRunning : \r\n                      styles.colorWaiting\r\n                    }`}>\r\n                      {isComplete ? \"✅ All Tests Completed\" : \r\n                      currentlyRunningTest ? `⚙️ Running: ${currentlyRunningTest}` : \r\n                      \"⏳ Preparing Tests...\"}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className={styles.progressBar}>\r\n                    <div \r\n                      className={styles.progressBarFill}\r\n                      style={{ \r\n                        width: `${overallProgress}%`,\r\n                        background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                      }}\r\n                    >\r\n                      {overallProgress}%\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Controls */}\r\n                  <div className=\"flex justify-end mt-4\">\r\n                    <button \r\n                      onClick={runAllTests}\r\n                      disabled={currentlyRunningTest !== null}\r\n                      className={styles.runAllButton}\r\n                      style={{\r\n                        backgroundColor: currentlyRunningTest === null ? \"#3b82f6\" : \"#9ca3af\",\r\n                        color: \"white\"\r\n                      }}\r\n                    >\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles.runAllButtonIcon} viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                      </svg>\r\n                      Run All Tests Again\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Test Status Grid */}\r\n                <div className={styles.progressContainer}>\r\n                  <h4 className=\"text-sm font-medium mb-2 flex items-center\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.progressHeadingIcon}>\r\n                      <path d=\"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\" />\r\n                      <path fillRule=\"evenodd\" d=\"M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    Test Status Overview\r\n                  </h4>\r\n                  \r\n                  <div className={styles.statusGrid} style={{ gridTemplateColumns: 'repeat(auto-fill, minmax(140px, 1fr))' }}>\r\n                    {getTestStatusSummary().map((item) => (\r\n                      <div\r\n                        key={item.component}\r\n                        className={`${styles.statusCard} ${item.isActive ? styles.statusCardActive : ''} ${getStatusClassName(item.status)}`}\r\n                        onClick={() => setActiveTab(item.component)}\r\n                      >\r\n                        <div className={styles.statusCardTitle}>{item.component}</div>\r\n                        <div className={`${styles.statusBadge} ${getStatusClassName(item.status)}`}>\r\n                          {item.status === 'completed' && \"✓ Complete\"}\r\n                          {item.status === 'error' && \"✗ Error\"}\r\n                          {item.status === 'running' && \"⟳ Running\"}\r\n                          {item.status === 'waiting' && \"⏱ Waiting\"}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  {/* Save Report Button */}\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\", marginTop: \"8px\" }}>\r\n                    <button\r\n                      onClick={saveTestReport}\r\n                      disabled={!isComplete || isSavingReport || filteredDroppedItems.length === 0}\r\n                      className={styles.runAllButton}\r\n                      style={{\r\n                        backgroundColor: !isComplete || isSavingReport || filteredDroppedItems.length === 0 \r\n                          ? \"#9ca3af\" : \"#10b981\",\r\n                        color: \"white\"\r\n                      }}\r\n                    >\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles.runAllButtonIcon} viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                      </svg>\r\n                      {isSavingReport ? \"Saving...\" : \"Save Reports\"}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Component Options Summary */}\r\n                <div \r\n                  style={{ \r\n                    border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    borderRadius: '8px',\r\n                    backgroundColor: isDarkMode ? '#1e1e1e' : '#ffffff',\r\n                    overflow: 'hidden',\r\n                    marginTop: '16px'\r\n                  }}\r\n                >\r\n                  <div style={{ \r\n                    padding: '12px 16px',\r\n                    backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                    borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    color: isDarkMode ? '#e5e7eb' : '#1f2937',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <h3>Selected Options Summary</h3>\r\n                  </div>\r\n                  \r\n                  <div style={{ padding: '16px' }}>\r\n                    {filteredDroppedItems.map(item => (\r\n                      <div \r\n                        key={item.header}\r\n                        style={{\r\n                          marginBottom: '12px',\r\n                          padding: '12px',\r\n                          backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                          borderRadius: '8px',\r\n                          border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n                        }}\r\n                      >\r\n                        <div style={{ \r\n                          fontSize: '14px', \r\n                          fontWeight: 'bold',\r\n                          marginBottom: '8px',\r\n                          color: isDarkMode ? '#e5e7eb' : '#374151'\r\n                        }}>\r\n                          {item.header}\r\n                        </div>\r\n                        {getComponentOptions(item.header).length > 0 ? (\r\n                          <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280' }}>\r\n                            {getComponentOptions(item.header).map((option, index) => (\r\n                              <div \r\n                                key={index}\r\n                                style={{\r\n                                  padding: '4px 8px',\r\n                                  backgroundColor: isDarkMode ? '#1f2937' : '#f3f4f6',\r\n                                  borderRadius: '4px',\r\n                                  display: 'inline-block',\r\n                                  margin: '0 4px 4px 0',\r\n                                  fontSize: '12px'\r\n                                }}\r\n                              >\r\n                                ✓ {option}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        ) : (\r\n                          <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280', fontStyle: 'italic', fontSize: '12px' }}>\r\n                            No options selected for this component\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Testing Log Output */}\r\n                <div style={{ \r\n                  border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                  borderRadius: '8px',\r\n                  backgroundColor: isDarkMode ? '#1e1e1e' : '#ffffff',\r\n                  overflow: 'hidden',\r\n                  marginTop: '16px'\r\n                }}>\r\n                  <div style={{ \r\n                    padding: '12px 16px',\r\n                    backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                    borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    color: isDarkMode ? '#e5e7eb' : '#1f2937',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <h3>Test Console Output</h3>\r\n                    <button style={{ \r\n                      backgroundColor: 'transparent',\r\n                      border: 'none',\r\n                      color: isDarkMode ? '#d1d5db' : '#6b7280',\r\n                      cursor: 'pointer',\r\n                      fontSize: '12px'\r\n                    }}>\r\n                      Clear\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <div style={{ \r\n                    padding: '12px',\r\n                    maxHeight: '200px',\r\n                    overflowY: 'auto',\r\n                    fontFamily: 'monospace',\r\n                    fontSize: '12px',\r\n                    backgroundColor: isDarkMode ? '#0d1117' : '#f8fafc',\r\n                    color: isDarkMode ? '#d1d5db' : '#374151'\r\n                  }}>\r\n                    {currentlyRunningTest ? (\r\n                      <>\r\n                        <div style={{ color: '#3b82f6' }}>\r\n                          [INFO] {new Date().toLocaleTimeString()} - Starting test for {currentlyRunningTest}\r\n                        </div>\r\n                        <div style={{ color: isDarkMode ? '#d1d5db' : '#6b7280' }}>\r\n                          [DEBUG] {new Date().toLocaleTimeString()} - Initializing test environment\r\n                        </div>\r\n                        <div style={{ color: isDarkMode ? '#d1d5db' : '#6b7280' }}>\r\n                          [DEBUG] {new Date().toLocaleTimeString()} - Testing options: {getComponentOptions(currentlyRunningTest).join(', ')}\r\n                        </div>\r\n                        <div className={styles.pulseAnimation} style={{ color: '#10b981' }}>\r\n                          [INFO] {new Date().toLocaleTimeString()} - Running test procedures...\r\n                        </div>\r\n                      </>\r\n                    ) : isComplete ? (\r\n                      <div style={{ color: '#10b981' }}>\r\n                        [SUCCESS] {new Date().toLocaleTimeString()} - All tests completed successfully!\r\n                      </div>\r\n                    ) : (\r\n                      filteredDroppedItems.length === 0 ? (\r\n                        <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280', fontStyle: 'italic' }}>\r\n                          No test items with checked options found. Please check options in the Checkout Section.\r\n                        </div>\r\n                      ) : (\r\n                        <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280', fontStyle: 'italic' }}>\r\n                          Ready to start tests. Click \"Run All Tests Again\" to begin.\r\n                        </div>\r\n                      )\r\n                    )}\r\n                    \r\n                    {/* Display completed test logs */}\r\n                    {Object.entries(testResults)\r\n                      .filter(([_, result]) => result.status === 'completed' || result.status === 'error')\r\n                      .map(([component, result]) => {\r\n                        const options = getComponentOptions(component);\r\n                        return (\r\n                          <div key={component} style={{ \r\n                            color: result.status === 'completed' ? '#10b981' : '#ef4444',\r\n                            marginTop: '4px'\r\n                          }}>\r\n                            [{result.status === 'completed' ? 'SUCCESS' : 'ERROR'}] {new Date().toLocaleTimeString()} - \r\n                            {result.status === 'completed' \r\n                              ? ` ${component} test completed successfully, options: ${options.join(', ')}` \r\n                              : ` ${component} test failed: ${result.message || 'unknown error'}`}\r\n                          </div>\r\n                        );\r\n                      })\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Draggable>,\r\n    portalElement\r\n  );\r\n};\r\n\r\nexport default CheckoutTestProgress;\r\n                "],"names":[],"mappings":"AAAA,+DAA+D;;;;;AAC/D;AACA;AACA;AAEA;AACA;;;;;;;AAyBA,MAAM,uBAA4D,CAAC,EACjE,YAAY,EACZ,OAAO,EACP,MAAM,EACN,WAAW,EACX,IAAI,EACL;IACC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA8B,CAAC;IAC5E,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACnD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,OAAO;QAAG,QAAQ;IAAE;IACnE,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAEnF,8EAA8E;IAC9E,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IACvC,MAAM,CAAC,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,MAAM,UAAU,SAAS,aAAa,CAAC;QACvC,QAAQ,EAAE,GAAG;QACb,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,OAAO;IACT;IAEA,iEAAiE;IACjE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,oBAAoB,aAAa,OAAO,CAAC;QAE/C,IAAI,mBAAmB;YACrB,IAAI;gBACF,MAAM,cAAc,KAAK,KAAK,CAAC;gBAE/B,IAAI,MAAM,OAAO,CAAC,gBAAgB,YAAY,MAAM,GAAG,GAAG;oBACxD,QAAQ,GAAG,CAAC,iDAAiD;oBAC7D,wBAAwB;gBAC1B,OAAO;oBACL,QAAQ,GAAG,CAAC;oBACZ,wBAAwB;gBAC1B;YACF,EAAE,OAAO,GAAG;gBACV,QAAQ,KAAK,CAAC,iCAAiC;gBAC/C,wBAAwB;YAC1B;QACF,OAAO;YACL,sEAAsE;YACtE,mDAAmD;YACnD,QAAQ,GAAG,CAAC;YAEZ,kFAAkF;YAClF,MAAM,0BAA0B,aAAa,GAAG,CAAC,CAAA;gBAC/C,IAAI,KAAK,cAAc,EAAE;oBACvB,2CAA2C;oBAC3C,MAAM,qBAAqB,OAAO,OAAO,CAAC,KAAK,cAAc,EAC1D,MAAM,CAAC,CAAC,CAAC,GAAG,UAAU,GAAK,WAC3B,GAAG,CAAC,CAAC,CAAC,OAAO,GAAK;oBAErB,wEAAwE;oBACxE,OAAO;wBACL,GAAG,IAAI;wBACP,SAAS,mBAAmB,MAAM,GAAG,IAAI,qBAAqB,KAAK,OAAO;oBAC5E;gBACF;gBAEA,OAAO;YACT;YAEA,wBAAwB;QAC1B;IACF,GAAG;QAAC;KAAa;IAEjB,0CAA0C;IAC1C,MAAM,eAAe,qBAAqB,MAAM,CAAC,CAAC,KAAK;QACrD,GAAG,CAAC,KAAK,MAAM,CAAC,GAAG;QACnB,OAAO;IACT,GAAG,CAAC;IAEJ,oDAAoD;IACpD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,qBAAqB,MAAM,GAAG,KAAK,CAAC,WAAW;YACjD,aAAa,oBAAoB,CAAC,EAAE,CAAC,MAAM;QAC7C;IACF,GAAG;QAAC;QAAsB;KAAU;IAEpC,sBAAsB;IACtB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,cAAc,SAAS,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC5D;QAEA,gBAAgB;QAChB;QAEA,0BAA0B;QAC1B,MAAM,WAAW,IAAI,iBAAiB;YACpC;QACF;QAEA,SAAS,OAAO,CAAC,SAAS,eAAe,EAAE;YACzC,YAAY;YACZ,iBAAiB;gBAAC;aAAQ;QAC5B;QAEA,OAAO,IAAM,SAAS,UAAU;IAClC,GAAG,EAAE;IAEL,2CAA2C;IAC3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAY;IAEhB,gDAAgD;IAChD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,kBAAkB,qBAAqB,MAAM,GAAG,GAAG;YACtD,eAAe;YACf,kBAAkB;YAElB,6DAA6D;YAC7D,MAAM,iBAA6C,CAAC;YACpD,qBAAqB,OAAO,CAAC,CAAA;gBAC3B,cAAc,CAAC,KAAK,MAAM,CAAC,GAAG;oBAC5B,WAAW,KAAK,MAAM;oBACtB,QAAQ;oBACR,SAAS;gBACX;YACF;YAEA,eAAe;YAEf,mCAAmC;YACnC,YAAY;QACd;IACF,GAAG;QAAC;QAAsB;KAAe;IAEzC,8BAA8B;IAC9B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,qDAAqD;QACrD,MAAM,WAAW,KAAK,GAAG,CAAC,MAAM,OAAO,UAAU,GAAG;QACpD,MAAM,YAAY,KAAK,GAAG,CAAC,KAAK,OAAO,WAAW,GAAG;QAErD,cAAc;YACZ,OAAO;YACP,QAAQ;QACV;QAEA,uBAAuB;QACvB,MAAM,eAAe;YACnB,MAAM,WAAW,KAAK,GAAG,CAAC,MAAM,OAAO,UAAU,GAAG;YACpD,MAAM,YAAY,KAAK,GAAG,CAAC,KAAK,OAAO,WAAW,GAAG;YAErD,cAAc;gBACZ,OAAO;gBACP,QAAQ;YACV;QACF;QAEA,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG,EAAE;IAEL,qDAAqD;IACrD,MAAM,wBAAwB;QAC5B,IAAI,qBAAqB,MAAM,KAAK,GAAG;QAEvC,MAAM,iBAAiB,OAAO,MAAM,CAAC,aAAa,MAAM,CACtD,CAAA,SAAU,OAAO,MAAM,KAAK,eAAe,OAAO,MAAM,KAAK,SAC7D,MAAM;QAER,MAAM,cAAc,KAAK,KAAK,CAAC,AAAC,iBAAiB,qBAAqB,MAAM,GAAI;QAChF,mBAAmB;QAEnB,kCAAkC;QAClC,IAAI,mBAAmB,qBAAqB,MAAM,EAAE;YAClD,cAAc;YACd,wBAAwB;QAC1B;IACF;IAEA,gCAAgC;IAChC,MAAM,mBAAmB,CAAC,WAAmB;QAC3C,eAAe,CAAA;YACb,MAAM,iBAAiB;gBACrB,GAAG,IAAI;gBACP,CAAC,UAAU,EAAE;oBACX,GAAI,IAAI,CAAC,UAAU,IAAI;wBAAE;wBAAW,QAAQ;wBAAW,SAAS;oBAAK,CAAC;oBACtE,GAAG,MAAM;gBACX;YACF;YAEA,gEAAgE;YAChE,IAAI,OAAO,MAAM,KAAK,eAAe,OAAO,MAAM,KAAK,SAAS;gBAC9D,mCAAmC;gBACnC,IAAI,yBAAyB,WAAW;oBACtC,wBAAwB;gBAC1B;gBAEA,kEAAkE;gBAClE,WAAW;oBACT,YAAY;gBACd,GAAG;YACL;YAEA,OAAO;QACT;IACF;IAEA,yDAAyD;IACzD,MAAM,cAAc,CAAC;QACnB,0DAA0D;QAC1D,IAAI,sBAAsB;QAE1B,sDAAsD;QACtD,MAAM,gBAAgB,qBAAqB,IAAI,CAAC,CAAA,OAC9C,cAAc,CAAC,KAAK,MAAM,CAAC,EAAE,WAAW;QAG1C,IAAI,eAAe;YACjB,2BAA2B;YAC3B,wBAAwB,cAAc,MAAM;YAE5C,oCAAoC;YACpC,eAAe,CAAA,OAAQ,CAAC;oBACtB,GAAG,IAAI;oBACP,CAAC,cAAc,MAAM,CAAC,EAAE;wBACtB,GAAI,IAAI,CAAC,cAAc,MAAM,CAAC,IAAI;4BAAE,WAAW,cAAc,MAAM;4BAAE,SAAS;wBAAK,CAAC;wBACpF,QAAQ;oBACV;gBACF,CAAC;YAED,wDAAwD;YACxD,aAAa,cAAc,MAAM;QACnC;IACF;IAEA,gCAAgC;IAChC,MAAM,iBAAiB;QACrB,kBAAkB;QAElB,IAAI;YACF,iDAAiD;YACjD,KAAK,MAAM,QAAQ,qBAAsB;gBACvC,MAAM,SAAS,WAAW,CAAC,KAAK,MAAM,CAAC;gBACvC,IAAI,UAAU,OAAO,MAAM,KAAK,aAAa;oBAC3C,0EAA0E;oBAC1E,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,KAAK,MAAM,CAAC,GAAG,CAAC;gBACrD,yDAAyD;gBAC3D;YACF;YAEA,MAAM;QACR,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,MAAM;QACR,SAAU;YACR,kBAAkB;QACpB;IACF;IAEA,0CAA0C;IAC1C,MAAM,cAAc;QAClB,oCAAoC;QACpC,MAAM,eAA2C,CAAC;QAClD,qBAAqB,OAAO,CAAC,CAAA;YAC3B,YAAY,CAAC,KAAK,MAAM,CAAC,GAAG;gBAC1B,WAAW,KAAK,MAAM;gBACtB,QAAQ;gBACR,SAAS;YACX;QACF;QAEA,eAAe;QACf,cAAc;QACd,wBAAwB;QAExB,sBAAsB;QACtB,YAAY;IACd;IAEA,0DAA0D;IAC1D,MAAM,uBAAuB;QAC3B,OAAO,qBAAqB,GAAG,CAAC,CAAA,OAAQ,CAAC;gBACvC,WAAW,KAAK,MAAM;gBACtB,QAAQ,WAAW,CAAC,KAAK,MAAM,CAAC,EAAE,UAAU;gBAC5C,UAAU,yBAAyB,KAAK,MAAM;YAChD,CAAC;IACH;IAEA,4FAA4F;IAC5F,MAAM,sBAAsB,CAAC;QAC3B,MAAM,YAAY,qBAAqB,IAAI,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK;QACpE,OAAO,WAAW,WAAW,EAAE;IACjC;IAEA,6DAA6D;IAC7D,MAAM,gBAAgB,CAAC;QACrB,IAAI;YACF,MAAM,QAAQ,eAAe,OAAO,CAAC;YACrC,IAAI,OAAO;gBACT,MAAM,SAAS,KAAK,KAAK,CAAC;gBAE1B,qEAAqE;gBACrE,MAAM,iBAAiB,OAAO,WAAW;gBACzC,MAAM,gBAAgB,OAAO,UAAU;gBAEvC,OAAO;oBACL,GAAG,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,gBAAgB;oBACtD,GAAG,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,EAAE,IAAI,iBAAiB;gBACtD;YACF;YAEA,+CAA+C;YAC/C,OAAO;gBACL,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,OAAO,UAAU,GAAG,WAAW,KAAK,IAAI;gBACxD,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,OAAO,WAAW,GAAG,WAAW,MAAM,IAAI;YAC5D;QACF,EAAE,OAAO,GAAG;YACV,2CAA2C;YAC3C,OAAO;gBACL,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,OAAO,UAAU,GAAG,WAAW,KAAK,IAAI;gBACxD,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,OAAO,WAAW,GAAG,WAAW,MAAM,IAAI;YAC5D;QACF;IACF,CAAC;IAED,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,kDAAkD;IAClD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe,OAAO,CAAC,gCAAgC,KAAK,SAAS,CAAC;IACxE,GAAG;QAAC;KAAS;IAEb,MAAM,qBAAqB,CAAC;QAC1B,OAAQ;YACN,KAAK;gBAAa,OAAO,6KAAA,CAAA,UAAM,CAAC,cAAc;YAC9C,KAAK;gBAAS,OAAO,6KAAA,CAAA,UAAM,CAAC,UAAU;YACtC,KAAK;gBAAW,OAAO,GAAG,6KAAA,CAAA,UAAM,CAAC,YAAY,CAAC,CAAC,EAAE,6KAAA,CAAA,UAAM,CAAC,cAAc,EAAE;YACxE;gBAAS,OAAO,6KAAA,CAAA,UAAM,CAAC,YAAY;QACrC;IACF;IAEA,kFAAkF;IAClF,qBAAO,CAAA,GAAA,4MAAA,CAAA,eAAY,AAAD,gBAChB,8OAAC,yJAAA,CAAA,UAAS;QACR,SAAS;QACT,QAAO;QACP,UAAU;QACV,QAAQ,CAAC,GAAG;YACV,YAAY;gBAAE,GAAG,KAAK,CAAC;gBAAE,GAAG,KAAK,CAAC;YAAC;QACrC;kBAEA,cAAA,8OAAC;YAAI,KAAK;YAAS,WAAW,6KAAA,CAAA,UAAM,CAAC,cAAc;YAAE,OAAO,CAAa;;8BAEvE,8OAAC;oBAAI,WAAW,GAAG,6KAAA,CAAA,UAAM,CAAC,YAAY,CAAC,YAAY,CAAC;;sCAClD,8OAAC;4BAAG,WAAW,6KAAA,CAAA,UAAM,CAAC,WAAW;;8CAC/B,8OAAC;oCAAI,OAAM;oCAA6B,SAAQ;oCAAY,MAAK;oCAAO,QAAO;oCAAe,aAAY;oCAAI,eAAc;oCAAQ,gBAAe;oCAAQ,WAAW,6KAAA,CAAA,UAAM,CAAC,SAAS;;sDACpL,8OAAC;4CAAK,GAAE;;;;;;sDACR,8OAAC;4CAAK,GAAE;;;;;;;;;;;;gCACJ;;;;;;;sCAIR,8OAAC;4BACC,WAAW,6KAAA,CAAA,UAAM,CAAC,WAAW;4BAC7B,SAAS;gCACP,YAAY;oCACV,GAAG,CAAC,OAAO,UAAU,GAAG,WAAW,KAAK,IAAI;oCAC5C,GAAG,CAAC,OAAO,WAAW,GAAG,WAAW,MAAM,IAAI;gCAChD;4BACF;sCACD;;;;;;sCAID,8OAAC;4BACC,SAAS,CAAC;gCACR,EAAE,eAAe;gCACjB;4BACF;4BACA,WAAW,6KAAA,CAAA,UAAM,CAAC,WAAW;sCAC9B;;;;;;;;;;;;8BAMH,8OAAC;oBAAI,WAAW,6KAAA,CAAA,UAAM,CAAC,WAAW;;wBAE/B,qBAAqB,MAAM,GAAG,kBAC7B,8OAAC;4BAAI,WAAW,6KAAA,CAAA,UAAM,CAAC,aAAa;sCAClC,cAAA,8OAAC;gCAAI,WAAW,6KAAA,CAAA,UAAM,CAAC,QAAQ;0CAC5B,qBAAqB,GAAG,CAAC,CAAA,qBACxB,8OAAC;wCAEC,SAAS,IAAM,aAAa,KAAK,MAAM;wCACvC,WAAW,GAAG,6KAAA,CAAA,UAAM,CAAC,SAAS,CAAC,CAAC,EAAE,cAAc,KAAK,MAAM,GAAG,6KAAA,CAAA,UAAM,CAAC,eAAe,GAAG,IAAI;;4CAE1F,KAAK,MAAM;4CACX,WAAW,CAAC,KAAK,MAAM,CAAC,EAAE,WAAW,6BACpC,8OAAC;gDAAK,WAAW,6KAAA,CAAA,UAAM,CAAC,OAAO;0DAAE;;;;;;4CAElC,WAAW,CAAC,KAAK,MAAM,CAAC,EAAE,WAAW,yBACpC,8OAAC;gDAAK,WAAW,6KAAA,CAAA,UAAM,CAAC,OAAO;0DAAE;;;;;;4CAElC,WAAW,CAAC,KAAK,MAAM,CAAC,EAAE,WAAW,2BACpC,8OAAC;gDAAK,WAAW,GAAG,6KAAA,CAAA,UAAM,CAAC,OAAO,CAAC,CAAC,EAAE,6KAAA,CAAA,UAAM,CAAC,cAAc,EAAE;0DAAE;;;;;;;uCAZ5D,KAAK,MAAM;;;;;;;;;;;;;;iDAmBxB,8OAAC;4BAAI,WAAU;sCACZ,cAAA,8OAAC;0CAAE;;;;;;;;;;;wBAKP,qBAAqB,MAAM,GAAG,mBAC7B,8OAAC;4BAAI,OAAO;gCAAE,MAAM;gCAAG,SAAS;gCAAQ,qBAAqB;gCAAW,KAAK;gCAAQ,SAAS;gCAAoB,UAAU;4BAAS;;8CAEnI,8OAAC;oCAAI,OAAO;wCAAE,UAAU;wCAAQ,QAAQ;wCAAQ,SAAS,YAAY,UAAU;oCAAO;8CACnF,qBAAqB,GAAG,CAAC,CAAA,qBACxB,8OAAC;4CAEC,OAAO;gDACL,SAAS,cAAc,KAAK,MAAM,GAAG,UAAU;gDAC/C,QAAQ;gDACR,UAAU;4CACZ;;gDAGC,KAAK,MAAM,KAAK,yBACf,8OAAC,yKAAA,CAAA,gBAAa;oDACZ,SAAS,oBAAoB,KAAK,MAAM;oDACxC,MAAM;oDACN,gBAAgB,CAAC,UACf,iBAAiB,KAAK,MAAM,EAAE;4DAC5B,QAAQ;4DACR;wDACF;oDAEF,aAAa,CAAC,QACZ,iBAAiB,KAAK,MAAM,EAAE;4DAC5B,QAAQ;4DACR,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;wDAC3D;oDAEF,aAAa,IACX,iBAAiB,KAAK,MAAM,EAAE;4DAC5B,QAAQ;wDACV;oDAEF,cAAc,yBAAyB,KAAK,MAAM;;;;;;gDAMrD,CAAC;oDAAC;iDAAQ,CAAC,QAAQ,CAAC,KAAK,MAAM,mBAC9B,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,OAAO;gEACV,SAAS;gEACT,cAAc;gEACd,iBAAiB,aAAa,YAAY;gEAC1C,QAAQ,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;gEACzD,cAAc;gEACd,WAAW;4DACb;;8EACE,8OAAC;oEAAG,OAAO;wEAAE,cAAc;wEAAQ,OAAO,aAAa,YAAY;oEAAU;;wEAC1E,KAAK,MAAM;wEAAC;;;;;;;8EAEf,8OAAC;oEAAE,OAAO;wEAAE,cAAc;wEAAQ,OAAO,aAAa,YAAY;oEAAU;;wEAAG;wEAC3D,oBAAoB,KAAK,MAAM,EAAE,IAAI,CAAC;;;;;;;8EAE1D,8OAAC;oEACC,WAAW,6KAAA,CAAA,UAAM,CAAC,YAAY;oEAC9B,OAAO;wEACL,iBAAiB;wEACjB,OAAO;wEACP,QAAQ;oEACV;oEACA,SAAS;wEACP,2BAA2B;wEAC3B,iBAAiB,KAAK,MAAM,EAAE;4EAAE,QAAQ;wEAAU;wEAElD,sBAAsB;wEACtB,WAAW;4EACT,iBAAiB,KAAK,MAAM,EAAE;gFAC5B,QAAQ;gFACR,SAAS;oFACP,WAAW;oFACX,eAAe,oBAAoB,KAAK,MAAM;gFAChD;4EACF;wEACF,GAAG;oEACL;8EAEC,WAAW,CAAC,KAAK,MAAM,CAAC,EAAE,WAAW,eACrC,WAAW,CAAC,KAAK,MAAM,CAAC,EAAE,WAAW,UAClC,gBAAgB;;;;;;gEAIrB,KAAK,OAAO,CAAC,MAAM,GAAG,mBACrB,8OAAC;oEAAI,OAAO;wEACV,WAAW;wEACX,SAAS;wEACT,iBAAiB,aAAa,YAAY;wEAC1C,cAAc;wEACd,WAAW;oEACb;;sFACE,8OAAC;4EAAG,OAAO;gFACT,UAAU;gFACV,cAAc;gFACd,OAAO,aAAa,YAAY;4EAClC;sFAAG;;;;;;sFAGH,8OAAC;4EAAG,OAAO;gFACT,eAAe;gFACf,aAAa;gFACb,OAAO,aAAa,YAAY;4EAClC;sFACG,oBAAoB,KAAK,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,sBAC7C,8OAAC;8FAAgB;mFAAR;;;;;;;;;;;;;;;;;;;;;;wDAQlB,WAAW,CAAC,KAAK,MAAM,CAAC,EAAE,WAAW,6BACpC,8OAAC;4DAAI,OAAO;gEACV,SAAS;gEACT,cAAc;gEACd,iBAAiB,aAAa,YAAY;gEAC1C,QAAQ,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;4DAC3D;;8EACE,8OAAC;oEAAG,OAAO;wEACT,cAAc;wEACd,OAAO,aAAa,YAAY;wEAChC,SAAS;wEACT,YAAY;wEACZ,KAAK;oEACP;;sFACE,8OAAC;4EAAI,OAAM;4EAA6B,OAAM;4EAAK,QAAO;4EAAK,MAAK;4EAAO,SAAQ;4EAAY,QAAO;sFACpG,cAAA,8OAAC;gFAAK,eAAc;gFAAQ,gBAAe;gFAAQ,aAAa;gFAAG,GAAE;;;;;;;;;;;wEAEtE,KAAK,MAAM;wEAAC;;;;;;;8EAGf,8OAAC;oEAAI,OAAO;wEACV,iBAAiB,aAAa,YAAY;wEAC1C,cAAc;wEACd,SAAS;wEACT,YAAY;wEACZ,UAAU;wEACV,OAAO,aAAa,YAAY;oEAClC;;sFACE,8OAAC;sFAAE;;;;;;sFACH,8OAAC;sFAAE;;;;;;sFACH,8OAAC;;gFAAE;gFAAoB,oBAAoB,KAAK,MAAM,EAAE,IAAI,CAAC;;;;;;;;;;;;;8EAG/D,8OAAC;oEACC,OAAO;wEACL,WAAW;wEACX,SAAS;wEACT,iBAAiB;wEACjB,OAAO;wEACP,QAAQ;wEACR,cAAc;wEACd,QAAQ;wEACR,SAAS;wEACT,YAAY;wEACZ,KAAK;oEACP;;sFAEA,8OAAC;4EAAI,OAAM;4EAA6B,OAAM;4EAAK,QAAO;4EAAK,MAAK;4EAAO,SAAQ;4EAAY,QAAO;sFACpG,cAAA,8OAAC;gFAAK,eAAc;gFAAQ,gBAAe;gFAAQ,aAAa;gFAAG,GAAE;;;;;;;;;;;wEACjE;;;;;;;;;;;;;;;;;;;;2CA9JX,KAAK,MAAM;;;;;;;;;;8CA0KtB,8OAAC;oCAAI,OAAO;wCAAE,UAAU;wCAAQ,QAAQ;oCAAO;;sDAE7C,8OAAC;4CAAI,WAAW,6KAAA,CAAA,UAAM,CAAC,iBAAiB;;8DACtC,8OAAC;oDAAG,WAAW,6KAAA,CAAA,UAAM,CAAC,eAAe;;sEACnC,8OAAC;4DAAI,OAAM;4DAA6B,SAAQ;4DAAY,MAAK;4DAAe,WAAW,6KAAA,CAAA,UAAM,CAAC,mBAAmB;sEACnH,cAAA,8OAAC;gEAAK,UAAS;gEAAU,GAAE;gEAAqH,UAAS;;;;;;;;;;;wDACrJ;;;;;;;8DAIR,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;;gEAAM;gEAAgB;;;;;;;sEACvB,8OAAC;4DAAK,WAAW,GAAG,6KAAA,CAAA,UAAM,CAAC,WAAW,CAAC,CAAC,EACtC,aAAa,6KAAA,CAAA,UAAM,CAAC,cAAc,GAClC,uBAAuB,6KAAA,CAAA,UAAM,CAAC,YAAY,GAC1C,6KAAA,CAAA,UAAM,CAAC,YAAY,EACnB;sEACC,aAAa,0BACd,uBAAuB,CAAC,YAAY,EAAE,sBAAsB,GAC5D;;;;;;;;;;;;8DAIJ,8OAAC;oDAAI,WAAW,6KAAA,CAAA,UAAM,CAAC,WAAW;8DAChC,cAAA,8OAAC;wDACC,WAAW,6KAAA,CAAA,UAAM,CAAC,eAAe;wDACjC,OAAO;4DACL,OAAO,GAAG,gBAAgB,CAAC,CAAC;4DAC5B,YAAY;wDACd;;4DAEC;4DAAgB;;;;;;;;;;;;8DAKrB,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDACC,SAAS;wDACT,UAAU,yBAAyB;wDACnC,WAAW,6KAAA,CAAA,UAAM,CAAC,YAAY;wDAC9B,OAAO;4DACL,iBAAiB,yBAAyB,OAAO,YAAY;4DAC7D,OAAO;wDACT;;0EAEA,8OAAC;gEAAI,OAAM;gEAA6B,WAAW,6KAAA,CAAA,UAAM,CAAC,gBAAgB;gEAAE,SAAQ;gEAAY,MAAK;0EACnG,cAAA,8OAAC;oEAAK,UAAS;oEAAU,GAAE;oEAA+R,UAAS;;;;;;;;;;;4DAC/T;;;;;;;;;;;;;;;;;;sDAOZ,8OAAC;4CAAI,WAAW,6KAAA,CAAA,UAAM,CAAC,iBAAiB;;8DACtC,8OAAC;oDAAG,WAAU;;sEACZ,8OAAC;4DAAI,OAAM;4DAA6B,SAAQ;4DAAY,MAAK;4DAAe,WAAW,6KAAA,CAAA,UAAM,CAAC,mBAAmB;;8EACnH,8OAAC;oEAAK,GAAE;;;;;;8EACR,8OAAC;oEAAK,UAAS;oEAAU,GAAE;oEAAsO,UAAS;;;;;;;;;;;;wDACtQ;;;;;;;8DAIR,8OAAC;oDAAI,WAAW,6KAAA,CAAA,UAAM,CAAC,UAAU;oDAAE,OAAO;wDAAE,qBAAqB;oDAAwC;8DACtG,uBAAuB,GAAG,CAAC,CAAC,qBAC3B,8OAAC;4DAEC,WAAW,GAAG,6KAAA,CAAA,UAAM,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,QAAQ,GAAG,6KAAA,CAAA,UAAM,CAAC,gBAAgB,GAAG,GAAG,CAAC,EAAE,mBAAmB,KAAK,MAAM,GAAG;4DACpH,SAAS,IAAM,aAAa,KAAK,SAAS;;8EAE1C,8OAAC;oEAAI,WAAW,6KAAA,CAAA,UAAM,CAAC,eAAe;8EAAG,KAAK,SAAS;;;;;;8EACvD,8OAAC;oEAAI,WAAW,GAAG,6KAAA,CAAA,UAAM,CAAC,WAAW,CAAC,CAAC,EAAE,mBAAmB,KAAK,MAAM,GAAG;;wEACvE,KAAK,MAAM,KAAK,eAAe;wEAC/B,KAAK,MAAM,KAAK,WAAW;wEAC3B,KAAK,MAAM,KAAK,aAAa;wEAC7B,KAAK,MAAM,KAAK,aAAa;;;;;;;;2DAT3B,KAAK,SAAS;;;;;;;;;;8DAgBzB,8OAAC;oDAAI,OAAO;wDAAE,SAAS;wDAAQ,gBAAgB;wDAAY,WAAW;oDAAM;8DAC1E,cAAA,8OAAC;wDACC,SAAS;wDACT,UAAU,CAAC,cAAc,kBAAkB,qBAAqB,MAAM,KAAK;wDAC3E,WAAW,6KAAA,CAAA,UAAM,CAAC,YAAY;wDAC9B,OAAO;4DACL,iBAAiB,CAAC,cAAc,kBAAkB,qBAAqB,MAAM,KAAK,IAC9E,YAAY;4DAChB,OAAO;wDACT;;0EAEA,8OAAC;gEAAI,OAAM;gEAA6B,WAAW,6KAAA,CAAA,UAAM,CAAC,gBAAgB;gEAAE,SAAQ;gEAAY,MAAK;0EACnG,cAAA,8OAAC;oEAAK,UAAS;oEAAU,GAAE;oEAAqL,UAAS;;;;;;;;;;;4DAE1N,iBAAiB,cAAc;;;;;;;;;;;;;;;;;;sDAMtC,8OAAC;4CACC,OAAO;gDACL,QAAQ,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;gDACzD,cAAc;gDACd,iBAAiB,aAAa,YAAY;gDAC1C,UAAU;gDACV,WAAW;4CACb;;8DAEA,8OAAC;oDAAI,OAAO;wDACV,SAAS;wDACT,iBAAiB,aAAa,YAAY;wDAC1C,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;wDAC/D,OAAO,aAAa,YAAY;wDAChC,SAAS;wDACT,gBAAgB;wDAChB,YAAY;oDACd;8DACE,cAAA,8OAAC;kEAAG;;;;;;;;;;;8DAGN,8OAAC;oDAAI,OAAO;wDAAE,SAAS;oDAAO;8DAC3B,qBAAqB,GAAG,CAAC,CAAA,qBACxB,8OAAC;4DAEC,OAAO;gEACL,cAAc;gEACd,SAAS;gEACT,iBAAiB,aAAa,YAAY;gEAC1C,cAAc;gEACd,QAAQ,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;4DAC3D;;8EAEA,8OAAC;oEAAI,OAAO;wEACV,UAAU;wEACV,YAAY;wEACZ,cAAc;wEACd,OAAO,aAAa,YAAY;oEAClC;8EACG,KAAK,MAAM;;;;;;gEAEb,oBAAoB,KAAK,MAAM,EAAE,MAAM,GAAG,kBACzC,8OAAC;oEAAI,OAAO;wEAAE,OAAO,aAAa,YAAY;oEAAU;8EACrD,oBAAoB,KAAK,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,sBAC7C,8OAAC;4EAEC,OAAO;gFACL,SAAS;gFACT,iBAAiB,aAAa,YAAY;gFAC1C,cAAc;gFACd,SAAS;gFACT,QAAQ;gFACR,UAAU;4EACZ;;gFACD;gFACI;;2EAVE;;;;;;;;;yFAeX,8OAAC;oEAAI,OAAO;wEAAE,OAAO,aAAa,YAAY;wEAAW,WAAW;wEAAU,UAAU;oEAAO;8EAAG;;;;;;;2DApC/F,KAAK,MAAM;;;;;;;;;;;;;;;;sDA8CxB,8OAAC;4CAAI,OAAO;gDACV,QAAQ,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;gDACzD,cAAc;gDACd,iBAAiB,aAAa,YAAY;gDAC1C,UAAU;gDACV,WAAW;4CACb;;8DACE,8OAAC;oDAAI,OAAO;wDACV,SAAS;wDACT,iBAAiB,aAAa,YAAY;wDAC1C,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;wDAC/D,OAAO,aAAa,YAAY;wDAChC,SAAS;wDACT,gBAAgB;wDAChB,YAAY;oDACd;;sEACE,8OAAC;sEAAG;;;;;;sEACJ,8OAAC;4DAAO,OAAO;gEACb,iBAAiB;gEACjB,QAAQ;gEACR,OAAO,aAAa,YAAY;gEAChC,QAAQ;gEACR,UAAU;4DACZ;sEAAG;;;;;;;;;;;;8DAKL,8OAAC;oDAAI,OAAO;wDACV,SAAS;wDACT,WAAW;wDACX,WAAW;wDACX,YAAY;wDACZ,UAAU;wDACV,iBAAiB,aAAa,YAAY;wDAC1C,OAAO,aAAa,YAAY;oDAClC;;wDACG,qCACC;;8EACE,8OAAC;oEAAI,OAAO;wEAAE,OAAO;oEAAU;;wEAAG;wEACxB,IAAI,OAAO,kBAAkB;wEAAG;wEAAsB;;;;;;;8EAEhE,8OAAC;oEAAI,OAAO;wEAAE,OAAO,aAAa,YAAY;oEAAU;;wEAAG;wEAChD,IAAI,OAAO,kBAAkB;wEAAG;;;;;;;8EAE3C,8OAAC;oEAAI,OAAO;wEAAE,OAAO,aAAa,YAAY;oEAAU;;wEAAG;wEAChD,IAAI,OAAO,kBAAkB;wEAAG;wEAAqB,oBAAoB,sBAAsB,IAAI,CAAC;;;;;;;8EAE/G,8OAAC;oEAAI,WAAW,6KAAA,CAAA,UAAM,CAAC,cAAc;oEAAE,OAAO;wEAAE,OAAO;oEAAU;;wEAAG;wEAC1D,IAAI,OAAO,kBAAkB;wEAAG;;;;;;;;2EAG1C,2BACF,8OAAC;4DAAI,OAAO;gEAAE,OAAO;4DAAU;;gEAAG;gEACrB,IAAI,OAAO,kBAAkB;gEAAG;;;;;;mEAG7C,qBAAqB,MAAM,KAAK,kBAC9B,8OAAC;4DAAI,OAAO;gEAAE,OAAO,aAAa,YAAY;gEAAW,WAAW;4DAAS;sEAAG;;;;;iFAIhF,8OAAC;4DAAI,OAAO;gEAAE,OAAO,aAAa,YAAY;gEAAW,WAAW;4DAAS;sEAAG;;;;;;wDAOnF,OAAO,OAAO,CAAC,aACb,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,GAAK,OAAO,MAAM,KAAK,eAAe,OAAO,MAAM,KAAK,SAC3E,GAAG,CAAC,CAAC,CAAC,WAAW,OAAO;4DACvB,MAAM,UAAU,oBAAoB;4DACpC,qBACE,8OAAC;gEAAoB,OAAO;oEAC1B,OAAO,OAAO,MAAM,KAAK,cAAc,YAAY;oEACnD,WAAW;gEACb;;oEAAG;oEACC,OAAO,MAAM,KAAK,cAAc,YAAY;oEAAQ;oEAAG,IAAI,OAAO,kBAAkB;oEAAG;oEACxF,OAAO,MAAM,KAAK,cACf,CAAC,CAAC,EAAE,UAAU,uCAAuC,EAAE,QAAQ,IAAI,CAAC,OAAO,GAC3E,CAAC,CAAC,EAAE,UAAU,cAAc,EAAE,OAAO,OAAO,IAAI,iBAAiB;;+DAP7D;;;;;wDAUd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cAUlB;AAEJ;uCAEe","debugId":null}},
    {"offset": {"line": 4543, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/MainScreen/MainScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styles from \"./MainScreen.module.css\";\r\nimport ToTestList from \"../ToTestList/ToTestList\";\r\nimport { FaCube, FaCheck, FaTimes, FaWrench, FaBars, FaCog, FaPlus, FaEdit, FaTrash, FaInfoCircle, FaPlay } from \"react-icons/fa\";\r\nimport { FaDownload } from \"react-icons/fa\";\r\nimport mammoth from \"mammoth\"; // Import mammoth for `.docx` extraction, npm install mammoth\r\nimport { renderAsync } from \"docx-preview\"; // npm install docx-preview\r\nimport { Document, Packer, Paragraph } from \"docx\"; // npm install docx\r\nimport { EditorContent, useEditor } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport { Profile } from '@/types/types';\r\nimport Table from \"@tiptap/extension-table\";\r\nimport TableRow from \"@tiptap/extension-table-row\";\r\nimport TableCell from \"@tiptap/extension-table-cell\";\r\nimport TableHeader from \"@tiptap/extension-table-header\";\r\nimport BulletList from \"@tiptap/extension-bullet-list\";\r\nimport OrderedList from \"@tiptap/extension-ordered-list\";\r\nimport ListItem from \"@tiptap/extension-list-item\";\r\nimport TurndownService from \"turndown\";\r\nimport { DragOverlay, DndContext, closestCorners, closestCenter, pointerWithin, getFirstCollision, useSensor, useSensors, PointerSensor } from \"@dnd-kit/core\";\r\nimport { Collision, CollisionDetection } from \"@dnd-kit/core\";\r\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\r\nimport DraggableBox from \"../MainScreen/DraggableBox\"; // Import Draggable Box\r\nimport { useDroppable } from \"@dnd-kit/core\";\r\nimport { useDndContext } from \"@dnd-kit/core\";\r\nimport { rectIntersection } from \"@dnd-kit/core\";\r\nimport { DragEndEvent, UniqueIdentifier } from '@dnd-kit/core';\r\nimport ThreeDModelWindow from \"@/components/ModelWindow/ThreeDModelWindow\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { WindowName } from \"@/types/types\";\r\nimport CheckoutTestProgress from \"@/components/CheckoutTestProgress/CheckoutTestProgress\";\r\nimport { connectToMcc } from \"@/utils/mccUtils\";\r\n\r\nconst API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\"; // fall back\r\n// Ensure this is correct\r\n\r\ninterface DroppableContainerType {\r\n  id: string;\r\n  data: {\r\n    type: string;\r\n    accepts: string[];\r\n    isDropZone?: boolean;\r\n  };\r\n}\r\n\r\ninterface CollisionRect {\r\n  top: number;\r\n  bottom: number;\r\n  left: number;\r\n  right: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface CollisionData {\r\n  droppableContainer: DroppableContainerType;\r\n  value: number;\r\n  rect: CollisionRect;\r\n}\r\n\r\ninterface CustomCollision {\r\n  id: string;\r\n  data: CollisionData;\r\n}\r\n\r\ninterface DraggableItem {\r\n  id: string;\r\n  header: string;\r\n  options: string[];\r\n  isDropped: boolean;\r\n  checkedOptions: Record<string, boolean>;\r\n}\r\n\r\ninterface MainScreenProps {\r\n  openToTestList: (forceRender?: boolean) => void; // Updated to accept optional parameter\r\n  closeToTestList: () => void;  // ✅ Accept close function as a prop\r\n  openServerWindow: () => void;\r\n  openModelWindow: (profileId?: number) => void;\r\n  closeModelWindow: () => void;  // ✅ Accept close function\r\n  showToTestList: boolean;  // ✅ Accept this prop\r\n  showThreeDModelWindow: boolean;  // ✅ Accept this prop\r\n  threeDModelProfileId: number | null;  // ✅ Accept profile ID\r\n  windowZIndexes: { [key in WindowName]: number };  // ✅ Ensure proper indexing\r\n  bringWindowToFront: (windowName: WindowName) => void;  // ✅ Ensure correct function type\r\n  zIndexCounter: number;  // ✅ Accept counter\r\n  navigateWithState?: (to: string, options?: any) => void;\r\n}\r\n\r\nconst MainScreen: React.FC<MainScreenProps> = ({ \r\n  openToTestList, \r\n  closeToTestList, // ✅ Use close function\r\n  openServerWindow, \r\n  openModelWindow,\r\n  closeModelWindow,  // ✅ Use function from props\r\n  showToTestList,  // ✅ Use this prop\r\n  showThreeDModelWindow,  // ✅ Use this prop\r\n  threeDModelProfileId,  // ✅ Use profile ID from props\r\n  windowZIndexes, // ✅ Use windowZIndexes from props\r\n  bringWindowToFront,  // ✅ Use function from props\r\n  zIndexCounter  // ✅ Use counter from props\r\n}): React.ReactElement => {\r\n\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [isProfileDropdownOpen, setIsProfileDropdownOpen] = useState(false);\r\n  const [profiles, setProfiles] = useState<Profile[]>([]);\r\n  const [selectedProfile, setSelectedProfile] = useState<string | null>(null);\r\n  const [showAbout, setShowAbout] = useState(false);\r\n  const [uploadedText, setUploadedText] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false); // for aboutSection\r\n  const [tempDescription, setTempDescription] = useState(\"\");\r\n  const [uploadedImages, setUploadedImages] = useState<{ src: string; alt: string }[]>([]);\r\n  const [uploadedFileName, setUploadedFileName] = useState<string | null>(null);\r\n  const [profileData, setProfileData] = useState<{ \r\n    [key: string]: { \r\n      description: string; \r\n      images: { src: string; alt: string }[]; \r\n      uploadedFileName?: string; // ✅ Store filename per profile\r\n    } \r\n  }>({});\r\n  const [showCheckout, setShowCheckout] = useState(false);\r\n  const [isCheckoutEditing, setIsCheckoutEditing] = useState(false); // For checkoutSection\r\n  const [droppedItems, setDroppedItems] = useState<DraggableItem[]>([]);\r\n  // Manage draggable items\r\n  const [items, setItems] = useState<DraggableItem[]>([\r\n    { id: \"1\", header: \"OBC-1\", options: [\"eMMC\"], isDropped: false, checkedOptions: {} }, // ✅ Ensure consistent key name\r\n    { id: \"2\", header: \"OBC-2\", options: [\"SD Card\", \"EEPROM\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"3\", header: \"S-Band\", options: [\"Telemetry\", \"Ground Pass\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"4\", header: \"UHF\", options: [\"Telemetry\", \"Ground Pass\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"5\", header: \"HEPS\", options: [\"Solar Panel\", \"Heater\", \"Hdrm\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"6\", header: \"ADCS\", options: [\"Version Check\", \"Gyroscope\", \"Magnetometer\", \"Star Tracker\", \"FOG\", \"Fine Sun Sensor\", \"Coarse Sun Sensor\", \"Earth Sensor\", \"Reaction Wheel\", \"Magnetic Torquer\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"7\", header: \"GPS\", options: [\"Version Check\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"8\", header: \"Propulsion\", options: [\"ECU-1 PMA\", \"ECU-1 PPU-1\", \"ECU-2 PMA\", \"ECU-2 PPU-2\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"9\", header: \"PCS\", options: [\"SD Card\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"10\", header: \"Payload\", options: [\"LEOCAM\", \"AOD\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"11\", header: \"X-Band\", options: [\"Telecommand\", \"Telemetry\"], isDropped: false, checkedOptions: {} },\r\n  ]);\r\n  const [activeId, setActiveId] = useState<string | null>(null);\r\n  const [dummyState, setDummyState] = useState(false); // Declare a state for forcing re-renders\r\n  const [sortableKey, setSortableKey] = useState(0);\r\n  const [show3DModel, setShow3DModel] = useState(false); // Manage pop-up visibility\r\n  const [selectedProfileId, setSelectedProfileId] = useState<number | null>(null);\r\n  const [showCheckoutTest, setShowCheckoutTest] = useState(false);\r\n  const [mccSocket, setMccSocket] = useState<any>(null);\r\n  \r\n  // In MainScreen.tsx, add this after your state declarations but before your functions\r\n  const dragTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined);\r\n\r\n  const removeDroppedItem = (itemId: string) => {\r\n    if (dragTimeoutRef.current) {\r\n      clearTimeout(dragTimeoutRef.current);\r\n    }\r\n  \r\n    console.log(`🗑️ Attempting to remove item ${itemId} from top section`);\r\n  \r\n    // ✅ Remove from `droppedItems`\r\n    setDroppedItems(prev => {\r\n      const updatedDroppedItems = prev.filter(item => item.id !== itemId);\r\n      console.log(\"✅ Updated dropped items after removal:\", updatedDroppedItems);\r\n      return [...updatedDroppedItems]; // ✅ Force reactivity\r\n    });\r\n  \r\n    // ✅ Ensure item is draggable again by updating `items` state\r\n    setItems(prev => {\r\n      const updatedItems = prev.map(item => {\r\n        if (item.id === itemId) {\r\n          console.log(`✅ Resetting isDropped for item ${itemId}`);\r\n          return { ...item, isDropped: false };\r\n        }\r\n        return item;\r\n      });\r\n      console.log(\"✅ Updated items after removal:\", updatedItems);\r\n      return [...updatedItems]; // ✅ Ensure a new array reference for reactivity\r\n    });\r\n  \r\n    // ✅ Reset DOM attributes to make the item draggable again\r\n    setTimeout(() => {\r\n      const bottomItem = document.querySelector(`[data-draggable-id=\"${itemId}\"]`) as HTMLElement;\r\n      if (bottomItem) {\r\n        console.log(`✅ Resetting DOM attributes for item ${itemId}`);\r\n        bottomItem.removeAttribute('data-dropped');\r\n        bottomItem.style.pointerEvents = 'auto';\r\n        bottomItem.style.opacity = '1';\r\n        bottomItem.style.cursor = 'grab';\r\n      }\r\n    }, 50);\r\n  \r\n    setActiveId(null);\r\n    setDragging(false);\r\n  \r\n    // ✅ FULL Reset of Drop Zones and SortableContext\r\n    setTimeout(() => {\r\n      console.log(\"🔄 FORCING FULL Reset of Drop Zones and SortableContext...\");\r\n      setDroppedItems(prev => [...prev]);\r\n      setItems(prev => [...prev]); // ✅ Ensure full re-render\r\n  \r\n      // ✅ Force SortableContext to reset\r\n      setSortableKey(prev => prev + 1);\r\n    }, 200);\r\n  };\r\n  \r\n// Add a function to handle checkbox changes\r\nconst handleOptionChange = (itemId: string, option: string, checked: boolean) => {\r\n  console.log(`Checkbox changed: ${itemId}, option: ${option}, checked: ${checked}`);\r\n  // Update items if the item is in the bottom section\r\n  setItems(prevItems => \r\n    prevItems.map(item => \r\n      item.id === itemId \r\n        ? { \r\n            ...item, \r\n            checkedOptions: { \r\n              ...item.checkedOptions, \r\n              [option]: checked \r\n            } \r\n          }\r\n        : item\r\n    )\r\n  );\r\n  \r\n  // Update droppedItems if the item is in the top section\r\n  setDroppedItems(prevItems => \r\n    prevItems.map(item => \r\n      item.id === itemId \r\n        ? { \r\n            ...item, \r\n            checkedOptions: { \r\n              ...item.checkedOptions, \r\n              [option]: checked \r\n            } \r\n          }\r\n        : item\r\n    )\r\n  );\r\n  \r\n  // Save the updated state to the database\r\n  handleSaveCheckout();\r\n};\r\n  \r\n  \r\n  const observerRef = useRef<MutationObserver | null>(null);\r\n\r\n  const renderCount = useRef(0); // Track how many times it runs\r\n\r\n  useEffect(() => {\r\n    if (!isCheckoutEditing) return;\r\n  \r\n    renderCount.current += 1;\r\n    console.log(`🔁 useEffect executed ${renderCount.current} times`);\r\n  \r\n    const dropZones = document.querySelectorAll('[data-droppable-id]');\r\n    dropZones.forEach(zone => {\r\n      zone.setAttribute('data-droppable', 'true');\r\n      zone.setAttribute('data-type', 'container');\r\n    });\r\n  \r\n  }, [isCheckoutEditing]);\r\n  \r\n  \r\n  \r\n  \r\n\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"🔄 Drop zones reloaded due to dragging state\");\r\n  }, [dragging]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchProfiles();\r\n  }, []);\r\n\r\n  const fetchProfiles = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/profiles`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch profiles.\");\r\n      }\r\n  \r\n      const data = await response.json();\r\n  \r\n      let profileMap: {\r\n        [key: string]: { description: string; images: { src: string; alt: string }[], uploadedFileName?: string };\r\n      } = {};\r\n  \r\n      data.forEach((profile: Profile) => {\r\n        profileMap[profile.name] = {\r\n          description: profile.description || \"\",\r\n          images: profile.images && Array.isArray(profile.images)\r\n            ? profile.images.map(img => \r\n                typeof img === \"string\" \r\n                  ? { src: img, alt: \"Uploaded image\" } \r\n                  : img) \r\n            : [],\r\n          uploadedFileName: profile.uploadedFileName || \"\",\r\n        };\r\n      });\r\n  \r\n      setProfiles(data);\r\n      setProfileData(profileMap);\r\n    } catch (error) {\r\n      console.error(\"Error fetching profiles:\", error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const toggleSidebar = () => setIsSidebarOpen(!isSidebarOpen);\r\n  const toggleProfileDropdown = () => setIsProfileDropdownOpen(!isProfileDropdownOpen);\r\n  const toggleAbout = () => {\r\n    if (!selectedProfile) return;\r\n    setShowAbout(!showAbout);\r\n  };\r\n\r\n\r\n  const addProfile = async () => {\r\n    let profileName = prompt(\"Enter profile name:\");\r\n  \r\n    if (!profileName || profileName.trim() === \"\") {\r\n      alert(\"Profile name cannot be empty.\");\r\n      return;\r\n    }\r\n  \r\n    profileName = profileName.trim();\r\n  \r\n    if (profiles.some((profile) => profile.name.toLowerCase() === profileName.toLowerCase())) {\r\n      alert(\"Profile name already exists! Choose a different name.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`${API_URL}/profiles`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ name: profileName, description: \"\", images: [] }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorMessage = await response.json();\r\n        throw new Error(errorMessage.error || \"Failed to create profile.\");\r\n      }\r\n  \r\n      const newProfile = await response.json();\r\n      setProfiles([...profiles, newProfile]);\r\n  \r\n      // Initialize profile data\r\n      setProfileData((prev) => ({\r\n        ...prev,\r\n        [newProfile.name]: { description: \"\", images: [] },\r\n      }));\r\n    } catch (error: unknown) {\r\n      console.error(\"Error adding profile:\", error);\r\n      if (error instanceof Error) {\r\n        alert(error.message);\r\n      } else {\r\n        alert(\"An unexpected error occurred.\");\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n  const deleteProfile = async (profileName: string) => {\r\n    const confirmDelete = window.confirm(`Are you sure you want to delete the profile: ${profileName}?`);\r\n    if (!confirmDelete) {\r\n      return; // Cancel deletion if user clicks \"Cancel\"\r\n    }\r\n  \r\n    try {\r\n      await fetch(`${API_URL}/profiles/${profileName}`, { method: \"DELETE\" });\r\n      setProfiles(profiles.filter((profile) => profile.name !== profileName));\r\n      setSelectedProfile(null);\r\n    } catch (error) {\r\n      console.error(\"Error deleting profile:\", error);\r\n    }\r\n  };\r\n  \r\n  const convertImageToBase64 = async (imageUrl: string): Promise<string> => {\r\n    try {\r\n      const response = await fetch(imageUrl);\r\n      const blob = await response.blob();\r\n      return new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result as string);\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error converting image to Base64:\", error);\r\n      return \"\";\r\n    }\r\n  };\r\n  \r\n  let formattedHtml = \"\";\r\n\r\n  const turndownService = new TurndownService();\r\n  turndownService.addRule(\"list\", {\r\n    filter: [\"ul\", \"ol\"],\r\n    replacement: function (content: string, node: Node) {\r\n      return (node as HTMLElement).outerHTML; // ✅ Typecast `node` as `HTMLElement`\r\n    },\r\n  });\r\n  \r\n  \r\n/* Function to handle file uploads */\r\nconst handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  if (!selectedProfile) return;\r\n\r\n  const file = event.target.files?.[0];\r\n  if (!file) return;\r\n\r\n  const fileName = file.name;\r\n\r\n  // ✅ Store the file name (avoid unnecessary re-renders)\r\n  setProfileData((prevData) => ({\r\n    ...prevData,\r\n    [selectedProfile]: {\r\n      ...prevData[selectedProfile],\r\n      uploadedFileName: fileName,\r\n    },\r\n  }));\r\n\r\n  const reader = new FileReader();\r\n\r\n  if (file.type === \"text/plain\") {\r\n    reader.onload = (e) => {\r\n      if (e.target?.result) {\r\n        const uploadedText = e.target.result.toString().trim();\r\n        console.log(\"Extracted Text Content:\", uploadedText);\r\n        setUploadedText(uploadedText);\r\n        autoSaveToDatabase(uploadedText, uploadedImages);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  } else if (file.name.endsWith(\".docx\")) {\r\n    reader.onload = async (e) => {\r\n      if (e.target?.result instanceof ArrayBuffer) {\r\n        try {\r\n          let formattedHtml = \"\";\r\n\r\n          // ✅ Extract HTML using `mammoth.convertToHtml()`\r\n          const mammothResult = await mammoth.convertToHtml({ arrayBuffer: e.target.result });\r\n          let extractedHtml = mammothResult.value.trim();\r\n\r\n          console.log(\"Mammoth Extracted Content (With Lists):\", extractedHtml);\r\n\r\n          // ✅ Preserve bullet points & numbered lists properly\r\n          formattedHtml = extractedHtml\r\n            .replace(/<p>\\s*•\\s*/g, \"<ul><li>\") // Fix unordered lists\r\n            .replace(/<p>\\s*\\d+\\.\\s*/g, \"<ol><li>\") // Fix ordered lists\r\n            .replace(/<\\/p>\\s*<p>/g, \"</li><li>\") // Ensure list items are correctly wrapped\r\n            .replace(/<\\/p>/g, \"</li></ul>\") // Close unordered lists properly\r\n            .replace(/<\\/ol><\\/li>/g, \"</ol>\") // Close ordered lists properly\r\n            .replace(/<\\/li><\\/ul>(?!<\\/li>)/g, \"</ul>\"); // Remove misaligned list endings\r\n\r\n          console.log(\"Final Processed HTML (Fixed Lists):\", formattedHtml);\r\n\r\n          // ✅ Process `docx-preview` but DO NOT append it to the UI\r\n          const docxContainer = document.createElement(\"div\");\r\n          await renderAsync(e.target.result, docxContainer);\r\n\r\n          // ✅ Extract only relevant content, ignoring `docx-preview` elements\r\n          const extractedBodyContent = docxContainer.querySelector(\"article\")?.innerHTML || \"\";\r\n\r\n          // ✅ Ensure we use the most structured version\r\n          formattedHtml = extractedBodyContent.includes(formattedHtml)\r\n            ? extractedBodyContent\r\n            : extractedBodyContent || formattedHtml;\r\n\r\n          // ✅ Remove `docx-preview` elements BEFORE storing content\r\n          const tempContainer = document.createElement(\"div\");\r\n          tempContainer.innerHTML = formattedHtml;\r\n          tempContainer.querySelectorAll(\"section.docx, .docx-wrapper\").forEach((el) => el.remove());\r\n          formattedHtml = tempContainer.innerHTML.trim();\r\n\r\n          // ✅ Ensure proper table & list styling\r\n          formattedHtml = formattedHtml\r\n            .replace(/<table/g, '<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\"') \r\n            .replace(/<td/g, '<td style=\"padding: 8px; border: 1px solid black;\"') \r\n            .replace(/<ul/g, '<ul style=\"padding-left: 20px; list-style-type: disc; margin-top: 10px; margin-bottom: 10px;\"') \r\n            .replace(/<ol/g, '<ol style=\"padding-left: 20px; list-style-type: decimal; margin-top: 10px; margin-bottom: 10px;\"') \r\n            .replace(/<li/g, '<li style=\"margin-bottom: 5px;\"'); // ✅ Ensure list items have proper spacing\r\n\r\n          // ✅ Remove incorrect `<li>` wrapping on normal text\r\n          formattedHtml = formattedHtml.replace(/<li><strong>/g, \"<p><strong>\").replace(/<\\/strong><\\/li>/g, \"</strong></p>\");\r\n\r\n          // ✅ Extract images & convert to Base64\r\n          const extractedImages = await Promise.all(\r\n            Array.from(docxContainer.querySelectorAll(\"img\")).map(async (img) => {\r\n              const base64Image = await convertImageToBase64(img.src);\r\n              return { src: base64Image, alt: img.alt || \"Uploaded image\" };\r\n            })\r\n          );\r\n\r\n          // ✅ Store only cleaned & formatted content without `docx-preview`\r\n          setUploadedText(formattedHtml.trim());\r\n          setUploadedImages(extractedImages);\r\n          autoSaveToDatabase(formattedHtml.trim(), extractedImages);\r\n\r\n          // ✅ Remove `docx-preview` from the DOM after processing\r\n          document.querySelectorAll(\"section.docx, .docx-wrapper\").forEach((el) => el.remove());\r\n        } catch (error) {\r\n          console.error(\"Error processing .docx:\", error);\r\n        }\r\n      }\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  } else if (file.type.startsWith(\"image/\")) {\r\n    reader.onload = (e) => {\r\n      if (e.target?.result) {\r\n        const base64Image = e.target.result.toString();\r\n        const newImage = { src: base64Image, alt: \"Uploaded image\" };\r\n\r\n        setUploadedImages((prevImages) => [...prevImages, newImage]);\r\n        autoSaveToDatabase(uploadedText, [...uploadedImages, newImage]);\r\n      }\r\n    };\r\n    reader.readAsDataURL(file);\r\n  } else {\r\n    alert(\"Invalid file type. Please upload a .txt, .docx, or an image file.\");\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/* ✅ Function to Start Editing */\r\nconst startEditing = () => {\r\n  if (!selectedProfile) return;\r\n  \r\n  setTempDescription(profileData[selectedProfile]?.description || \"\");\r\n  setIsEditing(true);\r\n\r\n  if (editor) {\r\n      editor.commands.setContent(profileData[selectedProfile]?.description || \"\");\r\n  }\r\n};\r\n\r\n\r\n/* ✅ Function to Save Edited Description */\r\nconst saveEditedDescription = async () => {\r\n  if (!selectedProfile) return;\r\n\r\n  const formattedText = editor?.getHTML() || \"\";\r\n\r\n  try {\r\n    await fetch(`${API_URL}/profiles/${selectedProfile}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        description: formattedText,\r\n        images: uploadedImages, // ✅ Save updated images\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      }),\r\n    });\r\n\r\n    // ✅ Update profileData to reflect saved changes\r\n    setProfileData((prevData) => ({\r\n      ...prevData,\r\n      [selectedProfile]: {\r\n        description: formattedText,\r\n        images: uploadedImages, // ✅ Store updated images in state\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      },\r\n    }));\r\n\r\n    setIsEditing(false);\r\n  } catch (error) {\r\n    console.error(\"Error saving description:\", error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst removeImage = (index: number) => {\r\n  if (!selectedProfile || !isEditing) return; // ✅ Ensure we're in edit mode\r\n\r\n  setProfileData((prevData) => {\r\n    const updatedImages = (prevData[selectedProfile]?.images || []).filter((_, i) => i !== index);\r\n\r\n    return {\r\n      ...prevData,\r\n      [selectedProfile]: {\r\n        ...prevData[selectedProfile],\r\n        images: updatedImages,\r\n      },\r\n    };\r\n  });\r\n\r\n  // ✅ Temporarily update images during editing\r\n  setUploadedImages((prevImages) => prevImages.filter((_, i) => i !== index));\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ✅ Sanitize Extracted HTML */\r\n/* ✅ Sanitize Extracted HTML */\r\nconst sanitizeHTML = (html: string): string => {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, \"text/html\");\r\n\r\n  // ✅ Ensure lists (`<ul>`, `<ol>`, `<li>`) are preserved\r\n  doc.querySelectorAll(\"p:empty, div:empty\").forEach((node) => node.remove());\r\n  doc.querySelectorAll(\"br\").forEach((node) => node.remove());\r\n\r\n  // ✅ Log extracted HTML to verify if lists exist before rendering\r\n  console.log(\"Sanitized HTML Output:\", doc.body.innerHTML);\r\n\r\n  return doc.body.innerHTML;\r\n};\r\n\r\n\r\n/* Save to File */\r\nconst saveToFile = (format = \"txt\") => {\r\n  if (!uploadedText) {\r\n    alert(\"No content to save.\");\r\n    return;\r\n  }\r\n\r\n  if (!selectedProfile) {\r\n    alert(\"No profile selected.\");\r\n    return;\r\n  }\r\n\r\n  const sanitizedProfileName = selectedProfile.replace(/[^a-zA-Z0-9_-]/g, \"\");\r\n  const readableText = convertHtmlToPlainText(uploadedText); // ✅ Convert HTML to plain text\r\n\r\n  if (format === \"txt\") {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([readableText], { type: \"text/plain\" }); // ✅ Save as plain text\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = `${sanitizedProfileName}_Specifications.txt`;\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  } else if (format === \"docx\") {\r\n    const doc = new Document({\r\n      sections: [\r\n        {\r\n          properties: {},\r\n          children: readableText.split(\"\\n\").map(line => new Paragraph(line)), // ✅ Split into paragraphs\r\n        },\r\n      ],\r\n    });\r\n\r\n    Packer.toBlob(doc).then((blob) => {\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.download = `${sanitizedProfileName}_Specifications.docx`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    });\r\n  }\r\n};\r\n\r\nconst cancelEditing = () => {\r\n  setIsEditing(false);\r\n};\r\n\r\nconst autoSaveToDatabase = async (text: string, images: { src: string; alt: string }[]) => {\r\n  if (!selectedProfile) {\r\n    alert(\"No profile selected.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API_URL}/profiles/${selectedProfile}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        description: text,\r\n        images: images.map(img => img.src), // ✅ Ensure only the src is saved\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      console.log(\"Profile updated automatically.\");\r\n    } else {\r\n      console.error(\"Error saving profile.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error saving profile:\", error);\r\n  }\r\n};\r\n\r\n\r\nconst convertHtmlToPlainText = (html: string): string => {\r\n  const doc = new DOMParser().parseFromString(html, \"text/html\");\r\n  return doc.body.textContent || \"\";\r\n};\r\n\r\nconst editor = useEditor({\r\n  extensions: [\r\n    StarterKit.configure({\r\n      bulletList: false, // ✅ Disable default list handling\r\n      orderedList: false,\r\n    }),\r\n    Table.configure({\r\n      resizable: true,\r\n    }),\r\n    TableRow,\r\n    TableCell,\r\n    TableHeader,\r\n    BulletList, // ✅ Enable bullet points\r\n    OrderedList, // ✅ Enable numbered lists\r\n    ListItem,    // ✅ Enable list items\r\n  ],\r\n  content: uploadedText, // Initialize with the uploaded content\r\n  onUpdate: ({ editor }) => setTempDescription(editor.getHTML()), // Update state with editor changes\r\n  editorProps: {\r\n    attributes: {\r\n      class: \"prose focus:outline-none\",\r\n    },\r\n  },\r\n  immediatelyRender: false, // Fix SSR Hydration Mismatch\r\n});\r\n\r\n\r\n// Reset editor content when uploadedText changes\r\nuseEffect(() => {\r\n  if (editor && uploadedText) {\r\n    editor.commands.setContent(uploadedText); // Dynamically update editor content\r\n  }\r\n}, [uploadedText, editor]);\r\n\r\nconst handleProfileSelect = (profileName: string) => {\r\n  if (!profileName) return; // Prevent errors\r\n\r\n  setSelectedProfile(profileName);\r\n  setShowAbout(false); // Close About Section when switching profiles\r\n\r\n  // Ensure images are correctly set and do not become undefined\r\n  const profile = profileData[profileName] || { description: \"\", images: [], uploadedFileName: \"\" };\r\n\r\n  setUploadedImages(profile.images.length ? profile.images : []); // ✅ Ensure images exist\r\n  setUploadedText(profile.description);\r\n};\r\n\r\nconst toggleCheckout = () => {\r\n  if (!selectedProfile) return;\r\n  setShowCheckout(!showCheckout);\r\n};\r\n\r\nconst toggleCheckoutEditMode = () => {\r\n  console.log(\"Toggling Checkout Edit Mode\");\r\n  setIsCheckoutEditing(prev => !prev);\r\n};\r\n\r\n\r\nconst { active } = useDndContext(); // ✅ Get active drag item\r\n\r\n// Define droppable state\r\nconst { isOver: isOverTop, setNodeRef: topSectionRef } = useDroppable({\r\n  id: \"top-section\",\r\n  data: {\r\n    type: \"container\",\r\n    accepts: [\"draggable-item\"],\r\n    isDropZone: true,\r\n  },\r\n  disabled: false, // Ensure it's always active\r\n});\r\n\r\nconst { isOver: isOverBottom, setNodeRef: bottomSectionRef } = useDroppable({\r\n  id: \"bottom-section\",\r\n  data: {\r\n    accepts: [\"draggable-item\"],\r\n    type: \"container\"\r\n  }\r\n});\r\n\r\n// ✅ Add this after the useDroppable hooks\r\nuseEffect(() => {\r\n  console.log(\"Active Dragging Type:\", active?.data?.current?.type);\r\n}, [active]);\r\n\r\n\r\n// add this state to track the background color, to match checkout section's dynamic background\r\nconst [checkoutBgColor, setCheckoutBgColor] = useState('var(--background-color, #ffffff)');\r\n\r\n// Add an effect to update the background color when the theme changes\r\nuseEffect(() => {\r\n  const updateBackgroundColor = () => {\r\n    const isDarkMode = document.documentElement.classList.contains('dark');\r\n    setCheckoutBgColor(isDarkMode ? 'var(--dark-bg, #1a1a1a)' : 'var(--light-bg, #ffffff)');\r\n  };\r\n\r\n  // Initial update\r\n  updateBackgroundColor();\r\n\r\n  // Create observer for theme changes\r\n  const observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      if (mutation.attributeName === 'class') {\r\n        updateBackgroundColor();\r\n      }\r\n    });\r\n  });\r\n\r\n  // Start observing theme changes\r\n  observer.observe(document.documentElement, {\r\n    attributes: true,\r\n    attributeFilter: ['class'],\r\n  });\r\n\r\n  return () => observer.disconnect();\r\n}, []);\r\n\r\nconst lastValidDropZoneRef = useRef<string | null>(null);\r\n\r\nlet lastValidDropZone: { id: string } | null = null;\r\n\r\n// customCollisionDetection function\r\n// Update collision detection for better sensitivity\r\n// Replace your existing customCollisionDetection with this updated version\r\nconst customCollisionDetection: CollisionDetection = (args) => {\r\n  const { collisionRect, droppableContainers } = args;\r\n  const validDropZoneIds = new Set([\"top-section\", \"bottom-section\", \"1\", \"2\"]);\r\n\r\n  // Create expanded collision rect with larger detection area\r\n  const expandedRect = {\r\n    ...collisionRect,\r\n    width: collisionRect.width + 60,    // Increased detection area\r\n    height: collisionRect.height + 60,   \r\n    left: collisionRect.left - 30,      \r\n    right: collisionRect.right + 30,    \r\n    top: collisionRect.top - 30,        \r\n    bottom: collisionRect.bottom + 30    \r\n  };\r\n\r\n  return droppableContainers\r\n    .filter(container => validDropZoneIds.has(String(container.id)))\r\n    .map(container => {\r\n      const element = document.querySelector(`[data-droppable-id=\"${container.id}\"]`);\r\n      if (!element) return null;\r\n\r\n      const rect = element.getBoundingClientRect();\r\n      const isTopSection = container.id === \"top-section\" || container.id === \"1\";\r\n      \r\n      // Add padding for better drop detection\r\n      const adjustedRect = {\r\n        top: rect.top - (isTopSection ? 40 : 20),\r\n        bottom: rect.bottom + (isTopSection ? 40 : 20),\r\n        left: rect.left - (isTopSection ? 40 : 20),\r\n        right: rect.right + (isTopSection ? 40 : 20),\r\n        width: rect.width + (isTopSection ? 80 : 40),\r\n        height: rect.height + (isTopSection ? 80 : 40)\r\n      };\r\n\r\n      // More lenient intersection check\r\n      const intersects = (\r\n        expandedRect.left < adjustedRect.right &&\r\n        expandedRect.right > adjustedRect.left &&\r\n        expandedRect.top < adjustedRect.bottom &&\r\n        expandedRect.bottom > adjustedRect.top\r\n      );\r\n\r\n      if (!intersects) return null;\r\n\r\n      return {\r\n        id: String(container.id),\r\n        data: {\r\n          droppableContainer: {\r\n            id: String(container.id),\r\n            data: {\r\n              type: \"container\",\r\n              accepts: [\"draggable-item\"],\r\n              isDropZone: isTopSection\r\n            }\r\n          },\r\n          value: isTopSection ? 2 : 1,\r\n          rect: adjustedRect\r\n        }\r\n      } as CustomCollision;\r\n    })\r\n    .filter((collision): collision is CustomCollision => collision !== null)\r\n    .sort((a, b) => b.data.value - a.data.value);\r\n};\r\n\r\nuseEffect(() => {\r\n  if (!isCheckoutEditing) return; // Prevent execution if not in edit mode\r\n\r\n  console.log(\"✅ Registering Drop Zones (One-Time)\");\r\n\r\n  const topSection = document.querySelector('[data-droppable-id=\"1\"]');\r\n  const bottomSection = document.querySelector('[data-droppable-id=\"2\"]');\r\n\r\n  if (topSection) {\r\n    topSection.setAttribute('data-droppable', 'true');\r\n    topSection.setAttribute('data-type', 'container');\r\n  }\r\n\r\n  if (bottomSection) {\r\n    bottomSection.setAttribute('data-droppable', 'true');\r\n    bottomSection.setAttribute('data-type', 'container');\r\n  }\r\n\r\n  console.log(\"🔍 Found Drop Zones:\", topSection, bottomSection);\r\n\r\n  return () => {\r\n    console.log(\"🛑 Cleaning up Drop Zones (Once)\");\r\n  };\r\n}, [isCheckoutEditing]);\r\n\r\n\r\nconst sensors = useSensors(\r\n  useSensor(PointerSensor, {\r\n    activationConstraint: {\r\n      distance: 2,\r\n      tolerance: 5\r\n    },\r\n  })\r\n);\r\n\r\n\r\n// Update the handleDragEnd function to preserve checkedOptions\r\nconst handleDragEnd = (event: DragEndEvent) => {\r\n  const { active, over } = event;\r\n  setActiveId(null);\r\n  setDragging(false);\r\n\r\n  if (!over) {\r\n    console.log(\"❌ No valid drop target detected\");\r\n    return;\r\n  }\r\n\r\n  const dropZoneId = String(over.id);\r\n  const draggedItemId = String(active.id);\r\n\r\n  console.log(`🛠️ Handling drop of item ${draggedItemId} into zone ${dropZoneId}`);\r\n\r\n  const draggedItem = items.find(item => item.id === draggedItemId) || \r\n                     droppedItems.find(item => item.id === draggedItemId);\r\n\r\n  if (!draggedItem) {\r\n    console.log(\"❌ Dragged item not found\");\r\n    return;\r\n  }\r\n\r\n  const isTopSection = dropZoneId === \"top-section\" || dropZoneId === \"1\";\r\n  const isBottomSection = dropZoneId === \"bottom-section\" || dropZoneId === \"2\";\r\n\r\n\r\n// Preserve checkedOptions when moving between sections\r\nsetDroppedItems(prevDroppedItems => {\r\n  const alreadyInTop = prevDroppedItems.some(item => item.id === draggedItemId);\r\n\r\n  if (isTopSection && !alreadyInTop) {\r\n    console.log(`✅ Adding item ${draggedItemId} to top section`);\r\n    return [...prevDroppedItems, { \r\n      ...draggedItem, \r\n      isDropped: true,\r\n      // Preserve checked options\r\n      checkedOptions: draggedItem.checkedOptions || {}\r\n      }];\r\n    } \r\n    \r\n    if (isBottomSection) {\r\n      console.log(`✅ Removing item ${draggedItemId} from top section`);\r\n      return prevDroppedItems.filter(item => item.id !== draggedItemId);\r\n    }\r\n\r\n    return prevDroppedItems;\r\n  });\r\n\r\n  setItems(prevItems => {\r\n    const updatedItems = prevItems.map(item =>\r\n      item.id === draggedItemId ? { \r\n        ...item, \r\n        isDropped: isTopSection,\r\n        // Preserve checked options\r\n        checkedOptions: draggedItem.checkedOptions || {}\r\n      } : item\r\n    );\r\n    console.log(\"✅ Updated items after drop:\", updatedItems);\r\n    return [...updatedItems]; // Ensure a new array reference for reactivity\r\n  });\r\n\r\n  // After updating state, save the checkout items to the database\r\n  setTimeout(() => {\r\n    handleSaveCheckout();\r\n  }, 200);\r\n\r\n  // Rest of the function remains the same...\r\n  setTimeout(() => {\r\n    console.log(\"🔄 FORCING FULL Reset of Drop Zones and SortableContext...\");\r\n    setDroppedItems(prev => [...prev]);\r\n    setItems(prev => [...prev]); // ✅ Ensure full re-render\r\n\r\n    // Force SortableContext to reset\r\n    setSortableKey(prev => prev + 1);\r\n  }, 200);\r\n};\r\n\r\n// Finally, modify the \"Start Test\" button handler to only test checked options\r\n// Update the Start Test button click handler\r\nconst handleStartTest = () => {\r\n  console.log(\"🚀 Start Test button clicked\");\r\n  \r\n  // Check if droppedItems is empty\r\n  if (droppedItems.length === 0) {\r\n    console.warn(\"⚠️ No items in droppedItems, CheckoutTestProgress won't render\");\r\n    alert(\"Please add components to the checkout section before starting the test.\");\r\n    return;\r\n  }\r\n  \r\n// Filter the droppedItems to create a version that only includes checked options\r\nconst itemsWithCheckedOptions = droppedItems.map(item => {\r\n  // Get the options that are checked (true in checkedOptions)\r\n  const checkedOptionsList = Object.entries(item.checkedOptions || {})\r\n    .filter(([_, isChecked]) => isChecked)\r\n    .map(([option]) => option);\r\n  \r\n  // If no options are checked, include all options as a fallback\r\n  const optionsToTest = checkedOptionsList.length > 0 \r\n    ? checkedOptionsList \r\n    : item.options;\r\n  \r\n  // Return a version of the item with only the checked options\r\n  return {\r\n    ...item,\r\n    options: optionsToTest // Replace with only the checked options\r\n  };\r\n});\r\n  \r\n  // Make sure there's at least one item with options to test\r\n  const hasTestableItems = itemsWithCheckedOptions.some(item => item.options.length > 0);\r\n  \r\n  if (!hasTestableItems) {\r\n    alert(\"Please check at least one option in the checkout section before starting the test.\");\r\n    return;\r\n  }\r\n  \r\n  // Store the filtered items for the test window to use\r\n  localStorage.setItem('checkoutTestItems', JSON.stringify(itemsWithCheckedOptions));\r\n  \r\n  // Store a flag in localStorage to signal that the window should be open\r\n  localStorage.setItem('showCheckoutTest', 'true');\r\n  \r\n  // Update the state\r\n  setShowCheckoutTest(true);\r\n  \r\n  // Force a re-render\r\n  setDummyState(prev => !prev);\r\n  \r\n  console.log(\"CheckoutTest window should now be visible with checked options:\", itemsWithCheckedOptions);\r\n};\r\n\r\n// Add this to your useEffect hooks section\r\nuseEffect(() => {\r\n  // Check localStorage on component mount\r\n  const shouldShowWindow = localStorage.getItem('showCheckoutTest') === 'true';\r\n  \r\n  if (shouldShowWindow) {\r\n    console.log(\"🔄 Restoring CheckoutTest window from localStorage\");\r\n    setShowCheckoutTest(true);\r\n  }\r\n}, []);\r\n\r\n// Update handleCloseCheckoutTest to also clear localStorage\r\nconst handleCloseCheckoutTest = () => {\r\n  console.log(\"🔴 Closing checkout test window\");\r\n  localStorage.removeItem('showCheckoutTest');\r\n  setShowCheckoutTest(false);\r\n};\r\n\r\n// Add new effect to maintain drop zones\r\nconst hasUpdatedDropZones = useRef(false); // ✅ Prevent multiple updates\r\n\r\nuseEffect(() => {\r\n  if (!isCheckoutEditing) return;\r\n\r\n  const startTime = performance.now(); // Start time measurement\r\n  console.log(\"⏳ Starting expensive operation...\");\r\n\r\n  // Simulating work\r\n  const dropZones = document.querySelectorAll('[data-droppable-id]');\r\n  dropZones.forEach(zone => {\r\n    zone.setAttribute('data-droppable', 'true');\r\n    zone.setAttribute('data-type', 'container');\r\n  });\r\n\r\n  const endTime = performance.now(); // End time measurement\r\n  console.log(`⚡ Expensive operation took ${endTime - startTime}ms`);\r\n}, [isCheckoutEditing]);\r\n\r\n\r\n\r\n// Add this useEffect to monitor state changes\r\nuseEffect(() => {\r\n  const itemsStatus = items.map(item => ({\r\n    id: item.id,\r\n    isDropped: item.isDropped,\r\n  }));\r\n  console.log('Items status:', itemsStatus);\r\n  console.log('Dropped items:', droppedItems);\r\n}, [items, droppedItems]);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🔵 Drop zones mounted:\", document.querySelectorAll(\"[data-droppable]\"));\r\n\r\n  setTimeout(() => {\r\n    const dropZones = document.querySelectorAll(\"[data-droppable]\");\r\n    console.log(\"✅ Drop zones found in DOM:\", dropZones);\r\n\r\n    dropZones.forEach((zone) => {\r\n      console.log(\"📍 Drop Zone Element:\", zone);\r\n      console.log(\"👉 Attributes:\", zone.attributes);\r\n      console.log(\"📏 Bounding Rect:\", zone.getBoundingClientRect());\r\n    });\r\n  }, 500); // Delay ensures elements are fully rendered\r\n\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🔄 Drop zones reloaded. Current drop zones:\", document.querySelectorAll(\"[data-droppable]\"));\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  document.querySelectorAll(\"[data-droppable]\").forEach((el) =>\r\n    console.log(\"🔍 Found Drop Zone ID:\", el.id)\r\n  );\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  document.querySelectorAll(\"[data-droppable]\").forEach((el) =>\r\n    console.log(\"✅ Drop Zone Element ID:\", el.id)\r\n  );\r\n}, []);\r\n\r\nconst [, setRender] = useState(false);\r\n\r\nuseEffect(() => {\r\n  setTimeout(() => {\r\n    console.log(\"✅ Forcing a re-render to ensure drop zones exist.\");\r\n    setRender(prev => !prev); // Toggle state to trigger re-render\r\n  }, 100);\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🛠️ isCheckoutEditing changed:\", isCheckoutEditing);\r\n}, [isCheckoutEditing]);\r\n\r\n// Update dropZoneStyle\r\nconst dropZoneStyle: React.CSSProperties = {\r\n  minHeight: \"250px\",\r\n  width: \"100%\",\r\n  padding: \"20px\",\r\n  boxSizing: \"border-box\",\r\n  border: isOverTop ? \"2px solid #2196F3\" : \"2px dashed #ccc\",\r\n  backgroundColor: isOverTop ? \"rgba(33, 150, 243, 0.1)\" : \"transparent\",\r\n  position: \"relative\",\r\n  zIndex: 1,\r\n  touchAction: \"none\",\r\n  userSelect: \"none\" as const,\r\n  overflow: \"visible\"\r\n};\r\n\r\n// Update the handleSaveCheckout function to save the checked options state\r\nconst handleSaveCheckout = async () => {\r\n  if (!selectedProfile) {\r\n    console.log(\"❌ No active profile selected\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    console.log(\"💾 Saving checkout items with checkbox states:\", droppedItems);\r\n    \r\n    const response = await fetch(`${API_URL}/checkout/save`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        profile_id: selectedProfile,\r\n        items: droppedItems, // Now includes checkedOptions\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    console.log(`✅ Checkout items saved for profile ${selectedProfile}:`, result);\r\n  } catch (error) {\r\n    console.error(\"❌ Error saving checkout items:\", error);\r\n  }\r\n};\r\n\r\n\r\nconst handleCancelCheckout = async () => {\r\n  if (!selectedProfile) {\r\n    console.log(\"❌ No active profile selected\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API_URL}/checkout/load/${selectedProfile}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    setDroppedItems(result.items);\r\n    console.log(`🔄 Restored checkout items for profile ${selectedProfile}:`, result.items);\r\n  } catch (error) {\r\n    console.error(\"❌ Error loading previous checkout items:\", error);\r\n  }\r\n};\r\n\r\n// Update the handleLoadCheckout function with proper typing\r\nconst handleLoadCheckout = async (profileId: string) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/checkout/load/${profileId}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    \r\n    if (result.items && Array.isArray(result.items)) {\r\n      // Ensure each item has a checkedOptions object\r\n      const loadedItems = result.items.map((item: any) => ({\r\n        ...item,\r\n        checkedOptions: item.checkedOptions || {},\r\n      }));\r\n      \r\n      setDroppedItems(loadedItems);\r\n      \r\n      // Update the items array to reflect the dropped state of the loaded items\r\n      setItems(prevItems => {\r\n        return prevItems.map(item => {\r\n          // Fix: Add proper type for the 'loaded' parameter\r\n          const loadedItem = loadedItems.find((loaded: DraggableItem) => loaded.id === item.id);\r\n          if (loadedItem) {\r\n            return {\r\n              ...item,\r\n              isDropped: true,\r\n              checkedOptions: loadedItem.checkedOptions || {}\r\n            };\r\n          }\r\n          return item;\r\n        });\r\n      });\r\n      \r\n      console.log(`✅ Loaded checkout items for profile ${profileId}:`, loadedItems);\r\n    } else {\r\n      console.log(`ℹ️ No saved checkout items found for profile ${profileId}`);\r\n      setDroppedItems([]);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"❌ Error loading checkout items for profile:\", error);\r\n    setDroppedItems([]);\r\n  }\r\n};\r\n\r\n// Update the profile change handler to load checkout items with their checkbox states\r\nconst handleProfileChange = async (profileId: string) => {\r\n  console.log(`🔄 Profile changed: ${profileId}`);\r\n  setSelectedProfile(profileId);\r\n  await handleLoadCheckout(profileId);\r\n};\r\n\r\nuseEffect(() => {\r\n  if (selectedProfile) {\r\n    handleProfileChange(selectedProfile); // ✅ Load saved checkout items when profile changes\r\n  }\r\n}, [selectedProfile]);\r\n\r\n// Update the useEffect in MainScreen.tsx to better initialize the MCC socket\r\nuseEffect(() => {\r\n  if (showCheckoutTest && !mccSocket) {\r\n    // Initialize a simulated MCC socket for testing\r\n    const initMccSocket = async () => {\r\n      try {\r\n        console.log(\"Attempting to create MCC socket...\");\r\n        \r\n        // Force simulation mode for testing purposes\r\n        const socket = await connectToMcc(\"localhost:8080\");\r\n        \r\n        if (socket) {\r\n          setMccSocket(socket);\r\n          console.log(\"✅ MCC socket initialized for testing\");\r\n        } else {\r\n          console.warn(\"⚠️ Socket is null, using simulation fallback\");\r\n          \r\n          // Create a minimal simulation object that implements the necessary methods\r\n          const simulatedSocket = {\r\n            simulateRead: (parameters: string[]) => {\r\n              // Return simulated values for each parameter\r\n              return parameters.map(param => `${param}=simulated`);\r\n            },\r\n            send: async (message: string) => {\r\n              console.log(`[SIM] Sending message: ${message}`);\r\n              return Promise.resolve();\r\n            },\r\n            receive: async () => {\r\n              console.log(`[SIM] Receiving data`);\r\n              return Promise.resolve(\"simulated response\");\r\n            }\r\n          };\r\n          \r\n          setMccSocket(simulatedSocket);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Error initializing MCC socket:\", error);\r\n        \r\n        // Create a fallback simulation\r\n        const simulatedSocket = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Return simulated values for each parameter\r\n            return parameters.map(param => `${param}=simulated`);\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending message: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          }\r\n        };\r\n        \r\n        setMccSocket(simulatedSocket);\r\n      }\r\n    };\r\n    \r\n    initMccSocket();\r\n  }\r\n}, [showCheckoutTest, mccSocket]);\r\n\r\nconsole.log(\"Rendering MainScreen:\");\r\nconsole.log(\"showToTestList:\", showToTestList);\r\nconsole.log(\"showThreeDModelWindow:\", showThreeDModelWindow);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🔍 Checking if CheckoutTestProgress exists:\", !!CheckoutTestProgress);\r\n  if (!CheckoutTestProgress) {\r\n    console.error(\"❌ CheckoutTestProgress component is undefined!\");\r\n  }\r\n}, []);\r\n\r\n// Initialize mccSocket once on component mount instead of waiting\r\nuseEffect(() => {\r\n  // Create a simple simulated socket if it doesn't exist yet\r\n  if (!mccSocket) {\r\n    console.log(\"🔄 Pre-initializing simulated MCC socket\");\r\n    \r\n    // Create a simple simulated socket for testing\r\n    const simulatedSocket = {\r\n      simulateRead: (parameters: string[]) => {\r\n        return parameters.map(param => {\r\n          // Generate simulated values for common parameters\r\n          if (param.includes(\"FW_Ver\")) {\r\n            const version = param.includes(\"Major\") ? \"1\" : \r\n                          param.includes(\"Minor\") ? \"2\" : \"3\";\r\n            return `${param}=${version}`;\r\n          } else if (param.includes(\"3V3\") || param.includes(\"5V\")) {\r\n            // Voltage values in mV\r\n            return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n          } else if (param.includes(\"temp\") || param.includes(\"Temp\")) {\r\n            // Temperature values\r\n            return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n          } else if (param.includes(\"eMMC\")) {\r\n            return `${param}=1`;\r\n          } else {\r\n            return `${param}=simulated`;\r\n          }\r\n        });\r\n      },\r\n      send: async (message: string) => {\r\n        console.log(`[SIM] Sending: ${message}`);\r\n        return Promise.resolve();\r\n      },\r\n      receive: async () => {\r\n        return Promise.resolve(\"simulated response\");\r\n      }\r\n    };\r\n    \r\n    setMccSocket(simulatedSocket);\r\n  }\r\n}, [mccSocket]);\r\n\r\nreturn (\r\n  <div className={styles.mainScreen}>\r\n    {!isSidebarOpen && (\r\n      <button\r\n        className={styles.retractExpandSidebarButton}\r\n        onClick={toggleSidebar}\r\n      >\r\n        <FaBars />\r\n      </button>\r\n    )}\r\n\r\n    <div className={`${styles.sidebar} ${isSidebarOpen ? \"\" : styles.hidden}`}>\r\n      <div className={styles.sidebarHeader}>\r\n        <span>Menu</span>\r\n        <button className={styles.toggleButton} onClick={toggleSidebar}>\r\n          ☰\r\n        </button>\r\n      </div>\r\n      <ul className={styles.menu}>\r\n        <li className={styles.menuItem} onClick={() => setSelectedProfile(null)}>\r\n          Home\r\n        </li>\r\n{/* Focused visibility fix for Tests to Conduct button */}\r\n<li \r\n  className={styles.menuItem} \r\n  onClick={(e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    console.log(\"🔍 Focused visibility fix initiated\");\r\n    \r\n    // Toggle the window\r\n    if (showToTestList) {\r\n      console.log(\"Closing ToTestList\");\r\n      closeToTestList();\r\n    } else {\r\n      console.log(\"Opening ToTestList and bringing to front\");\r\n      openToTestList();\r\n      \r\n      // Ensure window is visible and positioned correctly\r\n      setTimeout(() => {\r\n        const toTestListWindow = document.querySelector('[data-window=\"ToTestList\"]');\r\n        if (toTestListWindow) {\r\n          console.log(\"ToTestList found, ensuring visibility and position\");\r\n          \r\n          // Ensure the window is visible\r\n          (toTestListWindow as HTMLElement).style.visibility = 'visible';\r\n          (toTestListWindow as HTMLElement).style.display = 'block';\r\n          (toTestListWindow as HTMLElement).style.opacity = '1';\r\n          \r\n          // Bring to front\r\n          bringWindowToFront(\"ToTestList\");\r\n          \r\n          // Force position to center if it's off-screen\r\n          const windowRect = toTestListWindow.getBoundingClientRect();\r\n          if (windowRect.left < 0 || windowRect.top < 0 || \r\n              windowRect.right > window.innerWidth || windowRect.bottom > window.innerHeight) {\r\n            console.log(\"Window appears to be off-screen, centering it\");\r\n            \r\n            // Try to set position through sessionStorage\r\n            try {\r\n              const centerPosition = {\r\n                x: (window.innerWidth - 800) / 2, \r\n                y: (window.innerHeight - 500) / 2\r\n              };\r\n              sessionStorage.setItem('toTestListPosition', JSON.stringify(centerPosition));\r\n              console.log(\"Set centered position:\", centerPosition);\r\n              \r\n              // Attempt to force position directly\r\n              const draggableElement = toTestListWindow.querySelector('[style*=\"transform\"]');\r\n              if (draggableElement) {\r\n                (draggableElement as HTMLElement).style.transform = \r\n                  `translate(${centerPosition.x}px, ${centerPosition.y}px)`;\r\n              }\r\n              \r\n              // Last resort: reload the page\r\n              window.location.reload();\r\n            } catch (error) {\r\n              console.error(\"Error centering window:\", error);\r\n            }\r\n          }\r\n        }\r\n      }, 100);\r\n    }\r\n  }}\r\n>\r\n  Tests to Conduct\r\n</li>\r\n        <li className={styles.menuItem}>\r\n          <div className={styles.profileContainer}>\r\n            <button\r\n              className={styles.profilesButton}\r\n              onClick={toggleProfileDropdown}\r\n            >\r\n              Profiles\r\n            </button>\r\n            <div className={styles.profileButtonGroup}>\r\n              <button\r\n                className={styles.dropdownButton}\r\n                onClick={toggleProfileDropdown}\r\n              >\r\n                {isProfileDropdownOpen ? \"▲\" : \"▼\"}\r\n              </button>\r\n              <button\r\n                className={styles.addProfileButton}\r\n                onClick={addProfile}\r\n              >\r\n                <FaPlus />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        {isProfileDropdownOpen && (\r\n          <ul className={styles.profileDropdown}>\r\n          {profiles.map((profile) => (\r\n            <li\r\n              key={profile.id || profile.name}\r\n              className={styles.profileSidebarItem}\r\n              onClick={() => {\r\n                handleProfileChange(profile.name); // ✅ Ensure checkout items load per profile\r\n              }}\r\n            >\r\n              {profile.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        \r\n        )}\r\n      </ul>\r\n      <div className={styles.settingsContainer}>\r\n        <button className={styles.settingsButton}>\r\n          <FaCog />\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div className={styles.content}>\r\n      {selectedProfile ? (\r\n        <div className={styles.profilePage}>\r\n          <div className={styles.profileHeading}>\r\n            <h1>{selectedProfile}</h1>\r\n            <button\r\n              className={styles.deleteButton}\r\n              onClick={() => deleteProfile(selectedProfile)}\r\n            >\r\n              <FaTrash />\r\n            </button>\r\n          </div>\r\n\r\n          {/* ✅ About/Specifications Button Below Profile Name */}\r\n          <button className={styles.aboutButton} onClick={toggleAbout}>\r\n            <FaInfoCircle /> About/Specifications\r\n          </button>\r\n\r\n          {/* ✅ Show/Hide About Section */}\r\n          {showAbout && (\r\n            <div\r\n              className={`${styles.aboutSection} ${\r\n                document.documentElement.classList.contains(\"dark\")\r\n                  ? styles.darkMode\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              {/* ✅ Editing Mode: Use Tiptap Rich Text Editor */}\r\n              {isEditing ? (\r\n                <>\r\n                  {/* ✅ Add Toolbar for Lists */}\r\n                  <div className=\"toolbar\">\r\n                    <button onClick={() => editor?.chain().focus().toggleBulletList().run()}>\r\n                      Bullet List\r\n                    </button>\r\n                    <button onClick={() => editor?.chain().focus().toggleOrderedList().run()}>\r\n                      Ordered List\r\n                    </button>\r\n                  </div>\r\n\r\n                  <EditorContent editor={editor} className={styles.richTextEditor} />\r\n\r\n                  {/* ✅ Show all images outside the editor */}\r\n                  {uploadedImages.length > 0 ? (\r\n                    <div className={styles.imageContainer}>\r\n                      {uploadedImages.map((image, index) => (\r\n                        <div key={index} className={styles.imageWrapper}>\r\n                          <img\r\n                            src={image.src}\r\n                            alt={image.alt}\r\n                            className={styles.uploadedImage}\r\n                          />\r\n                          {/* ✅ Remove button only renders in editing mode */}\r\n                          <button\r\n                            className={styles.removeImageButton}\r\n                            onClick={() => removeImage(index)}\r\n                          >\r\n                            ✖\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <p className={styles.imagePlaceholder}>No images uploaded</p>\r\n                  )}\r\n\r\n                  {/* ✅ File Upload Section (Only in Editing Mode) */}\r\n                  <div className={styles.uploadContainer}>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".txt, .docx\"\r\n                      onChange={handleFileUpload}\r\n                      className={styles.uploadInput}\r\n                    />\r\n                    {/* ✅ Show file name specific to the selected profile */}\r\n                    {selectedProfile &&\r\n                      profileData[selectedProfile]?.uploadedFileName && (\r\n                        <p>Uploaded: {profileData[selectedProfile].uploadedFileName}</p>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                /* ✅ Normal Mode: Display Formatted Content */\r\n                <>\r\n                  <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: sanitizeHTML(profileData[selectedProfile]?.description || \"<p>No description available.</p>\"),\r\n                      }}\r\n                  />\r\n                  {/* ✅ Show all images outside the editor */}\r\n                  {profileData[selectedProfile]?.images.length > 0 && (\r\n                    <div className={styles.imageContainer}>\r\n                      {selectedProfile && profileData[selectedProfile]?.images.map((image: { src: string; alt: string }, index: number) => (\r\n                        <div key={index} className={styles.imageWrapper}>\r\n                          <img \r\n                             src={image.src} \r\n                             alt={image.alt} \r\n                             className={styles.uploadedImage}\r\n                             onError={(e) => e.currentTarget.src = \"/fallback-image.png\"} // Provide a fallback image\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {/* ✅ Save, Edit, and Download Buttons */}\r\n                <div className={styles.actionButtons}>\r\n                  {!isEditing && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => saveToFile(\"txt\")}\r\n                        className={styles.downloadButton}\r\n                      >\r\n                        <FaDownload /> Save as .TXT\r\n                      </button>\r\n                      <button\r\n                        onClick={() => saveToFile(\"docx\")}\r\n                        className={styles.downloadButton}\r\n                      >\r\n                        <FaDownload /> Save as .DOCX\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  {isEditing ? (\r\n                    <>\r\n                      <button\r\n                        onClick={saveEditedDescription}\r\n                        className={styles.saveButton}\r\n                      >\r\n                        <FaCheck /> Save\r\n                      </button>\r\n                      <button\r\n                        onClick={cancelEditing}\r\n                        className={styles.cancelButton}\r\n                      >\r\n                        <FaTimes /> Cancel\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button className={styles.editButton} onClick={startEditing}>\r\n                      <FaEdit />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n              {/* ✅ Test Type & Checkout Button Located Outside About Section */}\r\n              <h2 className={styles.testTypeHeader}>Test Type</h2>\r\n              <button className={styles.checkoutButton} onClick={toggleCheckout}>\r\n                <FaWrench /> Checkout\r\n              </button>\r\n   \r\n \r\n              {showCheckout && (\r\n                <div className={styles.checkoutSection}\r\n                  style={{\r\n                    backgroundColor: checkoutBgColor,\r\n                    transition: 'background-color 0.3s ease',\r\n                  }}\r\n                >\r\n\r\n{(() => { console.log(\"🔄 Checkout Section Re-rendered\"); return null; })()}\r\n\r\n                <div className={styles.checkoutHeader} style={{ display: 'flex', alignItems: 'center' }}>\r\n                  <h3 style={{ marginRight: '10px' }}>Test Selection:</h3>\r\n                  <button className={styles.editButton} onClick={toggleCheckoutEditMode}>\r\n                    <FaEdit />\r\n                  </button>\r\n        \r\n                  {!isCheckoutEditing && (\r\n  <button \r\n    className={styles.startTestButton} \r\n    style={{ marginLeft: 'auto' }}\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      \r\n      // Ensure we have items to test\r\n      if (droppedItems.length === 0) {\r\n        alert(\"Please add components to the checkout section before starting the test.\");\r\n        return;\r\n      }\r\n      \r\n      // Store a flag in localStorage to ensure window stays visible\r\n      localStorage.setItem('showCheckoutTest', 'true');\r\n      \r\n      // Ensure we have a socket ready\r\n      if (!mccSocket) {\r\n        // Initialize a simulated socket\r\n        const simSocket = {\r\n          simulateRead: (params: string[]) => params.map(p => `${p}=simulated`),\r\n          send: async () => Promise.resolve(),\r\n          receive: async () => Promise.resolve(\"simulated\")\r\n        };\r\n        setMccSocket(simSocket);\r\n      }\r\n      \r\n      // Set window visible\r\n      setShowCheckoutTest(true);\r\n      \r\n      // Force re-render\r\n      setDummyState(prev => !prev);\r\n      \r\n      console.log(\"🚀 CheckoutTest window activated\");\r\n    }}\r\n  >\r\n    <FaPlay /> Start Test\r\n  </button>\r\n)}\r\n                </div>\r\n\r\n                <DndContext\r\n  sensors={sensors}\r\n  collisionDetection={customCollisionDetection}\r\n  onDragStart={({ active }) => {\r\n    setActiveId(String(active.id));\r\n    setDragging(true);\r\n  }}\r\n  onDragEnd={handleDragEnd}\r\n  onDragCancel={() => {\r\n    setActiveId(null);\r\n    setDragging(false);\r\n  }}\r\n>\r\n  {/* Top Section Drop Zone */}\r\n  <div\r\n  key=\"top-section\"\r\n  ref={topSectionRef}\r\n  id=\"top-section\"\r\n  data-id=\"1\"\r\n  data-droppable=\"true\"\r\n  data-droppable-id=\"1\"\r\n  data-type=\"container\"\r\n  className={`${styles.topSection} dropZoneArea ${isOverTop ? \"isOver\" : \"\"}`}\r\n  data-is-over={isOverTop ? \"true\" : \"false\"}\r\n  style={dropZoneStyle}\r\n>\r\n    {droppedItems.length === 0 && isCheckoutEditing && (\r\n      <div style={{ \r\n        position: \"absolute\", \r\n        top: \"50%\", \r\n        left: \"50%\", \r\n        transform: \"translate(-50%, -50%)\",\r\n        color: \"#666\",\r\n        fontStyle: \"italic\"\r\n      }}>\r\n        Drop items here\r\n      </div>\r\n    )}\r\n<SortableContext key={sortableKey} items={droppedItems} strategy={verticalListSortingStrategy}>\r\n  {droppedItems.map((item) => (\r\n    <div key={`top-${item.id}`} className={styles.droppableBox} style={{ position: 'relative', overflow: 'visible' }}>\r\n      <DraggableBox \r\n        id={item.id}\r\n        header={item.header}\r\n        options={item.options}\r\n        data={{ type: \"draggable-item\" }}\r\n        isDropped={true}\r\n        removeDroppedItem={removeDroppedItem}\r\n        isCheckoutEditing={isCheckoutEditing}\r\n        checkedOptions={item.checkedOptions} // Pass checked state\r\n        onOptionChange={handleOptionChange} // Pass handler\r\n      />\r\n    </div>\r\n  ))}\r\n</SortableContext>\r\n  </div>\r\n\r\n  {/* Bottom Section */}\r\n  {isCheckoutEditing && (\r\n    <div\r\n    ref={bottomSectionRef}\r\n    id=\"bottom-section\"\r\n    data-id=\"2\"\r\n    data-droppable=\"true\"\r\n    data-droppable-id=\"2\"\r\n    data-type=\"container\"\r\n    data-current='{\"type\": \"container\"}'\r\n    className={styles.bottomSection}\r\n    style={{\r\n      minHeight: \"200px\",\r\n      padding: \"20px\",\r\n      position: \"relative\",\r\n      border: isOverBottom ? \"2px solid #2196F3\" : \"2px dashed #ccc\",\r\n      backgroundColor: isOverBottom ? \"rgba(33, 150, 243, 0.1)\" : \"transparent\",\r\n      touchAction: \"none\",\r\n      userSelect: \"none\",\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(auto-fill, minmax(150px, 1fr))\",\r\n      gap: \"10px\",\r\n      pointerEvents: \"auto\"  // Add this to ensure dragging works\r\n    }}\r\n  >\r\n  <h4>Available Components</h4>\r\n  <SortableContext key={sortableKey} items={items} strategy={verticalListSortingStrategy}>\r\n\r\n  {items.map((item) => {\r\n  const isInTopSection = droppedItems.some(droppedItem => droppedItem.id === item.id);\r\n  return (\r\n    <div\r\n      key={`bottom-${item.id}`}\r\n      className={styles.dragItem}\r\n      data-draggable-id={item.id}\r\n      data-dropped={isInTopSection ? \"true\" : \"false\"}\r\n      style={{\r\n        opacity: isInTopSection ? 0.3 : 1,\r\n        pointerEvents: isInTopSection ? 'none' : 'auto',\r\n        cursor: isInTopSection ? 'not-allowed' : 'grab'\r\n      }}\r\n    >\r\n      <DraggableBox\r\n        id={item.id}\r\n        header={item.header}\r\n        options={item.options}\r\n        data={{ type: \"draggable-item\" }}\r\n        isDropped={isInTopSection}\r\n        isInBottomSection={true} // ✅ Ensure it knows it's in the bottom section\r\n        checkedOptions={item.checkedOptions} // Pass checked state\r\n        onOptionChange={handleOptionChange} // Pass handler\r\n      />\r\n    </div>\r\n  );\r\n})}\r\n</SortableContext>\r\n</div>\r\n  )}\r\n\r\n<DragOverlay>\r\n  {activeId ? (\r\n    <DraggableBox\r\n      id={activeId}\r\n      header={(items.find(item => item.id === activeId) || droppedItems.find(item => item.id === activeId))?.header || \"\"}\r\n      options={(items.find(item => item.id === activeId) || droppedItems.find(item => item.id === activeId))?.options || []}\r\n      data={{ type: \"draggable-item\" }} // ✅ Ensure this is added\r\n    />\r\n  ) : null}\r\n</DragOverlay>\r\n\r\n</DndContext>\r\n\r\n              {isCheckoutEditing && (\r\n                <div className={styles.editModeButtons}>\r\n<button className={styles.saveButton} onClick={() => {\r\n                      handleSaveCheckout();\r\n                      toggleCheckoutEditMode(); // ✅ Exit edit mode after saving\r\n                  }}>\r\n                    <FaCheck /> Save\r\n                  </button>\r\n                  <button className={styles.cancelButton} onClick={() => {\r\n                      handleCancelCheckout();\r\n                      toggleCheckoutEditMode(); // ✅ Exit edit mode after canceling\r\n                  }}>\r\n                    <FaTimes /> Cancel\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <h2 className={styles.ThreeDModelViewerHeader}>Satellite Model Viewer</h2>\r\n{/* ✅ Open the 3D Model Viewer for the selected profile */}\r\n<button\r\n  className={styles.threeDModelButton}\r\n  onClick={(e) => {\r\n    e.preventDefault();\r\n    console.log(\"🔘 3D Model button clicked\");\r\n    \r\n    // Find the profile to get its ID\r\n    const profile = profiles.find((p) => p.name === selectedProfile);\r\n    const profileId = profile?.id || 1;\r\n    \r\n    console.log(`📱 Opening 3D Model window for profile ID: ${profileId}`);\r\n    \r\n    // Ensure any pending state updates are completed first\r\n    setTimeout(() => {\r\n      // Call the openModelWindow function provided through props\r\n      openModelWindow(profileId);\r\n      \r\n      // Log the state after opening\r\n      setTimeout(() => {\r\n        console.log(\"🔍 After 3D Model button click:\");\r\n        console.log(\"- showThreeDModelWindow:\", showThreeDModelWindow);\r\n        console.log(\"- threeDModelProfileId:\", threeDModelProfileId);\r\n      }, 100);\r\n    }, 50);\r\n  }}\r\n>\r\n  <FaCube /> 3D Model Viewer\r\n</button>\r\n\r\n          </div>\r\n        ) : (\r\n          <div className={styles.profilePage}>\r\n            <h1 className={styles.profileHeading}>Satellite Automated Testing System</h1>\r\n            <p className={styles.profileSubtext}>Navigate using the side panel</p>\r\n          </div>\r\n        )}\r\n\r\n{(() => {\r\n    console.log(\"🔍 Rendering MainScreen component\");\r\n    console.log(\"- showCheckoutTest:\", showCheckoutTest);\r\n    console.log(\"- droppedItems length:\", droppedItems.length);\r\n    return null;\r\n  })()}\r\n\r\n{(showCheckoutTest || localStorage.getItem('showCheckoutTest') === 'true') && droppedItems.length > 0 && (\r\n  <div id=\"checkout-test-container\" style={{ position: 'relative', zIndex: 9999 }}>\r\n    {(() => {\r\n      console.log(\"⭐ Rendering CheckoutTestProgress window\", {\r\n        showCheckoutTest,\r\n        localStorageValue: localStorage.getItem('showCheckoutTest'),\r\n        droppedItemsLength: droppedItems.length\r\n      });\r\n      return null;\r\n    })()}\r\n    <CheckoutTestProgress\r\n      droppedItems={droppedItems}\r\n      onClose={handleCloseCheckoutTest}\r\n      zIndex={99999}\r\n      onMouseDown={() => {/* Nothing needed here */}}\r\n      sock={mccSocket || {}}\r\n    />\r\n  </div>\r\n)}\r\n      </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default MainScreen;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6787, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/ToTestList/ToTestList.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actions\": \"ToTestList-module__vY2V8W__actions\",\n  \"addButton\": \"ToTestList-module__vY2V8W__addButton\",\n  \"clearButton\": \"ToTestList-module__vY2V8W__clearButton\",\n  \"closeButton\": \"ToTestList-module__vY2V8W__closeButton\",\n  \"dark\": \"ToTestList-module__vY2V8W__dark\",\n  \"deleteButton\": \"ToTestList-module__vY2V8W__deleteButton\",\n  \"drag-handle\": \"ToTestList-module__vY2V8W__drag-handle\",\n  \"error\": \"ToTestList-module__vY2V8W__error\",\n  \"fadeOut\": \"ToTestList-module__vY2V8W__fadeOut\",\n  \"form\": \"ToTestList-module__vY2V8W__form\",\n  \"header\": \"ToTestList-module__vY2V8W__header\",\n  \"light\": \"ToTestList-module__vY2V8W__light\",\n  \"loadingIndicator\": \"ToTestList-module__vY2V8W__loadingIndicator\",\n  \"popup\": \"ToTestList-module__vY2V8W__popup\",\n  \"popup-show\": \"ToTestList-module__vY2V8W__popup-show\",\n  \"saveStatus\": \"ToTestList-module__vY2V8W__saveStatus\",\n  \"selectedRow\": \"ToTestList-module__vY2V8W__selectedRow\",\n  \"success\": \"ToTestList-module__vY2V8W__success\",\n  \"table\": \"ToTestList-module__vY2V8W__table\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 6814, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ToTestList/ToTestList.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styles from \"./ToTestList.module.css\";\r\nimport Draggable from \"react-draggable\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { WindowName } from \"@/types/types\";\r\n\r\ninterface ToTestListProps {\r\n  zIndex: number; \r\n  onMouseDown: () => void; \r\n  onClose: () => void;\r\n  bringWindowToFront: (windowName: WindowName) => void;\r\n  windowZIndexes: { [key: string]: number };\r\n  zIndexCounter: number;\r\n}\r\n\r\ninterface RowData {\r\n  id?: number;  // Database ID\r\n  sn: number;\r\n  test: string;\r\n  satellite: string;\r\n  dateTime: string;\r\n  loggedBy: string;\r\n  selected?: boolean;\r\n}\r\n\r\nconst ToTestList: React.FC<ToTestListProps> = ({ \r\n  zIndex, \r\n  onMouseDown, \r\n  onClose, \r\n  bringWindowToFront, \r\n  windowZIndexes, \r\n  zIndexCounter \r\n}) => {\r\n  // Use MutableRefObject instead of RefObject to satisfy Draggable's requirements\r\n  const nodeRef = useRef<HTMLDivElement>(null);\r\n  const [rows, setRows] = useState<RowData[]>([]);\r\n  const [formData, setFormData] = useState({\r\n    test: \"\",\r\n    satellite: \"\",\r\n    loggedBy: \"\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saveStatus, setSaveStatus] = useState<string | null>(null);\r\n  \r\n  // Important: Add refs to prevent infinite focus loop\r\n  const hasFocused = useRef(false);\r\n  const initialMount = useRef(true);\r\n  const saveTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // API URL from environment or default\r\n  const API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  // Create portal element once on mount\r\n  const [portalElement] = useState(() => {\r\n    // Check if portal already exists\r\n    const existingPortal = document.getElementById(\"toTestList-root\");\r\n    if (existingPortal) {\r\n      return existingPortal;\r\n    }\r\n    \r\n    // Create new portal if needed\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"toTestList-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n  // Important: Store position in sessionStorage to maintain it across renders\r\n  const savedPosition = sessionStorage.getItem('toTestListPosition');\r\n  const defaultPosition = savedPosition ? JSON.parse(savedPosition) : {\r\n    x: (window.innerWidth - 800) / 2, \r\n    y: (window.innerHeight - 500) / 2\r\n  };\r\n\r\n  const [position, setPosition] = useState(defaultPosition);\r\n  \r\n  // Fetch data from the server when component mounts\r\n  useEffect(() => {\r\n    console.log(\"🔵 ToTestList mounted\");\r\n    \r\n    // Focus window, but only once on initial mount\r\n    if (initialMount.current && !hasFocused.current) {\r\n      const focusTimeout = setTimeout(() => {\r\n        console.log(\"🎯 ToTestList initial focusing\");\r\n        onMouseDown();\r\n        hasFocused.current = true;\r\n      }, 50);\r\n      \r\n      initialMount.current = false;\r\n      \r\n      return () => clearTimeout(focusTimeout);\r\n    }\r\n\r\n    // Fetch data from the server\r\n    fetchTestItems();\r\n  }, []); // Empty dependency array - run once on mount\r\n\r\n  // Clean up portal and timers on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      // Clear any pending save timeouts\r\n      if (saveTimeoutRef.current) {\r\n        clearTimeout(saveTimeoutRef.current);\r\n        saveTimeoutRef.current = null;\r\n      }\r\n      \r\n      hasFocused.current = false; // Reset focus state on unmount\r\n      \r\n      // Don't remove the portal element itself - this causes issues\r\n      // Just reset internal state for next mount\r\n    };\r\n  }, []);\r\n\r\n  // Save data to database whenever rows change\r\n  useEffect(() => {\r\n    // Don't save on initial mount\r\n    if (initialMount.current) {\r\n      return;\r\n    }\r\n\r\n    // Clear any existing timeout\r\n    if (saveTimeoutRef.current) {\r\n      clearTimeout(saveTimeoutRef.current);\r\n    }\r\n\r\n    // Set a new timeout to save data\r\n    saveTimeoutRef.current = setTimeout(() => {\r\n      saveTestItems();\r\n    }, 500); // Debounce saves to avoid too many API calls\r\n  }, [rows]);\r\n\r\n  // Save position to sessionStorage whenever it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('toTestListPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  // Fetch test items from the database\r\n  const fetchTestItems = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      console.log(\"📥 Fetching test items from server\");\r\n      const response = await fetch(`${API_URL}/test-items`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching test items: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"📊 Received test items:\", data);\r\n      \r\n      // Map the data to match our expected format\r\n      const formattedRows = data.map((item: any, index: number) => ({\r\n        id: item.id,\r\n        sn: index + 1, // Ensure sequential numbering\r\n        test: item.test,\r\n        satellite: item.satellite,\r\n        dateTime: item.dateTime,\r\n        loggedBy: item.loggedBy,\r\n        selected: false\r\n      }));\r\n      \r\n      setRows(formattedRows);\r\n      \r\n      // Fall back to localStorage if the server returns no data\r\n      if (formattedRows.length === 0) {\r\n        console.log(\"📝 No data from server, checking localStorage\");\r\n        const savedRows = localStorage.getItem(\"toTestListRows\");\r\n        if (savedRows) {\r\n          const parsedRows = JSON.parse(savedRows);\r\n          setRows(parsedRows);\r\n          \r\n          // Save the localStorage data to the server\r\n          saveTestItems(parsedRows);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching test items:\", error);\r\n      \r\n      // Fall back to localStorage on error\r\n      const savedRows = localStorage.getItem(\"toTestListRows\");\r\n      if (savedRows) {\r\n        setRows(JSON.parse(savedRows));\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Save test items to both localStorage and the database\r\n  const saveTestItems = async (itemsToSave = rows) => {\r\n    if (itemsToSave.length === 0) {\r\n      console.log(\"No items to save\");\r\n      return;\r\n    }\r\n    \r\n    // Save to localStorage first (as backup)\r\n    localStorage.setItem(\"toTestListRows\", JSON.stringify(itemsToSave));\r\n    \r\n    // Save to the database\r\n    try {\r\n      console.log(\"💾 Saving test items to server:\", itemsToSave);\r\n      setSaveStatus(\"Saving...\");\r\n      \r\n      const response = await fetch(`${API_URL}/test-items`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ items: itemsToSave }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error saving test items: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"✅ Server response:\", data);\r\n      setSaveStatus(\"Saved\");\r\n      \r\n      // Clear saved status after 2 seconds\r\n      setTimeout(() => setSaveStatus(null), 2000);\r\n    } catch (error) {\r\n      console.error(\"Error saving test items:\", error);\r\n      setSaveStatus(\"Error saving\");\r\n      \r\n      // Clear error status after 3 seconds\r\n      setTimeout(() => setSaveStatus(null), 3000);\r\n    }\r\n  };\r\n\r\n  const addItem = () => {\r\n    if (!formData.test) return; // Prevent adding empty items\r\n    \r\n    const newRow: RowData = {\r\n      sn: rows.length + 1,\r\n      test: formData.test,\r\n      satellite: formData.satellite,\r\n      dateTime: new Date().toLocaleString(),\r\n      loggedBy: formData.loggedBy || \"Anonymous\",\r\n    };\r\n    \r\n    setRows([...rows, newRow]);\r\n    setFormData({ test: \"\", satellite: \"\", loggedBy: \"\" });\r\n  };\r\n\r\n  const deleteItem = async () => {\r\n    const selectedIndex = rows.findIndex((row) => row.selected);\r\n    if (selectedIndex !== -1) {\r\n      const selectedRow = rows[selectedIndex];\r\n      const updatedRows = rows.filter((_, index) => index !== selectedIndex);\r\n\r\n      // Update local state with recalculated S/N\r\n      setRows(\r\n        updatedRows.map((row, index) => ({\r\n          ...row,\r\n          sn: index + 1, // Recalculate S/N\r\n        }))\r\n      );\r\n\r\n      // If the deleted item has an ID, delete it from the server\r\n      if (selectedRow.id) {\r\n        try {\r\n          console.log(`🗑️ Deleting test item ID ${selectedRow.id} from server`);\r\n          \r\n          const response = await fetch(`${API_URL}/test-items/${selectedRow.id}`, {\r\n            method: 'DELETE',\r\n          });\r\n          \r\n          if (!response.ok) {\r\n            throw new Error(`Error deleting test item: ${response.status}`);\r\n          }\r\n          \r\n          console.log(\"✅ Item deleted from server\");\r\n        } catch (error) {\r\n          console.error(\"Error deleting test item:\", error);\r\n        }\r\n      }\r\n\r\n      // Update localStorage\r\n      if (updatedRows.length === 0) {\r\n        localStorage.removeItem(\"toTestListRows\");\r\n      } else {\r\n        localStorage.setItem(\"toTestListRows\", JSON.stringify(updatedRows));\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearList = async () => {\r\n    if (window.confirm(\"Are you sure you want to clear all items?\")) {\r\n      setRows([]);\r\n      localStorage.removeItem(\"toTestListRows\"); // Explicitly clear localStorage\r\n      \r\n      // Clear all items from the server\r\n      try {\r\n        console.log(\"🧹 Clearing all test items from server\");\r\n        \r\n        const response = await fetch(`${API_URL}/test-items/clear`, {\r\n          method: 'DELETE',\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Error clearing test items: ${response.status}`);\r\n        }\r\n        \r\n        console.log(\"✅ All items cleared from server\");\r\n      } catch (error) {\r\n        console.error(\"Error clearing test items:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleRowSelection = (index: number) => {\r\n    const updatedRows = rows.map((row, i) => ({\r\n      ...row,\r\n      selected: i === index ? !row.selected : false,\r\n    }));\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  // When the window is clicked, bring it to front using the passed function\r\n  const handleWindowClick = (e: React.MouseEvent) => {\r\n    // Prevent bringing to front for clicks on inputs and buttons\r\n    if (\r\n      e.target instanceof HTMLInputElement || \r\n      e.target instanceof HTMLButtonElement ||\r\n      (e.target instanceof HTMLElement && e.target.closest('button') !== null)\r\n    ) {\r\n      return;\r\n    }\r\n    \r\n    console.log(`🖱️ Clicked ToTestList, bringing to front`);\r\n    onMouseDown();\r\n  };\r\n\r\n  // Add state to track dark mode\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  \r\n  // Update dark mode state on component mount and when theme changes\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      const isDark = document.documentElement.classList.contains(\"dark\");\r\n      setIsDarkMode(isDark);\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Set up observer for theme changes\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        if (mutation.attributeName === \"class\") {\r\n          checkDarkMode();\r\n        }\r\n      });\r\n    });\r\n    \r\n    observer.observe(document.documentElement, {\r\n      attributes: true,\r\n      attributeFilter: [\"class\"]\r\n    });\r\n    \r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n  \r\n  // Force immediate theme check when component renders\r\n  useEffect(() => {\r\n    setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n  }, []);\r\n\r\n  // Compute actual z-index to use, falling back to provided zIndex if needed\r\n  const effectiveZIndex = windowZIndexes[\"ToTestList\"] || zIndex;\r\n\r\n  // Handle close with confirmation\r\n  const handleClose = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation(); // Prevents accidental reopening\r\n    console.log(\"🔴 ToTestList close button clicked\");\r\n    \r\n    // Update sessionStorage directly to ensure persistence\r\n    try {\r\n      const savedState = sessionStorage.getItem('windowVisibility');\r\n      if (savedState) {\r\n        const state = JSON.parse(savedState);\r\n        state.ToTestList = false;\r\n        sessionStorage.setItem('windowVisibility', JSON.stringify(state));\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error updating sessionStorage:\", e);\r\n    }\r\n    \r\n    onClose();\r\n  };\r\n\r\n  return createPortal(\r\n    <div \r\n      style={{\r\n        position: \"absolute\",\r\n        zIndex: effectiveZIndex,\r\n        opacity: 1,\r\n        visibility: \"visible\",\r\n        pointerEvents: \"auto\",\r\n        display: \"block\", /* Force display */\r\n        willChange: \"z-index\",\r\n        top: 0,          /* Make sure it's not hidden below viewport */\r\n        left: 0          /* Make sure it's not hidden off-screen */\r\n      }}\r\n      data-window=\"ToTestList\"\r\n      id=\"toTestList-window\"\r\n    >\r\n      <Draggable\r\n        nodeRef={nodeRef as React.RefObject<HTMLElement>}\r\n        handle=\".drag-handle\"\r\n        position={position}\r\n        onStop={(e, data) => {\r\n          console.log(`📌 ToTestList moved to: x=${data.x}, y=${data.y}`);\r\n          setPosition({ x: data.x, y: data.y });\r\n        }}\r\n      >\r\n        <div \r\n          ref={nodeRef} \r\n          className={styles.popup} \r\n          style={{ \r\n            position: \"fixed\", \r\n            backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n            color: isDarkMode ? \"#fff\" : \"#000\",\r\n            boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\",\r\n            width: \"800px\", // Add explicit width\r\n            minHeight: \"400px\", // Ensure minimum height  \r\n            userSelect: \"none\", // Prevent text selection during drag\r\n            willChange: \"transform\",\r\n            opacity: 1,\r\n            visibility: \"visible\",\r\n            display: \"block\" /* Force display */\r\n          }}\r\n          onClick={handleWindowClick}\r\n        >\r\n          {/* Window header */}\r\n          <div className={`${styles.header} drag-handle`} style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <h2>Tests to Conduct</h2>\r\n            <button\r\n              onClick={handleClose}\r\n              className={styles.closeButton}\r\n              style={{ \r\n                color: isDarkMode ? \"white\" : \"black\",\r\n                background: \"none\",\r\n                border: \"none\",\r\n                fontSize: \"18px\",\r\n                cursor: \"pointer\"\r\n              }}\r\n            >\r\n              ✖\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Save status indicator */}\r\n          {saveStatus && (\r\n            <div className={styles.saveStatus} style={{\r\n              padding: \"4px 10px\",\r\n              margin: \"0 0 10px 0\",\r\n              fontSize: \"14px\",\r\n              textAlign: \"center\",\r\n              backgroundColor: saveStatus.includes(\"Error\") ? \"#ffdddd\" : \"#ddffdd\",\r\n              color: saveStatus.includes(\"Error\") ? \"#cc0000\" : \"#007700\",\r\n              borderRadius: \"4px\"\r\n            }}>\r\n              {saveStatus}\r\n            </div>\r\n          )}\r\n          \r\n          {/* Loading indicator */}\r\n          {isLoading ? (\r\n            <div className={styles.loadingIndicator} style={{\r\n              textAlign: \"center\",\r\n              padding: \"20px\"\r\n            }}>\r\n              Loading test items...\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <table className={styles.table}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S/N</th>\r\n                    <th>Test</th>\r\n                    <th>Satellite</th>\r\n                    <th>Date/Time Logged</th>\r\n                    <th>Logged by</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows.length === 0 ? (\r\n                    <tr>\r\n    <td \r\n      colSpan={5} \r\n      style={{ \r\n        textAlign: \"center\", \r\n        padding: \"20px\",\r\n        color: \"#000000\", // Always black text\r\n      }}\r\n    >\r\n                        No items added yet. Add a test below.\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    rows.map((row, index) => (\r\n                      <tr\r\n                        key={index}\r\n                        style={{\r\n                          backgroundColor: row.selected\r\n                            ? isDarkMode\r\n                              ? \"#003366\" // Dark blue for dark mode\r\n                              : \"#d0ebff\" // Light blue for light mode\r\n                            : \"transparent\",\r\n                        }}\r\n                        className={row.selected ? styles.selectedRow : \"\"}\r\n                        onClick={(e) => {\r\n                          e.stopPropagation(); // Prevent window click handler\r\n                          toggleRowSelection(index);\r\n                        }}\r\n                      >\r\n                        <td>{row.sn}</td>\r\n                        <td>{row.test}</td>\r\n                        <td>{row.satellite}</td>\r\n                        <td>{row.dateTime}</td>\r\n                        <td>{row.loggedBy}</td>\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n              <div className={styles.form}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Test\"\r\n                  value={formData.test}\r\n                  onChange={(e) => setFormData({ ...formData, test: e.target.value })}\r\n                  onClick={(e) => e.stopPropagation()} // Prevent dragging when interacting with inputs\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Satellite\"\r\n                  value={formData.satellite}\r\n                  onChange={(e) => setFormData({ ...formData, satellite: e.target.value })}\r\n                  onClick={(e) => e.stopPropagation()}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Logged by\"\r\n                  value={formData.loggedBy}\r\n                  onChange={(e) => setFormData({ ...formData, loggedBy: e.target.value })}\r\n                  onClick={(e) => e.stopPropagation()}\r\n                />\r\n                <button \r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    addItem();\r\n                  }} \r\n                  className={styles.addButton}\r\n                >\r\n                  +\r\n                </button>\r\n              </div>\r\n              <div className={styles.actions}>\r\n                <button \r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    deleteItem();\r\n                  }} \r\n                  className={styles.deleteButton}\r\n                  disabled={!rows.some(row => row.selected)}\r\n                >\r\n                  Delete Item\r\n                </button>\r\n                <button \r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    clearList();\r\n                  }} \r\n                  className={styles.clearButton}\r\n                  disabled={rows.length === 0}\r\n                >\r\n                  Clear List\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Draggable>\r\n    </div>,\r\n    portalElement\r\n  );\r\n};\r\n\r\nexport default ToTestList;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7502, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/ServerWindow/ServerWindow.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"closeButton\": \"ServerWindow-module__wfqmlq__closeButton\",\n  \"connectButton\": \"ServerWindow-module__wfqmlq__connectButton\",\n  \"dark\": \"ServerWindow-module__wfqmlq__dark\",\n  \"drag-handle\": \"ServerWindow-module__wfqmlq__drag-handle\",\n  \"form\": \"ServerWindow-module__wfqmlq__form\",\n  \"header\": \"ServerWindow-module__wfqmlq__header\",\n  \"input\": \"ServerWindow-module__wfqmlq__input\",\n  \"logWindow\": \"ServerWindow-module__wfqmlq__logWindow\",\n  \"popup\": \"ServerWindow-module__wfqmlq__popup\",\n  \"popup-show\": \"ServerWindow-module__wfqmlq__popup-show\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 7520, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ServerWindow/ServerWindow.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./ServerWindow.module.css\";\r\nimport { Rnd } from \"react-rnd\"; // Use react-rnd for draggable and resizable windows\r\nimport { createPortal } from \"react-dom\";\r\nimport { WindowName } from \"@/types/types\";\r\n\r\ninterface ServerWindowProps {\r\n  onClose: () => void;\r\n  zIndex: number; \r\n  onMouseDown: () => void; \r\n  bringWindowToFront: (windowName: WindowName) => void;\r\n  windowZIndexes: { [key: string]: number };\r\n  zIndexCounter: number;\r\n}\r\n\r\nconst ServerWindow: React.FC<ServerWindowProps> = ({ \r\n  zIndex, \r\n  onMouseDown, \r\n  onClose, \r\n  bringWindowToFront, \r\n  windowZIndexes, \r\n  zIndexCounter \r\n}) => {\r\n  const [serverAddress, setServerAddress] = useState<string>(\"\");\r\n  const [serverId, setServerId] = useState<string>(\"\");\r\n  const [status, setStatus] = useState<string>(\"Disconnected\");\r\n  const [logs, setLogs] = useState<{ timestamp: string; message: string }[]>([]);\r\n\r\n  const logsEndRef = useRef<HTMLDivElement | null>(null);\r\n  const navigate = useNavigate();\r\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  const windowName = \"ServerWindow\";\r\n\r\n  // Create portal element once on mount\r\n  const [portalElement] = useState(() => {\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"serverWindow-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n  // Important: Store position in sessionStorage to maintain it across renders\r\n  const savedPosition = sessionStorage.getItem('serverWindowPosition');\r\n  const defaultPosition = savedPosition ? JSON.parse(savedPosition) : {\r\n    x: (window.innerWidth - 600) / 2, // Correct width of 600px\r\n    y: (window.innerHeight - 500) / 2 // Better vertical centering\r\n  };\r\n\r\n  const [position, setPosition] = useState(defaultPosition);\r\n  \r\n  useEffect(() => {\r\n    // Scroll logs to bottom when they update\r\n    if (logsEndRef.current) {\r\n      logsEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n    \r\n    // Cleanup function for component unmount\r\n    return () => {\r\n      if (portalElement && portalElement.parentNode) {\r\n        portalElement.parentNode.removeChild(portalElement);\r\n      }\r\n    };\r\n  }, [logs, portalElement]);\r\n\r\n  const nodeRef = useRef<HTMLDivElement>(null!);\r\n\r\n  const appendLog = (message: string) => {\r\n    const timestamp = new Date().toLocaleString();\r\n    setLogs((prevLogs) => [...prevLogs, { timestamp, message }]);\r\n  };\r\n\r\n  // When the window is clicked, bring it to front using the passed function\r\n  const handleWindowClick = () => {\r\n    console.log(`🖱️ Clicked ${windowName}, bringing to front`);\r\n    onMouseDown();\r\n  };\r\n\r\n  const handleConnect = async () => {\r\n    if (!serverAddress || !serverId) {\r\n      alert(\"Please provide both Server Address and Server ID.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setStatus(\"Connecting...\");\r\n      appendLog(\"Attempting to connect to MCC server...\");\r\n      console.log(\"Connecting to:\", `${backendUrl}/connect_mcc`); // Log the URL\r\n\r\n      const response = await fetch(`${backendUrl}/connect_mcc`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          server_address: serverAddress,\r\n          server_id: serverId,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error(\"Non-JSON response:\", errorText);\r\n        appendLog(`HTTP error! Status: ${response.status} - ${errorText}`);\r\n        setStatus(\"Connection Error\");\r\n        return;\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(\"Backend response:\", result);\r\n\r\n      if (result.status === \"success\") {\r\n        setStatus(\"Connected\");\r\n        appendLog(result.message);\r\n        \r\n        // Check if ToTestList is visible from sessionStorage\r\n        const savedVisibility = sessionStorage.getItem('windowVisibility');\r\n        let isToTestListVisible = false;\r\n        \r\n        if (savedVisibility) {\r\n          try {\r\n            const parsedVisibility = JSON.parse(savedVisibility);\r\n            isToTestListVisible = parsedVisibility.ToTestList || false;\r\n          } catch (e) {\r\n            console.error(\"Error parsing window visibility:\", e);\r\n          }\r\n        }\r\n        \r\n        // Save current window state to sessionStorage before navigation\r\n        const currentWindowState = {\r\n          ServerWindow: true,\r\n          ToTestList: isToTestListVisible, // Use the parsed value\r\n          ThreeDModelWindow: false\r\n        };\r\n        \r\n        // Store window state in sessionStorage for persistence\r\n        sessionStorage.setItem('windowVisibility', JSON.stringify(currentWindowState));\r\n        console.log(\"💾 Saved window state before navigation:\", currentWindowState);\r\n        \r\n        setTimeout(() => {\r\n          navigate(\"/main\");\r\n        }, 100);\r\n      } else {\r\n        setStatus(\"Failed to Connect\");\r\n        appendLog(result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error connecting to MCC:\", error);\r\n      setStatus(\"Connection Error\");\r\n      appendLog(`Connection error: ${error instanceof Error ? error.message : String(error)}`);\r\n    }\r\n  };\r\n\r\n  // Debug when z-index changes\r\n  useEffect(() => {\r\n    console.log(`ServerWindow z-index updated to ${zIndex}`);\r\n  }, [zIndex]);\r\n  \r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      const isDark = document.documentElement.classList.contains(\"dark\");\r\n      console.log(\"🌓 Dark mode detected:\", isDark);\r\n      setIsDarkMode(isDark);\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Set up observer for theme changes\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        if (mutation.attributeName === \"class\") {\r\n          checkDarkMode();\r\n        }\r\n      });\r\n    });\r\n    \r\n    observer.observe(document.documentElement, {\r\n      attributes: true,\r\n      attributeFilter: [\"class\"]\r\n    });\r\n    \r\n    // Also check periodically as a backup\r\n    const interval = setInterval(checkDarkMode, 1000);\r\n    \r\n    return () => {\r\n      observer.disconnect();\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n  \r\n  // Ensure light/dark mode styling is applied on render\r\n  useEffect(() => {\r\n    // Force immediate check when component renders\r\n    setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n  }, []);\r\n\r\n  // Get the effective z-index value\r\n  const effectiveZIndex = windowZIndexes[\"ServerWindow\"] || zIndex;\r\n  \r\n  // Save position to sessionStorage whenever it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('serverWindowPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  return createPortal(\r\n    <Rnd\r\n      position={position}\r\n      size={{\r\n        width: 500,\r\n        height: \"auto\",\r\n      }}\r\n      dragHandleClassName=\"drag-handle\"\r\n      enableResizing={false}\r\n      onDragStop={(e, d) => {\r\n        console.log(`📌 ServerWindow moved to: x=${d.x}, y=${d.y}`);\r\n        // Save new position to state and sessionStorage\r\n        setPosition({ x: d.x, y: d.y });\r\n      }}\r\n      style={{ \r\n        position: \"fixed\",\r\n        zIndex: effectiveZIndex,\r\n        pointerEvents: \"auto\",\r\n        backgroundColor: isDarkMode ? \"#121212\" : \"white\",\r\n        borderRadius: \"10px\",\r\n        boxShadow: \"0 0 20px rgba(0, 0, 0, 0.3)\",\r\n        willChange: \"transform, z-index\"\r\n      }}\r\n      onClick={handleWindowClick}\r\n    >\r\n      <div \r\n        className={styles.popup} \r\n        style={{ \r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n          color: isDarkMode ? \"#fff\" : \"#000\"\r\n        }}\r\n      >\r\n        <div className={`${styles.header} drag-handle`}>\r\n          <h2>Server Connection</h2>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation(); // Prevents accidental reopening\r\n              onClose();\r\n            }}\r\n            className={styles.closeButton}\r\n            style={{\r\n              color: isDarkMode ? \"white\" : \"black\", // Apply color dynamically\r\n            }}\r\n          >\r\n            ✖\r\n          </button>\r\n        </div>\r\n        <div className={styles.form}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Server Address\"\r\n            value={serverAddress}\r\n            onChange={(e) => setServerAddress(e.target.value)}\r\n            className={styles.input}\r\n            onClick={(e) => e.stopPropagation()} // Prevent window click handler\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Server ID\"\r\n            value={serverId}\r\n            onChange={(e) => setServerId(e.target.value)}\r\n            className={styles.input}\r\n            onClick={(e) => e.stopPropagation()} // Prevent window click handler\r\n          />\r\n          <button \r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleConnect();\r\n            }} \r\n            className={styles.connectButton}\r\n          >\r\n            Connect\r\n          </button>\r\n        </div>\r\n        <p>Status: {status}</p>\r\n        <div className={styles.logs}>\r\n          <h3>Logs</h3>\r\n          <div\r\n            className={styles.logWindow}\r\n            style={{\r\n              maxHeight: \"250px\",\r\n              overflowY: \"scroll\",\r\n              border: \"1px solid #ccc\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              backgroundColor: isDarkMode ? \"#2a2a2a\" : \"#f5f5f5\"\r\n            }}\r\n            onClick={(e) => e.stopPropagation()} // Prevent window click handler\r\n          >\r\n            {logs.map((log, index) => (\r\n              <div key={index} style={{ display: \"flex\", alignItems: \"flex-start\" }}>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    minWidth: \"150px\",\r\n                    marginRight: \"8px\",\r\n                    textAlign: \"right\",\r\n                  }}\r\n                >\r\n                  [{log.timestamp}]\r\n                </span>\r\n                <span style={{ flex: 1 }}>{log.message}</span>\r\n              </div>\r\n            ))}\r\n            <div ref={logsEndRef}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Rnd>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default ServerWindow;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7922, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/ModelWindow/ThreeDModelWindow.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"closeButton\": \"ThreeDModelWindow-module__5BjfpW__closeButton\",\n  \"content\": \"ThreeDModelWindow-module__5BjfpW__content\",\n  \"dark\": \"ThreeDModelWindow-module__5BjfpW__dark\",\n  \"drag-handle\": \"ThreeDModelWindow-module__5BjfpW__drag-handle\",\n  \"header\": \"ThreeDModelWindow-module__5BjfpW__header\",\n  \"light\": \"ThreeDModelWindow-module__5BjfpW__light\",\n  \"paused\": \"ThreeDModelWindow-module__5BjfpW__paused\",\n  \"popup\": \"ThreeDModelWindow-module__5BjfpW__popup\",\n  \"popup-show\": \"ThreeDModelWindow-module__5BjfpW__popup-show\",\n  \"rotate-icon\": \"ThreeDModelWindow-module__5BjfpW__rotate-icon\",\n  \"spin\": \"ThreeDModelWindow-module__5BjfpW__spin\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 7941, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ModelWindow/ThreeDModelWindow.jsx"],"sourcesContent":["// ThreeDModelWindow.jsx - Performance-optimized for large models\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Draggable from \"react-draggable\";\r\nimport styles from \"./ThreeDModelWindow.module.css\";\r\n\r\n// Create a global variable outside the component to persist across renders\r\nlet globalPortalElement = null;\r\n\r\n// Component implementation with fixed visibility\r\nconst ThreeDModelWindow = (props) => {\r\n  const {\r\n    profileId,\r\n    zIndex,\r\n    onMouseDown,\r\n    onClose,\r\n    windowZIndexes,\r\n    showThreeDModelWindow,\r\n    zIndexCounter,\r\n    bringWindowToFront\r\n  } = props;\r\n  \r\n  // Refs\r\n  const portalRef = useRef(null);\r\n  const hasCalledOnMouseDownRef = useRef(false);\r\n  const threeInstanceRef = useRef(null);\r\n  const nodeRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const isInitializedRef = useRef(false);\r\n  const modelRef = useRef(null);\r\n  const threeRef = useRef(null);\r\n  const controlsRef = useRef(null);\r\n  const loaderRef = useRef(null);\r\n  const dracoLoaderRef = useRef(null); // For draco compression\r\n  const dataFetchedRef = useRef(false);\r\n  const lastProfileIdRef = useRef(null);\r\n  const portalCleanupDone = useRef(false);\r\n  const isAutoRotatingRef = useRef(true);\r\n  const resizeTimeoutRef = useRef(null); // For resize throttling\r\n\r\n  // State\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [modelPath, setModelPath] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [loadError, setLoadError] = useState(null);\r\n  const [loadingProgress, setLoadingProgress] = useState(0);\r\n  const [loadingBytes, setLoadingBytes] = useState(0); // Add bytes loaded\r\n  const [totalBytes, setTotalBytes] = useState(0); // Add total bytes\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const [isModelReady, setIsModelReady] = useState(false);\r\n  const [portalError, setPortalError] = useState(false);\r\n  const [portalCreated, setPortalCreated] = useState(false);\r\n  const [isAutoRotating, setIsAutoRotating] = useState(true);\r\n  const [adaptiveBackgroundColor, setAdaptiveBackgroundColor] = useState(null);\r\n  const [modelStats, setModelStats] = useState({ vertices: 0, size: 0 }); // Track model stats\r\n  const [showDetailedStats, setShowDetailedStats] = useState(false); // Toggle for stats display\r\n  \r\n  const API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  // Z-index management\r\n  const effectiveZIndex = windowZIndexes?.ThreeDModelWindow || zIndex;\r\n\r\n  useEffect(() => {\r\n    console.log(`ThreeDModelWindow z-index updated to ${effectiveZIndex}`);\r\n  }, [effectiveZIndex]);\r\n\r\n  // Create or get the portal element only once on component mount\r\n  useEffect(() => {\r\n    // Create portal element if it doesn't exist globally\r\n    if (!globalPortalElement) {\r\n      globalPortalElement = document.createElement(\"div\");\r\n      globalPortalElement.id = \"threeDModelWindow-root\";\r\n      document.body.appendChild(globalPortalElement);\r\n      console.log(\"🌐 Created global portal element for 3D Model Window\");\r\n    }\r\n    \r\n    // Set the portal reference\r\n    portalRef.current = globalPortalElement;\r\n    \r\n    // Only clean up Three.js resources on unmount, but DON'T remove the portal element\r\n    return () => {\r\n      console.log(\"⚠️ ThreeDModelWindow unmounting - cleaning up resources but keeping portal\");\r\n      \r\n      // Prevent React from removing Three.js nodes directly\r\n      const restore = preventReactTreeCleanup(containerRef);\r\n      \r\n      // Cancel animation frames\r\n      if (window.threeDModelAnimationFrame) {\r\n        cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n        delete window.threeDModelAnimationFrame;\r\n      }\r\n      \r\n      // Clean up Three.js resources directly\r\n      if (threeInstanceRef.current && threeInstanceRef.current.removeListeners) {\r\n        threeInstanceRef.current.removeListeners();\r\n      }\r\n      \r\n      if (threeInstanceRef.current && threeInstanceRef.current.renderer) {\r\n        threeInstanceRef.current.renderer.dispose();\r\n      }\r\n      \r\n      // Clean up Draco loader if it exists\r\n      if (dracoLoaderRef.current) {\r\n        dracoLoaderRef.current.dispose && dracoLoaderRef.current.dispose();\r\n        dracoLoaderRef.current = null;\r\n      }\r\n\r\n      // Clear all timeouts\r\n      if (resizeTimeoutRef.current) {\r\n        clearTimeout(resizeTimeoutRef.current);\r\n      }\r\n      \r\n      threeInstanceRef.current = null;\r\n      isInitializedRef.current = false;\r\n      portalRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  const handleWindowClick = () => {\r\n    console.log(\"🖱️ Clicked ThreeDModelWindow, bringing to front\");\r\n    if (onMouseDown) {\r\n      onMouseDown();\r\n    }\r\n  };\r\n\r\n  // Implement a custom close handler that cleans up properly\r\n  const handleClose = () => {\r\n    console.log(\"🔴 User closing ThreeDModelWindow\");\r\n    \r\n    // Call the provided onClose function\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Toggle auto rotation\r\n  const toggleAutoRotation = () => {\r\n    const newState = !isAutoRotating;\r\n    \r\n    // Update React state\r\n    setIsAutoRotating(newState);\r\n    \r\n    // Update ref for direct access\r\n    isAutoRotatingRef.current = newState;\r\n    \r\n    // Apply directly to the OrbitControls if they exist\r\n    if (controlsRef.current) {\r\n      console.log(`🔄 Directly setting autoRotate to ${newState}`);\r\n      controlsRef.current.autoRotate = newState;\r\n    }\r\n    \r\n    // Also update in threeInstance for other code to reference\r\n    if (threeInstanceRef.current) {\r\n      threeInstanceRef.current.autoRotate = newState;\r\n      console.log(`🔄 Auto-rotation ${newState ? 'enabled' : 'disabled'} in threeInstance`);\r\n    }\r\n  };\r\n\r\n  // Add this helper outside your component\r\n  const preventReactTreeCleanup = (targetRef) => {\r\n    if (!targetRef || !targetRef.current) return;\r\n    \r\n    // Save any existing DOM content to a document fragment\r\n    const fragment = document.createDocumentFragment();\r\n    while (targetRef.current.firstChild) {\r\n      fragment.appendChild(targetRef.current.firstChild);\r\n    }\r\n    \r\n    // Replace the ref's content with a dummy element that React can safely remove\r\n    const placeholder = document.createElement('div');\r\n    targetRef.current.appendChild(placeholder);\r\n    \r\n    // Return a cleanup function that can restore the original content if needed\r\n    return () => {\r\n      if (targetRef.current) {\r\n        targetRef.current.appendChild(fragment);\r\n      }\r\n    };\r\n  };\r\n\r\n  // Add keyframes animation\r\n  useEffect(() => {\r\n    const pulseAnimation = `\r\n      @keyframes pulse {\r\n        0% { opacity: 0.6; }\r\n        50% { opacity: 1; }\r\n        100% { opacity: 0.6; }\r\n      }\r\n      @keyframes spin {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n      }\r\n    `;\r\n    \r\n    const styleEl = document.createElement('style');\r\n    styleEl.innerHTML = pulseAnimation;\r\n    document.head.appendChild(styleEl);\r\n    \r\n    return () => {\r\n      if (document.head.contains(styleEl)) {\r\n        document.head.removeChild(styleEl);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Path testing effect with proper conditional\r\n  useEffect(() => {\r\n    // Always call the hook, but guard the internal logic\r\n    if (!modelPath || !API_URL || !showThreeDModelWindow) return;\r\n\r\n    const pathTestKey = `${modelPath}-${profileId}`;\r\n    if (window._testedPaths && window._testedPaths[pathTestKey]) return;\r\n\r\n    // Initialize tracking object if needed\r\n    if (!window._testedPaths) window._testedPaths = {};\r\n    window._testedPaths[pathTestKey] = true;\r\n\r\n    // Now perform the tests\r\n    const testPaths = [\r\n        modelPath,\r\n        `${API_URL}${modelPath.startsWith('/') ? '' : '/'}${modelPath}`,\r\n        `/models/profile_${profileId}.glb`,\r\n        `${window.location.origin}/models/profile_${profileId}.glb`,\r\n        `${API_URL}/models/profile_${profileId}.glb`\r\n    ];\r\n\r\n    console.log(\"🧪 Testing all possible model paths (one-time check):\");\r\n    testPaths.forEach((path, index) => {\r\n        fetch(path, { method: 'HEAD' })\r\n            .then(response => {\r\n                console.log(`Path ${index + 1}: ${path} - ${response.status} ${response.ok ? '✓' : '✗'}`);\r\n            })\r\n            .catch(err => {\r\n                console.log(`Path ${index + 1}: ${path} - Error: ${err.message}`);\r\n            });\r\n    });\r\n  }, [modelPath, API_URL, profileId, showThreeDModelWindow]);\r\n\r\n  // API URL validation\r\n  useEffect(() => {\r\n    // GUARD: Only run once per API URL\r\n    if (!API_URL || window._checkedApiUrl === API_URL) return;\r\n    window._checkedApiUrl = API_URL;\r\n    \r\n    let baseUrl = API_URL;\r\n    \r\n    // Check if API_URL ends with a slash and remove it for consistency\r\n    if (baseUrl.endsWith('/')) {\r\n      baseUrl = baseUrl.slice(0, -1);\r\n    }\r\n    \r\n    // Validate and log the API URL\r\n    console.log(`🔗 Using API URL: ${baseUrl}`);\r\n    \r\n    // Verify that the server is reachable - only once per URL\r\n    fetch(`${baseUrl}/profiles`, { \r\n      method: 'HEAD',\r\n      headers: { 'Cache-Control': 'no-cache' } \r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          console.log(`✅ API server is reachable (${response.status})`);\r\n        } else {\r\n          console.warn(`⚠️ API server returned status ${response.status}`);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(`❌ Cannot reach API server: ${err.message}`);\r\n      });\r\n  }, [API_URL]);\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    // Only execute the fetch if we're showing the window and have an API URL\r\n    if (!showThreeDModelWindow || !API_URL) {\r\n      // We need to still reset this flag when not visible\r\n      if (!showThreeDModelWindow) {\r\n        hasCalledOnMouseDownRef.current = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Skip if we've already fetched data for this profile\r\n    if (dataFetchedRef.current && lastProfileIdRef.current === profileId) {\r\n      console.log(`🔄 Skipping redundant API call for profile ${profileId}`);\r\n      return;\r\n    }\r\n\r\n    console.log(`🪟 ThreeDModelWindow mounted for profile ${profileId}`);\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/profile/${profileId}`);\r\n        if (!response.ok) throw new Error(`Failed to fetch model data: ${response.status}`);\r\n\r\n        const data = await response.json();\r\n        console.log(\"📄 Model data response:\", data);\r\n\r\n        if (isMounted) {\r\n          if (data.model_path) {\r\n            setModelPath(data.model_path);\r\n            console.log(`🔗 Setting model path to: ${data.model_path}`);\r\n          } else {\r\n            setLoadError(\"No 3D model available for this profile\");\r\n            setIsLoading(false);\r\n          }\r\n          \r\n          // Mark as fetched to prevent repeated calls\r\n          dataFetchedRef.current = true;\r\n          lastProfileIdRef.current = profileId;\r\n        }\r\n      } catch (error) {\r\n        if (isMounted) {\r\n          console.error(\"❌ Error fetching model data:\", error);\r\n          setLoadError(error instanceof Error ? error.message : \"Failed to load model\");\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    if (onMouseDown && !hasCalledOnMouseDownRef.current) {\r\n      console.log(\"📱 Bringing 3D Model Window to front (one-time call)\");\r\n      onMouseDown();\r\n      hasCalledOnMouseDownRef.current = true; // Mark that we've called it\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      \r\n      // Only reset fetch flag if profileId changed\r\n      if (lastProfileIdRef.current !== profileId) {\r\n        dataFetchedRef.current = false;\r\n      }\r\n    };\r\n  }, [profileId, showThreeDModelWindow, API_URL, onMouseDown]);\r\n  \r\n  // Helper function to properly dispose of Three.js resources\r\n  function disposeNode(node) {\r\n    if (!node) return;\r\n    \r\n    if (node.geometry) {\r\n      node.geometry.dispose();\r\n    }\r\n    \r\n    if (node.material) {\r\n      if (Array.isArray(node.material)) {\r\n        node.material.forEach(material => disposeMaterial(material));\r\n      } else {\r\n        disposeMaterial(node.material);\r\n      }\r\n    }\r\n  }\r\n\r\n  function disposeMaterial(material) {\r\n    if (!material) return;\r\n    \r\n    // Dispose of all material properties that could be textures\r\n    Object.keys(material).forEach(prop => {\r\n      if (material[prop] && material[prop].isTexture) {\r\n        material[prop].dispose();\r\n      }\r\n    });\r\n    \r\n    material.dispose();\r\n  }\r\n  \r\n  // Top-level cleanup function with improved resource disposal\r\n  const cleanup = () => {\r\n    try {\r\n      console.log(\"🧹 Running top-level cleanup\");\r\n      \r\n      // Cancel any animation frames\r\n      if (window.threeDModelAnimationFrame) {\r\n        cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n        delete window.threeDModelAnimationFrame;\r\n      }\r\n\r\n      // Clear any pending resize timeouts\r\n      if (resizeTimeoutRef.current) {\r\n        clearTimeout(resizeTimeoutRef.current);\r\n        resizeTimeoutRef.current = null;\r\n      }\r\n      \r\n      // Properly dispose of model resources\r\n      if (modelRef.current) {\r\n        modelRef.current.traverse(disposeNode);\r\n      }\r\n      \r\n      // Clear Three.js resources\r\n      if (threeInstanceRef.current) {\r\n        // Dispose scene and renderer if they exist\r\n        if (threeInstanceRef.current.renderer) {\r\n          threeInstanceRef.current.renderer.dispose();\r\n        }\r\n        \r\n        // Remove event listeners if they were added\r\n        if (threeInstanceRef.current.removeListeners) {\r\n          threeInstanceRef.current.removeListeners();\r\n        }\r\n        \r\n        // Clear the reference\r\n        threeInstanceRef.current = null;\r\n      }\r\n\r\n      // Clear controls reference\r\n      if (controlsRef.current) {\r\n        controlsRef.current.dispose && controlsRef.current.dispose();\r\n        controlsRef.current = null;\r\n      }\r\n      \r\n      // Clear loader reference\r\n      loaderRef.current = null;\r\n      \r\n      // Clear Draco loader reference\r\n      if (dracoLoaderRef.current) {\r\n        dracoLoaderRef.current.dispose && dracoLoaderRef.current.dispose();\r\n        dracoLoaderRef.current = null;\r\n      }\r\n\r\n      // Reset the initialization flag but DON'T clear container contents through React\r\n      isInitializedRef.current = false;\r\n      setIsModelReady(false);\r\n      \r\n      // Reset model reference\r\n      modelRef.current = null;\r\n      \r\n      // Reset adaptive background color\r\n      setAdaptiveBackgroundColor(null);\r\n    } catch (error) {\r\n      console.error(\"❌ Safe Cleanup Error:\", error);\r\n    }\r\n  };\r\n  \r\n  // Setup Three.js after component is fully mounted\r\n  useEffect(() => {\r\n    if (!showThreeDModelWindow || !containerRef.current || !modelPath || isInitializedRef.current) {\r\n      return;\r\n    }\r\n    \r\n    console.log(\"🔧 Ready to initialize Three.js:\", {\r\n      showThreeDModelWindow,\r\n      containerExists: !!containerRef.current,\r\n      modelPath,\r\n      alreadyInitialized: isInitializedRef.current\r\n    });\r\n    \r\n    // Delay Three.js initialization to ensure DOM stability\r\n    const initTimer = setTimeout(() => {\r\n      if (containerRef.current) {\r\n        console.log(\"⏱️ Delayed initialization starting now\");\r\n        initThreeJS();\r\n      } else {\r\n        console.log(\"❌ Container no longer exists after delay\");\r\n      }\r\n    }, 300);\r\n    \r\n    return () => {\r\n      clearTimeout(initTimer);\r\n    };\r\n  }, [showThreeDModelWindow, modelPath]);\r\n\r\n  // Initialize Three.js safely with performance optimizations\r\n  const initThreeJS = () => {\r\n    // Early exit if already initialized or container disappeared\r\n    if (isInitializedRef.current || !containerRef.current) return;\r\n    isInitializedRef.current = true;\r\n    \r\n    import('three')\r\n      .then(THREE => {\r\n        // Store THREE reference for use in other functions\r\n        threeRef.current = THREE;\r\n        \r\n        // First import DRACOLoader for compression support\r\n        import('three/examples/jsm/loaders/DRACOLoader.js')\r\n          .then(({ DRACOLoader }) => {\r\n            // Then import GLTFLoader\r\n            import('three/examples/jsm/loaders/GLTFLoader.js')\r\n              .then(({ GLTFLoader }) => {\r\n                // Finally import OrbitControls\r\n                import('three/examples/jsm/controls/OrbitControls.js')\r\n                  .then(({ OrbitControls }) => {\r\n                    // Safe check if component is still mounted\r\n                    if (!containerRef.current) {\r\n                      console.log(\"Container no longer exists, aborting Three.js setup\");\r\n                      return;\r\n                    }\r\n                    \r\n                    try {\r\n                      // Setup Three.js scene\r\n                      const width = containerRef.current.clientWidth;\r\n                      const height = containerRef.current.clientHeight;\r\n                      \r\n                      // Create renderer with optimizations\r\n                      const renderer = new THREE.WebGLRenderer({ \r\n                        antialias: true,\r\n                        alpha: true,\r\n                        powerPreference: \"high-performance\", // Performance optimization\r\n                        precision: \"mediump\" // Medium precision is usually sufficient\r\n                      });\r\n                      \r\n                      // Optimize renderer settings\r\n                      renderer.setSize(width, height);\r\n                      // Limit pixel ratio for high DPI displays\r\n                      renderer.setPixelRatio(window.devicePixelRatio > 1 ? 2 : 1);\r\n                      \r\n                      // Create scene with frustum culling enabled\r\n                      const scene = new THREE.Scene();\r\n                      scene.frustumCulled = true; // Enable frustum culling\r\n                      scene.background = new THREE.Color(isDarkMode ? 0x1a1a1a : 0xf5f5f5);\r\n                      \r\n                      // Create camera\r\n                      const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);\r\n                      camera.position.set(5, 5, 10);\r\n                      \r\n                      // Add lights\r\n                      const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\r\n                      scene.add(ambientLight);\r\n                      \r\n                      const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\r\n                      directionalLight.position.set(10, 10, 5);\r\n                      scene.add(directionalLight);\r\n                      \r\n                      // Create controls with auto-rotation\r\n                      const controls = new OrbitControls(camera, renderer.domElement);\r\n                      controls.enableDamping = true;\r\n                      controls.dampingFactor = 0.05; // Add damping for smoother movement\r\n                      \r\n                      // Get the initial auto-rotation state from state/ref\r\n                      controls.autoRotate = isAutoRotatingRef.current;\r\n                      controls.autoRotateSpeed = 1.0; // Slower for better performance\r\n                      \r\n                      // Store controls in ref for direct access from UI\r\n                      controlsRef.current = controls;\r\n                      \r\n                      // Log the initial auto-rotation state\r\n                      console.log(`🔄 Controls created with autoRotate=${controls.autoRotate}`);\r\n                      \r\n                      // Add renderer to container\r\n                      if (containerRef.current) {\r\n                        containerRef.current.appendChild(renderer.domElement);\r\n                      } else {\r\n                        console.error(\"Container lost during initialization\");\r\n                        return;\r\n                      }\r\n                      \r\n                      // Function to clean up resources\r\n                      const cleanupThreeResources = () => {\r\n                        try {\r\n                          // Cancel any animation frames first\r\n                          if (window.threeDModelAnimationFrame) {\r\n                            cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n                            delete window.threeDModelAnimationFrame;\r\n                          }\r\n                          \r\n                          // Dispose of resources\r\n                          if (controls) controls.dispose();\r\n                          \r\n                          // Remove DOM elements carefully\r\n                          if (renderer && renderer.domElement) {\r\n                            try {\r\n                              const parent = renderer.domElement.parentNode;\r\n                              if (parent && parent.contains(renderer.domElement)) {\r\n                                parent.removeChild(renderer.domElement);\r\n                              }\r\n                            } catch (e) {\r\n                              console.warn(\"Could not remove renderer element:\", e);\r\n                            }\r\n                            renderer.dispose();\r\n                          }\r\n                          \r\n                          // Clear references\r\n                          scene.clear();\r\n                          \r\n                          isInitializedRef.current = false;\r\n                        } catch (error) {\r\n                          console.error(\"❌ Local cleanup error:\", error);\r\n                        }\r\n                      };\r\n                      \r\n                      // Function to calculate dominant color from a model\r\n                      const calculateDominantColor = (model) => {\r\n                        try {\r\n                          // Make sure we have a valid THREE reference\r\n                          if (!threeRef.current) {\r\n                            console.error(\"THREE not available for color calculation\");\r\n                            return null;\r\n                          }\r\n                          \r\n                          // Create a small offscreen renderer to capture the model\r\n                          const offscreenRenderer = new threeRef.current.WebGLRenderer({ \r\n                            antialias: false, // Turn off for performance\r\n                            preserveDrawingBuffer: true \r\n                          });\r\n                          offscreenRenderer.setSize(16, 16); // Smaller for better performance\r\n                          \r\n                          // Create temporary camera and scene\r\n                          const tempScene = new threeRef.current.Scene();\r\n                          const tempCamera = new threeRef.current.PerspectiveCamera(45, 1, 0.1, 1000);\r\n                          tempCamera.position.set(5, 5, 10);\r\n                          \r\n                          // Add model to temp scene\r\n                          tempScene.add(model.clone());\r\n                          \r\n                          // Add lighting\r\n                          const ambientLight = new threeRef.current.AmbientLight(0xffffff, 0.7);\r\n                          tempScene.add(ambientLight);\r\n                          \r\n                          // Render the scene\r\n                          offscreenRenderer.render(tempScene, tempCamera);\r\n                          \r\n                          // Get pixel data\r\n                          const gl = offscreenRenderer.getContext();\r\n                          const pixels = new Uint8Array(16 * 16 * 4);\r\n                          gl.readPixels(0, 0, 16, 16, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n                          \r\n                          // Calculate average color, skipping black/transparent pixels\r\n                          let r = 0, g = 0, b = 0, total = 0;\r\n                          \r\n                          for (let i = 0; i < pixels.length; i += 4) {\r\n                            // Skip transparent or black pixels\r\n                            if (pixels[i+3] > 10 && (pixels[i] > 5 || pixels[i+1] > 5 || pixels[i+2] > 5)) {\r\n                              r += pixels[i];\r\n                              g += pixels[i+1];\r\n                              b += pixels[i+2];\r\n                              total++;\r\n                            }\r\n                          }\r\n                          \r\n                          // Cleanup\r\n                          offscreenRenderer.dispose();\r\n                          \r\n                          if (total === 0) return null; // No valid pixels\r\n                          \r\n                          // Get average\r\n                          r = Math.floor(r / total);\r\n                          g = Math.floor(g / total);\r\n                          b = Math.floor(b / total);\r\n                          \r\n                          // Create a contrasting background color (inverted with reduced intensity)\r\n                          const invR = 255 - r;\r\n                          const invG = 255 - g;\r\n                          const invB = 255 - b;\r\n                          \r\n                          // Create a subtle background (blend inverted with white/black)\r\n                          const baseColor = isDarkMode ? 0 : 255;\r\n                          const blendFactor = 0.85; // Subtlety factor\r\n                          \r\n                          const bgR = Math.floor(invR * (1-blendFactor) + baseColor * blendFactor);\r\n                          const bgG = Math.floor(invG * (1-blendFactor) + baseColor * blendFactor);\r\n                          const bgB = Math.floor(invB * (1-blendFactor) + baseColor * blendFactor);\r\n                          \r\n                          console.log(`🎨 Detected dominant color: rgb(${r},${g},${b})`);\r\n                          console.log(`🎨 Created background color: rgb(${bgR},${bgG},${bgB})`);\r\n                          \r\n                          return new threeRef.current.Color(bgR/255, bgG/255, bgB/255);\r\n                        } catch (err) {\r\n                          console.error(\"❌ Error calculating dominant color:\", err);\r\n                          return null;\r\n                        }\r\n                      };\r\n                      \r\n                      // Make sure we have the correct full path to the model\r\n                      let fullModelPath = modelPath;\r\n                      if (modelPath) {\r\n                        if (modelPath.startsWith('http')) {\r\n                          // Already a full URL\r\n                          fullModelPath = modelPath;\r\n                        } else if (modelPath.startsWith('/models/')) {\r\n                          // This is a path to the API server's models folder\r\n                          fullModelPath = `${API_URL}${modelPath}`;\r\n                        } else if (modelPath.startsWith('/')) {\r\n                          // Some other absolute path\r\n                          fullModelPath = `${API_URL}${modelPath}`;\r\n                        } else {\r\n                          // Relative path\r\n                          fullModelPath = `${API_URL}/${modelPath}`;\r\n                        }\r\n                      }\r\n\r\n                      console.log('🔍 Path Construction (Improved):');\r\n                      console.log(`- Original model path: \"${modelPath}\"`);\r\n                      console.log(`- API URL: \"${API_URL}\"`);\r\n                      console.log(`- Using path: \"${fullModelPath}\"`);\r\n\r\n                      // Only use these two paths for model loading:\r\n                      const priorityPaths = [\r\n                        fullModelPath,\r\n                        `${API_URL}/models/profile_${profileId}.glb`\r\n                      ];\r\n\r\n                      // Add timeout handling with longer initial timeout\r\n                      let loadTimeout = setTimeout(() => {\r\n                        console.warn(\"⚠️ Model loading timeout - retrying with cache busting...\");\r\n                        retryLoading();\r\n                      }, 30000); // 30 second timeout for large models\r\n\r\n                      // Setup Draco compression loader for better performance\r\n                      const dracoLoader = new DRACOLoader();\r\n                      dracoLoader.setDecoderPath('https://www.gstatic.com/draco/versioned/decoders/1.5.5/');\r\n                      dracoLoader.setDecoderConfig({ type: 'js' });\r\n                      dracoLoaderRef.current = dracoLoader;\r\n                      \r\n                      // Create the loader with Draco compression\r\n                      const loader = new GLTFLoader();\r\n                      loader.setDRACOLoader(dracoLoader);\r\n                      loaderRef.current = loader;\r\n                      \r\n                      const retryLoading = () => {\r\n                        clearTimeout(loadTimeout);\r\n                        console.log(\"🔄 Retrying model load with cache busting...\");\r\n                        \r\n                        // Try with a cache-busting parameter\r\n                        const cacheBuster = `?t=${Date.now()}`;\r\n                        \r\n                        // Try a different path construction approach on retry\r\n                        const retryPath = modelPath?.startsWith('/')\r\n                          ? `${window.location.origin}${modelPath}${cacheBuster}`\r\n                          : `${fullModelPath}${cacheBuster}`;\r\n                        \r\n                        console.log(`🔄 Retry path: ${retryPath}`);\r\n                        \r\n                        // Use loaderRef.current instead of loader\r\n                        if (loaderRef.current) {\r\n                          loaderRef.current.load(\r\n                            retryPath,\r\n                            onModelLoaded,\r\n                            onProgress,\r\n                            onError\r\n                          );\r\n                        } else {\r\n                          console.error(\"❌ Loader is not available for retry\");\r\n                          setLoadError(\"Cannot load model: loader unavailable\");\r\n                          setIsLoading(false);\r\n                        }\r\n                      };\r\n\r\n                      // Helper function to simplify geometry for better performance\r\n                      const optimizeMesh = (mesh) => {\r\n                        // Skip non-mesh objects\r\n                        if (!mesh.isMesh) return mesh;\r\n                      \r\n                        // Skip already optimized meshes\r\n                        if (mesh.userData.optimized) return mesh;\r\n                      \r\n                        try {\r\n                          // Get original geometry\r\n                          const geometry = mesh.geometry;\r\n                          \r\n                          // Skip non-BufferGeometry\r\n                          if (!geometry.isBufferGeometry) return mesh;\r\n                          \r\n                          // Skip geometries with missing attributes\r\n                          if (!geometry.attributes.position) return mesh;\r\n                          \r\n                          // Mark as optimized to avoid processing it again\r\n                          mesh.userData.optimized = true;\r\n                          \r\n                          // Add frustum culling\r\n                          mesh.frustumCulled = true;\r\n                          \r\n                          return mesh;\r\n                        } catch (err) {\r\n                          console.warn(\"Error optimizing mesh:\", err);\r\n                          return mesh;\r\n                        }\r\n                      };\r\n\r\n                      // Create Level of Detail for large models\r\n                      const setupLOD = (model, box, size) => {\r\n                        try {\r\n                          // If the model isn't very large, return it as is\r\n                          if (countVertices(model) < 100000) {\r\n                            return model;\r\n                          }\r\n                          \r\n                          // If THREE.LOD isn't available, return the original model\r\n                          if (!threeRef.current.LOD) {\r\n                            return model;\r\n                          }\r\n                          \r\n                          console.log(\"📊 Setting up LOD for large model\");\r\n                          \r\n                          // Create a new LOD object\r\n                          const lod = new threeRef.current.LOD();\r\n                          \r\n                          // Add the original model as the highest detail level\r\n                          lod.addLevel(model, 0);\r\n                          \r\n                          // Clone the model for lower detail levels\r\n                          const simplifiedModel = model.clone();\r\n                          \r\n                          // Simplify the model by traversing it and applying optimizations\r\n                          simplifiedModel.traverse((node) => {\r\n                            if (node.isMesh) {\r\n                              optimizeMesh(node);\r\n                            }\r\n                          });\r\n                          \r\n                          // Add the simplified model for viewing at a distance\r\n                          lod.addLevel(simplifiedModel, size * 1.5);\r\n                          \r\n                          // Return the LOD object\r\n                          return lod;\r\n                        } catch (err) {\r\n                          console.warn(\"Failed to setup LOD:\", err);\r\n                          return model;\r\n                        }\r\n                      };\r\n\r\n                      // Model loaded handler with performance optimizations\r\n                      const onModelLoaded = (gltf) => {\r\n                        clearTimeout(loadTimeout);\r\n                        \r\n                        if (!containerRef.current) {\r\n                          cleanupThreeResources();\r\n                          return;\r\n                        }\r\n                        \r\n                        try {\r\n                          console.log(\"✅ Model loaded successfully - processing model data\");\r\n                          const model = gltf.scene;\r\n                          \r\n                          // Store model in ref for rotation controls\r\n                          modelRef.current = model;\r\n                          \r\n                          // Center and scale model\r\n                          const box = new THREE.Box3().setFromObject(model);\r\n                          const center = new THREE.Vector3();\r\n                          box.getCenter(center);\r\n                          \r\n                          model.position.sub(center);\r\n                          \r\n                          const size = box.getSize(new THREE.Vector3()).length();\r\n                          const scale = 5 / size;\r\n                          model.scale.set(scale, scale, scale);\r\n                          \r\n                          // Add more detailed diagnostic logging\r\n                          const vertexCount = countVertices(model);\r\n                          console.log(`📊 Model stats: vertices=${vertexCount}, size=${size}`);\r\n                          \r\n                          // Store model stats for UI display\r\n                          setModelStats({\r\n                            vertices: vertexCount,\r\n                            triangles: Math.round(vertexCount / 3),\r\n                            size: size,\r\n                            fileSize: totalBytes > 0 ? \r\n                                     (totalBytes / (1024 * 1024)).toFixed(2) + \" MB\" : \r\n                                     \"Unknown\"\r\n                          });\r\n                          \r\n                          // Optimize entire model for better performance\r\n                          model.traverse((node) => {\r\n                            if (node.isMesh) {\r\n                              // Apply optimizations to each mesh\r\n                              optimizeMesh(node);\r\n                              \r\n                              // Simplify material if possible\r\n                              if (node.material) {\r\n                                if (node.material.map) {\r\n                                  // Downscale textures for better performance\r\n                                  node.material.map.minFilter = THREE.LinearFilter;\r\n                                  node.material.map.magFilter = THREE.LinearFilter;\r\n                                  node.material.map.anisotropy = 1; // Lower anisotropy for performance\r\n                                }\r\n                              }\r\n                            }\r\n                          });\r\n                          \r\n                          // Calculate and set adaptive background color based on model\r\n                          try {\r\n                            console.log(\"🎨 Analyzing model for dominant color...\");\r\n                            const dominantColor = calculateDominantColor(model);\r\n                            if (dominantColor) {\r\n                              scene.background = dominantColor;\r\n                              setAdaptiveBackgroundColor(dominantColor.getStyle());\r\n                              console.log(`🎨 Set background to: ${dominantColor.getStyle()}`);\r\n                            }\r\n                          } catch (err) {\r\n                            console.error(\"❌ Error setting adaptive background:\", err);\r\n                          }\r\n                          \r\n                          // Apply Level of Detail for large models\r\n                          const finalModel = vertexCount > 100000 ? \r\n                                            setupLOD(model, box, size) : \r\n                                            model;\r\n                          \r\n                          scene.add(finalModel);\r\n                          \r\n                          setIsLoading(false);\r\n                          setIsModelReady(true);\r\n                          console.log(\"✅ Model successfully added to scene\");\r\n                        } catch (err) {\r\n                          console.error(\"❌ Error processing loaded model:\", err);\r\n                          setLoadError(`Error processing model: ${err.message}`);\r\n                          setIsLoading(false);\r\n                        }\r\n                      };\r\n\r\n                      // Helper function to count vertices (for diagnostics)\r\n                      const countVertices = (model) => {\r\n                        let count = 0;\r\n                        model.traverse((obj) => {\r\n                          if (obj.isMesh && obj.geometry) {\r\n                            const position = obj.geometry.getAttribute('position');\r\n                            if (position) count += position.count;\r\n                          }\r\n                        });\r\n                        return count;\r\n                      };\r\n\r\n                      // Improved progress tracking\r\n                      const onProgress = (progress) => {\r\n                        try {\r\n                          // Log all progress events for debugging\r\n                          console.log(`📊 Progress: loaded=${progress.loaded} bytes, total=${progress.total || 'unknown'} bytes`);\r\n                          \r\n                          // Store bytes loaded for better user feedback\r\n                          setLoadingBytes(progress.loaded || 0);\r\n                          \r\n                          // Ensure we have valid progress values\r\n                          if (progress.total > 0) {\r\n                            setTotalBytes(progress.total);\r\n                            const percent = Math.round((progress.loaded / progress.total) * 100);\r\n                            setLoadingProgress(percent);\r\n                            console.log(`📊 Loading progress: ${percent}%`);\r\n                          } else {\r\n                            // If we can't calculate percentage, show indeterminate progress\r\n                            console.log(`📊 Loading in progress (bytes: ${progress.loaded})`);\r\n                            // Simulate progress to give user feedback\r\n                            setLoadingProgress((prev) => (prev < 90 ? prev + 5 : prev));\r\n                          }\r\n                        } catch (err) {\r\n                          console.warn(\"⚠️ Error reporting progress:\", err);\r\n                          // Keep advancing progress to provide feedback\r\n                          setLoadingProgress((prev) => (prev < 90 ? prev + 5 : prev));\r\n                        }\r\n                      };\r\n\r\n                      const onError = (error) => {\r\n                        clearTimeout(loadTimeout);\r\n                        console.error(\"❌ Error loading model:\", error);\r\n                        \r\n                        // Direct fetch check for file existence\r\n                        console.log(`🔍 Checking if GLB file exists at: ${fullModelPath}`);\r\n                        fetch(fullModelPath, { method: 'HEAD' })\r\n                          .then(response => {\r\n                            console.log(`📋 HEAD check for ${fullModelPath}: ${response.status} ${response.ok ? '✓' : '✗'}`);\r\n                            if (!response.ok) {\r\n                              console.log('⚠️ Primary file path returned error, will try alternatives');\r\n                            }\r\n                          })\r\n                          .catch(err => {\r\n                            console.log(`❌ Error checking file: ${err.message}`);\r\n                          });\r\n\r\n                        // Detailed error reporting\r\n                        if (error.target && error.target instanceof XMLHttpRequest) {\r\n                          console.error(`❌ XHR Error Status: ${error.target.status}`);\r\n                          console.error(`❌ XHR Error Response: ${error.target.responseText || 'No response'}`);\r\n                        }\r\n                        \r\n                        setLoadError(`Error loading model: ${error.message || \"Unknown error\"}`);\r\n                        setIsLoading(false);\r\n                        \r\n                        // Attempt to provide more specific error information\r\n                        if (error.message && error.message.includes(\"404\")) {\r\n                          setLoadError(`Model file not found (404). Check if '${fullModelPath}' exists on the server.`);\r\n                        } else if (error.message && error.message.includes(\"Failed to fetch\")) {\r\n                          setLoadError(\"Network error. Check your internet connection or server status.\");\r\n                        } else if (error.message && error.message.includes(\"Unexpected token\")) {\r\n                          setLoadError(\"Invalid model format. The file may be corrupted or not a valid GLB file.\");\r\n                        } else if (error.message && error.message.includes(\"Cross-Origin\")) {\r\n                          setLoadError(\"Cross-origin (CORS) error. Server configuration issue.\");\r\n                        }\r\n                      };\r\n\r\n                      // Log the paths we'll try\r\n                      console.log('🚀 Will attempt to load from:', priorityPaths);\r\n\r\n                      // Load model with proper loader reference\r\n                      const tryLoadModel = (path, onSuccess, onProgress, onError) => {\r\n                        console.log(`🔄 Attempting to load model from: ${path}`);\r\n                        // Make sure we use the loader from the ref\r\n                        if (loaderRef.current) {\r\n                          loaderRef.current.load(path, onSuccess, onProgress, onError);\r\n                        } else {\r\n                          console.error(\"❌ Loader is not available\");\r\n                          setLoadError(\"Cannot load model: loader unavailable\");\r\n                          setIsLoading(false);\r\n                        }\r\n                      };\r\n\r\n                      // Start with the first path\r\n                      tryLoadModel(priorityPaths[0], onModelLoaded, onProgress, (error) => {\r\n                        console.error(`❌ Failed to load from primary path: ${error.message}`);\r\n                        \r\n                        // If that fails, try the second path\r\n                        if (priorityPaths.length > 1) {\r\n                          console.log(`🔄 Trying fallback path: ${priorityPaths[1]}`);\r\n                          tryLoadModel(priorityPaths[1], onModelLoaded, onProgress, (finalError) => {\r\n                            console.error(`❌ All paths failed: ${finalError.message}`);\r\n                            setLoadError(\"Could not load model file. Please upload a model file.\");\r\n                            setIsLoading(false);\r\n                          });\r\n                        } else {\r\n                          setLoadError(`Error loading model: ${error.message}`);\r\n                          setIsLoading(false);\r\n                        }\r\n                      });\r\n\r\n                      // Optimized animation loop\r\n                      const animate = () => {\r\n                        if (!containerRef.current) {\r\n                          if (window.threeDModelAnimationFrame) {\r\n                            cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n                            delete window.threeDModelAnimationFrame;\r\n                          }\r\n                          return;\r\n                        }\r\n                        \r\n                        // Update controls - this is critical for auto-rotation to work\r\n                        if (controlsRef.current) {\r\n                          // Ensure auto-rotation state is always synced from React state\r\n                          controlsRef.current.autoRotate = isAutoRotatingRef.current;\r\n                          controlsRef.current.update();\r\n                        }\r\n                        \r\n                        renderer.render(scene, camera);\r\n                        window.threeDModelAnimationFrame = requestAnimationFrame(animate);\r\n                      };\r\n                      \r\n                      // Throttled resize handler for better performance\r\n                      const handleResize = () => {\r\n                        if (resizeTimeoutRef.current) {\r\n                          clearTimeout(resizeTimeoutRef.current);\r\n                        }\r\n                        \r\n                        resizeTimeoutRef.current = setTimeout(() => {\r\n                          if (!containerRef.current) return;\r\n                          \r\n                          const width = containerRef.current.clientWidth;\r\n                          const height = containerRef.current.clientHeight;\r\n                          \r\n                          renderer.setSize(width, height);\r\n                          camera.aspect = width / height;\r\n                          camera.updateProjectionMatrix();\r\n                        }, 100); // 100ms throttle\r\n                      };\r\n                      \r\n                      window.addEventListener('resize', handleResize);\r\n                      \r\n                      // Store instance functions for cleanup\r\n                      threeInstanceRef.current = {\r\n                        animate,\r\n                        renderer,\r\n                        removeListeners: () => {\r\n                          window.removeEventListener('resize', handleResize);\r\n                          if (resizeTimeoutRef.current) {\r\n                            clearTimeout(resizeTimeoutRef.current);\r\n                            resizeTimeoutRef.current = null;\r\n                          }\r\n                        },\r\n                        autoRotate: isAutoRotatingRef.current\r\n                      };\r\n                      \r\n                      // Start animation loop\r\n                      animate();\r\n                      \r\n                    } catch (error) {\r\n                      console.error(\"Error initializing Three.js:\", error);\r\n                      setLoadError(\"Failed to initialize 3D viewer\");\r\n                      setIsLoading(false);\r\n                    }\r\n                  });\r\n              });\r\n          });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error loading Three.js libraries:\", error);\r\n        setLoadError(\"Failed to load 3D libraries\");\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  \r\n  // Format file size for display\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return \"0 Bytes\";\r\n    const k = 1024;\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\r\n  };\r\n  \r\n  // Handle file upload\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) {\r\n      setUploadStatus('Error: No file selected');\r\n      return;\r\n    }\r\n    \r\n    if (!selectedFile.name.endsWith('.glb')) {\r\n      setUploadStatus('Error: Only .glb files are supported');\r\n      return;\r\n    }\r\n    \r\n    // Check file size (100MB limit)\r\n    const maxSize = 100 * 1024 * 1024; // 100MB in bytes\r\n    if (selectedFile.size > maxSize) {\r\n      setUploadStatus(`Error: File exceeds 100MB limit (${(selectedFile.size/1024/1024).toFixed(2)}MB)`);\r\n      return;\r\n    }\r\n    \r\n    // Clean up existing Three.js instance before uploading\r\n    cleanup();\r\n    isInitializedRef.current = false;\r\n    \r\n    setIsLoading(true);\r\n    setUploadStatus('Uploading model...');\r\n    \r\n    // Create FormData with progress tracking\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('profile_id', String(profileId));\r\n    \r\n    try {\r\n      console.log(`📤 Starting upload for ${selectedFile.name}`);\r\n      \r\n      // Track upload progress using XMLHttpRequest\r\n      const xhr = new XMLHttpRequest();\r\n      \r\n      // Set up progress tracking\r\n      xhr.upload.addEventListener('progress', (event) => {\r\n        if (event.lengthComputable) {\r\n          const percentComplete = Math.round((event.loaded / event.total) * 100);\r\n          setUploadStatus(`Uploading: ${percentComplete}%`);\r\n          console.log(`📤 Upload progress: ${percentComplete}%`);\r\n        }\r\n      });\r\n      \r\n      // Create a promise to handle the XHR response\r\n      const uploadPromise = new Promise((resolve, reject) => {\r\n        xhr.addEventListener('load', () => {\r\n          if (xhr.status >= 200 && xhr.status < 300) {\r\n            try {\r\n              const response = JSON.parse(xhr.responseText);\r\n              resolve(response);\r\n            } catch (e) {\r\n              reject(new Error('Invalid response format'));\r\n            }\r\n          } else {\r\n            reject(new Error(`Server returned ${xhr.status}: ${xhr.statusText}`));\r\n          }\r\n        });\r\n        \r\n        xhr.addEventListener('error', () => {\r\n          reject(new Error('Network error during upload'));\r\n        });\r\n        \r\n        xhr.addEventListener('abort', () => {\r\n          reject(new Error('Upload aborted'));\r\n        });\r\n      });\r\n      \r\n      // Set up the request\r\n      xhr.open('POST', `${API_URL}/api/upload-glb`, true);\r\n      xhr.send(formData);\r\n      \r\n      // Wait for the upload to complete\r\n      const result = await uploadPromise;\r\n      \r\n      console.log('✅ Upload successful:', result);\r\n      \r\n      // Reset data fetched flag to load new model\r\n      dataFetchedRef.current = false;\r\n      \r\n      setModelPath(result.model_path);\r\n      setUploadStatus('Model uploaded successfully! Loading model...');\r\n      setLoadError(null);\r\n      setSelectedFile(null);\r\n      \r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n      \r\n      // Preload the model with direct fetch to validate\r\n      const modelUrl = result.model_path.startsWith('http') \r\n        ? result.model_path \r\n        : `${API_URL}${result.model_path.startsWith('/') ? '' : '/'}${result.model_path}`;\r\n        \r\n      console.log(`🔎 Checking uploaded model at: ${modelUrl}`);\r\n      \r\n      // Validate the uploaded file with a HEAD request\r\n      fetch(modelUrl, { method: 'HEAD' })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            console.log('✅ Uploaded model file is accessible');\r\n          } else {\r\n            console.warn(`⚠️ Uploaded model file returned status ${response.status}`);\r\n            setUploadStatus(`Warning: Model may not load correctly (HTTP ${response.status})`);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error('❌ Error validating uploaded file:', err);\r\n        });\r\n      \r\n      // Automatically hide success message after delay\r\n      setTimeout(() => {\r\n        setUploadStatus(null);\r\n      }, 5000);\r\n    } catch (error) {\r\n      console.error('❌ Error uploading model:', error);\r\n      setUploadStatus(`Error: ${error.message}`);\r\n      setLoadError(`Upload failed: ${error.message}`);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Check if portal is ready before attempting to render\r\n  const portalReady = !!portalRef.current;\r\n\r\n  // Don't render if window shouldn't be visible or portal ref isn't ready\r\n  // CRITICAL FIX: Always place useState, useRef, useEffect BEFORE any conditional return\r\n  if (!showThreeDModelWindow || !portalReady) {\r\n    console.log(\"🚫 Not rendering ThreeDModelWindow - visibility:\", showThreeDModelWindow, \"portal ready:\", portalReady);\r\n    return null;\r\n  }\r\n  \r\n  // Get position from sessionStorage or use default\r\n  const defaultPosition = {\r\n    x: Math.max(0, (window.innerWidth - 600) / 2),\r\n    y: Math.max(0, (window.innerHeight - 550) / 2)\r\n  };\r\n  \r\n  console.log(\"📍 Model window position:\", defaultPosition);\r\n  console.log(\"✅ Rendering ThreeDModelWindow - visibility:\", showThreeDModelWindow);\r\n  console.log(\"📊 Z-index:\", effectiveZIndex);\r\n\r\n  try {\r\n    // Use portalRef.current instead of portalElement\r\n    return createPortal(\r\n      <div \r\n        className=\"three-model-window-container\" \r\n        style={{ \r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          zIndex: effectiveZIndex,\r\n          pointerEvents: \"none\" // Allow clicks to pass through the container but not the window\r\n        }}\r\n      >\r\n        <Draggable\r\n          nodeRef={nodeRef}\r\n          handle=\".drag-handle\"\r\n          defaultPosition={defaultPosition}\r\n          bounds=\"parent\"\r\n        >\r\n          <div \r\n            ref={nodeRef} \r\n            style={{ \r\n              position: \"absolute\",\r\n              zIndex: effectiveZIndex,\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n              color: isDarkMode ? \"#fff\" : \"#000\",\r\n              width: \"600px\",\r\n              borderRadius: \"10px\",\r\n              boxShadow: \"0 4px 20px rgba(0, 0, 0, 0.3)\",\r\n              overflow: \"hidden\",\r\n              pointerEvents: \"auto\", // Ensure clicks work on the window\r\n              visibility: \"visible\",\r\n              opacity: 1,\r\n              willChange: \"transform, z-index\"\r\n            }}\r\n            onClick={handleWindowClick}\r\n          >\r\n            <div \r\n              className=\"drag-handle\"\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                padding: \"15px\",\r\n                backgroundColor: isDarkMode ? \"#2c2c2c\" : \"#f0f0f0\",\r\n                borderTopLeftRadius: \"10px\",\r\n                borderTopRightRadius: \"10px\",\r\n                cursor: \"grab\"\r\n              }}\r\n            >\r\n              <h2 style={{ margin: 0 }}>Satellite Model Viewer</h2>\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation(); // Prevent event bubbling to the window\r\n                  handleClose();\r\n                }}\r\n                style={{ \r\n                  color: isDarkMode ? \"white\" : \"black\",\r\n                  background: \"none\",\r\n                  border: \"none\",\r\n                  fontSize: \"18px\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n              >\r\n                ✖\r\n              </button>\r\n            </div>\r\n            \r\n            <div style={{ padding: \"20px\" }}>\r\n              {/* Upload status message */}\r\n              {uploadStatus && (\r\n                <div style={{ \r\n                  margin: \"10px 0\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"4px\",\r\n                  backgroundColor: uploadStatus.includes('Error') \r\n                    ? (isDarkMode ? \"#3d0000\" : \"#ffdddd\") \r\n                    : (isDarkMode ? \"#004d00\" : \"#ddffdd\"),\r\n                  color: uploadStatus.includes('Error')\r\n                    ? (isDarkMode ? \"#ff8080\" : \"#d00000\")\r\n                    : (isDarkMode ? \"#80ff80\" : \"#00b000\")\r\n                }}>\r\n                  {uploadStatus}\r\n                </div>\r\n              )}\r\n\r\n              {/* Control buttons */}\r\n              <div style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                marginBottom: \"10px\"\r\n              }}>\r\n                {/* Stats toggle button */}\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setShowDetailedStats(!showDetailedStats);\r\n                  }}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    padding: \"8px 14px\",\r\n                    backgroundColor: showDetailedStats ? \"#00bcd4\" : (isDarkMode ? \"#444\" : \"#f0f0f0\"),\r\n                    color: showDetailedStats ? \"white\" : (isDarkMode ? \"#fff\" : \"#444\"),\r\n                    border: \"none\",\r\n                    borderRadius: \"4px\",\r\n                    cursor: \"pointer\",\r\n                    fontSize: \"14px\",\r\n                    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                    transition: \"all 0.2s ease\"\r\n                  }}\r\n                >\r\n                  {showDetailedStats ? \"Hide Stats\" : \"Show Stats\"}\r\n                </button>\r\n                \r\n                {/* Auto-rotation toggle button */}\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    toggleAutoRotation();\r\n                  }}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    padding: \"8px 14px\",\r\n                    backgroundColor: isAutoRotating ? \"#00bcd4\" : (isDarkMode ? \"#444\" : \"#f0f0f0\"),\r\n                    color: isAutoRotating ? \"white\" : (isDarkMode ? \"#fff\" : \"#444\"),\r\n                    border: \"none\",\r\n                    borderRadius: \"4px\",\r\n                    cursor: \"pointer\",\r\n                    fontSize: \"14px\",\r\n                    fontWeight: \"bold\",\r\n                    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                    transition: \"all 0.2s ease\"\r\n                  }}\r\n                >\r\n                  <span style={{ \r\n                    display: \"inline-block\",\r\n                    marginRight: \"8px\",\r\n                    animation: isAutoRotating ? \"spin 2s linear infinite\" : \"none\" \r\n                  }}>\r\n                    🔄\r\n                  </span>\r\n                  {isAutoRotating ? \"Stop Rotation\" : \"Auto-Rotate\"}\r\n                </button>\r\n              </div>\r\n\r\n              {/* Model stats (when toggled) */}\r\n              {showDetailedStats && modelStats.vertices > 0 && (\r\n                <div style={{\r\n                  backgroundColor: isDarkMode ? \"#111\" : \"#f5f5f5\",\r\n                  borderRadius: \"4px\",\r\n                  padding: \"8px 12px\",\r\n                  marginBottom: \"10px\",\r\n                  fontSize: \"14px\"\r\n                }}>\r\n                  <div><strong>Vertices:</strong> {modelStats.vertices.toLocaleString()}</div>\r\n                  <div><strong>Triangles:</strong> {modelStats.triangles.toLocaleString()}</div>\r\n                  {totalBytes > 0 && (\r\n                    <div><strong>File Size:</strong> {formatFileSize(totalBytes)}</div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {/* 3D Model Viewer */}\r\n              <div \r\n                ref={containerRef}\r\n                id=\"model-container\"\r\n                style={{ \r\n                  height: \"400px\", \r\n                  marginBottom: \"20px\",\r\n                  borderRadius: \"4px\",\r\n                  overflow: \"hidden\",\r\n                  border: `1px solid ${isDarkMode ? \"#333\" : \"#ddd\"}`,\r\n                  position: \"relative\",\r\n                  backgroundColor: adaptiveBackgroundColor || (isDarkMode ? \"#111\" : \"#f5f5f5\")\r\n                }}\r\n              >\r\n                {/* Enhanced loading overlay */}\r\n                {isLoading && (\r\n                  <div style={{ \r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    backgroundColor: isDarkMode ? \"rgba(0,0,0,0.7)\" : \"rgba(255,255,255,0.7)\",\r\n                    zIndex: 10\r\n                  }}>\r\n                    <div style={{ marginBottom: \"20px\", textAlign: \"center\" }}>\r\n                      <div style={{ fontSize: \"18px\", marginBottom: \"8px\" }}>\r\n                        Loading 3D model...\r\n                      </div>\r\n                      <div style={{ fontSize: \"14px\", opacity: 0.8 }}>\r\n                        {loadingProgress > 0 ? \r\n                          `${loadingProgress}% (${formatFileSize(loadingBytes)})` : \r\n                          \"Initializing...\"}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div style={{ \r\n                      width: \"70%\", \r\n                      height: \"12px\", \r\n                      backgroundColor: isDarkMode ? \"#333\" : \"#ddd\",\r\n                      borderRadius: \"6px\",\r\n                      overflow: \"hidden\",\r\n                      boxShadow: \"inset 0 1px 3px rgba(0,0,0,0.2)\"\r\n                    }}>\r\n                      <div style={{\r\n                        width: `${loadingProgress > 0 ? loadingProgress : 5}%`,\r\n                        height: \"100%\",\r\n                        backgroundColor: loadingProgress > 0 ? \"#00bcd4\" : \"#999\",\r\n                        transition: \"width 0.3s ease\",\r\n                        animation: loadingProgress === 0 ? \"pulse 1.5s infinite\" : \"none\"\r\n                      }} />\r\n                    </div>\r\n                    \r\n                    {/* Add retry button if stuck for too long */}\r\n                    {loadingProgress === 0 && (\r\n                      <button \r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          console.log(\"🔄 Manual retry requested\");\r\n                          // Force remount of component\r\n                          cleanup();\r\n                          isInitializedRef.current = false;\r\n                          setModelPath(null);\r\n                          setTimeout(() => {\r\n                            fetch(`${API_URL}/api/profile/${profileId}`)\r\n                              .then(res => res.json())\r\n                              .then(data => {\r\n                                if (data.model_path) {\r\n                                  setModelPath(data.model_path);\r\n                                  console.log(\"🔄 Forced model reload\");\r\n                                }\r\n                              });\r\n                          }, 500);\r\n                        }}\r\n                        style={{\r\n                          marginTop: \"20px\",\r\n                          padding: \"8px 16px\",\r\n                          backgroundColor: isDarkMode ? \"#444\" : \"#eee\",\r\n                          border: \"none\",\r\n                          borderRadius: \"4px\",\r\n                          cursor: \"pointer\",\r\n                          color: isDarkMode ? \"#fff\" : \"#000\"\r\n                        }}\r\n                      >\r\n                        Retry Loading\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                \r\n                {/* Error message */}\r\n                {loadError && !isLoading && (\r\n                  <div style={{ \r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    backgroundColor: isDarkMode ? \"#1a1a1a\" : \"#f5f5f5\",\r\n                    color: \"#e74c3c\",\r\n                    padding: \"20px\",\r\n                    textAlign: \"center\",\r\n                    zIndex: 10\r\n                  }}>\r\n                    <div style={{ marginBottom: \"20px\" }}>\r\n                      <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                        <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n                        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />\r\n                        <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div>{loadError}</div>\r\n                  </div>\r\n                )}\r\n                \r\n                {/* No model message */}\r\n                {!modelPath && !isLoading && !loadError && (\r\n                  <div style={{ \r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    backgroundColor: isDarkMode ? \"#1a1a1a\" : \"#f5f5f5\",\r\n                    zIndex: 10\r\n                  }}>\r\n                    <div style={{ marginBottom: \"10px\" }}>No 3D model available</div>\r\n                    <div style={{ fontSize: \"14px\", opacity: 0.7 }}>Upload a .glb file below</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* File Upload Section */}\r\n              <div style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                gap: \"10px\",\r\n                padding: \"15px\",\r\n                backgroundColor: isDarkMode ? \"#111\" : \"#f5f5f5\",\r\n                borderRadius: \"4px\",\r\n                border: \"1px solid \" + (isDarkMode ? \"#333\" : \"#ddd\"),\r\n                marginTop: \"10px\"\r\n              }}>\r\n                <p style={{ margin: 0, fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n                  Upload 3D Model\r\n                </p>\r\n                \r\n                <div style={{ fontSize: \"14px\", opacity: 0.8, marginBottom: \"8px\" }}>\r\n                  Accepts <b>.glb</b> files - Max size: 100MB\r\n                </div>\r\n                \r\n                <div style={{ display: \"flex\", gap: \"10px\", alignItems: \"center\" }}>\r\n                  <input \r\n                    type=\"file\" \r\n                    accept=\".glb\"\r\n                    ref={fileInputRef}\r\n                    onClick={(e) => e.stopPropagation()}\r\n                    onChange={(e) => {\r\n                      if (e.target.files && e.target.files.length > 0) {\r\n                        const file = e.target.files[0];\r\n                        console.log(`📦 Selected file: ${file.name}, size: ${(file.size/1024/1024).toFixed(2)}MB`);\r\n                        setSelectedFile(file);\r\n                      }\r\n                    }}\r\n                    style={{ \r\n                      flex: 1,\r\n                      padding: \"8px\",\r\n                      border: \"1px solid \" + (isDarkMode ? \"#444\" : \"#ccc\"),\r\n                      borderRadius: \"4px\",\r\n                      backgroundColor: isDarkMode ? \"#222\" : \"#fff\",\r\n                      color: isDarkMode ? \"#fff\" : \"#000\"\r\n                    }}\r\n                  />\r\n                  \r\n                  <button \r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleFileUpload();\r\n                    }}\r\n                    disabled={!selectedFile || isLoading}\r\n                    style={{\r\n                      padding: \"10px 16px\",\r\n                      backgroundColor: selectedFile && !isLoading ? \"#4caf50\" : \"#ccc\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      borderRadius: \"4px\",\r\n                      cursor: selectedFile && !isLoading ? \"pointer\" : \"not-allowed\",\r\n                      fontWeight: \"bold\",\r\n                      minWidth: \"80px\"\r\n                    }}\r\n                  >\r\n                    {isLoading ? \"Uploading...\" : \"Upload\"}\r\n                  </button>\r\n                </div>\r\n                \r\n                {selectedFile && (\r\n                  <div style={{\r\n                    marginTop: \"8px\",\r\n                    padding: \"8px\",\r\n                    backgroundColor: isDarkMode ? \"#222\" : \"#e7f7e7\",\r\n                    borderRadius: \"4px\",\r\n                    fontSize: \"14px\"\r\n                  }}>\r\n                    <div>Selected: <b>{selectedFile.name}</b></div>\r\n                    <div>Size: {(selectedFile.size/1024/1024).toFixed(2)}MB</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Draggable>\r\n      </div>,\r\n      portalRef.current\r\n    );\r\n  } catch (err) {\r\n    console.error(\"Error rendering portal:\", err);\r\n    setPortalError(true);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default ThreeDModelWindow;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9694, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/WelcomeWindow/WelcomeWindow.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"buttonContainer\": \"WelcomeWindow-module__WdKywW__buttonContainer\",\n  \"buttonWithNotification\": \"WelcomeWindow-module__WdKywW__buttonWithNotification\",\n  \"dark\": \"WelcomeWindow-module__WdKywW__dark\",\n  \"dateTime\": \"WelcomeWindow-module__WdKywW__dateTime\",\n  \"logo\": \"WelcomeWindow-module__WdKywW__logo\",\n  \"notificationDot\": \"WelcomeWindow-module__WdKywW__notificationDot\",\n  \"welcomeButton\": \"WelcomeWindow-module__WdKywW__welcomeButton\",\n  \"welcomeHeader\": \"WelcomeWindow-module__WdKywW__welcomeHeader\",\n  \"welcomeWindow\": \"WelcomeWindow-module__WdKywW__welcomeWindow\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 9711, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/WelcomeWindow/WelcomeWindow.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport ToTestList from \"../ToTestList/ToTestList\"; // Import the ToTestList popup window React Component\r\nimport ServerWindow from \"../ServerWindow/ServerWindow\"; // Import Server Window Component\r\nimport styles from \"./WelcomeWindow.module.css\";\r\nimport { WindowName } from \"@/types/types\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Use require if not using images.d.ts\r\n//const logo = require(\"../../assets/logo.jpg\");\r\n\r\nconst WelcomeWindow: React.FC<{\r\n  openToTestList: () => void;\r\n  openServerWindow: () => void;\r\n}> = ({ \r\n  openToTestList,\r\n  openServerWindow\r\n}) => {\r\n\r\n  const [dateTime, setDateTime] = useState<string | null>(null);\r\n  const [showToTestList, setShowToTestList] = useState(false);\r\n  const [showServerWindow, setShowServerWindow] = useState(false);\r\n  const [hasTests, setHasTests] = useState(false); // Track if there are rows in the list\r\n  const nodeRef = useRef<HTMLDivElement>(null!);\r\n  const navigate = useNavigate();\r\n\r\n  // Check if the page is in dark mode\r\n  const isDarkMode = document.documentElement.classList.contains(\"dark\");\r\n\r\n  // Function to format date and time as DD/MM/YYYY HH:MM:SS\r\n  const formatDateTime = (date: Date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const year = date.getFullYear();\r\n    const hours = String(date.getHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n    const seconds = String(date.getSeconds()).padStart(2, \"0\");\r\n    return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  // Update the date/time every second\r\n  useEffect(() => {\r\n    const updateDateTime = () => setDateTime(formatDateTime(new Date()));\r\n    updateDateTime();\r\n    const interval = setInterval(updateDateTime, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Check for rows in localStorage\r\n  useEffect(() => {\r\n    const savedRows = localStorage.getItem(\"toTestListRows\");\r\n    const hasRows = savedRows ? JSON.parse(savedRows).length > 0 : false;\r\n    // setHasTests is always passed a valid boolean (true or false).\r\n    // may receive null or an empty string due to the logic\r\n    // without true / false and just > 0\r\n    setHasTests(hasRows);\r\n  }, [showToTestList]);\r\n\r\n  const handleToTestListOpen = () => {\r\n    console.log(\"Calling openToTestList\");\r\n    openToTestList(); // This will invoke the function from page.tsx\r\n  };\r\n\r\n  const handleToTestListClose = () => {\r\n    console.log(\"ToTestList closed\");\r\n    setShowToTestList(false);\r\n  };\r\n\r\n  const handleServerWindowOpen = () => {\r\n    console.log(\"Calling openServerWindow\");\r\n    openServerWindow(); // This will invoke the function from page.tsx\r\n  };\r\n\r\n  const handleServerWindowClose = () => {\r\n    console.log(\"ServerWindow closed\");\r\n    setShowServerWindow(false);\r\n  };\r\n  \r\n  return (\r\n    <Draggable nodeRef={nodeRef} handle={`.${styles.welcomeHeader}`} positionOffset={{ x: \"-50%\", y: \"-50%\" }}>\r\n      <div\r\n        ref={nodeRef}\r\n        className={styles.welcomeWindow}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          minHeight: \"200px\",\r\n          background: isDarkMode\r\n            ? \"linear-gradient(135deg, #000000, #1a1a1a)\"\r\n            : \"linear-gradient(135deg, #ffffff, #e6f7ff)\",\r\n        }}\r\n    >\r\n      <header className={`${styles.welcomeHeader} drag-handle`}>\r\n      <img \r\n          src=\"/assets/SaRCLogo.png\" \r\n          alt=\"Satellite Research Centre Logo\" \r\n          className={styles.logo} \r\n          draggable=\"false\" \r\n          onDragStart={(e) => e.preventDefault()}\r\n        />\r\n        <h2>Satellite Research Centre</h2>\r\n        <h1>Satellite Automated Testing System</h1>\r\n        {dateTime && <p className={styles.dateTime}>{dateTime}</p>}\r\n      </header>\r\n      <div className={styles.buttonContainer}>\r\n        <div className={styles.buttonWithNotification}>\r\n          <button\r\n            className={styles.welcomeButton}\r\n            onClick={handleToTestListOpen}\r\n          >\r\n            Tests to Conduct\r\n          </button>\r\n          {hasTests && <span className={styles.notificationDot}></span>}\r\n        </div>\r\n        <button\r\n          className={styles.welcomeButton}\r\n          onClick={handleServerWindowOpen}\r\n        >\r\n          MCC\r\n        </button>\r\n      </div>\r\n    </div>\r\n</Draggable>\r\n  );\r\n};\r\n\r\nexport default WelcomeWindow;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9903, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/app/page.tsx"],"sourcesContent":["// Fixed page.tsx - Key changes to avoid infinite rendering loop\n\n/* implement routing using react-router-dom, \nyou'll need to transform your page.tsx into an entry point for routing. */\n\n/* npm install react-router-dom */\n\n\"use client\";\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, useLocation } from \"react-router-dom\";\nimport MainScreen from \"../components/MainScreen/MainScreen\";\nimport ToTestList from \"../components/ToTestList/ToTestList\";\nimport ServerWindow from \"../components/ServerWindow/ServerWindow\";\nimport ThreeDModelWindow from \"../components/ModelWindow/ThreeDModelWindow\";\nimport WelcomeWindow from \"../components/WelcomeWindow/WelcomeWindow\";\nimport { WindowName } from \"@/types/types\";\n\n// Global variable to track ToTestList state across routes and navigations\nlet isToTestListOpen = false;\n\nexport default function Page() {\n  // Window visibility state - Use refs to avoid state race conditions\n  const windowVisibilityRef = useRef({\n    ToTestList: false,\n    ServerWindow: false,\n    ThreeDModelWindow: false,\n  });\n  \n  // State for reactive UI updates\n  const [windowVisibility, setWindowVisibility] = useState({\n    ToTestList: false,\n    ServerWindow: false,\n    ThreeDModelWindow: false\n  });\n\n  const [zIndexCounter, setZIndexCounter] = useState(10000); // Base z-index\n  const [windowZIndexes, setWindowZIndexes] = useState<{\n    ToTestList: number;\n    ServerWindow: number;\n    ThreeDModelWindow: number;\n  }>({\n    ToTestList: 10002,\n    ServerWindow: 10001,\n    ThreeDModelWindow: 10000,\n  });\n  \n  const [threeDModelProfileId, setThreeDModelProfileId] = useState<number | null>(1);\n  const [isOnMainScreen, setIsOnMainScreen] = useState(false);\n  \n  // Monitor current route to track if we're on main screen\n  const RouteObserver = () => {\n    const location = useLocation();\n    \n    useEffect(() => {\n      const isMain = location.pathname === '/main';\n      setIsOnMainScreen(isMain);\n      \n      // When navigating to main screen, restore window visibility from global state\n      if (isMain) {\n        console.log(\"🧭 Navigated to main screen, checking window states\");\n        \n        // Check if ToTestList should be open based on global flag\n        if (isToTestListOpen && !windowVisibility.ToTestList) {\n          console.log(\"🔄 ToTestList should be visible - restoring state\");\n          setWindowVisibility(prev => ({ ...prev, ToTestList: true }));\n          \n          // Force the ref to match as well\n          windowVisibilityRef.current = {\n            ...windowVisibilityRef.current,\n            ToTestList: true\n          };\n        }\n      }\n    }, [location]);\n    \n    return null;\n  };\n\n  // Load window state from sessionStorage on initial mount\n  useEffect(() => {\n    // Load window visibility from sessionStorage on mount\n    const savedVisibility = sessionStorage.getItem('windowVisibility');\n    if (savedVisibility) {\n      try {\n        const parsed = JSON.parse(savedVisibility);\n        windowVisibilityRef.current = parsed;\n        setWindowVisibility(parsed);\n        \n        // Update global flag for ToTestList\n        isToTestListOpen = parsed.ToTestList;\n        \n        console.log(\"📂 Loaded window visibility state:\", parsed);\n      } catch (e) {\n        console.error(\"Error parsing saved window visibility:\", e);\n      }\n    }\n  }, []);\n\n  // Save window visibility to sessionStorage whenever it changes\n  useEffect(() => {\n    // Save visibility state to sessionStorage for persistence\n    sessionStorage.setItem('windowVisibility', JSON.stringify(windowVisibility));\n    console.log(\"💾 Saved window visibility state:\", windowVisibility);\n    \n    // Update global flag for ToTestList\n    isToTestListOpen = windowVisibility.ToTestList;\n  }, [windowVisibility]);\n\n  // Extra check to ensure ToTestList stays visible when it should be\n  useEffect(() => {\n    // If global flag is true but component is not visible, fix it\n    if (isToTestListOpen && !windowVisibility.ToTestList) {\n      console.log(\"🔄 Fixing ToTestList visibility mismatch\");\n      setWindowVisibility(prev => ({\n        ...prev,\n        ToTestList: true\n      }));\n    }\n  }, [windowVisibility.ToTestList, isOnMainScreen]);\n\n  // Main function to bring a window to front\n  const bringWindowToFront = useCallback((windowName: WindowName) => {\n    console.log(`🎯 Bringing ${windowName} to front`);\n    \n    // Update both state and ref to prevent race conditions\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      [windowName]: true\n    };\n    \n    // Update visibility in state for UI rendering\n    setWindowVisibility(prev => {\n      if (prev[windowName] === true) {\n        return prev; // No change needed\n      }\n      return { ...prev, [windowName]: true };\n    });\n    \n    // Prevent z-index increases if window is already on top\n    setWindowZIndexes((prevIndexes) => {\n      const highestZIndex = Math.max(...Object.values(prevIndexes), 10000);\n      \n      if (prevIndexes[windowName] >= highestZIndex) {\n        console.log(`Window ${windowName} already at highest z-index (${prevIndexes[windowName]})`);\n        return prevIndexes; // Return unchanged to prevent loops\n      }\n      \n      // Only update if we're actually bringing something to the front\n      console.log(`Updating z-index for ${windowName} from ${prevIndexes[windowName]} to ${highestZIndex + 1}`);\n      return { ...prevIndexes, [windowName]: highestZIndex + 1 };\n    });\n    \n    // Only increment counter when actually changing z-indexes\n    setZIndexCounter(prev => prev + 1);\n  }, []);\n\n// Enhanced openToTestList function with force render option\nconst openToTestList = useCallback((forceRender = false) => {\n  console.log(\"🔍 openToTestList called with forceRender:\", forceRender);\n  console.log(\"🔍 Current visibility state:\", windowVisibility.ToTestList);\n  console.log(\"🟢 Opening ToTestList window, force:\", forceRender);\n  \n  // If force render, skip the check for already being open\n  if (!forceRender && windowVisibility.ToTestList === true) {\n    console.log(\"ToTestList already open - just bringing to front\");\n    \n    // Check if the actual window exists in the DOM\n    const elementExists = !!document.querySelector('[data-window=\"ToTestList\"]');\n    if (!elementExists) {\n      console.log(\"⚠️ ToTestList state is true but window not in DOM - forcing render\");\n      // Continue execution to render the window\n    } else {\n      // Just bring to front and exit\n      bringWindowToFront(\"ToTestList\");\n      return;\n    }\n  }\n  \n  // Set global flag for cross-component communication\n  isToTestListOpen = true;\n  \n  // Update ref (for immediate access without waiting for re-render)\n  windowVisibilityRef.current = {\n    ...windowVisibilityRef.current,\n    ToTestList: true\n  };\n  \n  // Update state (to trigger re-render)\n  setWindowVisibility(prev => ({ ...prev, ToTestList: true }));\n  \n  // Update z-index to bring window to front\n  setWindowZIndexes((prevIndexes) => {\n    const highestZIndex = Math.max(...Object.values(prevIndexes), 10000);\n    return { ...prevIndexes, ToTestList: highestZIndex + 1 };\n  });\n  \n  setZIndexCounter(prev => prev + 1);\n  \n  // Save state to sessionStorage for persistence\n  const currentState = {\n    ...windowVisibilityRef.current,\n    ToTestList: true\n  };\n  \n  sessionStorage.setItem('windowVisibility', JSON.stringify(currentState));\n  console.log(\"Updated sessionStorage:\", currentState);\n  \n  // Verify if window was actually rendered\n  setTimeout(() => {\n    const elementExists = !!document.querySelector('[data-window=\"ToTestList\"]');\n    console.log(`Verification after opening: ToTestList in DOM: ${elementExists}`);\n    \n    // If it still doesn't exist, try one more time with a state reset\n    if (!elementExists) {\n      console.log(\"⚠️ ToTestList still not in DOM after opening - trying state reset\");\n      \n      // Force a clear state first\n      setWindowVisibility(prev => ({ ...prev, ToTestList: false }));\n      \n      // Then re-render after a short delay\n      setTimeout(() => {\n        setWindowVisibility(prev => ({ ...prev, ToTestList: true }));\n      }, 10);\n    }\n  }, 50);\n}, [bringWindowToFront, windowVisibility.ToTestList, setWindowVisibility, setWindowZIndexes, setZIndexCounter]);\n\n  const closeToTestList = useCallback(() => {\n    console.log(\"🔍 closeToTestList called\");\n    console.log(\"🔍 Current visibility state:\", windowVisibility.ToTestList);\n    console.log(\"🔴 Closing ToTestList window\");\n    \n    // Update global flag\n    isToTestListOpen = false;\n    \n    // Update ref immediately\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      ToTestList: false\n    };\n    \n    // Update state for UI\n    setWindowVisibility(prev => ({ \n      ...prev, \n      ToTestList: false \n    }));\n    \n    // Update sessionStorage immediately\n    try {\n      const currentState = {\n        ...windowVisibilityRef.current,\n        ToTestList: false\n      };\n      \n      sessionStorage.setItem('windowVisibility', JSON.stringify(currentState));\n      console.log(\"Updated sessionStorage when closing:\", currentState);\n    } catch (e) {\n      console.error(\"Error updating sessionStorage:\", e);\n    }\n  }, [setWindowVisibility]);\n\n  const openServerWindow = useCallback(() => {\n    console.log(\"🟢 Opening ServerWindow window\");\n    \n    // Update ref first\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      ServerWindow: true\n    };\n    \n    // Set visibility directly\n    setWindowVisibility(prev => ({ ...prev, ServerWindow: true }));\n    \n    // Update z-index\n    setWindowZIndexes((prevIndexes) => {\n      const highestZIndex = Math.max(...Object.values(prevIndexes), 10000);\n      return { ...prevIndexes, ServerWindow: highestZIndex + 1 };\n    });\n    \n    setZIndexCounter(prev => prev + 1);\n  }, []);\n\n  const closeServerWindow = useCallback(() => {\n    console.log(\"🔴 Closing ServerWindow\");\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      ServerWindow: false\n    };\n    setWindowVisibility(prev => ({ ...prev, ServerWindow: false }));\n  }, []);\n\n  // Super simple implementation with no dependencies\n  const openModelWindow = useCallback((profileId: number = 1) => {\n    console.log(`🛰️ Opening 3D Model window for profile ID: ${profileId}`);\n    \n    // Update profile ID once\n    setThreeDModelProfileId(profileId);\n    \n    // Update visibility\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      ThreeDModelWindow: true\n    };\n    setWindowVisibility(prev => ({\n      ...prev,\n      ThreeDModelWindow: true\n    }));\n\n    // Update z-index\n    setWindowZIndexes(prev => {\n      const highestZIndex = Math.max(...Object.values(prev), 10000);\n      return { ...prev, ThreeDModelWindow: highestZIndex + 1 };\n    });\n\n    setZIndexCounter(prev => prev + 1);\n  }, []);\n\n  const closeModelWindow = useCallback(() => {\n    console.log(\"🔴 Closing ThreeDModelWindow...\");\n    \n    // Just update visibility\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      ThreeDModelWindow: false\n    };\n    setWindowVisibility(prev => ({ \n      ...prev, \n      ThreeDModelWindow: false \n    }));\n  }, []);\n\n  return (\n    <Router>\n      <RouteObserver />\n      \n      <Routes>\n        <Route path=\"/\" element={\n          <WelcomeWindow \n            openToTestList={openToTestList} \n            openServerWindow={openServerWindow}\n          />\n        } />\n        <Route path=\"/main\" element={\n          <MainScreen \n            openToTestList={openToTestList}\n            closeToTestList={closeToTestList}\n            openServerWindow={openServerWindow}\n            openModelWindow={openModelWindow}\n            closeModelWindow={closeModelWindow}\n            showToTestList={windowVisibility.ToTestList}\n            showThreeDModelWindow={windowVisibility.ThreeDModelWindow}\n            threeDModelProfileId={threeDModelProfileId}\n            windowZIndexes={windowZIndexes}\n            bringWindowToFront={bringWindowToFront}\n            zIndexCounter={zIndexCounter}\n          />\n        } />\n      </Routes>\n\n      {/* Floating windows - now using simple inline rendering for other windows */}\n      <div className=\"window-container\">\n        {windowVisibility.ToTestList && (\n          <ToTestList\n            key={`ToTestList-${Date.now()}`} // Force new instance on every render\n            zIndex={windowZIndexes.ToTestList}\n            onMouseDown={() => bringWindowToFront(\"ToTestList\")}\n            onClose={closeToTestList}\n            bringWindowToFront={bringWindowToFront}\n            windowZIndexes={windowZIndexes}\n            zIndexCounter={zIndexCounter}\n          />\n        )}\n\n        {windowVisibility.ServerWindow && (\n          <ServerWindow\n            key=\"ServerWindow\"\n            zIndex={windowZIndexes.ServerWindow}\n            onMouseDown={() => bringWindowToFront(\"ServerWindow\")}\n            onClose={closeServerWindow}\n            bringWindowToFront={bringWindowToFront}\n            windowZIndexes={windowZIndexes}\n            zIndexCounter={zIndexCounter}\n          />\n        )}\n\n        {windowVisibility.ThreeDModelWindow && (\n          <ThreeDModelWindow\n            key={`ThreeDModel-${threeDModelProfileId}`}\n            profileId={threeDModelProfileId}\n            zIndex={windowZIndexes.ThreeDModelWindow}\n            onMouseDown={() => bringWindowToFront(\"ThreeDModelWindow\")}\n            onClose={closeModelWindow}\n            showThreeDModelWindow={windowVisibility.ThreeDModelWindow}\n            windowZIndexes={windowZIndexes}\n            zIndexCounter={zIndexCounter}\n            bringWindowToFront={bringWindowToFront}\n          />\n        )}\n      </div>\n    </Router>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}