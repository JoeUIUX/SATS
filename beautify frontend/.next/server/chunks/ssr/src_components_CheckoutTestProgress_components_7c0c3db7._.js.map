{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/CheckoutTestProgress/components/OBC1TestPanel.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"button\": \"OBC1TestPanel-module___sU2RW__button\",\n  \"buttonIcon\": \"OBC1TestPanel-module___sU2RW__buttonIcon\",\n  \"card\": \"OBC1TestPanel-module___sU2RW__card\",\n  \"cardContent\": \"OBC1TestPanel-module___sU2RW__cardContent\",\n  \"cardHeader\": \"OBC1TestPanel-module___sU2RW__cardHeader\",\n  \"cardIcon\": \"OBC1TestPanel-module___sU2RW__cardIcon\",\n  \"cardTitle\": \"OBC1TestPanel-module___sU2RW__cardTitle\",\n  \"infoCard\": \"OBC1TestPanel-module___sU2RW__infoCard\",\n  \"infoContent\": \"OBC1TestPanel-module___sU2RW__infoContent\",\n  \"infoIcon\": \"OBC1TestPanel-module___sU2RW__infoIcon\",\n  \"infoLabel\": \"OBC1TestPanel-module___sU2RW__infoLabel\",\n  \"infoValue\": \"OBC1TestPanel-module___sU2RW__infoValue\",\n  \"parameterBox\": \"OBC1TestPanel-module___sU2RW__parameterBox\",\n  \"parameterIcon\": \"OBC1TestPanel-module___sU2RW__parameterIcon\",\n  \"parameterLabel\": \"OBC1TestPanel-module___sU2RW__parameterLabel\",\n  \"parameterValue\": \"OBC1TestPanel-module___sU2RW__parameterValue\",\n  \"progressBar\": \"OBC1TestPanel-module___sU2RW__progressBar\",\n  \"progressBarFill\": \"OBC1TestPanel-module___sU2RW__progressBarFill\",\n  \"progressContainer\": \"OBC1TestPanel-module___sU2RW__progressContainer\",\n  \"progressLabel\": \"OBC1TestPanel-module___sU2RW__progressLabel\",\n  \"progressStep\": \"OBC1TestPanel-module___sU2RW__progressStep\",\n  \"progressValue\": \"OBC1TestPanel-module___sU2RW__progressValue\",\n  \"reportButton\": \"OBC1TestPanel-module___sU2RW__reportButton\",\n  \"spin\": \"OBC1TestPanel-module___sU2RW__spin\",\n  \"spinnerIcon\": \"OBC1TestPanel-module___sU2RW__spinnerIcon\",\n  \"statusBadge\": \"OBC1TestPanel-module___sU2RW__statusBadge\",\n  \"table\": \"OBC1TestPanel-module___sU2RW__table\",\n  \"tableBody\": \"OBC1TestPanel-module___sU2RW__tableBody\",\n  \"tableHeader\": \"OBC1TestPanel-module___sU2RW__tableHeader\",\n  \"tableRowAlt\": \"OBC1TestPanel-module___sU2RW__tableRowAlt\",\n  \"tempCard\": \"OBC1TestPanel-module___sU2RW__tempCard\",\n  \"tempGrid\": \"OBC1TestPanel-module___sU2RW__tempGrid\",\n  \"tempLabel\": \"OBC1TestPanel-module___sU2RW__tempLabel\",\n  \"tempValue\": \"OBC1TestPanel-module___sU2RW__tempValue\",\n  \"testPanel\": \"OBC1TestPanel-module___sU2RW__testPanel\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/OBC1TestPanel.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/components/OBC1TestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css';\r\n\r\n// Import the OBC1-specific functions\r\nimport { runOBC1Checkout } from '@/services/checkout/obc1Checkout';\r\nimport { generateOBC1Report } from '@/services/reports/obc1Report';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface OBC1TestPanelProps {\r\n  options: string[];  // Now contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const OBC1TestPanel: React.FC<OBC1TestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // Determine if eMMC option is enabled - this is now based on the filtered options\r\n  const enableEmmc = options.includes('eMMC');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  // Track if we've run tests at least once\r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting OBC-1 Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for common parameters\r\n              if (param.includes(\"FW_Ver\")) {\r\n                const version = param.includes(\"Major\") ? \"1\" : \r\n                               param.includes(\"Minor\") ? \"2\" : \"3\";\r\n                return `${param}=${version}`;\r\n              } else if (param.includes(\"3V3\") || param.includes(\"5V\")) {\r\n                // Voltage values in mV\r\n                return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n              } else if (param.includes(\"temp\") || param.includes(\"Temp\")) {\r\n                // Temperature values\r\n                return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n              } else if (param.includes(\"eMMC\")) {\r\n                return `${param}=1`;\r\n              } else {\r\n                return `${param}=simulated`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the OBC-1 checkout test with progress updates\r\n      const results = await runOBC1Checkout(sock, enableEmmc, (step, percent) => {\r\n        setCurrentStep(step);\r\n        setProgress(percent);\r\n      });\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running OBC-1 checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateOBC1Report(results);\r\n      alert(`OBC-1 report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            OBC-1 Test Status\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              isForceSimulation ? styles.colorWaiting : styles.colorCompleted\r\n            }`}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path d=\"M11 17a1 1 0 001.447.894l4-2A1 1 0 0017 15V9.236a1 1 0 00-1.447-.894l-4 2a1 1 0 00-.553.894V17zM15.211 6.276a1 1 0 000-1.788l-4.764-2.382a1 1 0 00-.894 0L4.789 4.488a1 1 0 000 1.788l4.764 2.382a1 1 0 00.894 0l4.764-2.382zM4.447 8.342A1 1 0 003 9.236V15a1 1 0 00.553.894l4 2A1 1 0 009 17v-5.764a1 1 0 00-.553-.894l-4-2z\" />\r\n              </svg>\r\n              eMMC Testing\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              enableEmmc ? styles.colorCompleted : styles.colorWaiting\r\n            }`}>\r\n              {enableEmmc ? 'ENABLED' : 'DISABLED'}\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n              backgroundColor: isRunning ? '#9ca3af' :\r\n                hasRunTest ? '#4f46e5' : '#10b981',\r\n              color: 'white'\r\n            }}\r\n          >\r\n            {isRunning ? (\r\n              <>\r\n                <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                </svg>\r\n                Running Test...\r\n              </>\r\n            ) : hasRunTest ? (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Re-run Test\r\n              </>\r\n            ) : (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Run Test\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {results && (\r\n        <div className=\"space-y-4 mt-4\">\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #064e3b, #065f46)\" \r\n                  : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n                color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Firmware Information\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <div \r\n                className={styles.infoCard}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                  borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                }}\r\n              >\r\n                <div className={styles.infoIcon}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"#059669\" width=\"20\" height=\"20\">\r\n                    <path fillRule=\"evenodd\" d=\"M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zM4 4h3a3 3 0 006 0h3a2 2 0 012 2v9a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </div>\r\n                <div className={styles.infoContent}>\r\n                  <div \r\n                    className={styles.infoLabel}\r\n                    style={{ color: isDarkMode ? \"#9ca3af\" : \"#6b7280\" }}\r\n                  >\r\n                    OBC-1 Firmware Version\r\n                  </div>\r\n                  <div \r\n                    className={styles.infoValue}\r\n                    style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}\r\n                  >\r\n                    {results.firmware.major}.{results.firmware.minor}.{results.firmware.patch}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                  : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Voltage Measurements\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <table \r\n                className={styles.table}\r\n                style={{\r\n                  color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                }}\r\n              >\r\n                <thead \r\n                  className={styles.tableHeader}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.tableBody}>\r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>3V3 D</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.d3v3.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.d3v3.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.d3v3.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PS 3V3 OBC-2</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.ps3v3Obc2.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.ps3v3Obc2.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.ps3v3Obc2.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PS 5V OBC-2</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.ps5vObc2.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.ps5vObc2.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.ps5vObc2.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the eMMC section only if the eMMC option was checked */}\r\n          {enableEmmc && (\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                    : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n                  color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\r\n                  </svg>\r\n                  eMMC Test Results\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                {results.emmc.emmc0States[0] !== 'N.A.' ? (\r\n                  <table \r\n                    className={styles.table}\r\n                    style={{\r\n                      color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                    }}\r\n                  >\r\n                    <thead \r\n                      className={styles.tableHeader}\r\n                      style={{\r\n                        backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                        color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                      }}\r\n                      >\r\n                        <tr>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Test Stage</th>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0</th>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className={styles.tableBody}>\r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Initial</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[0]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[0]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0 On</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[1]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[1]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0 Off</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[2]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[2]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1 On</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[3]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[3]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1 Off</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[4]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[4]}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  ) : (\r\n                    <div \r\n                      style={{ \r\n                        padding: \"16px\", \r\n                        textAlign: \"center\", \r\n                        color: isDarkMode ? \"#d1d5db\" : \"#6b7280\",\r\n                        fontStyle: \"italic\"\r\n                      }}\r\n                    >\r\n                      eMMC test was not performed\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div>\r\n              <button \r\n                onClick={generateReport}\r\n                className={styles.reportButton}\r\n                style={{\r\n                  backgroundColor: \"#10b981\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Generate Report\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1507, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/OBC2TestPanel.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/components/OBC2TestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css'; // Reuse the same styles as OBC1TestPanel\r\n\r\n// Import the OBC2-specific functions\r\nimport { runOBC2Checkout } from '@/services/checkout/obc2Checkout';\r\nimport { generateOBC2Report } from '@/services/reports/obc2Report';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface OBC2TestPanelProps {\r\n  options: string[];  // Contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const OBC2TestPanel: React.FC<OBC2TestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // Determine if memory options are enabled\r\n  const enableSdCard = options.includes('SD Card');\r\n  const enableEeprom = options.includes('EEPROM');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  // Track if we've run tests at least once\r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting OBC-2 Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for common parameters\r\n              if (param.includes(\"FW_Ver\")) {\r\n                const version = param.includes(\"Major\") ? \"1\" : \r\n                               param.includes(\"Minor\") ? \"2\" : \"3\";\r\n                return `${param}=${version}`;\r\n              } else if (param.includes(\"3V3\") || param.includes(\"3v3\")) {\r\n                // Voltage values in mV\r\n                return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n              } else if (param.includes(\"temp\") || param.includes(\"Temp\")) {\r\n                // Temperature values\r\n                return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n              } else if (param.includes(\"Time\")) {\r\n                // Time values\r\n                return `${param}=${new Date().toISOString()}`;\r\n              } else if (param.includes(\"Uptime\")) {\r\n                // Uptime values\r\n                return `${param}=${3600 + Math.floor(Math.random() * 3600)}`;\r\n              } else if (param.includes(\"InterComm\")) {\r\n                // CAN communication counters\r\n                return `${param}=${10 + Math.floor(Math.random() * 20)}`;\r\n              } else if (param.includes(\"SD_\") || param.includes(\"EEPROM_\")) {\r\n                // Memory counters\r\n                return `${param}=${5 + Math.floor(Math.random() * 10)}`;\r\n              } else {\r\n                return `${param}=simulated`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the OBC-2 checkout test with progress updates\r\n      const results = await runOBC2Checkout(sock, \r\n        { sdCard: enableSdCard, eeprom: enableEeprom }, \r\n        (step, percent) => {\r\n          setCurrentStep(step);\r\n          setProgress(percent);\r\n        }\r\n      );\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running OBC-2 checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateOBC2Report(results);\r\n      alert(`OBC-2 report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            OBC-2 Test Status\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              isForceSimulation ? styles.colorWaiting : styles.colorCompleted\r\n            }`}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\",\r\n              marginTop: '10px'\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path d=\"M11 17a1 1 0 001.447.894l4-2A1 1 0 0017 15V9.236a1 1 0 00-1.447-.894l-4 2a1 1 0 00-.553.894V17zM15.211 6.276a1 1 0 000-1.788l-4.764-2.382a1 1 0 00-.894 0L4.789 4.488a1 1 0 000 1.788l4.764 2.382a1 1 0 00.894 0l4.764-2.382zM4.447 8.342A1 1 0 003 9.236V15a1 1 0 00.553.894l4 2A1 1 0 009 17v-5.764a1 1 0 00-.553-.894l-4-2z\" />\r\n              </svg>\r\n              Memory Testing\r\n            </div>\r\n            <span style={{ display: 'flex', gap: '8px' }}>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableSdCard ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                SD CARD: {enableSdCard ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableEeprom ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                EEPROM: {enableEeprom ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n                backgroundColor: isRunning ? '#9ca3af' :\r\n                  hasRunTest ? '#4f46e5' : '#10b981',\r\n                color: 'white',\r\n                marginTop: '20px'\r\n              }}\r\n            >\r\n              {isRunning ? (\r\n                <>\r\n                  <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                    <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                  </svg>\r\n                  Running Test...\r\n                </>\r\n              ) : hasRunTest ? (\r\n                <>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Re-run Test\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Run Test\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {results && (\r\n          <div className=\"space-y-4 mt-4\">\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #064e3b, #065f46)\" \r\n                    : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n                  color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Firmware Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div \r\n                  className={styles.infoCard}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                  }}\r\n                >\r\n                  <div className={styles.infoIcon}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"#059669\" width=\"20\" height=\"20\">\r\n                      <path fillRule=\"evenodd\" d=\"M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zM4 4h3a3 3 0 006 0h3a2 2 0 012 2v9a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className={styles.infoContent}>\r\n                    <div \r\n                      className={styles.infoLabel}\r\n                      style={{ color: isDarkMode ? \"#9ca3af\" : \"#6b7280\" }}\r\n                    >\r\n                      OBC-2 Firmware Version\r\n                    </div>\r\n                    <div \r\n                      className={styles.infoValue}\r\n                      style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}\r\n                    >\r\n                      {results.firmware.major}.{results.firmware.minor}.{results.firmware.patch}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                    : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                  color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n                }}\r\n                >\r\n                  <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Time Synchronization\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\n                    className={styles.tableHeader}\r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={styles.tableBody}>\r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Before Update</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.time.before} UTC</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>After Update</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.time.after} UTC</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Current Time</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.time.current} UTC</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Uptime Total</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.time.uptime.total} sec</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Uptime Session</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.time.uptime.session} sec</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                    : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n                  color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Voltage Measurements\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\nclassName={styles.tableHeader}\r\nstyle={{\r\n  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n  color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n}}\r\n>\r\n<tr>\r\n  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Status</th>\r\n</tr>\r\n</thead>\r\n<tbody className={styles.tableBody}>\r\n<tr>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>SD Card 3V3</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltage.sdCard.value} mV</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.voltage.sdCard.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n    }`}>\r\n      {results.voltage.sdCard.result}\r\n    </span>\r\n  </td>\r\n</tr>\r\n\r\n<tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Flash 3V3</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltage.flash.value} mV</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.voltage.flash.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n    }`}>\r\n      {results.voltage.flash.result}\r\n    </span>\r\n  </td>\r\n</tr>\r\n\r\n<tr>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>EEPROM 3V3</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltage.eeprom.value} mV</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.voltage.eeprom.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n    }`}>\r\n      {results.voltage.eeprom.result}\r\n    </span>\r\n  </td>\r\n</tr>\r\n\r\n<tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Payload 3V3</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltage.payload.value} mV</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.voltage.payload.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n    }`}>\r\n      {results.voltage.payload.result}\r\n    </span>\r\n  </td>\r\n</tr>\r\n\r\n<tr>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>UHF 3V3</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltage.uhf.value} mV</td>\r\n  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.voltage.uhf.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n    }`}>\r\n      {results.voltage.uhf.result}\r\n    </span>\r\n  </td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n\r\n{/* CAN Communication Test Results */}\r\n<div \r\nclassName={styles.card}\r\nstyle={{\r\nbackgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\nborderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n}}\r\n>\r\n<div \r\nclassName={styles.cardHeader} \r\nstyle={{ \r\nbackground: isDarkMode \r\n? \"linear-gradient(to right, #164e63, #0e7490)\" \r\n: \"linear-gradient(to right, #ecfeff, #cffafe)\",\r\ncolor: isDarkMode ? \"#cffafe\" : \"#0e7490\"\r\n}}\r\n>\r\n<h3 className={styles.cardTitle}>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n<path d=\"M13 7H7v6h6V7z\" />\r\n<path fillRule=\"evenodd\" d=\"M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z\" clipRule=\"evenodd\" />\r\n</svg>\r\nCAN Communication Test\r\n</h3>\r\n\r\n{/* Add simulation badge */}\r\n<SimulationBadge isSimulation={isForceSimulation} />\r\n</div>\r\n\r\n<div className={styles.cardContent}>\r\n<div style={{ display: 'flex', gap: '20px', marginBottom: '15px' }}>\r\n<div\r\nstyle={{\r\n  flex: 1,\r\n  padding: '10px',\r\n  backgroundColor: isDarkMode ? '#0c4a6e' : '#e0f2fe',\r\n  borderRadius: '8px',\r\n  textAlign: 'center'\r\n}}\r\n>\r\n<div style={{ fontWeight: 'bold', marginBottom: '8px' }}>Primary CAN</div>\r\n<span className={`${styles.statusBadge} ${\r\n  results.can.primary.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n}`} style={{ fontSize: '14px', padding: '5px 10px' }}>\r\n  {results.can.primary.result}\r\n</span>\r\n</div>\r\n\r\n<div\r\nstyle={{\r\n  flex: 1,\r\n  padding: '10px',\r\n  backgroundColor: isDarkMode ? '#0c4a6e' : '#e0f2fe',\r\n  borderRadius: '8px',\r\n  textAlign: 'center'\r\n}}\r\n>\r\n<div style={{ fontWeight: 'bold', marginBottom: '8px' }}>Secondary CAN</div>\r\n<span className={`${styles.statusBadge} ${\r\n  results.can.secondary.result === \"[PASS]\" ? styles.colorCompleted : styles.colorError\r\n}`} style={{ fontSize: '14px', padding: '5px 10px' }}>\r\n  {results.can.secondary.result}\r\n</span>\r\n</div>\r\n</div>\r\n\r\n<div style={{ fontSize: '13px', color: isDarkMode ? '#94a3b8' : '#64748b', marginTop: '10px' }}>\r\nCAN communication test verifies data transfer between OBC-1 and OBC-2 over both primary and secondary CAN buses. \r\nThe test measures successful transmission and acknowledgement of HKP, CFG, MET, ETC, and UHF packets.\r\n</div>\r\n</div>\r\n</div>\r\n\r\n{/* Memory Test Results (if enabled) */}\r\n{(enableSdCard || enableEeprom) && (\r\n<div \r\nclassName={styles.card}\r\nstyle={{\r\nbackgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\nborderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n}}\r\n>\r\n<div \r\nclassName={styles.cardHeader} \r\nstyle={{ \r\nbackground: isDarkMode \r\n  ? \"linear-gradient(to right, #713f12, #854d0e)\" \r\n  : \"linear-gradient(to right, #fffbeb, #fef3c7)\",\r\ncolor: isDarkMode ? \"#fef3c7\" : \"#854d0e\"\r\n}}\r\n>\r\n<h3 className={styles.cardTitle}>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n  <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\r\n</svg>\r\nMemory Test Results\r\n</h3>\r\n\r\n{/* Add simulation badge */}\r\n<SimulationBadge isSimulation={isForceSimulation} />\r\n</div>\r\n\r\n<div className={styles.cardContent}>\r\n{enableSdCard && (\r\n<div style={{ marginBottom: '20px' }}>\r\n  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>\r\n    <h4 style={{ margin: 0 }}>SD Card Test</h4>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.memory.sdCard.result === \"[PASS]\" ? styles.colorCompleted : \r\n      results.memory.sdCard.result === \"Not tested\" ? styles.colorWaiting : styles.colorError\r\n    }`}>\r\n      {results.memory.sdCard.result}\r\n    </span>\r\n  </div>\r\n  \r\n  {results.memory.sdCard.result !== \"Not tested\" && (\r\n    <table className={styles.table} style={{ marginTop: '10px' }}>\r\n      <thead className={styles.tableHeader}>\r\n        <tr>\r\n          <th>Counter</th>\r\n          <th>Before Test</th>\r\n          <th>After Test</th>\r\n          <th>Difference</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>Write Success</td>\r\n          <td>{results.memory.sdCard.before.writeSuccess}</td>\r\n          <td>{results.memory.sdCard.after.writeSuccess}</td>\r\n          <td>{isNaN(Number(results.memory.sdCard.after.writeSuccess) - Number(results.memory.sdCard.before.writeSuccess)) ? \r\n            \"0\" : (Number(results.memory.sdCard.after.writeSuccess) - Number(results.memory.sdCard.before.writeSuccess))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Read Success</td>\r\n          <td>{results.memory.sdCard.before.readSuccess}</td>\r\n          <td>{results.memory.sdCard.after.readSuccess}</td>\r\n          <td>{isNaN(Number(results.memory.sdCard.after.readSuccess) - Number(results.memory.sdCard.before.readSuccess)) ? \r\n            \"0\" : (Number(results.memory.sdCard.after.readSuccess) - Number(results.memory.sdCard.before.readSuccess))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Write Fail</td>\r\n          <td>{results.memory.sdCard.before.writeFail}</td>\r\n          <td>{results.memory.sdCard.after.writeFail}</td>\r\n          <td>{isNaN(Number(results.memory.sdCard.after.writeFail) - Number(results.memory.sdCard.before.writeFail)) ? \r\n            \"0\" : (Number(results.memory.sdCard.after.writeFail) - Number(results.memory.sdCard.before.writeFail))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Read Fail</td>\r\n          <td>{results.memory.sdCard.before.readFail}</td>\r\n          <td>{results.memory.sdCard.after.readFail}</td>\r\n          <td>{isNaN(Number(results.memory.sdCard.after.readFail) - Number(results.memory.sdCard.before.readFail)) ? \r\n            \"0\" : (Number(results.memory.sdCard.after.readFail) - Number(results.memory.sdCard.before.readFail))}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )}\r\n</div>\r\n)}\r\n\r\n{enableEeprom && (\r\n<div>\r\n  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>\r\n    <h4 style={{ margin: 0 }}>EEPROM Test</h4>\r\n    <span className={`${styles.statusBadge} ${\r\n      results.memory.eeprom.result === \"[PASS]\" ? styles.colorCompleted : \r\n      results.memory.eeprom.result === \"Not tested\" ? styles.colorWaiting : styles.colorError\r\n    }`}>\r\n      {results.memory.eeprom.result}\r\n    </span>\r\n  </div>\r\n  \r\n  {results.memory.eeprom.result !== \"Not tested\" && (\r\n    <table className={styles.table} style={{ marginTop: '10px' }}>\r\n      <thead className={styles.tableHeader}>\r\n        <tr>\r\n          <th>Counter</th>\r\n          <th>Before Test</th>\r\n          <th>After Test</th>\r\n          <th>Difference</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>Write Success</td>\r\n          <td>{results.memory.eeprom.before.writeSuccess}</td>\r\n          <td>{results.memory.eeprom.after.writeSuccess}</td>\r\n          <td>{isNaN(Number(results.memory.eeprom.after.writeSuccess) - Number(results.memory.eeprom.before.writeSuccess)) ? \r\n            \"0\" : (Number(results.memory.eeprom.after.writeSuccess) - Number(results.memory.eeprom.before.writeSuccess))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Read Success</td>\r\n          <td>{results.memory.eeprom.before.readSuccess}</td>\r\n          <td>{results.memory.eeprom.after.readSuccess}</td>\r\n          <td>{isNaN(Number(results.memory.eeprom.after.readSuccess) - Number(results.memory.eeprom.before.readSuccess)) ? \r\n            \"0\" : (Number(results.memory.eeprom.after.readSuccess) - Number(results.memory.eeprom.before.readSuccess))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Write Fail</td>\r\n          <td>{results.memory.eeprom.before.writeFail}</td>\r\n          <td>{results.memory.eeprom.after.writeFail}</td>\r\n          <td>{isNaN(Number(results.memory.eeprom.after.writeFail) - Number(results.memory.eeprom.before.writeFail)) ? \r\n            \"0\" : (Number(results.memory.eeprom.after.writeFail) - Number(results.memory.eeprom.before.writeFail))}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Read Fail</td>\r\n          <td>{results.memory.eeprom.before.readFail}</td>\r\n          <td>{results.memory.eeprom.after.readFail}</td>\r\n          <td>{isNaN(Number(results.memory.eeprom.after.readFail) - Number(results.memory.eeprom.before.readFail)) ? \r\n            \"0\" : (Number(results.memory.eeprom.after.readFail) - Number(results.memory.eeprom.before.readFail))}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  )}\r\n</div>\r\n)}\r\n</div>\r\n</div>\r\n)}\r\n\r\n<div>\r\n<button \r\nonClick={generateReport}\r\nclassName={styles.reportButton}\r\nstyle={{\r\nbackgroundColor: \"#10b981\",\r\ncolor: \"white\"\r\n}}\r\n>\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n<path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n</svg>\r\nGenerate Report\r\n</button>\r\n</div>\r\n</div>\r\n)}\r\n</div>\r\n);\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3799, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/SBandTestPanel.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/components/SBandTestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css'; // Reuse the same styles as OBC1TestPanel\r\n\r\n// Import the S-Band-specific functions\r\nimport { runSBandCheckout } from '@/services/checkout/sbandCheckout';\r\nimport { generateSBandReport } from '@/services/reports/sbandReport';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface SBandTestPanelProps {\r\n  options: string[];  // Contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const SBandTestPanel: React.FC<SBandTestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // Determine if TX/RX options are enabled\r\n  const enableTX = options.includes('Transmitter Test');\r\n  const enableRX = options.includes('Receiver Test');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  // Track if we've run tests at least once\r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting S-Band Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for common S-Band parameters\r\n              if (param.includes(\"FPGA_version\")) {\r\n                return `${param}=1.2.3`;\r\n              } else if (param.includes(\"FPGA_build\")) {\r\n                return `${param}=2022.04`;\r\n              } else if (param.includes(\"hardware_id_year\")) {\r\n                return `${param}=2022`;\r\n              } else if (param.includes(\"hardware_id_month\")) {\r\n                return `${param}=06`;\r\n              } else if (param.includes(\"hardware_id_order_n\")) {\r\n                return `${param}=42`;\r\n              } else if (param.includes(\"LCL_status\")) {\r\n                return `${param}=1`;\r\n              } else if (param.includes(\"RX_status\")) {\r\n                return `${param}=1`;\r\n              } else if (param.includes(\"RX_frequency_shift\")) {\r\n                return `${param}=${500 + Math.floor(Math.random() * 200)}`;\r\n              } else if (param.includes(\"TX_status\")) {\r\n                return `${param}=1`;\r\n              } else if (param.includes(\"SBand_coherent_mode\")) {\r\n                return `${param}=1`;\r\n              } else if (param.includes(\"SBand_ranging_mode\")) {\r\n                return `${param}=0`;\r\n              } else if (param.includes(\"adc_reg_00\") || param.includes(\"adc_reg_04\")) {\r\n                return `${param}=${25 + Math.floor(Math.random() * 10)}`;\r\n              } else {\r\n                return `${param}=${Math.floor(Math.random() * 100)}`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the S-Band checkout test with progress updates\r\n      const results = await runSBandCheckout(sock, \r\n        { testTX: enableTX, testRX: enableRX }, \r\n        (step, percent) => {\r\n          setCurrentStep(step);\r\n          setProgress(percent);\r\n        }\r\n      );\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running S-Band checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateSBandReport(results);\r\n      alert(`S-Band report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              <path d=\"M7.879 6.464a1 1 0 01-1.414 1.414 3 3 0 000 4.243 1 1 0 11-1.414 1.414 5 5 0 010-7.07 1 1 0 011.414 0zm4.242 0a1 1 0 011.414 0 5 5 0 010 7.072 1 1 0 01-1.414-1.414 3 3 0 000-4.244 1 1 0 010-1.414z\" />\r\n            </svg>\r\n            S-Band Test Status\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              isForceSimulation ? styles.colorWaiting : styles.colorCompleted\r\n            }`}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\",\r\n              marginTop: '10px'\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              S-Band Testing\r\n            </div>\r\n            <span style={{ display: 'flex', gap: '8px' }}>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableTX ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                TX: {enableTX ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableRX ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                RX: {enableRX ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n                backgroundColor: isRunning ? '#9ca3af' :\r\n                  hasRunTest ? '#4f46e5' : '#10b981',\r\n                color: 'white',\r\n                marginTop: '20px'\r\n              }}\r\n            >\r\n              {isRunning ? (\r\n                <>\r\n                  <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                    <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                  </svg>\r\n                  Running Test...\r\n                </>\r\n              ) : hasRunTest ? (\r\n                <>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Re-run Test\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Run Test\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {results && (\r\n          <div className=\"space-y-4 mt-4\">\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #064e3b, #065f46)\" \r\n                    : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n                  color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  FPGA Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div \r\n                  className={styles.infoCard}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                  }}\r\n                >\r\n                  <div className={styles.infoIcon}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"#059669\" width=\"20\" height=\"20\">\r\n                      <path d=\"M13 7H7v6h6V7z\" />\r\n                      <path fillRule=\"evenodd\" d=\"M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className={styles.infoContent}>\r\n                    <div \r\n                      className={styles.infoLabel}\r\n                      style={{ color: isDarkMode ? \"#9ca3af\" : \"#6b7280\" }}\r\n                    >\r\n                      S-Band FPGA Version\r\n                    </div>\r\n                    <div \r\n                      className={styles.infoValue}\r\n                      style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}\r\n                    >\r\n                      {results.fpga.version}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n                  <div \r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\",\r\n                      borderWidth: \"1px\",\r\n                      borderRadius: \"6px\",\r\n                      padding: \"12px\"\r\n                    }}\r\n                  >\r\n                    <div style={{ \r\n                      fontSize: \"12px\", \r\n                      color: isDarkMode ? \"#9ca3af\" : \"#6b7280\",\r\n                      marginBottom: \"4px\"\r\n                    }}>\r\n                      FPGA Build\r\n                    </div>\r\n                    <div style={{ \r\n                      fontWeight: \"bold\",\r\n                      color: isDarkMode ? \"#f3f4f6\" : \"#111827\" \r\n                    }}>\r\n                      {results.fpga.build}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div \r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\",\r\n                      borderWidth: \"1px\",\r\n                      borderRadius: \"6px\",\r\n                      padding: \"12px\"\r\n                    }}\r\n                  >\r\n                    <div style={{ \r\n                      fontSize: \"12px\", \r\n                      color: isDarkMode ? \"#9ca3af\" : \"#6b7280\",\r\n                      marginBottom: \"4px\"\r\n                    }}>\r\n                      FPGA Type\r\n                    </div>\r\n                    <div style={{ \r\n                      fontWeight: \"bold\",\r\n                      color: isDarkMode ? \"#f3f4f6\" : \"#111827\" \r\n                    }}>\r\n                      {results.fpga.type}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                    : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                  color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n                }}\r\n                >\r\n                  <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M7 2a1 1 0 00-.707 1.707L7 4.414v3.758a1 1 0 01-.293.707l-4 4C.817 14.769 2.156 18 4.828 18h10.343c2.673 0 4.012-3.231 2.122-5.121l-4-4A1 1 0 0113 8.172V4.414l.707-.707A1 1 0 0013 2H7zm2 6.172V4h2v4.172a3 3 0 00.879 2.12l1.168 1.168a4 4 0 00-2.278.592l-.172.086a3.976 3.976 0 01-1.878.409c-.863 0-1.39-.47-1.732-.917l-.254-.387a.75.75 0 00-1.147.06 2.99 2.99 0 01-.537.467c-.18.129-.384.276-.605.434l-.584.392-1.17-1.57a3 3 0 00-.88-2.12L9 8.172z\" />\r\n                  </svg>\r\n                  Hardware Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\n                    className={styles.tableHeader}\r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={styles.tableBody}>\r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Board Year</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.hardware.idYear}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Board Month</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.hardware.idMonth}</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Order Number</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.hardware.orderNumber}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>LCL Status</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.status.lclStatus}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                    : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n                  color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Receiver Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div style={{ marginBottom: '12px' }}>\r\n                  <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <span style={{ fontWeight: 'bold' }}>Receiver Status</span>\r\n                    <span className={`${styles.statusBadge} ${\r\n                      results.receiver.status === '1' ? styles.colorCompleted : styles.colorError\r\n                    }`}>\r\n                      {results.receiver.status === '1' ? 'ACTIVE' : 'INACTIVE'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\n                    className={styles.tableHeader}\r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={styles.tableBody}>\r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Sensitivity</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.sensitivity}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Frequency Shift</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.frequencyShift} Hz</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>IQ Power</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.iqPower}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>AGC Value</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.agcValue}</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Eb</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.demodEb}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>N0</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.demodN0}</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Data Rate</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.dataRate}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #713f12, #854d0e)\" \r\n                    : \"linear-gradient(to right, #fffbeb, #fef3c7)\",\r\n                  color: isDarkMode ? \"#fef3c7\" : \"#854d0e\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Transmitter Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div style={{ marginBottom: '12px' }}>\r\n                  <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <span style={{ fontWeight: 'bold' }}>Transmitter Status</span>\r\n                    <span className={`${styles.statusBadge} ${\r\n                      results.transmitter.status === '1' ? styles.colorCompleted : styles.colorError\r\n                    }`}>\r\n                      {results.transmitter.status === '1' ? 'ACTIVE' : 'INACTIVE'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\n                    className={styles.tableHeader}\r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={styles.tableBody}>\r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Encoder Configuration</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.convDiff}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Filter Configuration</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.convFilter}</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Waveform</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.waveform}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PCM Index</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.pcmIndex}</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>AGC Value</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.agcValue}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #164e63, #0e7490)\" \r\n                    : \"linear-gradient(to right, #ecfeff, #cffafe)\",\r\n                  color: isDarkMode ? \"#cffafe\" : \"#0e7490\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M17.778 8.222c-4.296-4.296-11.26-4.296-15.556 0A1 1 0 01.808 6.808c5.076-5.077 13.308-5.077 18.384 0a1 1 0 01-1.414 1.414zM14.95 11.05a7 7 0 00-9.9 0 1 1 0 01-1.414-1.414 9 9 0 0112.728 0 1 1 0 01-1.414 1.414zM12.12 13.88a3 3 0 00-4.242 0 1 1 0 01-1.415-1.415 5 5 0 017.072 0 1 1 0 01-1.415 1.415zM9 16a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Mode Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div style={{\r\n                    borderRadius: '8px',\r\n                    padding: '16px',\r\n                    backgroundColor: results.modes.coherentMode === '1' ? \r\n                      (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : '#d1fae5') : \r\n                      (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : '#fee2e2'),\r\n                    textAlign: 'center'\r\n                  }}>\r\n                    <div style={{ fontSize: '14px', marginBottom: '8px' }}>Coherent Mode</div>\r\n                    <div style={{ \r\n                      fontWeight: 'bold',\r\n                      fontSize: '18px',\r\n                      color: results.modes.coherentMode === '1' ? \r\n                        (isDarkMode ? '#34d399' : '#059669') : \r\n                        (isDarkMode ? '#f87171' : '#dc2626')\r\n                    }}>\r\n                      {results.modes.coherentMode === '1' ? 'ENABLED' : 'DISABLED'}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div style={{\r\n                    borderRadius: '8px',\r\n                    padding: '16px',\r\n                    backgroundColor: results.modes.rangingMode === '1' ? \r\n                      (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : '#d1fae5') : \r\n                      (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : '#fee2e2'),\r\n                    textAlign: 'center'\r\n                  }}>\r\n                    <div style={{ fontSize: '14px', marginBottom: '8px' }}>Ranging Mode</div>\r\n                    <div style={{ \r\n                      fontWeight: 'bold',\r\n                      fontSize: '18px',\r\n                      color: results.modes.rangingMode === '1' ? \r\n                        (isDarkMode ? '#34d399' : '#059669') : \r\n                        (isDarkMode ? '#f87171' : '#dc2626')\r\n                    }}>\r\n                      {results.modes.rangingMode === '1' ? 'ENABLED' : 'DISABLED'}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #7e22ce, #a855f7)\" \r\n                    : \"linear-gradient(to right, #f3e8ff, #e9d5ff)\",\r\n                  color: isDarkMode ? \"#e9d5ff\" : \"#7e22ce\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M10 2a8 8 0 100 16 8 8 0 000-16zm0 2a6 6 0 100 12.071A6.001 6.001 0 0010 4z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Temperature Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div className={styles.tempGrid}>\r\n                  <div className={styles.tempCard}>\r\n                    <div className={styles.tempLabel}>ADC Input 0</div>\r\n                    <div className={styles.tempValue}>{results.temperature.adc0} °C</div>\r\n                  </div>\r\n                  \r\n                  <div className={styles.tempCard}>\r\n                    <div className={styles.tempLabel}>ADC Input 1</div>\r\n                    <div className={styles.tempValue}>{results.temperature.adc1} °C</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Special TX test section if TX test was enabled */}\r\n            {enableTX && results.txTest && (\r\n              <div \r\n                className={styles.card}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                  borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                }}\r\n              >\r\n                <div \r\n                  className={styles.cardHeader} \r\n                  style={{ \r\n                    background: isDarkMode \r\n                      ? \"linear-gradient(to right, #b45309, #d97706)\" \r\n                      : \"linear-gradient(to right, #fef3c7, #fde68a)\",\r\n                    color: isDarkMode ? \"#fef3c7\" : \"#b45309\"\r\n                  }}\r\n                >\r\n                  <h3 className={styles.cardTitle}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                      <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    TX Test Results\r\n                  </h3>\r\n                  \r\n                  {/* Add simulation badge */}\r\n                  <SimulationBadge isSimulation={isForceSimulation} />\r\n                </div>\r\n                \r\n                <div className={styles.cardContent}>\r\n                  <div \r\n                    style={{\r\n                      padding: '16px',\r\n                      borderRadius: '8px',\r\n                      backgroundColor: results.txTest.status === 'Success' ? \r\n                        (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : '#d1fae5') : \r\n                        (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : '#fee2e2'),\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      alignItems: 'center',\r\n                      gap: '12px'\r\n                    }}\r\n                  >\r\n                    <div style={{ \r\n                      fontSize: '24px', \r\n                      fontWeight: 'bold',\r\n                      color: results.txTest.status === 'Success' ? \r\n                        (isDarkMode ? '#34d399' : '#059669') : \r\n                        (isDarkMode ? '#f87171' : '#dc2626')\r\n                    }}>\r\n                      {results.txTest.status === 'Success' ? 'PASS' : 'FAIL'}\r\n                    </div>\r\n                    \r\n                    <div style={{ color: isDarkMode ? '#d1d5db' : '#6b7280' }}>\r\n                      TX Test {results.txTest.completed ? 'Completed' : 'Incomplete'}\r\n                    </div>\r\n                    \r\n                    {results.txTest.error && (\r\n                      <div style={{ \r\n                        color: isDarkMode ? '#f87171' : '#dc2626',\r\n                        marginTop: '8px',\r\n                        fontStyle: 'italic'\r\n                      }}>\r\n                        Error: {results.txTest.error}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Special RX test section if RX test was enabled */}\r\n            {enableRX && results.rxTest && (\r\n              <div \r\n                className={styles.card}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                  borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                }}\r\n              >\r\n                <div \r\n                  className={styles.cardHeader} \r\n                  style={{ \r\n                    background: isDarkMode \r\n                      ? \"linear-gradient(to right, #1e40af, #3b82f6)\" \r\n                      : \"linear-gradient(to right, #dbeafe, #bfdbfe)\",\r\n                    color: isDarkMode ? \"#dbeafe\" : \"#1e40af\"\r\n                  }}\r\n                >\r\n                  <h3 className={styles.cardTitle}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                      <path d=\"M14.414 7l3.293-3.293a1 1 0 00-1.414-1.414L13 5.586V4a1 1 0 10-2 0v4.003a.996.996 0 00.617.921A.997.997 0 0012 9h4a1 1 0 100-2h-1.586z\" />\r\n                      <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\r\n                    </svg>\r\n                    RX Test Results\r\n                  </h3>\r\n                  \r\n                  {/* Add simulation badge */}\r\n                  <SimulationBadge isSimulation={isForceSimulation} />\r\n                </div>\r\n                \r\n                <div className={styles.cardContent}>\r\n                  <div \r\n                    style={{\r\n                      padding: '16px',\r\n                      borderRadius: '8px',\r\n                      backgroundColor: results.rxTest.status === 'Success' ? \r\n                        (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : '#d1fae5') : \r\n                        (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : '#fee2e2'),\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      alignItems: 'center',\r\n                      gap: '12px'\r\n                    }}\r\n                  >\r\n                    <div style={{ \r\n                      fontSize: '24px', \r\n                      fontWeight: 'bold',\r\n                      color: results.rxTest.status === 'Success' ? \r\n                        (isDarkMode ? '#34d399' : '#059669') : \r\n                        (isDarkMode ? '#f87171' : '#dc2626')\r\n                    }}>\r\n                      {results.rxTest.status === 'Success' ? 'PASS' : 'FAIL'}\r\n                    </div>\r\n                    \r\n                    <div style={{ color: isDarkMode ? '#d1d5db' : '#6b7280' }}>\r\n                      RX Test {results.rxTest.completed ? 'Completed' : 'Incomplete'}\r\n                    </div>\r\n                    \r\n                    {results.rxTest.error && (\r\n                      <div style={{ \r\n                        color: isDarkMode ? '#f87171' : '#dc2626',\r\n                        marginTop: '8px',\r\n                        fontStyle: 'italic'\r\n                      }}>\r\n                        Error: {results.rxTest.error}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div>\r\n              <button \r\n                onClick={generateReport}\r\n                className={styles.reportButton}\r\n                style={{\r\n                  backgroundColor: \"#10b981\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Generate Report\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6263, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/UHFTestPanel.tsx"],"sourcesContent":["// File: src/components/CheckoutTestProgress/components/UHFTestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css'; // Reuse the same styles as OBC1TestPanel\r\n\r\n// Import the UHF-specific functions\r\nimport { runUHFCheckout } from '@/services/checkout/uhfCheckout';\r\nimport { generateUHFReport } from '@/services/reports/uhfReport';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface UHFTestPanelProps {\r\n  options: string[];  // Contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const UHFTestPanel: React.FC<UHFTestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // Determine if transmitter/receiver options are enabled\r\n  const enableTransmitter = options.includes('Transmitter Test');\r\n  const enableReceiver = options.includes('Receiver Test');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  // Track if we've run tests at least once\r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting UHF Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common UHF parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for different UHF parameters\r\n              if (param.startsWith(\"OBC2_Uhf_\")) {\r\n                if (param.includes(\"Temperature\")) {\r\n                  return `${param}=${20 + Math.floor(Math.random() * 15)}`; // Temperature between 20-35\r\n                } else if (param.includes(\"Count\")) {\r\n                  return `${param}=${Math.floor(Math.random() * 1000)}`; // Count between 0-999\r\n                } else if (param.includes(\"Bytes\")) {\r\n                  return `${param}=${Math.floor(Math.random() * 10000)}`; // Bytes between 0-9999\r\n                } else if (param.includes(\"Rssi\")) {\r\n                  return `${param}=${-70 - Math.floor(Math.random() * 30)}`; // RSSI between -70 and -100\r\n                } else {\r\n                  return `${param}=${Math.floor(Math.random() * 100)}`; // Generic value 0-99\r\n                }\r\n              } else if (param.startsWith(\"UHF_\")) {\r\n                if (param.includes(\"freq\")) {\r\n                  return `${param}=437500000`; // UHF frequency 437.5 MHz\r\n                } else if (param.includes(\"baud\")) {\r\n                  return `${param}=9600`; // 9600 bps\r\n                } else if (param.includes(\"temp\")) {\r\n                  return `${param}=40`; // Max temp 40 degrees\r\n                } else if (param.includes(\"time\")) {\r\n                  return `${param}=60`; // Time values 60 seconds\r\n                } else {\r\n                  return `${param}=${Math.floor(Math.random() * 10)}`; // Generic setting 0-9\r\n                }\r\n              } else {\r\n                return `${param}=simulated`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the UHF checkout test with progress updates\r\n      const results = await runUHFCheckout(sock, \r\n        { testTransmitter: enableTransmitter, testReceiver: enableReceiver }, \r\n        (step, percent) => {\r\n          setCurrentStep(step);\r\n          setProgress(percent);\r\n        }\r\n      );\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running UHF checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateUHFReport(results);\r\n      alert(`UHF report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              <path d=\"M7.879 6.464a1 1 0 01-1.414 1.414 3 3 0 000 4.243 1 1 0 11-1.414 1.414 5 5 0 010-7.07 1 1 0 011.414 0zm4.242 0a1 1 0 011.414 0 5 5 0 010 7.072 1 1 0 01-1.414-1.414 3 3 0 000-4.244 1 1 0 010-1.414z\" />\r\n            </svg>\r\n            UHF Test Status\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              isForceSimulation ? styles.colorWaiting : styles.colorCompleted\r\n            }`}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\",\r\n              marginTop: '10px'\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              UHF Testing\r\n            </div>\r\n            <span style={{ display: 'flex', gap: '8px' }}>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableTransmitter ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                TX: {enableTransmitter ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableReceiver ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                RX: {enableReceiver ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n              backgroundColor: isRunning ? '#9ca3af' :\r\n                hasRunTest ? '#4f46e5' : '#10b981',\r\n              color: 'white',\r\n              marginTop: '20px'\r\n            }}\r\n          >\r\n            {isRunning ? (\r\n              <>\r\n                <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                </svg>\r\n                Running Test...\r\n              </>\r\n            ) : hasRunTest ? (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Re-run Test\r\n              </>\r\n            ) : (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Run Test\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {results && (\r\n        <div className=\"space-y-4 mt-4\">\r\n          {/* UHF Telemetry Card */}\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                  : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path d=\"M13 7H7v6h6V7z\" />\r\n                  <path fillRule=\"evenodd\" d=\"M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                UHF Telemetry\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <table \r\n                className={styles.table}\r\n                style={{\r\n                  color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                }}\r\n              >\r\n                <thead \r\n                  className={styles.tableHeader}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.tableBody}>\r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Board Temperature</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.boardTemperature} °C</td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PA Temperature</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.paTemperature} °C</td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Last RSSI</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.lastRssi}</td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Last RF Error</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.lastRferr}</td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>TX Count (Current)</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.txCount} packets</td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>RX Count (Current)</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.rxCount} packets</td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>TX Bytes (Current)</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.txBytes} bytes</td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>RX Bytes (Current)</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.rxBytes} bytes</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Active Configuration</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.activeConf}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Boot Count</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.bootCount}</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Background RSSI</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.bgndRssi}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>TX Duty</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.txDuty}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* UHF System Configuration Card */}\r\n        <div \r\n          className={styles.card}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <div \r\n            className={styles.cardHeader} \r\n            style={{ \r\n              background: isDarkMode \r\n                ? \"linear-gradient(to right, #065f46, #059669)\" \r\n                : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n              color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n            }}\r\n          >\r\n            <h3 className={styles.cardTitle}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              UHF System Configuration\r\n            </h3>\r\n            \r\n            {/* Add simulation badge */}\r\n            <SimulationBadge isSimulation={isForceSimulation} />\r\n          </div>\r\n          \r\n          <div className={styles.cardContent}>\r\n            <table \r\n              className={styles.table}\r\n              style={{\r\n                color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n              }}\r\n            >\r\n              <thead \r\n                className={styles.tableHeader}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                  color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className={styles.tableBody}>\r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>RSSI Offset</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.rssiOffset}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Maximum Temperature</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.maxTemp} °C</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>I2C Enabled</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.i2cEn}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>CAN Enabled</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.canEn}</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>TX Power Level</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.txPwr}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Max TX Time</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.maxTxTime} seconds</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Max Idle Time</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.maxIdleTime} seconds</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* UHF Receiver Configuration Card */}\r\n        <div \r\n          className={styles.card}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <div \r\n            className={styles.cardHeader} \r\n            style={{ \r\n              background: isDarkMode \r\n                ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n              color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n            }}\r\n          >\r\n            <h3 className={styles.cardTitle}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                <path d=\"M14.414 7l3.293-3.293a1 1 0 00-1.414-1.414L13 5.586V4a1 1 0 10-2 0v4.003a.996.996 0 00.617.921A.997.997 0 0012 9h4a1 1 0 100-2h-1.586z\" />\r\n                <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\r\n              </svg>\r\n              UHF Receiver Configuration\r\n            </h3>\r\n            \r\n            {/* Add simulation badge */}\r\n            <SimulationBadge isSimulation={isForceSimulation} />\r\n          </div>\r\n          \r\n          <div className={styles.cardContent}>\r\n            <table \r\n              className={styles.table}\r\n              style={{\r\n                color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n              }}\r\n            >\r\n              <thead \r\n                className={styles.tableHeader}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                  color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className={styles.tableBody}>\r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Frequency</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.frequency} Hz</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Baudrate</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.baudrate} bps</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Modulation Index</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.modindex}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>RX Guard</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.guard} ms</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Framing Mode</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.mode}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Bandwidth</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.bandwidth} Hz</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>AFC Range</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.afcrange} Hz</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* UHF Transmitter Configuration Card */}\r\n        <div \r\n          className={styles.card}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <div \r\n            className={styles.cardHeader} \r\n            style={{ \r\n              background: isDarkMode \r\n                ? \"linear-gradient(to right, #7e22ce, #a855f7)\" \r\n                : \"linear-gradient(to right, #f3e8ff, #e9d5ff)\",\r\n              color: isDarkMode ? \"#e9d5ff\" : \"#7e22ce\"\r\n            }}\r\n          >\r\n            <h3 className={styles.cardTitle}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              UHF Transmitter Configuration\r\n            </h3>\r\n            \r\n            {/* Add simulation badge */}\r\n            <SimulationBadge isSimulation={isForceSimulation} />\r\n          </div>\r\n          \r\n          <div className={styles.cardContent}>\r\n            <table \r\n              className={styles.table}\r\n              style={{\r\n                color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n              }}\r\n            >\r\n              <thead \r\n                className={styles.tableHeader}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                  color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className={styles.tableBody}>\r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Frequency</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.frequency} Hz</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Baudrate</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.baudrate} bps</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Modulation Index</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.modindex}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>TX Guard</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.guard} ms</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Framing Mode</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.mode}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Preamble Length</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.preamblen} bytes</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Preamble Flags</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.preambflags}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PA Level</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.paLevel}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Generate Report Button */}\r\n        <div>\r\n          <button \r\n            onClick={generateReport}\r\n            className={styles.reportButton}\r\n            style={{\r\n              backgroundColor: \"#10b981\",\r\n              color: \"white\"\r\n            }}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            Generate Report\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8599, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/HEPSTestPanel.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/components/HEPSTestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css'; // Reuse the same styles as OBC1TestPanel\r\n\r\n// Import the HEPS-specific functions\r\nimport { runHEPSCheckout } from '@/services/checkout/hepsCheckout';\r\nimport { generateHEPSReport } from '@/services/reports/hepsReport';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface HEPSTestPanelProps {\r\n  options: string[];  // Contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const HEPSTestPanel: React.FC<HEPSTestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // Determine if heater test options are enabled\r\n  const enableHeaterTest = options.includes('Heater Test');\r\n  const enableCurrentTest = options.includes('Current Measurement');\r\n  const enablePowerCycle = options.includes('Power Cycle Test');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  // Track if we've run tests at least once\r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting HEPS Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common HEPS parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for different HEPS parameters\r\n              if (param.includes(\"HEPS_Heater\")) {\r\n                if (param.includes(\"Status\")) {\r\n                  return `${param}=${Math.round(Math.random())}`;  // 0 or 1\r\n                } else if (param.includes(\"Temperature\")) {\r\n                  return `${param}=${20 + Math.floor(Math.random() * 30)}`;  // 20-50°C\r\n                } else if (param.includes(\"Current\")) {\r\n                  return `${param}=${500 + Math.floor(Math.random() * 500)}`;  // 500-1000mA\r\n                } else if (param.includes(\"Voltage\")) {\r\n                  return `${param}=${28 + Math.random() * 2}`;  // 28-30V\r\n                } else if (param.includes(\"Power\")) {\r\n                  return `${param}=${15 + Math.floor(Math.random() * 10)}`;  // 15-25W\r\n                } else if (param.includes(\"Count\")) {\r\n                  return `${param}=${Math.floor(Math.random() * 100)}`;  // 0-99\r\n                } else if (param.includes(\"Test\")) {\r\n                  if (param.includes(\"Done\")) {\r\n                    return `${param}=1`;  // Test completed\r\n                  } else if (param.includes(\"Result\")) {\r\n                    return `${param}=PASS`;  // Test result\r\n                  } else {\r\n                    return `${param}=1`;  // Other test flags\r\n                  }\r\n                } else {\r\n                  return `${param}=${Math.floor(Math.random() * 100)}`;  // Generic value\r\n                }\r\n              } else if (param.includes(\"HEPS_Power\")) {\r\n                if (param.includes(\"Status\")) {\r\n                  return `${param}=1`;  // Power on\r\n                } else {\r\n                  return `${param}=${Math.floor(Math.random() * 100)}`;  // Generic value\r\n                }\r\n              } else {\r\n                return `${param}=simulated`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the HEPS checkout test with progress updates\r\n      const results = await runHEPSCheckout(sock, \r\n        { \r\n          testHeaters: enableHeaterTest, \r\n          testCurrent: enableCurrentTest, \r\n          testPowerCycle: enablePowerCycle \r\n        }, \r\n        (step, percent) => {\r\n          setCurrentStep(step);\r\n          setProgress(percent);\r\n        }\r\n      );\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running HEPS checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateHEPSReport(results);\r\n      alert(`HEPS report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  // Helper function to render the temperature trend chart\r\n  const renderTemperatureTrend = (heaterData: any, index: number) => {\r\n    if (!heaterData || !heaterData.tempReadings || heaterData.tempReadings.length === 0) {\r\n      return (\r\n        <div style={{ \r\n          padding: '16px', \r\n          textAlign: 'center', \r\n          color: isDarkMode ? '#d1d5db' : '#6b7280',\r\n          fontStyle: 'italic'\r\n        }}>\r\n          No temperature data available\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Generate array for the temperature points\r\n    const tempPoints = heaterData.tempReadings.map((temp: number, idx: number) => ({\r\n      time: idx * heaterData.readingInterval,\r\n      temp: temp\r\n    }));\r\n\r\n    return (\r\n      <div style={{ height: '200px', marginBottom: '20px' }}>\r\n        <div style={{ \r\n          display: 'flex', \r\n          justifyContent: 'space-between',\r\n          marginBottom: '8px',\r\n          fontSize: '13px',\r\n          color: isDarkMode ? '#d1d5db' : '#6b7280'\r\n        }}>\r\n          <span>Initial: {heaterData.initialTemp}°C</span>\r\n          <span>Max: {Math.max(...heaterData.tempReadings).toFixed(1)}°C</span>\r\n          <span>Final: {heaterData.tempReadings[heaterData.tempReadings.length - 1]}°C</span>\r\n        </div>\r\n        <div style={{ \r\n          position: 'relative',\r\n          height: '160px',\r\n          backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n          border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n          borderRadius: '6px',\r\n          padding: '8px',\r\n          overflow: 'hidden'\r\n        }}>\r\n          <div style={{ \r\n            position: 'absolute',\r\n            bottom: '8px',\r\n            left: '8px',\r\n            right: '8px',\r\n            height: '130px'\r\n          }}>\r\n            {/* SVG line chart for temperature */}\r\n            <svg width=\"100%\" height=\"100%\" viewBox={`0 0 ${tempPoints.length} 100`} preserveAspectRatio=\"none\">\r\n              <polyline\r\n                points={tempPoints.map((point: any, i: number) => \r\n                  `${i * (100 / (tempPoints.length - 1))},${100 - ((point.temp - Math.min(...heaterData.tempReadings)) / \r\n                  (Math.max(...heaterData.tempReadings) - Math.min(...heaterData.tempReadings)) * 100)}`\r\n                ).join(' ')}\r\n                stroke={isDarkMode ? '#3b82f6' : '#2563eb'}\r\n                strokeWidth=\"2\"\r\n                fill=\"none\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          {/* Simple X-axis label */}\r\n          <div style={{ \r\n            position: 'absolute', \r\n            bottom: '0', \r\n            right: '8px',\r\n            fontSize: '10px',\r\n            color: isDarkMode ? '#9ca3af' : '#6b7280'\r\n          }}>\r\n            {heaterData.testDuration}s\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Helper to render thermal rise data\r\n  const renderThermalRiseData = (heaterData: any) => {\r\n    if (!heaterData || !heaterData.thermalRise) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div style={{ marginBottom: '16px' }}>\r\n        <div style={{ \r\n          padding: '12px',\r\n          backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n          borderRadius: '6px',\r\n          border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n          marginBottom: '8px'\r\n        }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>\r\n            <span style={{ fontWeight: 'bold' }}>Temperature Rise:</span>\r\n            <span>{heaterData.thermalRise.totalRise.toFixed(1)}°C</span>\r\n          </div>\r\n          \r\n          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>\r\n            <span>Rise Rate:</span>\r\n            <span>{heaterData.thermalRise.riseRate.toFixed(2)}°C/min</span>\r\n          </div>\r\n          \r\n          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>\r\n            <span>Time to 5°C Rise:</span>\r\n            <span>{heaterData.thermalRise.timeTo5C.toFixed(1)}s</span>\r\n          </div>\r\n          \r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <span>Time to 10°C Rise:</span>\r\n            <span>{heaterData.thermalRise.timeTo10C ? heaterData.thermalRise.timeTo10C.toFixed(1) + 's' : 'N/A'}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Helper to render power consumption data\r\n  const renderPowerConsumption = (heaterData: any) => {\r\n    if (!heaterData || !heaterData.power) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div style={{ marginBottom: '16px' }}>\r\n        <div style={{ \r\n          padding: '12px',\r\n          backgroundColor: isDarkMode ? 'rgba(5, 150, 105, 0.1)' : '#d1fae5',\r\n          borderRadius: '6px',\r\n          border: `1px solid ${isDarkMode ? 'rgba(16, 185, 129, 0.3)' : '#a7f3d0'}`,\r\n          marginBottom: '8px'\r\n        }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>\r\n            <span style={{ fontWeight: 'bold' }}>Average Current:</span>\r\n            <span>{heaterData.power.avgCurrent.toFixed(1)} mA</span>\r\n          </div>\r\n          \r\n          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>\r\n            <span>Max Current:</span>\r\n            <span>{heaterData.power.maxCurrent.toFixed(1)} mA</span>\r\n          </div>\r\n          \r\n          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>\r\n            <span>Average Power:</span>\r\n            <span>{heaterData.power.avgPower.toFixed(2)} W</span>\r\n          </div>\r\n          \r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <span>Total Energy:</span>\r\n            <span>{heaterData.power.totalEnergy.toFixed(2)} Wh</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M12 1.586l-4 4v12.828l4-4V1.586zM3.707 3.293A1 1 0 002 4v10a1 1 0 00.293.707L6 18.414V5.586L3.707 3.293zM17.707 5.293L14 1.586v12.828l2.293 2.293A1 1 0 0018 16V6a1 1 0 00-.293-.707z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            HEPS Test Status\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              isForceSimulation ? styles.colorWaiting : styles.colorCompleted\r\n            }`}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\",\r\n              marginTop: '10px'\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M12 1.586l-4 4v12.828l4-4V1.586zM3.707 3.293A1 1 0 002 4v10a1 1 0 00.293.707L6 18.414V5.586L3.707 3.293zM17.707 5.293L14 1.586v12.828l2.293 2.293A1 1 0 0018 16V6a1 1 0 00-.293-.707z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              HEPS Testing\r\n            </div>\r\n            <span style={{ display: 'flex', gap: '8px' }}>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableHeaterTest ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                Heaters: {enableHeaterTest ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableCurrentTest ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                Current: {enableCurrentTest ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n              <span className={`${styles.parameterValue} ${\r\n                enablePowerCycle ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                Power Cycle: {enablePowerCycle ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n              backgroundColor: isRunning ? '#9ca3af' :\r\n                hasRunTest ? '#4f46e5' : '#10b981',\r\n              color: 'white',\r\n              marginTop: '20px'\r\n            }}\r\n          >\r\n            {isRunning ? (\r\n              <>\r\n                <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                </svg>\r\n                Running Test...\r\n              </>\r\n            ) : hasRunTest ? (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Re-run Test\r\n              </>\r\n            ) : (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Run Test\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {results && (\r\n        <div className=\"space-y-4 mt-4\">\r\n          {/* HEPS System Status Card */}\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #064e3b, #065f46)\" \r\n                  : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n                color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                HEPS System Status\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <div style={{ \r\n                display: 'grid', \r\n                gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', \r\n                gap: '16px',\r\n                marginBottom: '16px'\r\n              }}>\r\n                <div style={{\r\n                  borderRadius: '8px',\r\n                  border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <div style={{\r\n                    padding: '10px',\r\n                    backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                    borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    fontSize: '14px',\r\n                    fontWeight: 'bold',\r\n                    color: isDarkMode ? '#d1d5db' : '#374151'\r\n                  }}>\r\n                    Power Status\r\n                  </div>\r\n                  <div style={{\r\n                    padding: '12px',\r\n                    textAlign: 'center'\r\n                  }}>\r\n                    <div style={{\r\n                      fontSize: '24px',\r\n                      fontWeight: 'bold',\r\n                      color: results.system.powerStatus === \"1\" ? \r\n                        (isDarkMode ? '#34d399' : '#059669') : \r\n                        (isDarkMode ? '#f87171' : '#dc2626')\r\n                    }}>\r\n                      {results.system.powerStatus === \"1\" ? \"POWERED\" : \"OFF\"}\r\n                    </div>\r\n                    <div style={{\r\n                      fontSize: '13px',\r\n                      color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                      marginTop: '4px'\r\n                    }}>\r\n                      Current State\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div style={{\r\n                  borderRadius: '8px',\r\n                  border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <div style={{\r\n                    padding: '10px',\r\n                    backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                    borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    fontSize: '14px',\r\n                    fontWeight: 'bold',\r\n                    color: isDarkMode ? '#d1d5db' : '#374151'\r\n                  }}>\r\n                    System Voltage\r\n                  </div>\r\n                  <div style={{\r\n                    padding: '12px',\r\n                    textAlign: 'center'\r\n                  }}>\r\n                    <div style={{\r\n                      fontSize: '24px',\r\n                      fontWeight: 'bold',\r\n                      color: isDarkMode ? '#d1d5db' : '#111827'\r\n                    }}>\r\n                      {results.system.voltage} V\r\n                    </div>\r\n                    <div style={{\r\n                      fontSize: '13px',\r\n                      color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                      marginTop: '4px'\r\n                    }}>\r\n                      Bus Voltage\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div style={{\r\n                  borderRadius: '8px',\r\n                  border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <div style={{\r\n                    padding: '10px',\r\n                    backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                    borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    fontSize: '14px',\r\n                    fontWeight: 'bold',\r\n                    color: isDarkMode ? '#d1d5db' : '#374151'\r\n                  }}>\r\n                    System Current\r\n                  </div>\r\n                  <div style={{\r\n                    padding: '12px',\r\n                    textAlign: 'center'\r\n                  }}>\r\n                    <div style={{\r\n                      fontSize: '24px',\r\n                      fontWeight: 'bold',\r\n                      color: isDarkMode ? '#d1d5db' : '#111827'\r\n                    }}>\r\n                      {results.system.current} mA\r\n                    </div>\r\n                    <div style={{\r\n                      fontSize: '13px',\r\n                      color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                      marginTop: '4px'\r\n                    }}>\r\n                      Total Current\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <table \r\n                className={styles.table}\r\n                style={{\r\n                  color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                }}\r\n              >\r\n                <thead \r\n                  className={styles.tableHeader}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.tableBody}>\r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Power Status</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.system.powerStatus === \"1\" ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.system.powerStatus === \"1\" ? \"ON\" : \"OFF\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>System Voltage</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.voltage} V</td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>System Current</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.current} mA</td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>System Power</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.power} W</td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Power Cycle Count</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.powerCycleCount}</td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Operating Time</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.operatingTime} min</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Heater Status Summary Card */}\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                  : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M12 1.586l-4 4v12.828l4-4V1.586zM3.707 3.293A1 1 0 002 4v10a1 1 0 00.293.707L6 18.414V5.586L3.707 3.293zM17.707 5.293L14 1.586v12.828l2.293 2.293A1 1 0 0018 16V6a1 1 0 00-.293-.707z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Heater Status Summary\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <div style={{ \r\n                display: 'grid', \r\n                gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))', \r\n                gap: '16px',\r\n                marginBottom: '16px'\r\n              }}>\r\n                {results.heaters && results.heaters.map((heater: any, index: number) => (\r\n                  <div key={index} style={{\r\n                    borderRadius: '8px',\r\n                    border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    overflow: 'hidden'\r\n                  }}>\r\n                    <div style={{\r\n                      padding: '8px',\r\n                      backgroundColor: heater.status === \"1\" ? \r\n                        (isDarkMode ? 'rgba(5, 150, 105, 0.2)' : '#d1fae5') : \r\n                        (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : '#fee2e2'),\r\n                      textAlign: 'center',\r\n                      fontSize: '14px',\r\n                      fontWeight: 'bold',\r\n                      color: heater.status === \"1\" ? \r\n                        (isDarkMode ? '#34d399' : '#059669') : \r\n                        (isDarkMode ? '#f87171' : '#dc2626')\r\n                    }}>\r\n                      Heater {index + 1}\r\n                    </div>\r\n                    <div style={{\r\n                      padding: '12px',\r\n                      textAlign: 'center'\r\n                    }}>\r\n                      <div style={{\r\n                        fontSize: '18px',\r\n                        fontWeight: 'bold',\r\n                        color: isDarkMode ? '#d1d5db' : '#111827'\r\n                      }}>\r\n                        {heater.temperature}°C\r\n                      </div>\r\n                      <div style={{\r\n                        fontSize: '13px',\r\n                        color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                        marginTop: '4px'\r\n                      }}>\r\n                        {heater.current} mA\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <table \r\n                className={styles.table}\r\n                style={{\r\n                  color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                }}\r\n              >\r\n                <thead \r\n                  className={styles.tableHeader}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Heater</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Status</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Temperature</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Current</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Power</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.tableBody}>\r\n                  {results.heaters && results.heaters.map((heater: any, index: number) => (\r\n                    <tr key={index} className={index % 2 === 1 ? styles.tableRowAlt : undefined} style={{ backgroundColor: index % 2 === 1 ? (isDarkMode ? \"#111827\" : \"#f9fafb\") : undefined }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Heater {index + 1}</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                        <span className={`${styles.statusBadge} ${\r\n                          heater.status === \"1\" ? styles.colorCompleted : styles.colorError\r\n                        }`}>\r\n                          {heater.status === \"1\" ? \"ON\" : \"OFF\"}\r\n                        </span>\r\n                      </td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{heater.temperature}°C</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{heater.current} mA</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{heater.power} W</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Heater Test Results (Only shown if heater tests were enabled and run) */}\r\n          {enableHeaterTest && results.heaterTests && results.heaterTests.length > 0 && (\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                    : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n                  color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M10 2a1 1 0 011 1v1.323l3.954 1.582 1.599-.8a1 1 0 01.894 1.79l-1.233.616 1.738 5.42a1 1 0 01-.285 1.05A3.989 3.989 0 0115 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.715-5.349L11 6.477V16h2a1 1 0 110 2H7a1 1 0 110-2h2V6.477L6.237 7.582l1.715 5.349a1 1 0 01-.285 1.05A3.989 3.989 0 015 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.738-5.42-1.233-.617a1 1 0 01.894-1.788l1.599.799L9 4.323V3a1 1 0 011-1z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Heater Test Results\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                {results.heaterTests.map((heaterTest: any, index: number) => (\r\n                  <div key={index} style={{ \r\n                    marginBottom: '20px', \r\n                    padding: '16px',\r\n                    border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    borderRadius: '8px',\r\n                    backgroundColor: isDarkMode ? 'rgba(17, 24, 39, 0.5)' : '#fff'\r\n                  }}>\r\n                    <div style={{ \r\n                      display: 'flex', \r\n                      justifyContent: 'space-between',\r\n                      alignItems: 'center',\r\n                      marginBottom: '12px'\r\n                    }}>\r\n                      <h4 style={{ \r\n                        fontSize: '16px', \r\n                        fontWeight: 'bold',\r\n                        color: isDarkMode ? '#d1d5db' : '#111827',\r\n                        margin: 0\r\n                      }}>\r\n                        Heater {index + 1} Test Results\r\n                      </h4>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        heaterTest.testResult === \"PASS\" ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {heaterTest.testResult}\r\n                      </span>\r\n                    </div>\r\n                    \r\n                    {/* Temperature trend chart */}\r\n                    {renderTemperatureTrend(heaterTest, index)}\r\n                    \r\n                    {/* Thermal rise data */}\r\n                    {renderThermalRiseData(heaterTest)}\r\n                    \r\n                    {/* Power consumption data */}\r\n                    {renderPowerConsumption(heaterTest)}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Power Cycle Test Results (Only shown if power cycle tests were enabled and run) */}\r\n          {enablePowerCycle && results.powerCycleTest && (\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #713f12, #854d0e)\" \r\n                    : \"linear-gradient(to right, #fffbeb, #fef3c7)\",\r\n                  color: isDarkMode ? \"#fef3c7\" : \"#854d0e\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Power Cycle Test Results\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div style={{ \r\n                  marginBottom: '20px', \r\n                  padding: '16px',\r\n                  backgroundColor: results.powerCycleTest.testResult === \"PASS\" ? \r\n                    (isDarkMode ? 'rgba(5, 150, 105, 0.1)' : '#d1fae5') : \r\n                    (isDarkMode ? 'rgba(239, 68, 68, 0.1)' : '#fee2e2'),\r\n                  borderRadius: '8px',\r\n                  textAlign: 'center'\r\n                }}>\r\n                  <div style={{ \r\n                    fontSize: '20px', \r\n                    fontWeight: 'bold',\r\n                    color: results.powerCycleTest.testResult === \"PASS\" ? \r\n                      (isDarkMode ? '#34d399' : '#059669') : \r\n                      (isDarkMode ? '#f87171' : '#dc2626'),\r\n                    marginBottom: '8px'\r\n                  }}>\r\n                    {results.powerCycleTest.testResult}\r\n                  </div>\r\n                  <div style={{ \r\n                    color: isDarkMode ? '#d1d5db' : '#374151',\r\n                    fontSize: '14px'\r\n                  }}>\r\n                    Power Cycle Test {results.powerCycleTest.cyclesCompleted} of {results.powerCycleTest.totalCycles} cycles completed\r\n                  </div>\r\n                </div>\r\n                \r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\n                    className={styles.tableHeader}\r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={styles.tableBody}>\r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Cycles Completed</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                        {results.powerCycleTest.cyclesCompleted} of {results.powerCycleTest.totalCycles}\r\n                      </td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Cycle Time</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.powerCycleTest.cycleTime} s</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Power On Time</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.powerCycleTest.powerOnTime} s</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Power Off Time</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.powerCycleTest.powerOffTime} s</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Total Test Time</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.powerCycleTest.totalTestTime} s</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Failures</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.powerCycleTest.failures}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Current Measurement Test Results (Only shown if current tests were enabled and run) */}\r\n          {enableCurrentTest && results.currentTest && (\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #164e63, #0e7490)\" \r\n                    : \"linear-gradient(to right, #ecfeff, #cffafe)\",\r\n                  color: isDarkMode ? \"#cffafe\" : \"#0e7490\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path d=\"M13 7H7v6h6V7z\" />\r\n                    <path fillRule=\"evenodd\" d=\"M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Current Measurement Test Results\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div style={{ \r\n                  marginBottom: '20px', \r\n                  padding: '16px',\r\n                  backgroundColor: results.currentTest.testResult === \"PASS\" ? \r\n                    (isDarkMode ? 'rgba(5, 150, 105, 0.1)' : '#d1fae5') : \r\n                    (isDarkMode ? 'rgba(239, 68, 68, 0.1)' : '#fee2e2'),\r\n                  borderRadius: '8px',\r\n                  textAlign: 'center'\r\n                }}>\r\n                  <div style={{ \r\n                    fontSize: '20px', \r\n                    fontWeight: 'bold',\r\n                    color: results.currentTest.testResult === \"PASS\" ? \r\n                      (isDarkMode ? '#34d399' : '#059669') : \r\n                      (isDarkMode ? '#f87171' : '#dc2626'),\r\n                    marginBottom: '8px'\r\n                  }}>\r\n                    {results.currentTest.testResult}\r\n                  </div>\r\n                  <div style={{ \r\n                    color: isDarkMode ? '#d1d5db' : '#374151',\r\n                    fontSize: '14px'\r\n                  }}>\r\n                    Current measurements {results.currentTest.testResult === \"PASS\" ? \"within\" : \"outside\"} expected range\r\n                  </div>\r\n                </div>\r\n                \r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\n                    className={styles.tableHeader}\r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Heater</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Expected (mA)</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Measured (mA)</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Deviation (%)</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Result</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={styles.tableBody}>\r\n                    {results.currentTest.heaterResults && results.currentTest.heaterResults.map((result: any, index: number) => (\r\n                      <tr key={index} className={index % 2 === 1 ? styles.tableRowAlt : undefined} style={{ backgroundColor: index % 2 === 1 ? (isDarkMode ? \"#111827\" : \"#f9fafb\") : undefined }}>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Heater {index + 1}</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{result.expectedCurrent}</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{result.measuredCurrent}</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{result.deviation.toFixed(2)}%</td>\r\n                        <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                          <span className={`${styles.statusBadge} ${\r\n                            result.inRange ? styles.colorCompleted : styles.colorError\r\n                          }`}>\r\n                            {result.inRange ? \"PASS\" : \"FAIL\"}\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n</tbody>\r\n                </table>\r\n                \r\n                <div style={{\r\n                  marginTop: '16px',\r\n                  padding: '12px',\r\n                  backgroundColor: isDarkMode ? 'rgba(17, 24, 39, 0.5)' : '#f9fafb',\r\n                  borderRadius: '6px',\r\n                  fontSize: '14px',\r\n                  color: isDarkMode ? '#d1d5db' : '#4b5563'\r\n                }}>\r\n                  <div style={{ fontWeight: 'bold', marginBottom: '8px' }}>Test Summary:</div>\r\n                  <div>• Test Duration: {results.currentTest.testDuration} s</div>\r\n                  <div>• Samples Collected: {results.currentTest.sampleCount}</div>\r\n                  <div>• Maximum Deviation: {results.currentTest.maxDeviation.toFixed(2)}%</div>\r\n                  <div>• Tolerance Range: ±{results.currentTest.tolerance}%</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Generate Report Button */}\r\n          <div>\r\n            <button \r\n              onClick={generateReport}\r\n              className={styles.reportButton}\r\n              style={{\r\n                backgroundColor: \"#10b981\",\r\n                color: \"white\"\r\n              }}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              Generate Report\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}}]
}