{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/UHFTestPanel.tsx"],"sourcesContent":["// File: src/components/CheckoutTestProgress/components/UHFTestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css'; // Reuse the same styles as OBC1TestPanel\r\n\r\n// Import the UHF-specific functions\r\nimport { runUHFCheckout } from '@/services/checkout/uhfCheckout';\r\nimport { generateUHFReport } from '@/services/reports/uhfReport';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface UHFTestPanelProps {\r\n  options: string[];  // Contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const UHFTestPanel: React.FC<UHFTestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // Determine if transmitter/receiver options are enabled\r\n  const enableTransmitter = options.includes('Transmitter Test');\r\n  const enableReceiver = options.includes('Receiver Test');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      console.log(\"Auto-starting test because isInitialRun =\", isInitialRun);\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting UHF Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common UHF parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for different UHF parameters\r\n              if (param.startsWith(\"OBC2_Uhf_\")) {\r\n                if (param.includes(\"Temperature\")) {\r\n                  return `${param}=${20 + Math.floor(Math.random() * 15)}`; // Temperature between 20-35\r\n                } else if (param.includes(\"Count\")) {\r\n                  return `${param}=${Math.floor(Math.random() * 1000)}`; // Count between 0-999\r\n                } else if (param.includes(\"Bytes\")) {\r\n                  return `${param}=${Math.floor(Math.random() * 10000)}`; // Bytes between 0-9999\r\n                } else if (param.includes(\"Rssi\")) {\r\n                  return `${param}=${-70 - Math.floor(Math.random() * 30)}`; // RSSI between -70 and -100\r\n                } else {\r\n                  return `${param}=${Math.floor(Math.random() * 100)}`; // Generic value 0-99\r\n                }\r\n              } else if (param.startsWith(\"UHF_\")) {\r\n                if (param.includes(\"freq\")) {\r\n                  return `${param}=437500000`; // UHF frequency 437.5 MHz\r\n                } else if (param.includes(\"baud\")) {\r\n                  return `${param}=9600`; // 9600 bps\r\n                } else if (param.includes(\"temp\")) {\r\n                  return `${param}=40`; // Max temp 40 degrees\r\n                } else if (param.includes(\"time\")) {\r\n                  return `${param}=60`; // Time values 60 seconds\r\n                } else {\r\n                  return `${param}=${Math.floor(Math.random() * 10)}`; // Generic setting 0-9\r\n                }\r\n              } else {\r\n                return `${param}=simulated`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the UHF checkout test with progress updates\r\n      const results = await runUHFCheckout(sock, \r\n        { testTransmitter: enableTransmitter, testReceiver: enableReceiver }, \r\n        (step, percent) => {\r\n          setCurrentStep(step);\r\n          setProgress(percent);\r\n        }\r\n      );\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running UHF checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateUHFReport(results);\r\n      alert(`UHF report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              <path d=\"M7.879 6.464a1 1 0 01-1.414 1.414 3 3 0 000 4.243 1 1 0 11-1.414 1.414 5 5 0 010-7.07 1 1 0 011.414 0zm4.242 0a1 1 0 011.414 0 5 5 0 010 7.072 1 1 0 01-1.414-1.414 3 3 0 000-4.244 1 1 0 010-1.414z\" />\r\n            </svg>\r\n            UHF Test Status\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              isForceSimulation ? styles.colorWaiting : styles.colorCompleted\r\n            }`}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\",\r\n              marginTop: '10px'\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              UHF Testing\r\n            </div>\r\n            <span style={{ display: 'flex', gap: '8px' }}>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableTransmitter ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                TX: {enableTransmitter ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableReceiver ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                RX: {enableReceiver ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n              backgroundColor: isRunning ? '#9ca3af' :\r\n                hasRunTest ? '#4f46e5' : '#10b981',\r\n              color: 'white',\r\n              marginTop: '20px'\r\n            }}\r\n          >\r\n            {isRunning ? (\r\n              <>\r\n                <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                </svg>\r\n                Running Test...\r\n              </>\r\n            ) : hasRunTest ? (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Re-run Test\r\n              </>\r\n            ) : (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Run Test\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {results && (\r\n        <div className=\"space-y-4 mt-4\">\r\n          {/* UHF Telemetry Card */}\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                  : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path d=\"M13 7H7v6h6V7z\" />\r\n                  <path fillRule=\"evenodd\" d=\"M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                UHF Telemetry\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <table \r\n                className={styles.table}\r\n                style={{\r\n                  color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                }}\r\n              >\r\n                <thead \r\n                  className={styles.tableHeader}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.tableBody}>\r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Board Temperature</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.boardTemperature} °C</td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PA Temperature</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.paTemperature} °C</td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Last RSSI</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.lastRssi}</td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Last RF Error</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.lastRferr}</td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>TX Count (Current)</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.txCount} packets</td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>RX Count (Current)</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.rxCount} packets</td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>TX Bytes (Current)</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.txBytes} bytes</td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>RX Bytes (Current)</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.rxBytes} bytes</td>\r\n                  </tr>\r\n\r\n                  <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Active Configuration</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.activeConf}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Boot Count</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.bootCount}</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Background RSSI</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.bgndRssi}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>TX Duty</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.telemetry.txDuty}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* UHF System Configuration Card */}\r\n        <div \r\n          className={styles.card}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <div \r\n            className={styles.cardHeader} \r\n            style={{ \r\n              background: isDarkMode \r\n                ? \"linear-gradient(to right, #065f46, #059669)\" \r\n                : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n              color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n            }}\r\n          >\r\n            <h3 className={styles.cardTitle}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              UHF System Configuration\r\n            </h3>\r\n            \r\n            {/* Add simulation badge */}\r\n            <SimulationBadge isSimulation={isForceSimulation} />\r\n          </div>\r\n          \r\n          <div className={styles.cardContent}>\r\n            <table \r\n              className={styles.table}\r\n              style={{\r\n                color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n              }}\r\n            >\r\n              <thead \r\n                className={styles.tableHeader}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                  color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className={styles.tableBody}>\r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>RSSI Offset</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.rssiOffset}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Maximum Temperature</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.maxTemp} °C</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>I2C Enabled</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.i2cEn}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>CAN Enabled</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.canEn}</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>TX Power Level</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.txPwr}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Max TX Time</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.maxTxTime} seconds</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Max Idle Time</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.system.maxIdleTime} seconds</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* UHF Receiver Configuration Card */}\r\n        <div \r\n          className={styles.card}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <div \r\n            className={styles.cardHeader} \r\n            style={{ \r\n              background: isDarkMode \r\n                ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n              color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n            }}\r\n          >\r\n            <h3 className={styles.cardTitle}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                <path d=\"M14.414 7l3.293-3.293a1 1 0 00-1.414-1.414L13 5.586V4a1 1 0 10-2 0v4.003a.996.996 0 00.617.921A.997.997 0 0012 9h4a1 1 0 100-2h-1.586z\" />\r\n                <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\r\n              </svg>\r\n              UHF Receiver Configuration\r\n            </h3>\r\n            \r\n            {/* Add simulation badge */}\r\n            <SimulationBadge isSimulation={isForceSimulation} />\r\n          </div>\r\n          \r\n          <div className={styles.cardContent}>\r\n            <table \r\n              className={styles.table}\r\n              style={{\r\n                color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n              }}\r\n            >\r\n              <thead \r\n                className={styles.tableHeader}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                  color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className={styles.tableBody}>\r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Frequency</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.frequency} Hz</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Baudrate</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.baudrate} bps</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Modulation Index</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.modindex}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>RX Guard</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.guard} ms</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Framing Mode</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.mode}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Bandwidth</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.bandwidth} Hz</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>AFC Range</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.afcrange} Hz</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* UHF Transmitter Configuration Card */}\r\n        <div \r\n          className={styles.card}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <div \r\n            className={styles.cardHeader} \r\n            style={{ \r\n              background: isDarkMode \r\n                ? \"linear-gradient(to right, #7e22ce, #a855f7)\" \r\n                : \"linear-gradient(to right, #f3e8ff, #e9d5ff)\",\r\n              color: isDarkMode ? \"#e9d5ff\" : \"#7e22ce\"\r\n            }}\r\n          >\r\n            <h3 className={styles.cardTitle}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              UHF Transmitter Configuration\r\n            </h3>\r\n            \r\n            {/* Add simulation badge */}\r\n            <SimulationBadge isSimulation={isForceSimulation} />\r\n          </div>\r\n          \r\n          <div className={styles.cardContent}>\r\n            <table \r\n              className={styles.table}\r\n              style={{\r\n                color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n              }}\r\n            >\r\n              <thead \r\n                className={styles.tableHeader}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                  color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                  <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className={styles.tableBody}>\r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Frequency</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.frequency} Hz</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Baudrate</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.baudrate} bps</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Modulation Index</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.modindex}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>TX Guard</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.guard} ms</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Framing Mode</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.mode}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Preamble Length</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.preamblen} bytes</td>\r\n                </tr>\r\n                \r\n                <tr>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Preamble Flags</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.preambflags}</td>\r\n                </tr>\r\n                \r\n                <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PA Level</td>\r\n                  <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.paLevel}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Generate Report Button */}\r\n        <div>\r\n          <button \r\n            onClick={generateReport}\r\n            className={styles.reportButton}\r\n            style={{\r\n              backgroundColor: \"#10b981\",\r\n              color: \"white\"\r\n            }}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            Generate Report\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n};"],"names":[],"mappings":"AAAA,wEAAwE;;;;;AACxE;AACA;AAAA;AACA;AACA,gUAAiD,yCAAyC;AAE1F,oCAAoC;AACpC;AACA;;;;;;;;AAEA,8DAA8D;AAC9D,MAAM,kBAAkD,CAAC,EAAE,YAAY,EAAE,iBACvE,8OAAC;QAAI,OAAO;YACV,UAAU;YACV,SAAS;YACT,iBAAiB,eAAe,4BAA4B;YAC5D,OAAO,eAAe,YAAY;YAClC,cAAc;YACd,SAAS,eAAe,UAAU;QACpC;kBAAG;;;;;;AAkBE,MAAM,eAA4C,CAAC,EACxD,OAAO,EACP,IAAI,EACJ,cAAc,EACd,WAAW,EACX,WAAW,EACX,YAAY,EACb;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO;IAC5C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3D,wDAAwD;IACxD,MAAM,oBAAoB,QAAQ,QAAQ,CAAC;IAC3C,MAAM,iBAAiB,QAAQ,QAAQ,CAAC;IAExC,sBAAsB;IACtB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,cAAc,SAAS,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC5D;QAEA,gBAAgB;QAChB;QAEA,0BAA0B;QAC1B,MAAM,WAAW,IAAI,iBAAiB;YACpC;QACF;QAEA,SAAS,OAAO,CAAC,SAAS,eAAe,EAAE;YACzC,YAAY;YACZ,iBAAiB;gBAAC;aAAQ;QAC5B;QAEA,OAAO,IAAM,SAAS,UAAU;IAClC,GAAG,EAAE;IAEL,oDAAoD;IACpD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,kDAAkD;QAClD,QAAQ,GAAG,CAAC,yBAAyB,CAAA,GAAA,wHAAA,CAAA,kBAAe,AAAD,EAAE;QAErD,4CAA4C;QAC5C,MAAM,gBAAgB,aAAa,OAAO,CAAC;QAC3C,IAAI,gBAAgB,MAAM,wBAAwB;QAElD,IAAI,eAAe;YACjB,IAAI;gBACF,MAAM,aAAa,KAAK,KAAK,CAAC;gBAC9B,wEAAwE;gBACxE,IAAI,cAAc,WAAW,MAAM,KAAK,MAAM;oBAC5C,QAAQ,GAAG,CAAC;oBACZ,gBAAgB;gBAClB,OAAO;oBACL,QAAQ,GAAG,CAAC;oBACZ,gBAAgB;gBAClB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,8BAA8B;YAC9C;QACF,OAAO;YACL,QAAQ,GAAG,CAAC;QACd;QAEA,2DAA2D;QAC3D,IAAI,QAAQ,KAAK,WAAW,KAAK,WAAW;YAC1C,gBAAgB,KAAK,WAAW;YAChC,QAAQ,GAAG,CAAC,CAAC,wCAAwC,EAAE,eAAe;QACxE;QAEA,qBAAqB;QACrB,CAAA,GAAA,wHAAA,CAAA,oBAAiB,AAAD,EAAE;QAElB,IAAI,eAAe;YACjB,QAAQ,GAAG,CAAC;QACd,OAAO;YACL,QAAQ,GAAG,CAAC;QACd;IACF,GAAG;QAAC;KAAK;IAET,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,mFAAmF;QACnF,IAAI,gBAAgB,CAAC,cAAc,CAAC,WAAW;YAC7C,QAAQ,GAAG,CAAC,6CAA6C;YACzD;QACF;IACF,GAAG;QAAC;QAAc;QAAY;KAAU;IAExC,MAAM,YAAY;QAChB,IAAI,WAAW;QAEf,aAAa;QACb,YAAY;QACZ,SAAS;QACT,cAAc;QAEd,IAAI;YACF,0CAA0C;YAC1C;YAEA,yBAAyB;YACzB,eAAe;YAEf,oCAAoC;YACpC,IAAI,CAAC,QAAS,OAAO,KAAK,YAAY,KAAK,cAC9B,OAAO,KAAK,IAAI,KAAK,YAAa;gBAC7C,QAAQ,IAAI,CAAC;gBAEb,qCAAqC;gBACrC,MAAM,gBAAgB;oBACpB,cAAc,CAAC;wBACb,sDAAsD;wBACtD,OAAO,WAAW,GAAG,CAAC,CAAA;4BACpB,sDAAsD;4BACtD,IAAI,MAAM,UAAU,CAAC,cAAc;gCACjC,IAAI,MAAM,QAAQ,CAAC,gBAAgB;oCACjC,OAAO,GAAG,MAAM,CAAC,EAAE,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,KAAK,EAAE,4BAA4B;gCACxF,OAAO,IAAI,MAAM,QAAQ,CAAC,UAAU;oCAClC,OAAO,GAAG,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO,EAAE,sBAAsB;gCAC/E,OAAO,IAAI,MAAM,QAAQ,CAAC,UAAU;oCAClC,OAAO,GAAG,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ,EAAE,uBAAuB;gCACjF,OAAO,IAAI,MAAM,QAAQ,CAAC,SAAS;oCACjC,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,KAAK,EAAE,4BAA4B;gCACzF,OAAO;oCACL,OAAO,GAAG,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,EAAE,qBAAqB;gCAC7E;4BACF,OAAO,IAAI,MAAM,UAAU,CAAC,SAAS;gCACnC,IAAI,MAAM,QAAQ,CAAC,SAAS;oCAC1B,OAAO,GAAG,MAAM,UAAU,CAAC,EAAE,0BAA0B;gCACzD,OAAO,IAAI,MAAM,QAAQ,CAAC,SAAS;oCACjC,OAAO,GAAG,MAAM,KAAK,CAAC,EAAE,WAAW;gCACrC,OAAO,IAAI,MAAM,QAAQ,CAAC,SAAS;oCACjC,OAAO,GAAG,MAAM,GAAG,CAAC,EAAE,sBAAsB;gCAC9C,OAAO,IAAI,MAAM,QAAQ,CAAC,SAAS;oCACjC,OAAO,GAAG,MAAM,GAAG,CAAC,EAAE,yBAAyB;gCACjD,OAAO;oCACL,OAAO,GAAG,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,KAAK,EAAE,sBAAsB;gCAC7E;4BACF,OAAO;gCACL,OAAO,GAAG,MAAM,UAAU,CAAC;4BAC7B;wBACF;oBACF;oBACA,MAAM,OAAO;wBACX,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,SAAS;wBACvC,OAAO,QAAQ,OAAO;oBACxB;oBACA,SAAS;wBACP,QAAQ,GAAG,CAAC,CAAC,oBAAoB,CAAC;wBAClC,OAAO,QAAQ,OAAO,CAAC;oBACzB;oBACA,aAAa;gBACf;gBAEA,2BAA2B;gBAC3B,OAAO;YACT;YAEA,kDAAkD;YAClD,MAAM,UAAU,MAAM,CAAA,GAAA,0IAAA,CAAA,iBAAc,AAAD,EAAE,MACnC;gBAAE,iBAAiB;gBAAmB,cAAc;YAAe,GACnE,CAAC,MAAM;gBACL,eAAe;gBACf,YAAY;YACd;YAGF,gDAAgD;YAChD,QAAQ,aAAa,GAAG;YAExB,2BAA2B;YAC3B,WAAW;YAEX,0CAA0C;YAC1C,eAAe;QAEjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;YACzD,YAAY;QACd,SAAU;YACR,aAAa;YACb,YAAY;YACZ,eAAe;QACjB;IACF;IAEA,0CAA0C;IAC1C,MAAM,iBAAiB;QACrB,IAAI,CAAC,SAAS;YACZ,SAAS;YACT;QACF;QAEA,IAAI;YACF,MAAM,aAAa,MAAM,CAAA,GAAA,uIAAA,CAAA,oBAAiB,AAAD,EAAE;YAC3C,MAAM,CAAC,kBAAkB,EAAE,YAAY;QACzC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;QAC3D;IACF;IAEA,qBACE,8OAAC;QAAI,WAAW,oLAAA,CAAA,UAAM,CAAC,SAAS;;YAC7B,uBACC,8OAAC,iIAAA,CAAA,QAAK;gBAAC,SAAQ;0BACb,cAAA,8OAAC;8BAAG;;;;;;;;;;;0BAIR,8OAAC;gBACC,WAAW,oLAAA,CAAA,UAAM,CAAC,IAAI;gBACtB,OAAO;oBACL,iBAAiB,aAAa,YAAY;oBAC1C,aAAa,aAAa,YAAY;gBACxC;;kCAEA,8OAAC;wBACC,WAAW,oLAAA,CAAA,UAAM,CAAC,UAAU;wBAC5B,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;kCAEA,cAAA,8OAAC;4BAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,SAAS;4BAAE,OAAO;gCAAE,OAAO,aAAa,YAAY;4BAAU;;8CAClF,8OAAC;oCAAI,OAAM;oCAA6B,SAAQ;oCAAY,MAAK;oCAAe,WAAW,oLAAA,CAAA,UAAM,CAAC,QAAQ;;sDACxG,8OAAC;4CAAK,UAAS;4CAAU,GAAE;4CAA8L,UAAS;;;;;;sDAClO,8OAAC;4CAAK,GAAE;;;;;;;;;;;;gCACJ;;;;;;;;;;;;kCAKV,8OAAC;wBAAI,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;;0CAChC,8OAAC;gCAAI,WAAW,oLAAA,CAAA,UAAM,CAAC,iBAAiB;;kDACtC,8OAAC;wCAAI,WAAW,oLAAA,CAAA,UAAM,CAAC,aAAa;;0DAClC,8OAAC;gDAAK,WAAW,oLAAA,CAAA,UAAM,CAAC,YAAY;gDAAE,OAAO;oDAAE,OAAO,aAAa,YAAY;gDAAU;0DACtF,eAAe;;;;;;0DAElB,8OAAC;gDAAK,WAAW,oLAAA,CAAA,UAAM,CAAC,aAAa;gDAAE,OAAO;oDAAE,OAAO,aAAa,YAAY;gDAAU;;oDACvF;oDAAS;;;;;;;;;;;;;kDAGd,8OAAC;wCACC,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;wCAC7B,OAAO;4CAAE,iBAAiB,aAAa,YAAY;wCAAU;kDAE7D,cAAA,8OAAC;4CACC,WAAW,oLAAA,CAAA,UAAM,CAAC,eAAe;4CACjC,OAAO;gDACL,OAAO,GAAG,SAAS,CAAC,CAAC;gDACrB,YAAY;4CACd;;;;;;;;;;;;;;;;;0CAMN,8OAAC;gCAAI,OAAO;oCAAE,cAAc;gCAAO;;kDACjC,8OAAC;wCAAG,OAAO;4CACT,UAAU;4CACV,cAAc;4CACd,OAAO,aAAa,YAAY;wCAClC;kDAAG;;;;;;kDAGH,8OAAC;wCAAI,OAAO;4CAAE,SAAS;4CAAQ,UAAU;4CAAQ,KAAK;wCAAM;;4CACzD,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC;oDAAgB,OAAO;wDACtB,SAAS;wDACT,iBAAiB,aAAa,YAAY;wDAC1C,cAAc;wDACd,UAAU;wDACV,OAAO,aAAa,YAAY;wDAChC,SAAS;wDACT,YAAY;wDACZ,KAAK;oDACP;;sEACE,8OAAC;4DAAI,OAAM;4DAA6B,OAAM;4DAAK,QAAO;4DAAK,SAAQ;4DAAY,MAAK;sEACtF,cAAA,8OAAC;gEAAK,UAAS;gEAAU,GAAE;gEAAqH,UAAS;;;;;;;;;;;wDAE1J;;mDAbO;;;;;4CAgBX,QAAQ,MAAM,KAAK,mBAClB,8OAAC;gDAAI,OAAO;oDACV,OAAO,aAAa,YAAY;oDAChC,WAAW;oDACX,UAAU;gDACZ;0DAAG;;;;;;;;;;;;;;;;;;0CAQT,8OAAC;gCACC,WAAW,oLAAA,CAAA,UAAM,CAAC,YAAY;gCAC9B,OAAO;oCACL,iBAAiB,aAAa,YAAY;oCAC1C,aAAa,aAAa,YAAY;gCACxC;;kDAEA,8OAAC;wCAAI,WAAW,oLAAA,CAAA,UAAM,CAAC,cAAc;;0DACnC,8OAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,oLAAA,CAAA,UAAM,CAAC,aAAa;0DAC/G,cAAA,8OAAC;oDAAK,GAAE;;;;;;;;;;;4CACF;;;;;;;kDAGR,8OAAC;wCAAK,WAAW,GAAG,oLAAA,CAAA,UAAM,CAAC,WAAW,CAAC,CAAC,EACtC,oBAAoB,oLAAA,CAAA,UAAM,CAAC,YAAY,GAAG,oLAAA,CAAA,UAAM,CAAC,cAAc,EAC/D;kDACC,oBAAoB,eAAe;;;;;;;;;;;;0CAIxC,8OAAC;gCACC,WAAW,oLAAA,CAAA,UAAM,CAAC,YAAY;gCAC9B,OAAO;oCACL,iBAAiB,aAAa,YAAY;oCAC1C,aAAa,aAAa,YAAY;oCACtC,WAAW;gCACb;;kDAEA,8OAAC;wCAAI,WAAW,oLAAA,CAAA,UAAM,CAAC,cAAc;;0DACnC,8OAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,oLAAA,CAAA,UAAM,CAAC,aAAa;0DAC7G,cAAA,8OAAC;oDAAK,UAAS;oDAAU,GAAE;oDAA8L,UAAS;;;;;;;;;;;4CAC9N;;;;;;;kDAGR,8OAAC;wCAAK,OAAO;4CAAE,SAAS;4CAAQ,KAAK;wCAAM;;0DACzC,8OAAC;gDAAK,WAAW,GAAG,oLAAA,CAAA,UAAM,CAAC,cAAc,CAAC,CAAC,EACzC,oBAAoB,oLAAA,CAAA,UAAM,CAAC,cAAc,GAAG,oLAAA,CAAA,UAAM,CAAC,YAAY,EAC/D;;oDAAE;oDACG,oBAAoB,YAAY;;;;;;;0DAEvC,8OAAC;gDAAK,WAAW,GAAG,oLAAA,CAAA,UAAM,CAAC,cAAc,CAAC,CAAC,EACzC,iBAAiB,oLAAA,CAAA,UAAM,CAAC,cAAc,GAAG,oLAAA,CAAA,UAAM,CAAC,YAAY,EAC5D;;oDAAE;oDACG,iBAAiB,YAAY;;;;;;;;;;;;;;;;;;;0CAMxC,8OAAC;gCACC,SAAS;gCACT,WAAW,oLAAA,CAAA,UAAM,CAAC,MAAM;gCACxB,UAAU;gCACV,OAAO;oCACL,iBAAiB,YAAY,YAC3B,aAAa,YAAY;oCAC3B,OAAO;oCACP,WAAW;gCACb;0CAEC,0BACC;;sDACE,8OAAC;4CAAI,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;4CAAE,OAAM;4CAA6B,OAAM;4CAAK,QAAO;4CAAK,SAAQ;4CAAY,MAAK;4CAAO,QAAO;4CAAe,aAAY;4CAAI,eAAc;4CAAQ,gBAAe;sDACvM,cAAA,8OAAC;gDAAK,GAAE;;;;;;;;;;;wCACJ;;mDAGN,2BACF;;sDACE,8OAAC;4CAAI,OAAM;4CAA6B,SAAQ;4CAAY,MAAK;4CAAe,WAAW,oLAAA,CAAA,UAAM,CAAC,UAAU;sDAC5G,cAAA,8OAAC;gDAAK,UAAS;gDAAU,GAAE;gDAA+R,UAAS;;;;;;;;;;;wCAC7T;;iEAIR;;sDACE,8OAAC;4CAAI,OAAM;4CAA6B,SAAQ;4CAAY,MAAK;4CAAe,WAAW,oLAAA,CAAA,UAAM,CAAC,UAAU;sDAC1G,cAAA,8OAAC;gDAAK,UAAS;gDAAU,GAAE;gDAA0G,UAAS;;;;;;;;;;;wCAC1I;;;;;;;;;;;;;;;;;;;;YAQf,yBACC,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBACC,WAAW,oLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,8OAAC;gCACC,WAAW,oLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEA,8OAAC;wCAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC7B,8OAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,oLAAA,CAAA,UAAM,CAAC,QAAQ;;kEACxG,8OAAC;wDAAK,GAAE;;;;;;kEACR,8OAAC;wDAAK,UAAS;wDAAU,GAAE;wDAAyO,UAAS;;;;;;;;;;;;4CACzQ;;;;;;;kDAKR,8OAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,8OAAC;gCAAI,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;0CAChC,cAAA,8OAAC;oCACC,WAAW,oLAAA,CAAA,UAAM,CAAC,KAAK;oCACvB,OAAO;wCACL,OAAO,aAAa,YAAY;oCAClC;;sDAEA,8OAAC;4CACC,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;4CAC7B,OAAO;gDACL,iBAAiB,aAAa,YAAY;gDAC1C,OAAO,aAAa,YAAY;4CAClC;sDAEA,cAAA,8OAAC;;kEACC,8OAAC;wDAAG,OAAO;4DAAE,aAAa,aAAa,YAAY;wDAAU;kEAAG;;;;;;kEAChE,8OAAC;wDAAG,OAAO;4DAAE,aAAa,aAAa,YAAY;wDAAU;kEAAG;;;;;;;;;;;;;;;;;sDAGpE,8OAAC;4CAAM,WAAW,oLAAA,CAAA,UAAM,CAAC,SAAS;;8DAChC,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,SAAS,CAAC,gBAAgB;gEAAC;;;;;;;;;;;;;8DAGtG,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,SAAS,CAAC,aAAa;gEAAC;;;;;;;;;;;;;8DAGnG,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,SAAS,CAAC,QAAQ;;;;;;;;;;;;8DAG7F,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,SAAS,CAAC,SAAS;;;;;;;;;;;;8DAG9F,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,SAAS,CAAC,OAAO;gEAAC;;;;;;;;;;;;;8DAG7F,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,SAAS,CAAC,OAAO;gEAAC;;;;;;;;;;;;;8DAG7F,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,SAAS,CAAC,OAAO;gEAAC;;;;;;;;;;;;;8DAG7F,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,SAAS,CAAC,OAAO;gEAAC;;;;;;;;;;;;;8DAG7F,8OAAC;;sEACD,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,SAAS,CAAC,UAAU;;;;;;;;;;;;8DAG/F,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,SAAS,CAAC,SAAS;;;;;;;;;;;;8DAG9F,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,SAAS,CAAC,QAAQ;;;;;;;;;;;;8DAG7F,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,SAAS,CAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQnG,8OAAC;wBACC,WAAW,oLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,8OAAC;gCACC,WAAW,oLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEA,8OAAC;wCAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC7B,8OAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,oLAAA,CAAA,UAAM,CAAC,QAAQ;0DACxG,cAAA,8OAAC;oDAAK,UAAS;oDAAU,GAAE;oDAA+f,UAAS;;;;;;;;;;;4CAC/hB;;;;;;;kDAKR,8OAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,8OAAC;gCAAI,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;0CAChC,cAAA,8OAAC;oCACC,WAAW,oLAAA,CAAA,UAAM,CAAC,KAAK;oCACvB,OAAO;wCACL,OAAO,aAAa,YAAY;oCAClC;;sDAEA,8OAAC;4CACC,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;4CAC7B,OAAO;gDACL,iBAAiB,aAAa,YAAY;gDAC1C,OAAO,aAAa,YAAY;4CAClC;sDAEA,cAAA,8OAAC;;kEACC,8OAAC;wDAAG,OAAO;4DAAE,aAAa,aAAa,YAAY;wDAAU;kEAAG;;;;;;kEAChE,8OAAC;wDAAG,OAAO;4DAAE,aAAa,aAAa,YAAY;wDAAU;kEAAG;;;;;;;;;;;;;;;;;sDAGpE,8OAAC;4CAAM,WAAW,oLAAA,CAAA,UAAM,CAAC,SAAS;;8DAChC,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,MAAM,CAAC,UAAU;;;;;;;;;;;;8DAG5F,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,MAAM,CAAC,OAAO;gEAAC;;;;;;;;;;;;;8DAG1F,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,MAAM,CAAC,KAAK;;;;;;;;;;;;8DAGvF,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,MAAM,CAAC,KAAK;;;;;;;;;;;;8DAGvF,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,MAAM,CAAC,KAAK;;;;;;;;;;;;8DAGvF,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,MAAM,CAAC,SAAS;gEAAC;;;;;;;;;;;;;8DAG5F,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,MAAM,CAAC,WAAW;gEAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQtG,8OAAC;wBACC,WAAW,oLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,8OAAC;gCACC,WAAW,oLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEA,8OAAC;wCAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC7B,8OAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,oLAAA,CAAA,UAAM,CAAC,QAAQ;;kEACxG,8OAAC;wDAAK,GAAE;;;;;;kEACR,8OAAC;wDAAK,GAAE;;;;;;;;;;;;4CACJ;;;;;;;kDAKR,8OAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,8OAAC;gCAAI,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;0CAChC,cAAA,8OAAC;oCACC,WAAW,oLAAA,CAAA,UAAM,CAAC,KAAK;oCACvB,OAAO;wCACL,OAAO,aAAa,YAAY;oCAClC;;sDAEA,8OAAC;4CACC,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;4CAC7B,OAAO;gDACL,iBAAiB,aAAa,YAAY;gDAC1C,OAAO,aAAa,YAAY;4CAClC;sDAEA,cAAA,8OAAC;;kEACC,8OAAC;wDAAG,OAAO;4DAAE,aAAa,aAAa,YAAY;wDAAU;kEAAG;;;;;;kEAChE,8OAAC;wDAAG,OAAO;4DAAE,aAAa,aAAa,YAAY;wDAAU;kEAAG;;;;;;;;;;;;;;;;;sDAGpE,8OAAC;4CAAM,WAAW,oLAAA,CAAA,UAAM,CAAC,SAAS;;8DAChC,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,QAAQ,CAAC,SAAS;gEAAC;;;;;;;;;;;;;8DAG9F,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,QAAQ,CAAC,QAAQ;gEAAC;;;;;;;;;;;;;8DAG7F,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,QAAQ,CAAC,QAAQ;;;;;;;;;;;;8DAG5F,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,QAAQ,CAAC,KAAK;gEAAC;;;;;;;;;;;;;8DAG1F,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,QAAQ,CAAC,IAAI;;;;;;;;;;;;8DAGxF,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,QAAQ,CAAC,SAAS;gEAAC;;;;;;;;;;;;;8DAG9F,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,QAAQ,CAAC,QAAQ;gEAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQrG,8OAAC;wBACC,WAAW,oLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,8OAAC;gCACC,WAAW,oLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEA,8OAAC;wCAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC7B,8OAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,oLAAA,CAAA,UAAM,CAAC,QAAQ;0DACxG,cAAA,8OAAC;oDAAK,UAAS;oDAAU,GAAE;oDAA8L,UAAS;;;;;;;;;;;4CAC9N;;;;;;;kDAKR,8OAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,8OAAC;gCAAI,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;0CAChC,cAAA,8OAAC;oCACC,WAAW,oLAAA,CAAA,UAAM,CAAC,KAAK;oCACvB,OAAO;wCACL,OAAO,aAAa,YAAY;oCAClC;;sDAEA,8OAAC;4CACC,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;4CAC7B,OAAO;gDACL,iBAAiB,aAAa,YAAY;gDAC1C,OAAO,aAAa,YAAY;4CAClC;sDAEA,cAAA,8OAAC;;kEACC,8OAAC;wDAAG,OAAO;4DAAE,aAAa,aAAa,YAAY;wDAAU;kEAAG;;;;;;kEAChE,8OAAC;wDAAG,OAAO;4DAAE,aAAa,aAAa,YAAY;wDAAU;kEAAG;;;;;;;;;;;;;;;;;sDAGpE,8OAAC;4CAAM,WAAW,oLAAA,CAAA,UAAM,CAAC,SAAS;;8DAChC,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,WAAW,CAAC,SAAS;gEAAC;;;;;;;;;;;;;8DAGjG,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,WAAW,CAAC,QAAQ;gEAAC;;;;;;;;;;;;;8DAGhG,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,WAAW,CAAC,QAAQ;;;;;;;;;;;;8DAG/F,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,WAAW,CAAC,KAAK;gEAAC;;;;;;;;;;;;;8DAG7F,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,WAAW,CAAC,IAAI;;;;;;;;;;;;8DAG3F,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;;gEAAI,QAAQ,WAAW,CAAC,SAAS;gEAAC;;;;;;;;;;;;;8DAGjG,8OAAC;;sEACC,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,WAAW,CAAC,WAAW;;;;;;;;;;;;8DAGlG,8OAAC;oDAAG,WAAW,oLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,8OAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,WAAW,CAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQtG,8OAAC;kCACC,cAAA,8OAAC;4BACC,SAAS;4BACT,WAAW,oLAAA,CAAA,UAAM,CAAC,YAAY;4BAC9B,OAAO;gCACL,iBAAiB;gCACjB,OAAO;4BACT;;8CAEA,8OAAC;oCAAI,OAAM;oCAA6B,SAAQ;oCAAY,MAAK;oCAAe,WAAW,oLAAA,CAAA,UAAM,CAAC,UAAU;8CAC1G,cAAA,8OAAC;wCAAK,UAAS;wCAAU,GAAE;wCAAqL,UAAS;;;;;;;;;;;gCACrN;;;;;;;;;;;;;;;;;;;;;;;;AAQlB","debugId":null}}]
}