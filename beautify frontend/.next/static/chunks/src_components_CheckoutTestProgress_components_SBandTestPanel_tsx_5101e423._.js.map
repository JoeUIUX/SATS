{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/SBandTestPanel.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/components/SBandTestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css'; // Reuse the same styles as OBC1TestPanel\r\n\r\n// Import the S-Band-specific functions\r\nimport { runSBandCheckout } from '@/services/checkout/sbandCheckout';\r\nimport { generateSBandReport } from '@/services/reports/sbandReport';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface SBandTestPanelProps {\r\n  options: string[];  // Contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const SBandTestPanel: React.FC<SBandTestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // Determine if TX/RX options are enabled\r\n  const enableTX = options.includes('Transmitter Test');\r\n  const enableRX = options.includes('Receiver Test');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      console.log(\"Auto-starting test because isInitialRun =\", isInitialRun);\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting S-Band Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for common S-Band parameters\r\n              if (param.includes(\"FPGA_version\")) {\r\n                return `${param}=1.2.3`;\r\n              } else if (param.includes(\"FPGA_build\")) {\r\n                return `${param}=2022.04`;\r\n              } else if (param.includes(\"hardware_id_year\")) {\r\n                return `${param}=2022`;\r\n              } else if (param.includes(\"hardware_id_month\")) {\r\n                return `${param}=06`;\r\n              } else if (param.includes(\"hardware_id_order_n\")) {\r\n                return `${param}=42`;\r\n              } else if (param.includes(\"LCL_status\")) {\r\n                return `${param}=1`;\r\n              } else if (param.includes(\"RX_status\")) {\r\n                return `${param}=1`;\r\n              } else if (param.includes(\"RX_frequency_shift\")) {\r\n                return `${param}=${500 + Math.floor(Math.random() * 200)}`;\r\n              } else if (param.includes(\"TX_status\")) {\r\n                return `${param}=1`;\r\n              } else if (param.includes(\"SBand_coherent_mode\")) {\r\n                return `${param}=1`;\r\n              } else if (param.includes(\"SBand_ranging_mode\")) {\r\n                return `${param}=0`;\r\n              } else if (param.includes(\"adc_reg_00\") || param.includes(\"adc_reg_04\")) {\r\n                return `${param}=${25 + Math.floor(Math.random() * 10)}`;\r\n              } else {\r\n                return `${param}=${Math.floor(Math.random() * 100)}`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the S-Band checkout test with progress updates\r\n      const results = await runSBandCheckout(sock, \r\n        { testTX: enableTX, testRX: enableRX }, \r\n        (step, percent) => {\r\n          setCurrentStep(step);\r\n          setProgress(percent);\r\n        }\r\n      );\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running S-Band checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateSBandReport(results);\r\n      alert(`S-Band report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              <path d=\"M7.879 6.464a1 1 0 01-1.414 1.414 3 3 0 000 4.243 1 1 0 11-1.414 1.414 5 5 0 010-7.07 1 1 0 011.414 0zm4.242 0a1 1 0 011.414 0 5 5 0 010 7.072 1 1 0 01-1.414-1.414 3 3 0 000-4.244 1 1 0 010-1.414z\" />\r\n            </svg>\r\n            S-Band Test Status\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              isForceSimulation ? styles.colorWaiting : styles.colorCompleted\r\n            }`}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\",\r\n              marginTop: '10px'\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              S-Band Testing\r\n            </div>\r\n            <span style={{ display: 'flex', gap: '8px' }}>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableTX ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                TX: {enableTX ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n              <span className={`${styles.parameterValue} ${\r\n                enableRX ? styles.colorCompleted : styles.colorWaiting\r\n              }`}>\r\n                RX: {enableRX ? 'ENABLED' : 'DISABLED'}\r\n              </span>\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n                backgroundColor: isRunning ? '#9ca3af' :\r\n                  hasRunTest ? '#4f46e5' : '#10b981',\r\n                color: 'white',\r\n                marginTop: '20px'\r\n              }}\r\n            >\r\n              {isRunning ? (\r\n                <>\r\n                  <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                    <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                  </svg>\r\n                  Running Test...\r\n                </>\r\n              ) : hasRunTest ? (\r\n                <>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Re-run Test\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Run Test\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {results && (\r\n          <div className=\"space-y-4 mt-4\">\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #064e3b, #065f46)\" \r\n                    : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n                  color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  FPGA Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div \r\n                  className={styles.infoCard}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                  }}\r\n                >\r\n                  <div className={styles.infoIcon}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"#059669\" width=\"20\" height=\"20\">\r\n                      <path d=\"M13 7H7v6h6V7z\" />\r\n                      <path fillRule=\"evenodd\" d=\"M7 2a1 1 0 012 0v1h2V2a1 1 0 112 0v1h2a2 2 0 012 2v2h1a1 1 0 110 2h-1v2h1a1 1 0 110 2h-1v2a2 2 0 01-2 2h-2v1a1 1 0 11-2 0v-1H9v1a1 1 0 11-2 0v-1H5a2 2 0 01-2-2v-2H2a1 1 0 110-2h1V9H2a1 1 0 010-2h1V5a2 2 0 012-2h2V2zM5 5h10v10H5V5z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                  </div>\r\n                  <div className={styles.infoContent}>\r\n                    <div \r\n                      className={styles.infoLabel}\r\n                      style={{ color: isDarkMode ? \"#9ca3af\" : \"#6b7280\" }}\r\n                    >\r\n                      S-Band FPGA Version\r\n                    </div>\r\n                    <div \r\n                      className={styles.infoValue}\r\n                      style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}\r\n                    >\r\n                      {results.fpga.version}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"grid grid-cols-2 gap-4 mt-4\">\r\n                  <div \r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\",\r\n                      borderWidth: \"1px\",\r\n                      borderRadius: \"6px\",\r\n                      padding: \"12px\"\r\n                    }}\r\n                  >\r\n                    <div style={{ \r\n                      fontSize: \"12px\", \r\n                      color: isDarkMode ? \"#9ca3af\" : \"#6b7280\",\r\n                      marginBottom: \"4px\"\r\n                    }}>\r\n                      FPGA Build\r\n                    </div>\r\n                    <div style={{ \r\n                      fontWeight: \"bold\",\r\n                      color: isDarkMode ? \"#f3f4f6\" : \"#111827\" \r\n                    }}>\r\n                      {results.fpga.build}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div \r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\",\r\n                      borderWidth: \"1px\",\r\n                      borderRadius: \"6px\",\r\n                      padding: \"12px\"\r\n                    }}\r\n                  >\r\n                    <div style={{ \r\n                      fontSize: \"12px\", \r\n                      color: isDarkMode ? \"#9ca3af\" : \"#6b7280\",\r\n                      marginBottom: \"4px\"\r\n                    }}>\r\n                      FPGA Type\r\n                    </div>\r\n                    <div style={{ \r\n                      fontWeight: \"bold\",\r\n                      color: isDarkMode ? \"#f3f4f6\" : \"#111827\" \r\n                    }}>\r\n                      {results.fpga.type}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                    : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                  color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n                }}\r\n                >\r\n                  <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M7 2a1 1 0 00-.707 1.707L7 4.414v3.758a1 1 0 01-.293.707l-4 4C.817 14.769 2.156 18 4.828 18h10.343c2.673 0 4.012-3.231 2.122-5.121l-4-4A1 1 0 0113 8.172V4.414l.707-.707A1 1 0 0013 2H7zm2 6.172V4h2v4.172a3 3 0 00.879 2.12l1.168 1.168a4 4 0 00-2.278.592l-.172.086a3.976 3.976 0 01-1.878.409c-.863 0-1.39-.47-1.732-.917l-.254-.387a.75.75 0 00-1.147.06 2.99 2.99 0 01-.537.467c-.18.129-.384.276-.605.434l-.584.392-1.17-1.57a3 3 0 00-.88-2.12L9 8.172z\" />\r\n                  </svg>\r\n                  Hardware Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\n                    className={styles.tableHeader}\r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={styles.tableBody}>\r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Board Year</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.hardware.idYear}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Board Month</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.hardware.idMonth}</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Order Number</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.hardware.orderNumber}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>LCL Status</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.status.lclStatus}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                    : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n                  color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M5.05 3.636a1 1 0 010 1.414 7 7 0 000 9.9 1 1 0 11-1.414 1.414 9 9 0 010-12.728 1 1 0 011.414 0zm9.9 0a1 1 0 011.414 0 9 9 0 010 12.728 1 1 0 11-1.414-1.414 7 7 0 000-9.9 1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Receiver Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div style={{ marginBottom: '12px' }}>\r\n                  <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <span style={{ fontWeight: 'bold' }}>Receiver Status</span>\r\n                    <span className={`${styles.statusBadge} ${\r\n                      results.receiver.status === '1' ? styles.colorCompleted : styles.colorError\r\n                    }`}>\r\n                      {results.receiver.status === '1' ? 'ACTIVE' : 'INACTIVE'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\n                    className={styles.tableHeader}\r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={styles.tableBody}>\r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Sensitivity</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.sensitivity}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Frequency Shift</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.frequencyShift} Hz</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>IQ Power</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.iqPower}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>AGC Value</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.agcValue}</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Eb</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.demodEb}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>N0</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.demodN0}</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Data Rate</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.receiver.dataRate}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #713f12, #854d0e)\" \r\n                    : \"linear-gradient(to right, #fffbeb, #fef3c7)\",\r\n                  color: isDarkMode ? \"#fef3c7\" : \"#854d0e\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Transmitter Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div style={{ marginBottom: '12px' }}>\r\n                  <div style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <span style={{ fontWeight: 'bold' }}>Transmitter Status</span>\r\n                    <span className={`${styles.statusBadge} ${\r\n                      results.transmitter.status === '1' ? styles.colorCompleted : styles.colorError\r\n                    }`}>\r\n                      {results.transmitter.status === '1' ? 'ACTIVE' : 'INACTIVE'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <table \r\n                  className={styles.table}\r\n                  style={{\r\n                    color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                  }}\r\n                >\r\n                  <thead \r\n                    className={styles.tableHeader}\r\n                    style={{\r\n                      backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                      color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                      <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody className={styles.tableBody}>\r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Encoder Configuration</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.convDiff}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Filter Configuration</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.convFilter}</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Waveform</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.waveform}</td>\r\n                    </tr>\r\n                    \r\n                    <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PCM Index</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.pcmIndex}</td>\r\n                    </tr>\r\n                    \r\n                    <tr>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>AGC Value</td>\r\n                      <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.transmitter.agcValue}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #164e63, #0e7490)\" \r\n                    : \"linear-gradient(to right, #ecfeff, #cffafe)\",\r\n                  color: isDarkMode ? \"#cffafe\" : \"#0e7490\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M17.778 8.222c-4.296-4.296-11.26-4.296-15.556 0A1 1 0 01.808 6.808c5.076-5.077 13.308-5.077 18.384 0a1 1 0 01-1.414 1.414zM14.95 11.05a7 7 0 00-9.9 0 1 1 0 01-1.414-1.414 9 9 0 0112.728 0 1 1 0 01-1.414 1.414zM12.12 13.88a3 3 0 00-4.242 0 1 1 0 01-1.415-1.415 5 5 0 017.072 0 1 1 0 01-1.415 1.415zM9 16a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Mode Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div style={{\r\n                    borderRadius: '8px',\r\n                    padding: '16px',\r\n                    backgroundColor: results.modes.coherentMode === '1' ? \r\n                      (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : '#d1fae5') : \r\n                      (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : '#fee2e2'),\r\n                    textAlign: 'center'\r\n                  }}>\r\n                    <div style={{ fontSize: '14px', marginBottom: '8px' }}>Coherent Mode</div>\r\n                    <div style={{ \r\n                      fontWeight: 'bold',\r\n                      fontSize: '18px',\r\n                      color: results.modes.coherentMode === '1' ? \r\n                        (isDarkMode ? '#34d399' : '#059669') : \r\n                        (isDarkMode ? '#f87171' : '#dc2626')\r\n                    }}>\r\n                      {results.modes.coherentMode === '1' ? 'ENABLED' : 'DISABLED'}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div style={{\r\n                    borderRadius: '8px',\r\n                    padding: '16px',\r\n                    backgroundColor: results.modes.rangingMode === '1' ? \r\n                      (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : '#d1fae5') : \r\n                      (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : '#fee2e2'),\r\n                    textAlign: 'center'\r\n                  }}>\r\n                    <div style={{ fontSize: '14px', marginBottom: '8px' }}>Ranging Mode</div>\r\n                    <div style={{ \r\n                      fontWeight: 'bold',\r\n                      fontSize: '18px',\r\n                      color: results.modes.rangingMode === '1' ? \r\n                        (isDarkMode ? '#34d399' : '#059669') : \r\n                        (isDarkMode ? '#f87171' : '#dc2626')\r\n                    }}>\r\n                      {results.modes.rangingMode === '1' ? 'ENABLED' : 'DISABLED'}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #7e22ce, #a855f7)\" \r\n                    : \"linear-gradient(to right, #f3e8ff, #e9d5ff)\",\r\n                  color: isDarkMode ? \"#e9d5ff\" : \"#7e22ce\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path fillRule=\"evenodd\" d=\"M10 2a8 8 0 100 16 8 8 0 000-16zm0 2a6 6 0 100 12.071A6.001 6.001 0 0010 4z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  Temperature Information\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                <div className={styles.tempGrid}>\r\n                  <div className={styles.tempCard}>\r\n                    <div className={styles.tempLabel}>ADC Input 0</div>\r\n                    <div className={styles.tempValue}>{results.temperature.adc0} °C</div>\r\n                  </div>\r\n                  \r\n                  <div className={styles.tempCard}>\r\n                    <div className={styles.tempLabel}>ADC Input 1</div>\r\n                    <div className={styles.tempValue}>{results.temperature.adc1} °C</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Special TX test section if TX test was enabled */}\r\n            {enableTX && results.txTest && (\r\n              <div \r\n                className={styles.card}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                  borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                }}\r\n              >\r\n                <div \r\n                  className={styles.cardHeader} \r\n                  style={{ \r\n                    background: isDarkMode \r\n                      ? \"linear-gradient(to right, #b45309, #d97706)\" \r\n                      : \"linear-gradient(to right, #fef3c7, #fde68a)\",\r\n                    color: isDarkMode ? \"#fef3c7\" : \"#b45309\"\r\n                  }}\r\n                >\r\n                  <h3 className={styles.cardTitle}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                      <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    TX Test Results\r\n                  </h3>\r\n                  \r\n                  {/* Add simulation badge */}\r\n                  <SimulationBadge isSimulation={isForceSimulation} />\r\n                </div>\r\n                \r\n                <div className={styles.cardContent}>\r\n                  <div \r\n                    style={{\r\n                      padding: '16px',\r\n                      borderRadius: '8px',\r\n                      backgroundColor: results.txTest.status === 'Success' ? \r\n                        (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : '#d1fae5') : \r\n                        (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : '#fee2e2'),\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      alignItems: 'center',\r\n                      gap: '12px'\r\n                    }}\r\n                  >\r\n                    <div style={{ \r\n                      fontSize: '24px', \r\n                      fontWeight: 'bold',\r\n                      color: results.txTest.status === 'Success' ? \r\n                        (isDarkMode ? '#34d399' : '#059669') : \r\n                        (isDarkMode ? '#f87171' : '#dc2626')\r\n                    }}>\r\n                      {results.txTest.status === 'Success' ? 'PASS' : 'FAIL'}\r\n                    </div>\r\n                    \r\n                    <div style={{ color: isDarkMode ? '#d1d5db' : '#6b7280' }}>\r\n                      TX Test {results.txTest.completed ? 'Completed' : 'Incomplete'}\r\n                    </div>\r\n                    \r\n                    {results.txTest.error && (\r\n                      <div style={{ \r\n                        color: isDarkMode ? '#f87171' : '#dc2626',\r\n                        marginTop: '8px',\r\n                        fontStyle: 'italic'\r\n                      }}>\r\n                        Error: {results.txTest.error}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Special RX test section if RX test was enabled */}\r\n            {enableRX && results.rxTest && (\r\n              <div \r\n                className={styles.card}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                  borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                }}\r\n              >\r\n                <div \r\n                  className={styles.cardHeader} \r\n                  style={{ \r\n                    background: isDarkMode \r\n                      ? \"linear-gradient(to right, #1e40af, #3b82f6)\" \r\n                      : \"linear-gradient(to right, #dbeafe, #bfdbfe)\",\r\n                    color: isDarkMode ? \"#dbeafe\" : \"#1e40af\"\r\n                  }}\r\n                >\r\n                  <h3 className={styles.cardTitle}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                      <path d=\"M14.414 7l3.293-3.293a1 1 0 00-1.414-1.414L13 5.586V4a1 1 0 10-2 0v4.003a.996.996 0 00.617.921A.997.997 0 0012 9h4a1 1 0 100-2h-1.586z\" />\r\n                      <path d=\"M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z\" />\r\n                    </svg>\r\n                    RX Test Results\r\n                  </h3>\r\n                  \r\n                  {/* Add simulation badge */}\r\n                  <SimulationBadge isSimulation={isForceSimulation} />\r\n                </div>\r\n                \r\n                <div className={styles.cardContent}>\r\n                  <div \r\n                    style={{\r\n                      padding: '16px',\r\n                      borderRadius: '8px',\r\n                      backgroundColor: results.rxTest.status === 'Success' ? \r\n                        (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : '#d1fae5') : \r\n                        (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : '#fee2e2'),\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      alignItems: 'center',\r\n                      gap: '12px'\r\n                    }}\r\n                  >\r\n                    <div style={{ \r\n                      fontSize: '24px', \r\n                      fontWeight: 'bold',\r\n                      color: results.rxTest.status === 'Success' ? \r\n                        (isDarkMode ? '#34d399' : '#059669') : \r\n                        (isDarkMode ? '#f87171' : '#dc2626')\r\n                    }}>\r\n                      {results.rxTest.status === 'Success' ? 'PASS' : 'FAIL'}\r\n                    </div>\r\n                    \r\n                    <div style={{ color: isDarkMode ? '#d1d5db' : '#6b7280' }}>\r\n                      RX Test {results.rxTest.completed ? 'Completed' : 'Incomplete'}\r\n                    </div>\r\n                    \r\n                    {results.rxTest.error && (\r\n                      <div style={{ \r\n                        color: isDarkMode ? '#f87171' : '#dc2626',\r\n                        marginTop: '8px',\r\n                        fontStyle: 'italic'\r\n                      }}>\r\n                        Error: {results.rxTest.error}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div>\r\n              <button \r\n                onClick={generateReport}\r\n                className={styles.reportButton}\r\n                style={{\r\n                  backgroundColor: \"#10b981\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Generate Report\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n};"],"names":[],"mappings":"AAAA,oEAAoE;;;;;AACpE;AACA;AAAA;AACA;AACA,sUAAiD,yCAAyC;AAE1F,uCAAuC;AACvC;AACA;;;;;;;;;AAEA,8DAA8D;AAC9D,MAAM,kBAAkD,CAAC,EAAE,YAAY,EAAE,iBACvE,6LAAC;QAAI,OAAO;YACV,UAAU;YACV,SAAS;YACT,iBAAiB,eAAe,4BAA4B;YAC5D,OAAO,eAAe,YAAY;YAClC,cAAc;YACd,SAAS,eAAe,UAAU;QACpC;kBAAG;;;;;;KARC;AA0BC,MAAM,iBAAgD,CAAC,EAC5D,OAAO,EACP,IAAI,EACJ,cAAc,EACd,WAAW,EACX,WAAW,EACX,YAAY,EACb;;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IAC5C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3D,yCAAyC;IACzC,MAAM,WAAW,QAAQ,QAAQ,CAAC;IAClC,MAAM,WAAW,QAAQ,QAAQ,CAAC;IAElC,sBAAsB;IACtB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,MAAM;0DAAgB;oBACpB,cAAc,SAAS,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;gBAC5D;;YAEA,gBAAgB;YAChB;YAEA,0BAA0B;YAC1B,MAAM,WAAW,IAAI;4CAAiB;oBACpC;gBACF;;YAEA,SAAS,OAAO,CAAC,SAAS,eAAe,EAAE;gBACzC,YAAY;gBACZ,iBAAiB;oBAAC;iBAAQ;YAC5B;YAEA;4CAAO,IAAM,SAAS,UAAU;;QAClC;mCAAG,EAAE;IAEL,oDAAoD;IACpD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,kDAAkD;YAClD,QAAQ,GAAG,CAAC,yBAAyB,CAAA,GAAA,2HAAA,CAAA,kBAAe,AAAD,EAAE;YAErD,4CAA4C;YAC5C,MAAM,gBAAgB,aAAa,OAAO,CAAC;YAC3C,IAAI,gBAAgB,MAAM,wBAAwB;YAElD,IAAI,eAAe;gBACjB,IAAI;oBACF,MAAM,aAAa,KAAK,KAAK,CAAC;oBAC9B,wEAAwE;oBACxE,IAAI,cAAc,WAAW,MAAM,KAAK,MAAM;wBAC5C,QAAQ,GAAG,CAAC;wBACZ,gBAAgB;oBAClB,OAAO;wBACL,QAAQ,GAAG,CAAC;wBACZ,gBAAgB;oBAClB;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,8BAA8B;gBAC9C;YACF,OAAO;gBACL,QAAQ,GAAG,CAAC;YACd;YAEA,2DAA2D;YAC3D,IAAI,QAAQ,KAAK,WAAW,KAAK,WAAW;gBAC1C,gBAAgB,KAAK,WAAW;gBAChC,QAAQ,GAAG,CAAC,CAAC,wCAAwC,EAAE,eAAe;YACxE;YAEA,qBAAqB;YACrB,CAAA,GAAA,2HAAA,CAAA,oBAAiB,AAAD,EAAE;YAElB,IAAI,eAAe;gBACjB,QAAQ,GAAG,CAAC;YACd,OAAO;gBACL,QAAQ,GAAG,CAAC;YACd;QACF;mCAAG;QAAC;KAAK;IAET,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,mFAAmF;YACnF,IAAI,gBAAgB,CAAC,cAAc,CAAC,WAAW;gBAC7C,QAAQ,GAAG,CAAC,6CAA6C;gBACzD;YACF;QACF;mCAAG;QAAC;QAAc;QAAY;KAAU;IAExC,MAAM,YAAY;QAChB,IAAI,WAAW;QAEf,aAAa;QACb,YAAY;QACZ,SAAS;QACT,cAAc;QAEd,IAAI;YACF,0CAA0C;YAC1C;YAEA,yBAAyB;YACzB,eAAe;YAEf,oCAAoC;YACpC,IAAI,CAAC,QAAS,OAAO,KAAK,YAAY,KAAK,cAC9B,OAAO,KAAK,IAAI,KAAK,YAAa;gBAC7C,QAAQ,IAAI,CAAC;gBAEb,qCAAqC;gBACrC,MAAM,gBAAgB;oBACpB,cAAc,CAAC;wBACb,kDAAkD;wBAClD,OAAO,WAAW,GAAG,CAAC,CAAA;4BACpB,sDAAsD;4BACtD,IAAI,MAAM,QAAQ,CAAC,iBAAiB;gCAClC,OAAO,GAAG,MAAM,MAAM,CAAC;4BACzB,OAAO,IAAI,MAAM,QAAQ,CAAC,eAAe;gCACvC,OAAO,GAAG,MAAM,QAAQ,CAAC;4BAC3B,OAAO,IAAI,MAAM,QAAQ,CAAC,qBAAqB;gCAC7C,OAAO,GAAG,MAAM,KAAK,CAAC;4BACxB,OAAO,IAAI,MAAM,QAAQ,CAAC,sBAAsB;gCAC9C,OAAO,GAAG,MAAM,GAAG,CAAC;4BACtB,OAAO,IAAI,MAAM,QAAQ,CAAC,wBAAwB;gCAChD,OAAO,GAAG,MAAM,GAAG,CAAC;4BACtB,OAAO,IAAI,MAAM,QAAQ,CAAC,eAAe;gCACvC,OAAO,GAAG,MAAM,EAAE,CAAC;4BACrB,OAAO,IAAI,MAAM,QAAQ,CAAC,cAAc;gCACtC,OAAO,GAAG,MAAM,EAAE,CAAC;4BACrB,OAAO,IAAI,MAAM,QAAQ,CAAC,uBAAuB;gCAC/C,OAAO,GAAG,MAAM,CAAC,EAAE,MAAM,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM;4BAC5D,OAAO,IAAI,MAAM,QAAQ,CAAC,cAAc;gCACtC,OAAO,GAAG,MAAM,EAAE,CAAC;4BACrB,OAAO,IAAI,MAAM,QAAQ,CAAC,wBAAwB;gCAChD,OAAO,GAAG,MAAM,EAAE,CAAC;4BACrB,OAAO,IAAI,MAAM,QAAQ,CAAC,uBAAuB;gCAC/C,OAAO,GAAG,MAAM,EAAE,CAAC;4BACrB,OAAO,IAAI,MAAM,QAAQ,CAAC,iBAAiB,MAAM,QAAQ,CAAC,eAAe;gCACvE,OAAO,GAAG,MAAM,CAAC,EAAE,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,KAAK;4BAC1D,OAAO;gCACL,OAAO,GAAG,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM;4BACtD;wBACF;oBACF;oBACA,MAAM,OAAO;wBACX,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,SAAS;wBACvC,OAAO,QAAQ,OAAO;oBACxB;oBACA,SAAS;wBACP,QAAQ,GAAG,CAAC,CAAC,oBAAoB,CAAC;wBAClC,OAAO,QAAQ,OAAO,CAAC;oBACzB;oBACA,aAAa;gBACf;gBAEA,2BAA2B;gBAC3B,OAAO;YACT;YAEA,qDAAqD;YACrD,MAAM,UAAU,MAAM,CAAA,GAAA,+IAAA,CAAA,mBAAgB,AAAD,EAAE,MACrC;gBAAE,QAAQ;gBAAU,QAAQ;YAAS,GACrC,CAAC,MAAM;gBACL,eAAe;gBACf,YAAY;YACd;YAGF,gDAAgD;YAChD,QAAQ,aAAa,GAAG;YAExB,2BAA2B;YAC3B,WAAW;YAEX,0CAA0C;YAC1C,eAAe;QAEjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;YAChD,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;YACzD,YAAY;QACd,SAAU;YACR,aAAa;YACb,YAAY;YACZ,eAAe;QACjB;IACF;IAEA,0CAA0C;IAC1C,MAAM,iBAAiB;QACrB,IAAI,CAAC,SAAS;YACZ,SAAS;YACT;QACF;QAEA,IAAI;YACF,MAAM,aAAa,MAAM,CAAA,GAAA,4IAAA,CAAA,sBAAmB,AAAD,EAAE;YAC7C,MAAM,CAAC,qBAAqB,EAAE,YAAY;QAC5C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;QAC3D;IACF;IAEA,qBACE,6LAAC;QAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;YAC7B,uBACC,6LAAC,oIAAA,CAAA,QAAK;gBAAC,SAAQ;0BACb,cAAA,6LAAC;8BAAG;;;;;;;;;;;0BAIR,6LAAC;gBACC,WAAW,uLAAA,CAAA,UAAM,CAAC,IAAI;gBACtB,OAAO;oBACL,iBAAiB,aAAa,YAAY;oBAC1C,aAAa,aAAa,YAAY;gBACxC;;kCAEA,6LAAC;wBACC,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;wBAC5B,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;kCAEA,cAAA,6LAAC;4BAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;4BAAE,OAAO;gCAAE,OAAO,aAAa,YAAY;4BAAU;;8CAClF,6LAAC;oCAAI,OAAM;oCAA6B,SAAQ;oCAAY,MAAK;oCAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;;sDACxG,6LAAC;4CAAK,UAAS;4CAAU,GAAE;4CAA8L,UAAS;;;;;;sDAClO,6LAAC;4CAAK,GAAE;;;;;;;;;;;;gCACJ;;;;;;;;;;;;kCAKV,6LAAC;wBAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;;0CAChC,6LAAC;gCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,iBAAiB;;kDACtC,6LAAC;wCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,aAAa;;0DAClC,6LAAC;gDAAK,WAAW,uLAAA,CAAA,UAAM,CAAC,YAAY;gDAAE,OAAO;oDAAE,OAAO,aAAa,YAAY;gDAAU;0DACtF,eAAe;;;;;;0DAElB,6LAAC;gDAAK,WAAW,uLAAA,CAAA,UAAM,CAAC,aAAa;gDAAE,OAAO;oDAAE,OAAO,aAAa,YAAY;gDAAU;;oDACvF;oDAAS;;;;;;;;;;;;;kDAGd,6LAAC;wCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;wCAC7B,OAAO;4CAAE,iBAAiB,aAAa,YAAY;wCAAU;kDAE7D,cAAA,6LAAC;4CACC,WAAW,uLAAA,CAAA,UAAM,CAAC,eAAe;4CACjC,OAAO;gDACL,OAAO,GAAG,SAAS,CAAC,CAAC;gDACrB,YAAY;4CACd;;;;;;;;;;;;;;;;;0CAMN,6LAAC;gCAAI,OAAO;oCAAE,cAAc;gCAAO;;kDACjC,6LAAC;wCAAG,OAAO;4CACT,UAAU;4CACV,cAAc;4CACd,OAAO,aAAa,YAAY;wCAClC;kDAAG;;;;;;kDAGH,6LAAC;wCAAI,OAAO;4CAAE,SAAS;4CAAQ,UAAU;4CAAQ,KAAK;wCAAM;;4CACzD,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,6LAAC;oDAAgB,OAAO;wDACtB,SAAS;wDACT,iBAAiB,aAAa,YAAY;wDAC1C,cAAc;wDACd,UAAU;wDACV,OAAO,aAAa,YAAY;wDAChC,SAAS;wDACT,YAAY;wDACZ,KAAK;oDACP;;sEACE,6LAAC;4DAAI,OAAM;4DAA6B,OAAM;4DAAK,QAAO;4DAAK,SAAQ;4DAAY,MAAK;sEACtF,cAAA,6LAAC;gEAAK,UAAS;gEAAU,GAAE;gEAAqH,UAAS;;;;;;;;;;;wDAE1J;;mDAbO;;;;;4CAgBX,QAAQ,MAAM,KAAK,mBAClB,6LAAC;gDAAI,OAAO;oDACV,OAAO,aAAa,YAAY;oDAChC,WAAW;oDACX,UAAU;gDACZ;0DAAG;;;;;;;;;;;;;;;;;;0CAQT,6LAAC;gCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,YAAY;gCAC9B,OAAO;oCACL,iBAAiB,aAAa,YAAY;oCAC1C,aAAa,aAAa,YAAY;gCACxC;;kDAEA,6LAAC;wCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,cAAc;;0DACnC,6LAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,aAAa;0DAC/G,cAAA,6LAAC;oDAAK,GAAE;;;;;;;;;;;4CACF;;;;;;;kDAGR,6LAAC;wCAAK,WAAW,GAAG,uLAAA,CAAA,UAAM,CAAC,WAAW,CAAC,CAAC,EACtC,oBAAoB,uLAAA,CAAA,UAAM,CAAC,YAAY,GAAG,uLAAA,CAAA,UAAM,CAAC,cAAc,EAC/D;kDACC,oBAAoB,eAAe;;;;;;;;;;;;0CAIxC,6LAAC;gCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,YAAY;gCAC9B,OAAO;oCACL,iBAAiB,aAAa,YAAY;oCAC1C,aAAa,aAAa,YAAY;oCACtC,WAAW;gCACb;;kDAEA,6LAAC;wCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,cAAc;;0DACnC,6LAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,aAAa;0DAC7G,cAAA,6LAAC;oDAAK,UAAS;oDAAU,GAAE;oDAA8L,UAAS;;;;;;;;;;;4CAC9N;;;;;;;kDAGR,6LAAC;wCAAK,OAAO;4CAAE,SAAS;4CAAQ,KAAK;wCAAM;;0DACzC,6LAAC;gDAAK,WAAW,GAAG,uLAAA,CAAA,UAAM,CAAC,cAAc,CAAC,CAAC,EACzC,WAAW,uLAAA,CAAA,UAAM,CAAC,cAAc,GAAG,uLAAA,CAAA,UAAM,CAAC,YAAY,EACtD;;oDAAE;oDACG,WAAW,YAAY;;;;;;;0DAE9B,6LAAC;gDAAK,WAAW,GAAG,uLAAA,CAAA,UAAM,CAAC,cAAc,CAAC,CAAC,EACzC,WAAW,uLAAA,CAAA,UAAM,CAAC,cAAc,GAAG,uLAAA,CAAA,UAAM,CAAC,YAAY,EACtD;;oDAAE;oDACG,WAAW,YAAY;;;;;;;;;;;;;;;;;;;0CAMlC,6LAAC;gCACC,SAAS;gCACT,WAAW,uLAAA,CAAA,UAAM,CAAC,MAAM;gCACxB,UAAU;gCACV,OAAO;oCACH,iBAAiB,YAAY,YAC3B,aAAa,YAAY;oCAC3B,OAAO;oCACP,WAAW;gCACb;0CAEC,0BACC;;sDACE,6LAAC;4CAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;4CAAE,OAAM;4CAA6B,OAAM;4CAAK,QAAO;4CAAK,SAAQ;4CAAY,MAAK;4CAAO,QAAO;4CAAe,aAAY;4CAAI,eAAc;4CAAQ,gBAAe;sDACvM,cAAA,6LAAC;gDAAK,GAAE;;;;;;;;;;;wCACJ;;mDAGN,2BACF;;sDACE,6LAAC;4CAAI,OAAM;4CAA6B,SAAQ;4CAAY,MAAK;4CAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;sDAC5G,cAAA,6LAAC;gDAAK,UAAS;gDAAU,GAAE;gDAA+R,UAAS;;;;;;;;;;;wCAC7T;;iEAIR;;sDACE,6LAAC;4CAAI,OAAM;4CAA6B,SAAQ;4CAAY,MAAK;4CAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;sDAC1G,cAAA,6LAAC;gDAAK,UAAS;gDAAU,GAAE;gDAA0G,UAAS;;;;;;;;;;;wCAC1I;;;;;;;;;;;;;;;;;;;;YAQf,yBACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,WAAW,uLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,6LAAC;gCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEA,6LAAC;wCAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC7B,6LAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;0DACxG,cAAA,6LAAC;oDAAK,UAAS;oDAAU,GAAE;oDAAqL,UAAS;;;;;;;;;;;4CACrN;;;;;;;kDAKR,6LAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,6LAAC;gCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;;kDAChC,6LAAC;wCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;wCAC1B,OAAO;4CACL,iBAAiB,aAAa,YAAY;4CAC1C,aAAa,aAAa,YAAY;wCACxC;;0DAEA,6LAAC;gDAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;0DAC7B,cAAA,6LAAC;oDAAI,OAAM;oDAA6B,SAAQ;oDAAY,MAAK;oDAAU,OAAM;oDAAK,QAAO;;sEAC3F,6LAAC;4DAAK,GAAE;;;;;;sEACR,6LAAC;4DAAK,UAAS;4DAAU,GAAE;4DAAyO,UAAS;;;;;;;;;;;;;;;;;0DAGjR,6LAAC;gDAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;;kEAChC,6LAAC;wDACC,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;wDAC3B,OAAO;4DAAE,OAAO,aAAa,YAAY;wDAAU;kEACpD;;;;;;kEAGD,6LAAC;wDACC,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;wDAC3B,OAAO;4DAAE,OAAO,aAAa,YAAY;wDAAU;kEAElD,QAAQ,IAAI,CAAC,OAAO;;;;;;;;;;;;;;;;;;kDAK3B,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDACC,OAAO;oDACL,iBAAiB,aAAa,YAAY;oDAC1C,aAAa,aAAa,YAAY;oDACtC,aAAa;oDACb,cAAc;oDACd,SAAS;gDACX;;kEAEA,6LAAC;wDAAI,OAAO;4DACV,UAAU;4DACV,OAAO,aAAa,YAAY;4DAChC,cAAc;wDAChB;kEAAG;;;;;;kEAGH,6LAAC;wDAAI,OAAO;4DACV,YAAY;4DACZ,OAAO,aAAa,YAAY;wDAClC;kEACG,QAAQ,IAAI,CAAC,KAAK;;;;;;;;;;;;0DAIvB,6LAAC;gDACC,OAAO;oDACL,iBAAiB,aAAa,YAAY;oDAC1C,aAAa,aAAa,YAAY;oDACtC,aAAa;oDACb,cAAc;oDACd,SAAS;gDACX;;kEAEA,6LAAC;wDAAI,OAAO;4DACV,UAAU;4DACV,OAAO,aAAa,YAAY;4DAChC,cAAc;wDAChB;kEAAG;;;;;;kEAGH,6LAAC;wDAAI,OAAO;4DACV,YAAY;4DACZ,OAAO,aAAa,YAAY;wDAClC;kEACG,QAAQ,IAAI,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAO5B,6LAAC;wBACC,WAAW,uLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,6LAAC;gCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEE,6LAAC;wCAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC/B,6LAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;0DACxG,cAAA,6LAAC;oDAAK,UAAS;oDAAU,GAAE;;;;;;;;;;;4CACvB;;;;;;;kDAKR,6LAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,6LAAC;gCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;0CAChC,cAAA,6LAAC;oCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,KAAK;oCACvB,OAAO;wCACL,OAAO,aAAa,YAAY;oCAClC;;sDAEA,6LAAC;4CACC,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;4CAC7B,OAAO;gDACL,iBAAiB,aAAa,YAAY;gDAC1C,OAAO,aAAa,YAAY;4CAClC;sDAEA,cAAA,6LAAC;;kEACC,6LAAC;wDAAG,OAAO;4DAAE,aAAa,aAAa,YAAY;wDAAU;kEAAG;;;;;;kEAChE,6LAAC;wDAAG,OAAO;4DAAE,aAAa,aAAa,YAAY;wDAAU;kEAAG;;;;;;;;;;;;;;;;;sDAGpE,6LAAC;4CAAM,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;8DAChC,6LAAC;;sEACC,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,QAAQ,CAAC,MAAM;;;;;;;;;;;;8DAG1F,6LAAC;oDAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,QAAQ,CAAC,OAAO;;;;;;;;;;;;8DAG3F,6LAAC;;sEACC,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,QAAQ,CAAC,WAAW;;;;;;;;;;;;8DAG/F,6LAAC;oDAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;oDAAE,OAAO;wDAAE,iBAAiB,aAAa,YAAY;oDAAU;;sEAC9F,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAI,QAAQ,MAAM,CAAC,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAOnG,6LAAC;wBACC,WAAW,uLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,6LAAC;gCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEA,6LAAC;wCAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC7B,6LAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;0DACxG,cAAA,6LAAC;oDAAK,UAAS;oDAAU,GAAE;oDAA8L,UAAS;;;;;;;;;;;4CAC9N;;;;;;;kDAKR,6LAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,6LAAC;gCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;;kDAChC,6LAAC;wCAAI,OAAO;4CAAE,cAAc;wCAAO;kDACjC,cAAA,6LAAC;4CAAI,OAAO;gDACV,SAAS;gDACT,gBAAgB;gDAChB,YAAY;4CACd;;8DACE,6LAAC;oDAAK,OAAO;wDAAE,YAAY;oDAAO;8DAAG;;;;;;8DACrC,6LAAC;oDAAK,WAAW,GAAG,uLAAA,CAAA,UAAM,CAAC,WAAW,CAAC,CAAC,EACtC,QAAQ,QAAQ,CAAC,MAAM,KAAK,MAAM,uLAAA,CAAA,UAAM,CAAC,cAAc,GAAG,uLAAA,CAAA,UAAM,CAAC,UAAU,EAC3E;8DACC,QAAQ,QAAQ,CAAC,MAAM,KAAK,MAAM,WAAW;;;;;;;;;;;;;;;;;kDAKpD,6LAAC;wCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,KAAK;wCACvB,OAAO;4CACL,OAAO,aAAa,YAAY;wCAClC;;0DAEA,6LAAC;gDACC,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;gDAC7B,OAAO;oDACL,iBAAiB,aAAa,YAAY;oDAC1C,OAAO,aAAa,YAAY;gDAClC;0DAEA,cAAA,6LAAC;;sEACC,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;;;;;;;;;;;;0DAGpE,6LAAC;gDAAM,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;kEAChC,6LAAC;;0EACC,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAI,QAAQ,QAAQ,CAAC,WAAW;;;;;;;;;;;;kEAG/F,6LAAC;wDAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;wDAAE,OAAO;4DAAE,iBAAiB,aAAa,YAAY;wDAAU;;0EAC9F,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;;oEAAI,QAAQ,QAAQ,CAAC,cAAc;oEAAC;;;;;;;;;;;;;kEAGnG,6LAAC;;0EACC,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAI,QAAQ,QAAQ,CAAC,OAAO;;;;;;;;;;;;kEAG3F,6LAAC;wDAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;wDAAE,OAAO;4DAAE,iBAAiB,aAAa,YAAY;wDAAU;;0EAC9F,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAI,QAAQ,QAAQ,CAAC,QAAQ;;;;;;;;;;;;kEAG5F,6LAAC;;0EACC,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAI,QAAQ,QAAQ,CAAC,OAAO;;;;;;;;;;;;kEAG3F,6LAAC;wDAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;wDAAE,OAAO;4DAAE,iBAAiB,aAAa,YAAY;wDAAU;;0EAC9F,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAI,QAAQ,QAAQ,CAAC,OAAO;;;;;;;;;;;;kEAG3F,6LAAC;;0EACC,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAI,QAAQ,QAAQ,CAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAOpG,6LAAC;wBACC,WAAW,uLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,6LAAC;gCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEA,6LAAC;wCAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC7B,6LAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;0DAC1G,cAAA,6LAAC;oDAAK,UAAS;oDAAU,GAAE;oDAAgH,UAAS;;;;;;;;;;;4CAC9I;;;;;;;kDAKR,6LAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,6LAAC;gCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;;kDAChC,6LAAC;wCAAI,OAAO;4CAAE,cAAc;wCAAO;kDACjC,cAAA,6LAAC;4CAAI,OAAO;gDACV,SAAS;gDACT,gBAAgB;gDAChB,YAAY;4CACd;;8DACE,6LAAC;oDAAK,OAAO;wDAAE,YAAY;oDAAO;8DAAG;;;;;;8DACrC,6LAAC;oDAAK,WAAW,GAAG,uLAAA,CAAA,UAAM,CAAC,WAAW,CAAC,CAAC,EACtC,QAAQ,WAAW,CAAC,MAAM,KAAK,MAAM,uLAAA,CAAA,UAAM,CAAC,cAAc,GAAG,uLAAA,CAAA,UAAM,CAAC,UAAU,EAC9E;8DACC,QAAQ,WAAW,CAAC,MAAM,KAAK,MAAM,WAAW;;;;;;;;;;;;;;;;;kDAKvD,6LAAC;wCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,KAAK;wCACvB,OAAO;4CACL,OAAO,aAAa,YAAY;wCAClC;;0DAEA,6LAAC;gDACC,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;gDAC7B,OAAO;oDACL,iBAAiB,aAAa,YAAY;oDAC1C,OAAO,aAAa,YAAY;gDAClC;0DAEA,cAAA,6LAAC;;sEACC,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;sEAChE,6LAAC;4DAAG,OAAO;gEAAE,aAAa,aAAa,YAAY;4DAAU;sEAAG;;;;;;;;;;;;;;;;;0DAGpE,6LAAC;gDAAM,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;kEAChC,6LAAC;;0EACC,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAI,QAAQ,WAAW,CAAC,QAAQ;;;;;;;;;;;;kEAG/F,6LAAC;wDAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;wDAAE,OAAO;4DAAE,iBAAiB,aAAa,YAAY;wDAAU;;0EAC9F,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAI,QAAQ,WAAW,CAAC,UAAU;;;;;;;;;;;;kEAGjG,6LAAC;;0EACC,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAI,QAAQ,WAAW,CAAC,QAAQ;;;;;;;;;;;;kEAG/F,6LAAC;wDAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;wDAAE,OAAO;4DAAE,iBAAiB,aAAa,YAAY;wDAAU;;0EAC9F,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAI,QAAQ,WAAW,CAAC,QAAQ;;;;;;;;;;;;kEAG/F,6LAAC;;0EACC,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAG;;;;;;0EAChE,6LAAC;gEAAG,OAAO;oEAAE,aAAa,aAAa,YAAY;gEAAU;0EAAI,QAAQ,WAAW,CAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAOvG,6LAAC;wBACC,WAAW,uLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,6LAAC;gCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEA,6LAAC;wCAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC7B,6LAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;0DACxG,cAAA,6LAAC;oDAAK,UAAS;oDAAU,GAAE;oDAA8V,UAAS;;;;;;;;;;;4CAC9X;;;;;;;kDAKR,6LAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,6LAAC;gCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;0CAChC,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,OAAO;gDACV,cAAc;gDACd,SAAS;gDACT,iBAAiB,QAAQ,KAAK,CAAC,YAAY,KAAK,MAC7C,aAAa,4BAA4B,YACzC,aAAa,2BAA2B;gDAC3C,WAAW;4CACb;;8DACE,6LAAC;oDAAI,OAAO;wDAAE,UAAU;wDAAQ,cAAc;oDAAM;8DAAG;;;;;;8DACvD,6LAAC;oDAAI,OAAO;wDACV,YAAY;wDACZ,UAAU;wDACV,OAAO,QAAQ,KAAK,CAAC,YAAY,KAAK,MACnC,aAAa,YAAY,YACzB,aAAa,YAAY;oDAC9B;8DACG,QAAQ,KAAK,CAAC,YAAY,KAAK,MAAM,YAAY;;;;;;;;;;;;sDAItD,6LAAC;4CAAI,OAAO;gDACV,cAAc;gDACd,SAAS;gDACT,iBAAiB,QAAQ,KAAK,CAAC,WAAW,KAAK,MAC5C,aAAa,4BAA4B,YACzC,aAAa,2BAA2B;gDAC3C,WAAW;4CACb;;8DACE,6LAAC;oDAAI,OAAO;wDAAE,UAAU;wDAAQ,cAAc;oDAAM;8DAAG;;;;;;8DACvD,6LAAC;oDAAI,OAAO;wDACV,YAAY;wDACZ,UAAU;wDACV,OAAO,QAAQ,KAAK,CAAC,WAAW,KAAK,MAClC,aAAa,YAAY,YACzB,aAAa,YAAY;oDAC9B;8DACG,QAAQ,KAAK,CAAC,WAAW,KAAK,MAAM,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAO3D,6LAAC;wBACC,WAAW,uLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,6LAAC;gCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEA,6LAAC;wCAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC7B,6LAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;0DACxG,cAAA,6LAAC;oDAAK,UAAS;oDAAU,GAAE;oDAA8E,UAAS;;;;;;;;;;;4CAC9G;;;;;;;kDAKR,6LAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,6LAAC;gCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;0CAChC,cAAA,6LAAC;oCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;;sDAC7B,6LAAC;4CAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;;8DAC7B,6LAAC;oDAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;8DAAE;;;;;;8DAClC,6LAAC;oDAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;wDAAG,QAAQ,WAAW,CAAC,IAAI;wDAAC;;;;;;;;;;;;;sDAG9D,6LAAC;4CAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;;8DAC7B,6LAAC;oDAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;8DAAE;;;;;;8DAClC,6LAAC;oDAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;wDAAG,QAAQ,WAAW,CAAC,IAAI;wDAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAOnE,YAAY,QAAQ,MAAM,kBACzB,6LAAC;wBACC,WAAW,uLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,6LAAC;gCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEA,6LAAC;wCAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC7B,6LAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;0DACxG,cAAA,6LAAC;oDAAK,UAAS;oDAAU,GAAE;oDAAmH,UAAS;;;;;;;;;;;4CACnJ;;;;;;;kDAKR,6LAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,6LAAC;gCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;0CAChC,cAAA,6LAAC;oCACC,OAAO;wCACL,SAAS;wCACT,cAAc;wCACd,iBAAiB,QAAQ,MAAM,CAAC,MAAM,KAAK,YACxC,aAAa,4BAA4B,YACzC,aAAa,2BAA2B;wCAC3C,SAAS;wCACT,eAAe;wCACf,YAAY;wCACZ,KAAK;oCACP;;sDAEA,6LAAC;4CAAI,OAAO;gDACV,UAAU;gDACV,YAAY;gDACZ,OAAO,QAAQ,MAAM,CAAC,MAAM,KAAK,YAC9B,aAAa,YAAY,YACzB,aAAa,YAAY;4CAC9B;sDACG,QAAQ,MAAM,CAAC,MAAM,KAAK,YAAY,SAAS;;;;;;sDAGlD,6LAAC;4CAAI,OAAO;gDAAE,OAAO,aAAa,YAAY;4CAAU;;gDAAG;gDAChD,QAAQ,MAAM,CAAC,SAAS,GAAG,cAAc;;;;;;;wCAGnD,QAAQ,MAAM,CAAC,KAAK,kBACnB,6LAAC;4CAAI,OAAO;gDACV,OAAO,aAAa,YAAY;gDAChC,WAAW;gDACX,WAAW;4CACb;;gDAAG;gDACO,QAAQ,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;oBASvC,YAAY,QAAQ,MAAM,kBACzB,6LAAC;wBACC,WAAW,uLAAA,CAAA,UAAM,CAAC,IAAI;wBACtB,OAAO;4BACL,iBAAiB,aAAa,YAAY;4BAC1C,aAAa,aAAa,YAAY;wBACxC;;0CAEA,6LAAC;gCACC,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;gCAC5B,OAAO;oCACL,YAAY,aACR,gDACA;oCACJ,OAAO,aAAa,YAAY;gCAClC;;kDAEA,6LAAC;wCAAG,WAAW,uLAAA,CAAA,UAAM,CAAC,SAAS;;0DAC7B,6LAAC;gDAAI,OAAM;gDAA6B,SAAQ;gDAAY,MAAK;gDAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,QAAQ;;kEACxG,6LAAC;wDAAK,GAAE;;;;;;kEACR,6LAAC;wDAAK,GAAE;;;;;;;;;;;;4CACJ;;;;;;;kDAKR,6LAAC;wCAAgB,cAAc;;;;;;;;;;;;0CAGjC,6LAAC;gCAAI,WAAW,uLAAA,CAAA,UAAM,CAAC,WAAW;0CAChC,cAAA,6LAAC;oCACC,OAAO;wCACL,SAAS;wCACT,cAAc;wCACd,iBAAiB,QAAQ,MAAM,CAAC,MAAM,KAAK,YACxC,aAAa,4BAA4B,YACzC,aAAa,2BAA2B;wCAC3C,SAAS;wCACT,eAAe;wCACf,YAAY;wCACZ,KAAK;oCACP;;sDAEA,6LAAC;4CAAI,OAAO;gDACV,UAAU;gDACV,YAAY;gDACZ,OAAO,QAAQ,MAAM,CAAC,MAAM,KAAK,YAC9B,aAAa,YAAY,YACzB,aAAa,YAAY;4CAC9B;sDACG,QAAQ,MAAM,CAAC,MAAM,KAAK,YAAY,SAAS;;;;;;sDAGlD,6LAAC;4CAAI,OAAO;gDAAE,OAAO,aAAa,YAAY;4CAAU;;gDAAG;gDAChD,QAAQ,MAAM,CAAC,SAAS,GAAG,cAAc;;;;;;;wCAGnD,QAAQ,MAAM,CAAC,KAAK,kBACnB,6LAAC;4CAAI,OAAO;gDACV,OAAO,aAAa,YAAY;gDAChC,WAAW;gDACX,WAAW;4CACb;;gDAAG;gDACO,QAAQ,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;kCAQxC,6LAAC;kCACC,cAAA,6LAAC;4BACC,SAAS;4BACT,WAAW,uLAAA,CAAA,UAAM,CAAC,YAAY;4BAC9B,OAAO;gCACL,iBAAiB;gCACjB,OAAO;4BACT;;8CAEA,6LAAC;oCAAI,OAAM;oCAA6B,SAAQ;oCAAY,MAAK;oCAAe,WAAW,uLAAA,CAAA,UAAM,CAAC,UAAU;8CAC1G,cAAA,6LAAC;wCAAK,UAAS;wCAAU,GAAE;wCAAqL,UAAS;;;;;;;;;;;gCACrN;;;;;;;;;;;;;;;;;;;;;;;;AAQtB;GAhhCa;MAAA","debugId":null}}]
}