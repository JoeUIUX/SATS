{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/CheckoutTestProgress/components/OBC1TestPanel.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"button\": \"OBC1TestPanel-module___sU2RW__button\",\n  \"buttonIcon\": \"OBC1TestPanel-module___sU2RW__buttonIcon\",\n  \"card\": \"OBC1TestPanel-module___sU2RW__card\",\n  \"cardContent\": \"OBC1TestPanel-module___sU2RW__cardContent\",\n  \"cardHeader\": \"OBC1TestPanel-module___sU2RW__cardHeader\",\n  \"cardIcon\": \"OBC1TestPanel-module___sU2RW__cardIcon\",\n  \"cardTitle\": \"OBC1TestPanel-module___sU2RW__cardTitle\",\n  \"infoCard\": \"OBC1TestPanel-module___sU2RW__infoCard\",\n  \"infoContent\": \"OBC1TestPanel-module___sU2RW__infoContent\",\n  \"infoIcon\": \"OBC1TestPanel-module___sU2RW__infoIcon\",\n  \"infoLabel\": \"OBC1TestPanel-module___sU2RW__infoLabel\",\n  \"infoValue\": \"OBC1TestPanel-module___sU2RW__infoValue\",\n  \"parameterBox\": \"OBC1TestPanel-module___sU2RW__parameterBox\",\n  \"parameterIcon\": \"OBC1TestPanel-module___sU2RW__parameterIcon\",\n  \"parameterLabel\": \"OBC1TestPanel-module___sU2RW__parameterLabel\",\n  \"parameterValue\": \"OBC1TestPanel-module___sU2RW__parameterValue\",\n  \"progressBar\": \"OBC1TestPanel-module___sU2RW__progressBar\",\n  \"progressBarFill\": \"OBC1TestPanel-module___sU2RW__progressBarFill\",\n  \"progressContainer\": \"OBC1TestPanel-module___sU2RW__progressContainer\",\n  \"progressLabel\": \"OBC1TestPanel-module___sU2RW__progressLabel\",\n  \"progressStep\": \"OBC1TestPanel-module___sU2RW__progressStep\",\n  \"progressValue\": \"OBC1TestPanel-module___sU2RW__progressValue\",\n  \"reportButton\": \"OBC1TestPanel-module___sU2RW__reportButton\",\n  \"spin\": \"OBC1TestPanel-module___sU2RW__spin\",\n  \"spinnerIcon\": \"OBC1TestPanel-module___sU2RW__spinnerIcon\",\n  \"statusBadge\": \"OBC1TestPanel-module___sU2RW__statusBadge\",\n  \"table\": \"OBC1TestPanel-module___sU2RW__table\",\n  \"tableBody\": \"OBC1TestPanel-module___sU2RW__tableBody\",\n  \"tableHeader\": \"OBC1TestPanel-module___sU2RW__tableHeader\",\n  \"tableRowAlt\": \"OBC1TestPanel-module___sU2RW__tableRowAlt\",\n  \"tempCard\": \"OBC1TestPanel-module___sU2RW__tempCard\",\n  \"tempGrid\": \"OBC1TestPanel-module___sU2RW__tempGrid\",\n  \"tempLabel\": \"OBC1TestPanel-module___sU2RW__tempLabel\",\n  \"tempValue\": \"OBC1TestPanel-module___sU2RW__tempValue\",\n  \"testPanel\": \"OBC1TestPanel-module___sU2RW__testPanel\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/TestHistoryChart.tsx"],"sourcesContent":["// src/components/TestHistoryChart.tsx\r\nimport React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\ninterface TestHistoryChartProps {\r\n  data: any[];\r\n  metricPath: string;\r\n  metricLabel: string;\r\n  isDarkMode: boolean;\r\n}\r\n\r\nexport const TestHistoryChart: React.FC<TestHistoryChartProps> = ({\r\n  data,\r\n  metricPath,\r\n  metricLabel,\r\n  isDarkMode\r\n}) => {\r\n  // Extract the metric name for use as the data key\r\n  const metricName = metricPath.split('.').pop() || 'value';\r\n  \r\n  // Format the data for the chart\r\n  const chartData = data.map(item => {\r\n    const metricValue = extractValue(item.results, metricPath);\r\n    return {\r\n      date: new Date(item.test_date).toLocaleDateString(),\r\n      [metricName]: metricValue,\r\n      tooltipLabel: new Date(item.test_date).toLocaleString()\r\n    };\r\n  }).filter(item => item[metricName] !== null);\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={240}>\r\n      <LineChart\r\n        data={chartData}\r\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" stroke={isDarkMode ? \"#374151\" : \"#e5e7eb\"} />\r\n        <XAxis \r\n          dataKey=\"date\" \r\n          stroke={isDarkMode ? \"#9ca3af\" : \"#6b7280\"}\r\n          tick={{ fill: isDarkMode ? \"#9ca3af\" : \"#6b7280\" }}\r\n        />\r\n        <YAxis \r\n          stroke={isDarkMode ? \"#9ca3af\" : \"#6b7280\"} \r\n          tick={{ fill: isDarkMode ? \"#9ca3af\" : \"#6b7280\" }}\r\n        />\r\n        <Tooltip \r\n          labelFormatter={(label, items) => { \r\n            const item = items[0]?.payload;\r\n            return item?.tooltipLabel || label;\r\n          }}\r\n          contentStyle={{\r\n            backgroundColor: isDarkMode ? '#1f2937' : '#ffffff',\r\n            borderColor: isDarkMode ? '#374151' : '#e5e7eb',\r\n            color: isDarkMode ? '#e5e7eb' : '#111827'\r\n          }}\r\n        />\r\n        <Legend />\r\n        <Line \r\n          type=\"monotone\" \r\n          dataKey={metricName} \r\n          name={metricLabel}\r\n          stroke=\"#3b82f6\" \r\n          strokeWidth={2}\r\n          dot={{ r: 4, stroke: '#3b82f6', fill: 'white' }}\r\n          activeDot={{ r: 6, stroke: '#3b82f6', strokeWidth: 2, fill: 'white' }}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\n// Helper function to extract values from nested objects\r\nexport const extractValue = (obj: any, path: string): number | null => {\r\n  if (!obj) return null;\r\n  \r\n  const parts = path.split('.');\r\n  let value = obj;\r\n  \r\n  for (const part of parts) {\r\n    if (value && typeof value === 'object' && part in value) {\r\n      value = value[part];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  \r\n  // Try to parse as number\r\n  const numValue = parseFloat(value);\r\n  return isNaN(numValue) ? null : numValue;\r\n};"],"names":[],"mappings":"AAAA,sCAAsC;;;;;;AAEtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AASO,MAAM,mBAAoD,CAAC,EAChE,IAAI,EACJ,UAAU,EACV,WAAW,EACX,UAAU,EACX;IACC,kDAAkD;IAClD,MAAM,aAAa,WAAW,KAAK,CAAC,KAAK,GAAG,MAAM;IAElD,gCAAgC;IAChC,MAAM,YAAY,KAAK,GAAG,CAAC,CAAA;QACzB,MAAM,cAAc,aAAa,KAAK,OAAO,EAAE;QAC/C,OAAO;YACL,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE,kBAAkB;YACjD,CAAC,WAAW,EAAE;YACd,cAAc,IAAI,KAAK,KAAK,SAAS,EAAE,cAAc;QACvD;IACF,GAAG,MAAM,CAAC,CAAA,OAAQ,IAAI,CAAC,WAAW,KAAK;IAEvC,qBACE,6LAAC,sKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,6LAAC,wJAAA,CAAA,YAAS;YACR,MAAM;YACN,QAAQ;gBAAE,KAAK;gBAAG,OAAO;gBAAI,MAAM;gBAAI,QAAQ;YAAE;;8BAEjD,6LAAC,gKAAA,CAAA,gBAAa;oBAAC,iBAAgB;oBAAM,QAAQ,aAAa,YAAY;;;;;;8BACtE,6LAAC,wJAAA,CAAA,QAAK;oBACJ,SAAQ;oBACR,QAAQ,aAAa,YAAY;oBACjC,MAAM;wBAAE,MAAM,aAAa,YAAY;oBAAU;;;;;;8BAEnD,6LAAC,wJAAA,CAAA,QAAK;oBACJ,QAAQ,aAAa,YAAY;oBACjC,MAAM;wBAAE,MAAM,aAAa,YAAY;oBAAU;;;;;;8BAEnD,6LAAC,0JAAA,CAAA,UAAO;oBACN,gBAAgB,CAAC,OAAO;wBACtB,MAAM,OAAO,KAAK,CAAC,EAAE,EAAE;wBACvB,OAAO,MAAM,gBAAgB;oBAC/B;oBACA,cAAc;wBACZ,iBAAiB,aAAa,YAAY;wBAC1C,aAAa,aAAa,YAAY;wBACtC,OAAO,aAAa,YAAY;oBAClC;;;;;;8BAEF,6LAAC,yJAAA,CAAA,SAAM;;;;;8BACP,6LAAC,uJAAA,CAAA,OAAI;oBACH,MAAK;oBACL,SAAS;oBACT,MAAM;oBACN,QAAO;oBACP,aAAa;oBACb,KAAK;wBAAE,GAAG;wBAAG,QAAQ;wBAAW,MAAM;oBAAQ;oBAC9C,WAAW;wBAAE,GAAG;wBAAG,QAAQ;wBAAW,aAAa;wBAAG,MAAM;oBAAQ;;;;;;;;;;;;;;;;;AAK9E;KA3Da;AA8DN,MAAM,eAAe,CAAC,KAAU;IACrC,IAAI,CAAC,KAAK,OAAO;IAEjB,MAAM,QAAQ,KAAK,KAAK,CAAC;IACzB,IAAI,QAAQ;IAEZ,KAAK,MAAM,QAAQ,MAAO;QACxB,IAAI,SAAS,OAAO,UAAU,YAAY,QAAQ,OAAO;YACvD,QAAQ,KAAK,CAAC,KAAK;QACrB,OAAO;YACL,OAAO;QACT;IACF;IAEA,yBAAyB;IACzB,MAAM,WAAW,WAAW;IAC5B,OAAO,MAAM,YAAY,OAAO;AAClC","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/TestHistoryTable.tsx"],"sourcesContent":["// src/components/TestHistoryTable.tsx\r\nimport React from 'react';\r\n\r\ninterface TestHistoryTableProps {\r\n  testHistory: any[];\r\n  isDarkMode: boolean;\r\n  onViewDetails: (item: any) => void;\r\n}\r\n\r\nexport const TestHistoryTable: React.FC<TestHistoryTableProps> = ({\r\n  testHistory,\r\n  isDarkMode,\r\n  onViewDetails\r\n}) => {\r\n  return (\r\n    <div style={{\r\n      borderRadius: '8px',\r\n      overflow: 'hidden',\r\n      border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n    }}>\r\n      <table style={{ \r\n        width: '100%', \r\n        borderCollapse: 'collapse',\r\n        fontSize: '14px'\r\n      }}>\r\n        <thead style={{ \r\n          backgroundColor: isDarkMode ? '#1f2937' : '#f9fafb',\r\n          color: isDarkMode ? '#d1d5db' : '#6b7280',\r\n          fontWeight: 500\r\n        }}>\r\n          <tr>\r\n            <th style={{ \r\n              padding: '12px 16px',\r\n              textAlign: 'left',\r\n              borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n            }}>\r\n              Date/Time\r\n            </th>\r\n            <th style={{ \r\n              padding: '12px 16px',\r\n              textAlign: 'left',\r\n              borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n            }}>\r\n              Test Options\r\n            </th>\r\n            <th style={{ \r\n              padding: '12px 16px',\r\n              textAlign: 'left',\r\n              borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n            }}>\r\n              Status\r\n            </th>\r\n            <th style={{ \r\n              padding: '12px 16px',\r\n              textAlign: 'left',\r\n              borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n            }}>\r\n              Details\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {testHistory.slice().reverse().map((item, index) => (\r\n            <tr key={item.id} style={{ \r\n              backgroundColor: index % 2 === 0 \r\n                ? (isDarkMode ? '#111827' : '#ffffff') \r\n                : (isDarkMode ? '#1f2937' : '#f9fafb') \r\n            }}>\r\n              <td style={{ \r\n                padding: '12px 16px',\r\n                borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                color: isDarkMode ? '#e5e7eb' : '#111827'\r\n              }}>\r\n                {new Date(item.test_date).toLocaleString()}\r\n              </td>\r\n              <td style={{ \r\n                padding: '12px 16px',\r\n                borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                color: isDarkMode ? '#e5e7eb' : '#111827'\r\n              }}>\r\n                {item.results.testedOptions ? item.results.testedOptions.join(', ') : 'N/A'}\r\n              </td>\r\n              <td style={{ \r\n                padding: '12px 16px',\r\n                borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n              }}>\r\n                <span style={{ \r\n                  display: 'inline-block',\r\n                  padding: '4px 8px',\r\n                  borderRadius: '9999px',\r\n                  fontSize: '12px',\r\n                  fontWeight: 500,\r\n                  backgroundColor: item.status === 'completed' \r\n                    ? (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : '#ecfdf5')\r\n                    : (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : '#fee2e2'),\r\n                  color: item.status === 'completed'\r\n                    ? (isDarkMode ? '#34d399' : '#047857')\r\n                    : (isDarkMode ? '#f87171' : '#b91c1c')\r\n                }}>\r\n                  {item.status === 'completed' ? 'SUCCESS' : 'FAILED'}\r\n                </span>\r\n              </td>\r\n              <td style={{ \r\n                padding: '12px 16px',\r\n                borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n              }}>\r\n                <button \r\n                  onClick={() => onViewDetails(item)}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? '#2563eb' : '#3b82f6',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '4px',\r\n                    padding: '4px 8px',\r\n                    fontSize: '12px',\r\n                    cursor: 'pointer',\r\n                    fontWeight: 500\r\n                  }}\r\n                >\r\n                  View Details\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"AAAA,sCAAsC;;;;;;AAS/B,MAAM,mBAAoD,CAAC,EAChE,WAAW,EACX,UAAU,EACV,aAAa,EACd;IACC,qBACE,6LAAC;QAAI,OAAO;YACV,cAAc;YACd,UAAU;YACV,QAAQ,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;QAC3D;kBACE,cAAA,6LAAC;YAAM,OAAO;gBACZ,OAAO;gBACP,gBAAgB;gBAChB,UAAU;YACZ;;8BACE,6LAAC;oBAAM,OAAO;wBACZ,iBAAiB,aAAa,YAAY;wBAC1C,OAAO,aAAa,YAAY;wBAChC,YAAY;oBACd;8BACE,cAAA,6LAAC;;0CACC,6LAAC;gCAAG,OAAO;oCACT,SAAS;oCACT,WAAW;oCACX,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;gCACjE;0CAAG;;;;;;0CAGH,6LAAC;gCAAG,OAAO;oCACT,SAAS;oCACT,WAAW;oCACX,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;gCACjE;0CAAG;;;;;;0CAGH,6LAAC;gCAAG,OAAO;oCACT,SAAS;oCACT,WAAW;oCACX,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;gCACjE;0CAAG;;;;;;0CAGH,6LAAC;gCAAG,OAAO;oCACT,SAAS;oCACT,WAAW;oCACX,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;gCACjE;0CAAG;;;;;;;;;;;;;;;;;8BAKP,6LAAC;8BACE,YAAY,KAAK,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC,MAAM,sBACxC,6LAAC;4BAAiB,OAAO;gCACvB,iBAAiB,QAAQ,MAAM,IAC1B,aAAa,YAAY,YACzB,aAAa,YAAY;4BAChC;;8CACE,6LAAC;oCAAG,OAAO;wCACT,SAAS;wCACT,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;wCAC/D,OAAO,aAAa,YAAY;oCAClC;8CACG,IAAI,KAAK,KAAK,SAAS,EAAE,cAAc;;;;;;8CAE1C,6LAAC;oCAAG,OAAO;wCACT,SAAS;wCACT,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;wCAC/D,OAAO,aAAa,YAAY;oCAClC;8CACG,KAAK,OAAO,CAAC,aAAa,GAAG,KAAK,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ;;;;;;8CAExE,6LAAC;oCAAG,OAAO;wCACT,SAAS;wCACT,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;oCACjE;8CACE,cAAA,6LAAC;wCAAK,OAAO;4CACX,SAAS;4CACT,SAAS;4CACT,cAAc;4CACd,UAAU;4CACV,YAAY;4CACZ,iBAAiB,KAAK,MAAM,KAAK,cAC5B,aAAa,4BAA4B,YACzC,aAAa,2BAA2B;4CAC7C,OAAO,KAAK,MAAM,KAAK,cAClB,aAAa,YAAY,YACzB,aAAa,YAAY;wCAChC;kDACG,KAAK,MAAM,KAAK,cAAc,YAAY;;;;;;;;;;;8CAG/C,6LAAC;oCAAG,OAAO;wCACT,SAAS;wCACT,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,WAAW;oCACjE;8CACE,cAAA,6LAAC;wCACC,SAAS,IAAM,cAAc;wCAC7B,OAAO;4CACL,iBAAiB,aAAa,YAAY;4CAC1C,OAAO;4CACP,QAAQ;4CACR,cAAc;4CACd,SAAS;4CACT,UAAU;4CACV,QAAQ;4CACR,YAAY;wCACd;kDACD;;;;;;;;;;;;2BAvDI,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;AAiE5B;KAvHa","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/TestDetailsModal.tsx"],"sourcesContent":["// src/components/TestDetailsModal.tsx\r\nimport React from 'react';\r\n\r\ninterface TestDetailsModalProps {\r\n  test: any;\r\n  onClose: () => void;\r\n  isDarkMode: boolean;\r\n}\r\n\r\nexport const TestDetailsModal: React.FC<TestDetailsModalProps> = ({\r\n  test,\r\n  onClose,\r\n  isDarkMode\r\n}) => {\r\n  if (!test) return null;\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      zIndex: 1000\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: isDarkMode ? '#1e1e1e' : 'white',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n        width: '90%',\r\n        maxWidth: '800px',\r\n        maxHeight: '90vh',\r\n        overflow: 'auto',\r\n        position: 'relative'\r\n      }}>\r\n        <div style={{\r\n          padding: '16px',\r\n          borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center'\r\n        }}>\r\n          <h3 style={{\r\n            fontSize: '18px',\r\n            fontWeight: 600,\r\n            color: isDarkMode ? '#f3f4f6' : '#111827',\r\n            margin: 0\r\n          }}>\r\n            Test Details - {new Date(test.test_date).toLocaleString()}\r\n          </h3>\r\n          <button\r\n            onClick={onClose}\r\n            style={{\r\n              backgroundColor: 'transparent',\r\n              border: 'none',\r\n              fontSize: '24px',\r\n              cursor: 'pointer',\r\n              color: isDarkMode ? '#9ca3af' : '#6b7280'\r\n            }}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n        \r\n        <div style={{ padding: '16px' }}>\r\n          <div style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: 'repeat(2, 1fr)',\r\n            gap: '16px',\r\n            marginBottom: '16px'\r\n          }}>\r\n            <div>\r\n              <div style={{\r\n                fontSize: '14px',\r\n                fontWeight: 500,\r\n                color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                marginBottom: '4px'\r\n              }}>\r\n                Component\r\n              </div>\r\n              <div style={{\r\n                fontSize: '16px',\r\n                color: isDarkMode ? '#f3f4f6' : '#111827'\r\n              }}>\r\n                {test.component_id}\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <div style={{\r\n                fontSize: '14px',\r\n                fontWeight: 500,\r\n                color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                marginBottom: '4px'\r\n              }}>\r\n                Test Type\r\n              </div>\r\n              <div style={{\r\n                fontSize: '16px',\r\n                color: isDarkMode ? '#f3f4f6' : '#111827',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '8px'\r\n              }}>\r\n                {test.test_type || 'Standard Test'}\r\n                \r\n                {/* badge to indicate if test was real or simulated */}\r\n                {test.results && test.results.simulated ? (\r\n                  <span style={{\r\n                    backgroundColor: 'rgba(245, 158, 11, 0.1)',\r\n                    color: '#f59e0b',\r\n                    fontSize: '12px',\r\n                    padding: '2px 6px',\r\n                    borderRadius: '4px',\r\n                    fontWeight: 500\r\n                  }}>\r\n                    Simulated\r\n                  </span>\r\n                ) : (\r\n                  <span style={{\r\n                    backgroundColor: 'rgba(16, 185, 129, 0.1)',\r\n                    color: '#10b981',\r\n                    fontSize: '12px',\r\n                    padding: '2px 6px',\r\n                    borderRadius: '4px',\r\n                    fontWeight: 500\r\n                  }}>\r\n                    Real Data\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <div style={{\r\n                fontSize: '14px',\r\n                fontWeight: 500,\r\n                color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                marginBottom: '4px'\r\n              }}>\r\n                Status\r\n              </div>\r\n              <div style={{\r\n                display: 'inline-block',\r\n                padding: '4px 8px',\r\n                borderRadius: '4px',\r\n                fontSize: '14px',\r\n                backgroundColor: test.status === 'completed' \r\n                  ? (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : '#ecfdf5')\r\n                  : (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : '#fee2e2'),\r\n                color: test.status === 'completed'\r\n                  ? (isDarkMode ? '#34d399' : '#047857')\r\n                  : (isDarkMode ? '#f87171' : '#b91c1c')\r\n              }}>\r\n                {test.status === 'completed' ? 'SUCCESS' : 'FAILED'}\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <div style={{\r\n                fontSize: '14px',\r\n                fontWeight: 500,\r\n                color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                marginBottom: '4px'\r\n              }}>\r\n                Test Date\r\n              </div>\r\n              <div style={{\r\n                fontSize: '16px',\r\n                color: isDarkMode ? '#f3f4f6' : '#111827'\r\n              }}>\r\n                {new Date(test.test_date).toLocaleString()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div style={{ marginTop: '24px' }}>\r\n            <h4 style={{\r\n              fontSize: '16px',\r\n              fontWeight: 600,\r\n              color: isDarkMode ? '#f3f4f6' : '#111827',\r\n              marginBottom: '12px'\r\n            }}>\r\n              Test Results\r\n            </h4>\r\n            \r\n            <div style={{\r\n              backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n              borderRadius: '6px',\r\n              padding: '16px',\r\n              overflow: 'auto',\r\n              maxHeight: '400px',\r\n              fontFamily: 'monospace',\r\n              fontSize: '14px',\r\n              color: isDarkMode ? '#f3f4f6' : '#111827',\r\n              whiteSpace: 'pre-wrap'\r\n            }}>\r\n              {JSON.stringify(test.results, null, 2)}\r\n            </div>\r\n          </div>\r\n          \r\n          {test.notes && (\r\n            <div style={{ marginTop: '24px' }}>\r\n              <h4 style={{\r\n                fontSize: '16px',\r\n                fontWeight: 600,\r\n                color: isDarkMode ? '#f3f4f6' : '#111827',\r\n                marginBottom: '12px'\r\n              }}>\r\n                Notes\r\n              </h4>\r\n              <div style={{\r\n                padding: '12px',\r\n                backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                borderRadius: '6px',\r\n                color: isDarkMode ? '#f3f4f6' : '#111827'\r\n              }}>\r\n                {test.notes}\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div style={{ \r\n            marginTop: '24px',\r\n            display: 'flex',\r\n            justifyContent: 'flex-end'\r\n          }}>\r\n            <button\r\n              onClick={() => {\r\n                // Export the test details\r\n                const detailsJson = JSON.stringify(test, null, 2);\r\n                const blob = new Blob([detailsJson], { type: 'application/json' });\r\n                const url = URL.createObjectURL(blob);\r\n                \r\n                const a = document.createElement('a');\r\n                a.href = url;\r\n                a.download = `test_details_${test.id}.json`;\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                document.body.removeChild(a);\r\n                URL.revokeObjectURL(url);\r\n              }}\r\n              style={{\r\n                backgroundColor: '#3b82f6',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '6px',\r\n                padding: '8px 16px',\r\n                fontSize: '14px',\r\n                fontWeight: 500,\r\n                cursor: 'pointer',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: '8px'\r\n              }}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              Export Details\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/CheckoutTestProgress/components/SBandTestPanel.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"card\": \"SBandTestPanel-module__sHVpCa__card\",\n  \"colorCompleted\": \"SBandTestPanel-module__sHVpCa__colorCompleted\",\n  \"colorError\": \"SBandTestPanel-module__sHVpCa__colorError\",\n  \"colorWaiting\": \"SBandTestPanel-module__sHVpCa__colorWaiting\",\n  \"dark\": \"SBandTestPanel-module__sHVpCa__dark\",\n  \"error\": \"SBandTestPanel-module__sHVpCa__error\",\n  \"frequencyValue\": \"SBandTestPanel-module__sHVpCa__frequencyValue\",\n  \"modeActive\": \"SBandTestPanel-module__sHVpCa__modeActive\",\n  \"modeInactive\": \"SBandTestPanel-module__sHVpCa__modeInactive\",\n  \"modeIndicator\": \"SBandTestPanel-module__sHVpCa__modeIndicator\",\n  \"parameterBox\": \"SBandTestPanel-module__sHVpCa__parameterBox\",\n  \"parameterGrid\": \"SBandTestPanel-module__sHVpCa__parameterGrid\",\n  \"parameterIcon\": \"SBandTestPanel-module__sHVpCa__parameterIcon\",\n  \"parameterLabel\": \"SBandTestPanel-module__sHVpCa__parameterLabel\",\n  \"parameterValue\": \"SBandTestPanel-module__sHVpCa__parameterValue\",\n  \"sbandSpecificIcon\": \"SBandTestPanel-module__sHVpCa__sbandSpecificIcon\",\n  \"statusBadge\": \"SBandTestPanel-module__sHVpCa__statusBadge\",\n  \"success\": \"SBandTestPanel-module__sHVpCa__success\",\n  \"tempCard\": \"SBandTestPanel-module__sHVpCa__tempCard\",\n  \"tempGrid\": \"SBandTestPanel-module__sHVpCa__tempGrid\",\n  \"tempLabel\": \"SBandTestPanel-module__sHVpCa__tempLabel\",\n  \"tempValue\": \"SBandTestPanel-module__sHVpCa__tempValue\",\n  \"testResultBox\": \"SBandTestPanel-module__sHVpCa__testResultBox\",\n  \"testResultTitle\": \"SBandTestPanel-module__sHVpCa__testResultTitle\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 879, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/index.ts"],"sourcesContent":["// src/components/CheckoutTestProgress/components/index.ts\r\n// Export all test panel components, test history feature components for easy importing\r\n\r\nexport { OBC1TestPanel } from './OBC1TestPanel';\r\nexport { OBC2TestPanel } from './OBC2TestPanel';\r\nexport { SBandTestPanel } from './SBandTestPanel';\r\nexport { UHFTestPanel } from './UHFTestPanel';\r\nexport { PropulsionTestPanel } from './PropulsionTestPanel';\r\nexport { PCSTestPanel } from './PCSTestPanel';\r\nexport { XBandTestPanel } from './XBandTestPanel';\r\nexport { LEOCAMTestPanel } from './LEOCAMTestPanel';\r\nexport * from './HEPSTestPanel';\r\nexport * from './ADCSTestPanel';\r\nexport * from './GPSTestPanel';\r\n\r\nexport { TestHistoryChart } from './TestHistoryChart';\r\nexport { TestHistoryTable } from './TestHistoryTable';\r\nexport { TestDetailsModal } from './TestDetailsModal';"],"names":[],"mappings":"AAAA,0DAA0D;AAC1D,uFAAuF","debugId":null}}]
}