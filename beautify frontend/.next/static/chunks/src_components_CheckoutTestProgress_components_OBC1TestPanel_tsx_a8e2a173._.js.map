{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/OBC1TestPanel.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/components/OBC1TestPanel.tsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css';\r\n\r\n// Import the OBC1-specific functions\r\nimport { runOBC1Checkout } from '@/services/checkout/obc1Checkout';\r\nimport { generateOBC1Report } from '@/services/reports/obc1Report';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface OBC1TestPanelProps {\r\n  options: string[];  // Now contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const OBC1TestPanel: React.FC<OBC1TestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // callback function:\r\n  const handleTestComplete = useCallback((testResults: any) => {\r\n    // Immediately set local state\r\n    setIsRunning(false);\r\n    setProgress(100);\r\n    setCurrentStep('Test Complete');\r\n    \r\n    // Notify parent after a small delay to ensure local state is updated first\r\n    setTimeout(() => {\r\n      onTestComplete(testResults);\r\n    }, 100);\r\n  }, [onTestComplete]);\r\n  \r\n  // Determine if eMMC option is enabled - this is now based on the filtered options\r\n  const enableEmmc = options.includes('eMMC');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      console.log(\"Auto-starting test because isInitialRun =\", isInitialRun);\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting OBC-1 Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for common parameters\r\n              if (param.includes(\"FW_Ver\")) {\r\n                const version = param.includes(\"Major\") ? \"1\" : \r\n                               param.includes(\"Minor\") ? \"2\" : \"3\";\r\n                return `${param}=${version}`;\r\n              } else if (param.includes(\"3V3\") || param.includes(\"5V\")) {\r\n                // Voltage values in mV\r\n                return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n              } else if (param.includes(\"temp\") || param.includes(\"Temp\")) {\r\n                // Temperature values\r\n                return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n              } else if (param.includes(\"eMMC\")) {\r\n                return `${param}=1`;\r\n              } else {\r\n                return `${param}=simulated`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the OBC-1 checkout test with progress updates\r\n      const results = await runOBC1Checkout(sock, enableEmmc, (step, percent) => {\r\n        setCurrentStep(step);\r\n        setProgress(percent);\r\n      });\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Instead of updating state and calling onTestComplete directly,\r\n      // use the handleTestComplete callback to sequence things properly\r\n      handleTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running test:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      \r\n      // Update local state\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Failed');\r\n      \r\n      // Notify parent of error\r\n      onTestError(error);\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateOBC1Report(results);\r\n      alert(`OBC-1 report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            OBC-1 Test Status\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              isForceSimulation ? styles.colorWaiting : styles.colorCompleted\r\n            }`}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path d=\"M11 17a1 1 0 001.447.894l4-2A1 1 0 0017 15V9.236a1 1 0 00-1.447-.894l-4 2a1 1 0 00-.553.894V17zM15.211 6.276a1 1 0 000-1.788l-4.764-2.382a1 1 0 00-.894 0L4.789 4.488a1 1 0 000 1.788l4.764 2.382a1 1 0 00.894 0l4.764-2.382zM4.447 8.342A1 1 0 003 9.236V15a1 1 0 00.553.894l4 2A1 1 0 009 17v-5.764a1 1 0 00-.553-.894l-4-2z\" />\r\n              </svg>\r\n              eMMC Testing\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              enableEmmc ? styles.colorCompleted : styles.colorWaiting\r\n            }`}>\r\n              {enableEmmc ? 'ENABLED' : 'DISABLED'}\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n              backgroundColor: isRunning ? '#9ca3af' :\r\n                hasRunTest ? '#4f46e5' : '#10b981',\r\n              color: 'white'\r\n            }}\r\n          >\r\n            {isRunning ? (\r\n              <>\r\n                <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                </svg>\r\n                Running Test...\r\n              </>\r\n            ) : hasRunTest ? (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Re-run Test\r\n              </>\r\n            ) : (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Run Test\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {results && (\r\n        <div className=\"space-y-4 mt-4\">\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #064e3b, #065f46)\" \r\n                  : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n                color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Firmware Information\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <div \r\n                className={styles.infoCard}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                  borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                }}\r\n              >\r\n                <div className={styles.infoIcon}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"#059669\" width=\"20\" height=\"20\">\r\n                    <path fillRule=\"evenodd\" d=\"M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zM4 4h3a3 3 0 006 0h3a2 2 0 012 2v9a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </div>\r\n                <div className={styles.infoContent}>\r\n                  <div \r\n                    className={styles.infoLabel}\r\n                    style={{ color: isDarkMode ? \"#9ca3af\" : \"#6b7280\" }}\r\n                  >\r\n                    OBC-1 Firmware Version\r\n                  </div>\r\n                  <div \r\n                    className={styles.infoValue}\r\n                    style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}\r\n                  >\r\n                    {results.firmware.major}.{results.firmware.minor}.{results.firmware.patch}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                  : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Voltage Measurements\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <table \r\n                className={styles.table}\r\n                style={{\r\n                  color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                }}\r\n              >\r\n                <thead \r\n                  className={styles.tableHeader}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.tableBody}>\r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>3V3 D</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.d3v3.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.d3v3.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.d3v3.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PS 3V3 OBC-2</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.ps3v3Obc2.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.ps3v3Obc2.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.ps3v3Obc2.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PS 5V OBC-2</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.ps5vObc2.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.ps5vObc2.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.ps5vObc2.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the eMMC section only if the eMMC option was checked */}\r\n          {enableEmmc && (\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                    : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n                  color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\r\n                  </svg>\r\n                  eMMC Test Results\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                {results.emmc.emmc0States[0] !== 'N.A.' ? (\r\n                  <table \r\n                    className={styles.table}\r\n                    style={{\r\n                      color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                    }}\r\n                  >\r\n                    <thead \r\n                      className={styles.tableHeader}\r\n                      style={{\r\n                        backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                        color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                      }}\r\n                      >\r\n                        <tr>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Test Stage</th>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0</th>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className={styles.tableBody}>\r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Initial</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[0]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[0]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0 On</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[1]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[1]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0 Off</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[2]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[2]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1 On</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[3]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[3]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1 Off</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[4]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[4]}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  ) : (\r\n                    <div \r\n                      style={{ \r\n                        padding: \"16px\", \r\n                        textAlign: \"center\", \r\n                        color: isDarkMode ? \"#d1d5db\" : \"#6b7280\",\r\n                        fontStyle: \"italic\"\r\n                      }}\r\n                    >\r\n                      eMMC test was not performed\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div>\r\n              <button \r\n                onClick={generateReport}\r\n                className={styles.reportButton}\r\n                style={{\r\n                  backgroundColor: \"#10b981\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Generate Report\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };"],"names":[],"mappings":"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","debugId":null}}]
}