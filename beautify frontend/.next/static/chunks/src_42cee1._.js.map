{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/MainScreen/MainScreen.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"aboutButton\": \"MainScreen-module__4v2AYG__aboutButton\",\n  \"aboutSection\": \"MainScreen-module__4v2AYG__aboutSection\",\n  \"actionButtons\": \"MainScreen-module__4v2AYG__actionButtons\",\n  \"addProfileButton\": \"MainScreen-module__4v2AYG__addProfileButton\",\n  \"bottomSection\": \"MainScreen-module__4v2AYG__bottomSection\",\n  \"cancelButton\": \"MainScreen-module__4v2AYG__cancelButton\",\n  \"checkoutButton\": \"MainScreen-module__4v2AYG__checkoutButton\",\n  \"checkoutSection\": \"MainScreen-module__4v2AYG__checkoutSection\",\n  \"content\": \"MainScreen-module__4v2AYG__content\",\n  \"dark\": \"MainScreen-module__4v2AYG__dark\",\n  \"deleteButton\": \"MainScreen-module__4v2AYG__deleteButton\",\n  \"docx\": \"MainScreen-module__4v2AYG__docx\",\n  \"docx-wrapper\": \"MainScreen-module__4v2AYG__docx-wrapper\",\n  \"downloadButton\": \"MainScreen-module__4v2AYG__downloadButton\",\n  \"dragItem\": \"MainScreen-module__4v2AYG__dragItem\",\n  \"dropHereText\": \"MainScreen-module__4v2AYG__dropHereText\",\n  \"dropZone\": \"MainScreen-module__4v2AYG__dropZone\",\n  \"dropZoneArea\": \"MainScreen-module__4v2AYG__dropZoneArea\",\n  \"dropdownButton\": \"MainScreen-module__4v2AYG__dropdownButton\",\n  \"droppableBox\": \"MainScreen-module__4v2AYG__droppableBox\",\n  \"editButton\": \"MainScreen-module__4v2AYG__editButton\",\n  \"editButtons\": \"MainScreen-module__4v2AYG__editButtons\",\n  \"editModeButtons\": \"MainScreen-module__4v2AYG__editModeButtons\",\n  \"editableArea\": \"MainScreen-module__4v2AYG__editableArea\",\n  \"editableTextarea\": \"MainScreen-module__4v2AYG__editableTextarea\",\n  \"emptyDropZone\": \"MainScreen-module__4v2AYG__emptyDropZone\",\n  \"hidden\": \"MainScreen-module__4v2AYG__hidden\",\n  \"hiddenDropZone\": \"MainScreen-module__4v2AYG__hiddenDropZone\",\n  \"imageContainer\": \"MainScreen-module__4v2AYG__imageContainer\",\n  \"imageWrapper\": \"MainScreen-module__4v2AYG__imageWrapper\",\n  \"isDragging\": \"MainScreen-module__4v2AYG__isDragging\",\n  \"isDropped\": \"MainScreen-module__4v2AYG__isDropped\",\n  \"isEnabled\": \"MainScreen-module__4v2AYG__isEnabled\",\n  \"isOver\": \"MainScreen-module__4v2AYG__isOver\",\n  \"mainScreen\": \"MainScreen-module__4v2AYG__mainScreen\",\n  \"menu\": \"MainScreen-module__4v2AYG__menu\",\n  \"menuItem\": \"MainScreen-module__4v2AYG__menuItem\",\n  \"profileActions\": \"MainScreen-module__4v2AYG__profileActions\",\n  \"profileButtonGroup\": \"MainScreen-module__4v2AYG__profileButtonGroup\",\n  \"profileContainer\": \"MainScreen-module__4v2AYG__profileContainer\",\n  \"profileDropdown\": \"MainScreen-module__4v2AYG__profileDropdown\",\n  \"profileHeading\": \"MainScreen-module__4v2AYG__profileHeading\",\n  \"profilePage\": \"MainScreen-module__4v2AYG__profilePage\",\n  \"profileSidebarItem\": \"MainScreen-module__4v2AYG__profileSidebarItem\",\n  \"profileSubtext\": \"MainScreen-module__4v2AYG__profileSubtext\",\n  \"profilesButton\": \"MainScreen-module__4v2AYG__profilesButton\",\n  \"removeDraggedItemsButton\": \"MainScreen-module__4v2AYG__removeDraggedItemsButton\",\n  \"removeImageButton\": \"MainScreen-module__4v2AYG__removeImageButton\",\n  \"retractExpandSidebarButton\": \"MainScreen-module__4v2AYG__retractExpandSidebarButton\",\n  \"richTextEditor\": \"MainScreen-module__4v2AYG__richTextEditor\",\n  \"saveButton\": \"MainScreen-module__4v2AYG__saveButton\",\n  \"scrollableContainer\": \"MainScreen-module__4v2AYG__scrollableContainer\",\n  \"settingsButton\": \"MainScreen-module__4v2AYG__settingsButton\",\n  \"settingsContainer\": \"MainScreen-module__4v2AYG__settingsContainer\",\n  \"sidebar\": \"MainScreen-module__4v2AYG__sidebar\",\n  \"sidebarHeader\": \"MainScreen-module__4v2AYG__sidebarHeader\",\n  \"startTestButton\": \"MainScreen-module__4v2AYG__startTestButton\",\n  \"threeDModelButton\": \"MainScreen-module__4v2AYG__threeDModelButton\",\n  \"toggleButton\": \"MainScreen-module__4v2AYG__toggleButton\",\n  \"topSection\": \"MainScreen-module__4v2AYG__topSection\",\n  \"uploadButton\": \"MainScreen-module__4v2AYG__uploadButton\",\n  \"uploadContainer\": \"MainScreen-module__4v2AYG__uploadContainer\",\n  \"uploadNote\": \"MainScreen-module__4v2AYG__uploadNote\",\n  \"uploadedFileName\": \"MainScreen-module__4v2AYG__uploadedFileName\",\n  \"uploadedImage\": \"MainScreen-module__4v2AYG__uploadedImage\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/MainScreen/DraggableBox.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSortable } from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport { CSSProperties } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styles from \"./MainScreen.module.css\";\r\n\r\ninterface DraggableBoxProps {\r\n  id: string;\r\n  header: string;\r\n  options: string[];\r\n  data?: {\r\n    type: string;\r\n    [key: string]: any;\r\n  };\r\n  isDropped?: boolean;\r\n  isInBottomSection?: boolean;\r\n  className?: string;\r\n  removeDroppedItem?: (id: string) => void;\r\n  isCheckoutEditing?: boolean;\r\n}\r\n\r\nconst DraggableBox: React.FC<DraggableBoxProps> = ({ \r\n  id, \r\n  header, \r\n  options, \r\n  data, \r\n  isDropped, \r\n  isInBottomSection, \r\n  removeDroppedItem, \r\n  isCheckoutEditing = false,\r\n  className\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging\r\n  } = useSortable({\r\n    id: id,\r\n    data: {\r\n      type: \"draggable-item\",\r\n      isDraggable: !isDropped || isCheckoutEditing,\r\n      isDropped: isDropped\r\n    },\r\n    disabled: false\r\n  });\r\n\r\n  const isDarkMode = document.documentElement.classList.contains(\"dark\");\r\n\r\n  const defaultBgColor = isDarkMode ? \"#2d2d2d\" : \"#f8f9fa\";  \r\n  const droppedBgColor = defaultBgColor; \r\n\r\n  const shouldApplyEffect = isInBottomSection && isDropped && !isCheckoutEditing;\r\n\r\n  // Calculate height dynamically based on the max number of options in all dropped items\r\n  const baseHeight = 80; // Base height for header and padding\r\n  const optionHeight = 24; // Height per option\r\n  const maxVisibleOptions = 10; // Allow up to 10 options before scrolling\r\n  const totalHeight = baseHeight + (Math.min(options.length, maxVisibleOptions) * optionHeight);\r\n  const requiresScroll = options.length > maxVisibleOptions;\r\n\r\n  const [maxHeight, setMaxHeight] = useState(totalHeight);\r\n\r\n  useEffect(() => {\r\n    const allDroppedBoxes = document.querySelectorAll('[data-dropped=\"true\"]');\r\n    let highest = totalHeight;\r\n\r\n    allDroppedBoxes.forEach(box => {\r\n      const optionCount = box.querySelectorAll(\"label\").length;\r\n      const calculatedHeight = baseHeight + (Math.min(optionCount, maxVisibleOptions) * optionHeight);\r\n      if (calculatedHeight > highest) {\r\n        highest = calculatedHeight;\r\n      }\r\n    });\r\n\r\n    setMaxHeight(highest);\r\n  }, [options.length, isDropped]);\r\n\r\n  const style: CSSProperties = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition: \"background-color 0.3s ease-in-out, opacity 0.3s ease-in-out\",\r\n    padding: \"8px\",\r\n    margin: \"0\",\r\n    backgroundColor: isDropped ? droppedBgColor : defaultBgColor,\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    cursor: shouldApplyEffect ? \"not-allowed\" : isDragging ? \"grabbing\" : \"grab\", // ✅ Only disable cursor in bottom section\r\n    display: \"inline-block\",\r\n    width: \"145px\",\r\n    height: `${maxHeight}px`, // ✅ Apply max height across all boxes\r\n    boxSizing: \"border-box\",\r\n    opacity: shouldApplyEffect ? 0.5 : 1, // ✅ Only make translucent in bottom section\r\n    color: isDarkMode ? \"#ffffff\" : \"black\",\r\n    position: \"relative\",\r\n    zIndex: isDragging ? 999 : 1, // ✅ Ensure correct layering\r\n    touchAction: \"none\",\r\n    userSelect: \"none\",\r\n    overflowY: requiresScroll ? \"auto\" : \"hidden\", // ✅ Only enable scrolling after 10 options\r\n    overflowX: \"hidden\", \r\n    whiteSpace: \"normal\", \r\n    pointerEvents: shouldApplyEffect ? \"none\" : \"auto\", // ✅ Only make unselectable in bottom section\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      {...attributes}\r\n      {...(isDropped && !isCheckoutEditing ? {} : listeners)}\r\n      data-draggable-id={id}\r\n      data-dropped={isDropped ? \"true\" : \"false\"}\r\n      className={className}\r\n    >\r\n{isDropped && removeDroppedItem && isCheckoutEditing && (\r\n  <button\r\n    onClick={() => removeDroppedItem(id)}\r\n    className={styles.removeDraggedItemsButton}\r\n  >\r\n    ✖\r\n  </button>\r\n)}\r\n\r\n      <h4 style={{ textAlign: \"center\", wordWrap: \"break-word\" }}>{header}</h4>\r\n      {options.map(option => (\r\n        <label key={option} style={{ \r\n          display: \"flex\", \r\n          alignItems: \"center\", \r\n          fontSize: \"12px\", \r\n          marginBottom: \"4px\", \r\n          textAlign: \"left\" \r\n        }}>\r\n          <input \r\n            type=\"checkbox\" \r\n            disabled={isDropped && !isCheckoutEditing}\r\n            style={{ marginRight: \"6px\" }}\r\n          />\r\n          <span>{option}</span>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableBox;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/MainScreen/MainScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styles from \"./MainScreen.module.css\";\r\nimport ToTestList from \"../ToTestList/ToTestList\";\r\nimport { FaCube, FaCheck, FaTimes, FaWrench, FaBars, FaCog, FaPlus, FaEdit, FaTrash, FaInfoCircle, FaPlay } from \"react-icons/fa\";\r\nimport { FaDownload } from \"react-icons/fa\";\r\nimport mammoth from \"mammoth\"; // Import mammoth for `.docx` extraction, npm install mammoth\r\nimport { renderAsync } from \"docx-preview\"; // npm install docx-preview\r\nimport { Document, Packer, Paragraph } from \"docx\"; // npm install docx\r\nimport { EditorContent, useEditor } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport { Profile } from 'types/types';\r\nimport Table from \"@tiptap/extension-table\";\r\nimport TableRow from \"@tiptap/extension-table-row\";\r\nimport TableCell from \"@tiptap/extension-table-cell\";\r\nimport TableHeader from \"@tiptap/extension-table-header\";\r\nimport BulletList from \"@tiptap/extension-bullet-list\";\r\nimport OrderedList from \"@tiptap/extension-ordered-list\";\r\nimport ListItem from \"@tiptap/extension-list-item\";\r\nimport TurndownService from \"turndown\";\r\nimport { DragOverlay, DndContext, closestCorners, closestCenter, pointerWithin, getFirstCollision, useSensor, useSensors, PointerSensor } from \"@dnd-kit/core\";\r\nimport { Collision, CollisionDetection } from \"@dnd-kit/core\";\r\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\r\nimport DraggableBox from \"../MainScreen/DraggableBox\"; // Import Draggable Box\r\nimport { useDroppable } from \"@dnd-kit/core\";\r\nimport { useDndContext } from \"@dnd-kit/core\";\r\nimport { rectIntersection } from \"@dnd-kit/core\";\r\nimport { DragEndEvent, UniqueIdentifier } from '@dnd-kit/core';\r\nimport ThreeDModelWindow from \"components/ModelWindow/ThreeDModelWindow\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { WindowName } from \"types/types\";\r\n\r\n\r\nconst API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\"; // fall back\r\n// Ensure this is correct\r\n\r\ninterface DroppableContainerType {\r\n  id: string;\r\n  data: {\r\n    type: string;\r\n    accepts: string[];\r\n    isDropZone?: boolean;\r\n  };\r\n}\r\n\r\ninterface CollisionRect {\r\n  top: number;\r\n  bottom: number;\r\n  left: number;\r\n  right: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface CollisionData {\r\n  droppableContainer: DroppableContainerType;\r\n  value: number;\r\n  rect: CollisionRect;\r\n}\r\n\r\ninterface CustomCollision {\r\n  id: string;\r\n  data: CollisionData;\r\n}\r\n\r\ninterface DraggableItem {\r\n  id: string;\r\n  header: string;\r\n  options: string[];\r\n  isDropped: boolean;\r\n}\r\n\r\ninterface MainScreenProps {\r\n  openToTestList: () => void;\r\n  closeToTestList: () => void;  // ✅ Accept close function as a prop\r\n  openServerWindow: () => void;\r\n  openModelWindow: (profileId?: number) => void;\r\n  closeModelWindow: () => void;  // ✅ Accept close function\r\n  showToTestList: boolean;  // ✅ Accept this prop\r\n  showThreeDModelWindow: boolean;  // ✅ Accept this prop\r\n  threeDModelProfileId: number | null;  // ✅ Accept profile ID\r\n  windowZIndexes: { [key in WindowName]: number };  // ✅ Ensure proper indexing\r\n  bringWindowToFront: (windowName: WindowName) => void;  // ✅ Ensure correct function type\r\n  zIndexCounter: number;  // ✅ Accept counter\r\n}\r\n\r\nconst MainScreen: React.FC<MainScreenProps> = ({ \r\n  openToTestList, \r\n  closeToTestList, // ✅ Use close function\r\n  openServerWindow, \r\n  openModelWindow,\r\n  closeModelWindow,  // ✅ Use function from props\r\n  showToTestList,  // ✅ Use this prop\r\n  showThreeDModelWindow,  // ✅ Use this prop\r\n  threeDModelProfileId,  // ✅ Use profile ID from props\r\n  windowZIndexes, // ✅ Use windowZIndexes from props\r\n  bringWindowToFront,  // ✅ Use function from props\r\n  zIndexCounter  // ✅ Use counter from props\r\n}): React.ReactElement => {\r\n\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [isProfileDropdownOpen, setIsProfileDropdownOpen] = useState(false);\r\n  const [profiles, setProfiles] = useState<Profile[]>([]);\r\n  const [selectedProfile, setSelectedProfile] = useState<string | null>(null);\r\n  const [showAbout, setShowAbout] = useState(false);\r\n  const [uploadedText, setUploadedText] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false); // for aboutSection\r\n  const [tempDescription, setTempDescription] = useState(\"\");\r\n  const [uploadedImages, setUploadedImages] = useState<{ src: string; alt: string }[]>([]);\r\n  const [uploadedFileName, setUploadedFileName] = useState<string | null>(null);\r\n  const [profileData, setProfileData] = useState<{ \r\n    [key: string]: { \r\n      description: string; \r\n      images: { src: string; alt: string }[]; \r\n      uploadedFileName?: string; // ✅ Store filename per profile\r\n    } \r\n  }>({});\r\n  const [showCheckout, setShowCheckout] = useState(false);\r\n  const [isCheckoutEditing, setIsCheckoutEditing] = useState(false); // For checkoutSection\r\n  const [droppedItems, setDroppedItems] = useState<DraggableItem[]>([]);\r\n  // Manage draggable items\r\n  const [items, setItems] = useState<DraggableItem[]>([\r\n    { id: \"1\", header: \"OBC-1\", options: [\"eMMC\"], isDropped: false }, // ✅ Ensure consistent key name\r\n    { id: \"2\", header: \"OBC-2\", options: [\"SD Card\", \"EEPROM\"], isDropped: false },\r\n    { id: \"3\", header: \"S-Band\", options: [\"Telemetry\", \"Ground Pass\"], isDropped: false },\r\n    { id: \"4\", header: \"UHF\", options: [\"Telemetry\", \"Ground Pass\"], isDropped: false },\r\n    { id: \"5\", header: \"HEPS\", options: [\"Solar Panel\", \"Heater\", \"Hdrm\"], isDropped: false },\r\n    { id: \"6\", header: \"ADCS\", options: [\"Version Check\", \"Gyroscope\", \"Magnetometer\", \"Star Tracker\", \"FOG\", \"Fine Sun Sensor\", \"Coarse Sun Sensor\", \"Earth Sensor\", \"Reaction Wheel\", \"Magnetic Torquer\"], isDropped: false },\r\n    { id: \"7\", header: \"GPS\", options: [\"Version Check\"], isDropped: false },\r\n    { id: \"8\", header: \"Propulsion\", options: [\"ECU-1 PMA\", \"ECU-1 PPU-1\", \"ECU-2 PMA\", \"ECU-2 PPU-2\"], isDropped: false },\r\n    { id: \"9\", header: \"PCS\", options: [\"SD Card\"], isDropped: false },\r\n    { id: \"10\", header: \"Payload\", options: [\"LEOCAM\", \"AOD\"], isDropped: false },\r\n    { id: \"11\", header: \"X-Band\", options: [\"Telecommand\", \"Telemetry\"], isDropped: false },\r\n  ]);\r\n  const [activeId, setActiveId] = useState<string | null>(null);\r\n  const [dummyState, setDummyState] = useState(false); // Declare a state for forcing re-renders\r\n  const [sortableKey, setSortableKey] = useState(0);\r\n  const [show3DModel, setShow3DModel] = useState(false); // Manage pop-up visibility\r\n  const [selectedProfileId, setSelectedProfileId] = useState<number | null>(null);\r\n  \r\n  // In MainScreen.tsx, add this after your state declarations but before your functions\r\n  const dragTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined);\r\n\r\n  const removeDroppedItem = (itemId: string) => {\r\n    if (dragTimeoutRef.current) {\r\n      clearTimeout(dragTimeoutRef.current);\r\n    }\r\n  \r\n    console.log(`🗑️ Attempting to remove item ${itemId} from top section`);\r\n  \r\n    // ✅ Remove from `droppedItems`\r\n    setDroppedItems(prev => {\r\n      const updatedDroppedItems = prev.filter(item => item.id !== itemId);\r\n      console.log(\"✅ Updated dropped items after removal:\", updatedDroppedItems);\r\n      return [...updatedDroppedItems]; // ✅ Force reactivity\r\n    });\r\n  \r\n    // ✅ Ensure item is draggable again by updating `items` state\r\n    setItems(prev => {\r\n      const updatedItems = prev.map(item => {\r\n        if (item.id === itemId) {\r\n          console.log(`✅ Resetting isDropped for item ${itemId}`);\r\n          return { ...item, isDropped: false };\r\n        }\r\n        return item;\r\n      });\r\n      console.log(\"✅ Updated items after removal:\", updatedItems);\r\n      return [...updatedItems]; // ✅ Ensure a new array reference for reactivity\r\n    });\r\n  \r\n    // ✅ Reset DOM attributes to make the item draggable again\r\n    setTimeout(() => {\r\n      const bottomItem = document.querySelector(`[data-draggable-id=\"${itemId}\"]`) as HTMLElement;\r\n      if (bottomItem) {\r\n        console.log(`✅ Resetting DOM attributes for item ${itemId}`);\r\n        bottomItem.removeAttribute('data-dropped');\r\n        bottomItem.style.pointerEvents = 'auto';\r\n        bottomItem.style.opacity = '1';\r\n        bottomItem.style.cursor = 'grab';\r\n      }\r\n    }, 50);\r\n  \r\n    setActiveId(null);\r\n    setDragging(false);\r\n  \r\n    // ✅ FULL Reset of Drop Zones and SortableContext\r\n    setTimeout(() => {\r\n      console.log(\"🔄 FORCING FULL Reset of Drop Zones and SortableContext...\");\r\n      setDroppedItems(prev => [...prev]);\r\n      setItems(prev => [...prev]); // ✅ Ensure full re-render\r\n  \r\n      // ✅ Force SortableContext to reset\r\n      setSortableKey(prev => prev + 1);\r\n    }, 200);\r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  const observerRef = useRef<MutationObserver | null>(null);\r\n\r\n  const renderCount = useRef(0); // Track how many times it runs\r\n\r\n  useEffect(() => {\r\n    if (!isCheckoutEditing) return;\r\n  \r\n    renderCount.current += 1;\r\n    console.log(`🔁 useEffect executed ${renderCount.current} times`);\r\n  \r\n    const dropZones = document.querySelectorAll('[data-droppable-id]');\r\n    dropZones.forEach(zone => {\r\n      zone.setAttribute('data-droppable', 'true');\r\n      zone.setAttribute('data-type', 'container');\r\n    });\r\n  \r\n  }, [isCheckoutEditing]);\r\n  \r\n  \r\n  \r\n  \r\n\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"🔄 Drop zones reloaded due to dragging state\");\r\n  }, [dragging]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchProfiles();\r\n  }, []);\r\n\r\n  const fetchProfiles = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/profiles`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch profiles.\");\r\n      }\r\n  \r\n      const data = await response.json();\r\n  \r\n      let profileMap: {\r\n        [key: string]: { description: string; images: { src: string; alt: string }[], uploadedFileName?: string };\r\n      } = {};\r\n  \r\n      data.forEach((profile: Profile) => {\r\n        profileMap[profile.name] = {\r\n          description: profile.description || \"\",\r\n          images: profile.images && Array.isArray(profile.images)\r\n            ? profile.images.map(img => \r\n                typeof img === \"string\" \r\n                  ? { src: img, alt: \"Uploaded image\" } \r\n                  : img) \r\n            : [],\r\n          uploadedFileName: profile.uploadedFileName || \"\",\r\n        };\r\n      });\r\n  \r\n      setProfiles(data);\r\n      setProfileData(profileMap);\r\n    } catch (error) {\r\n      console.error(\"Error fetching profiles:\", error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const toggleSidebar = () => setIsSidebarOpen(!isSidebarOpen);\r\n  const toggleProfileDropdown = () => setIsProfileDropdownOpen(!isProfileDropdownOpen);\r\n  const toggleAbout = () => {\r\n    if (!selectedProfile) return;\r\n    setShowAbout(!showAbout);\r\n  };\r\n\r\n\r\n  const addProfile = async () => {\r\n    let profileName = prompt(\"Enter profile name:\");\r\n  \r\n    if (!profileName || profileName.trim() === \"\") {\r\n      alert(\"Profile name cannot be empty.\");\r\n      return;\r\n    }\r\n  \r\n    profileName = profileName.trim();\r\n  \r\n    if (profiles.some((profile) => profile.name.toLowerCase() === profileName.toLowerCase())) {\r\n      alert(\"Profile name already exists! Choose a different name.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`${API_URL}/profiles`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ name: profileName, description: \"\", images: [] }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorMessage = await response.json();\r\n        throw new Error(errorMessage.error || \"Failed to create profile.\");\r\n      }\r\n  \r\n      const newProfile = await response.json();\r\n      setProfiles([...profiles, newProfile]);\r\n  \r\n      // Initialize profile data\r\n      setProfileData((prev) => ({\r\n        ...prev,\r\n        [newProfile.name]: { description: \"\", images: [] },\r\n      }));\r\n    } catch (error: unknown) {\r\n      console.error(\"Error adding profile:\", error);\r\n      if (error instanceof Error) {\r\n        alert(error.message);\r\n      } else {\r\n        alert(\"An unexpected error occurred.\");\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n  const deleteProfile = async (profileName: string) => {\r\n    const confirmDelete = window.confirm(`Are you sure you want to delete the profile: ${profileName}?`);\r\n    if (!confirmDelete) {\r\n      return; // Cancel deletion if user clicks \"Cancel\"\r\n    }\r\n  \r\n    try {\r\n      await fetch(`${API_URL}/profiles/${profileName}`, { method: \"DELETE\" });\r\n      setProfiles(profiles.filter((profile) => profile.name !== profileName));\r\n      setSelectedProfile(null);\r\n    } catch (error) {\r\n      console.error(\"Error deleting profile:\", error);\r\n    }\r\n  };\r\n  \r\n  const convertImageToBase64 = async (imageUrl: string): Promise<string> => {\r\n    try {\r\n      const response = await fetch(imageUrl);\r\n      const blob = await response.blob();\r\n      return new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result as string);\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error converting image to Base64:\", error);\r\n      return \"\";\r\n    }\r\n  };\r\n  \r\n  let formattedHtml = \"\";\r\n\r\n  const turndownService = new TurndownService();\r\n  turndownService.addRule(\"list\", {\r\n    filter: [\"ul\", \"ol\"],\r\n    replacement: function (content: string, node: Node) {\r\n      return (node as HTMLElement).outerHTML; // ✅ Typecast `node` as `HTMLElement`\r\n    },\r\n  });\r\n  \r\n  \r\n/* Function to handle file uploads */\r\nconst handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  if (!selectedProfile) return;\r\n\r\n  const file = event.target.files?.[0];\r\n  if (!file) return;\r\n\r\n  const fileName = file.name;\r\n\r\n  // ✅ Store the file name (avoid unnecessary re-renders)\r\n  setProfileData((prevData) => ({\r\n    ...prevData,\r\n    [selectedProfile]: {\r\n      ...prevData[selectedProfile],\r\n      uploadedFileName: fileName,\r\n    },\r\n  }));\r\n\r\n  const reader = new FileReader();\r\n\r\n  if (file.type === \"text/plain\") {\r\n    reader.onload = (e) => {\r\n      if (e.target?.result) {\r\n        const uploadedText = e.target.result.toString().trim();\r\n        console.log(\"Extracted Text Content:\", uploadedText);\r\n        setUploadedText(uploadedText);\r\n        autoSaveToDatabase(uploadedText, uploadedImages);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  } else if (file.name.endsWith(\".docx\")) {\r\n    reader.onload = async (e) => {\r\n      if (e.target?.result instanceof ArrayBuffer) {\r\n        try {\r\n          let formattedHtml = \"\";\r\n\r\n          // ✅ Extract HTML using `mammoth.convertToHtml()`\r\n          const mammothResult = await mammoth.convertToHtml({ arrayBuffer: e.target.result });\r\n          let extractedHtml = mammothResult.value.trim();\r\n\r\n          console.log(\"Mammoth Extracted Content (With Lists):\", extractedHtml);\r\n\r\n          // ✅ Preserve bullet points & numbered lists properly\r\n          formattedHtml = extractedHtml\r\n            .replace(/<p>\\s*•\\s*/g, \"<ul><li>\") // Fix unordered lists\r\n            .replace(/<p>\\s*\\d+\\.\\s*/g, \"<ol><li>\") // Fix ordered lists\r\n            .replace(/<\\/p>\\s*<p>/g, \"</li><li>\") // Ensure list items are correctly wrapped\r\n            .replace(/<\\/p>/g, \"</li></ul>\") // Close unordered lists properly\r\n            .replace(/<\\/ol><\\/li>/g, \"</ol>\") // Close ordered lists properly\r\n            .replace(/<\\/li><\\/ul>(?!<\\/li>)/g, \"</ul>\"); // Remove misaligned list endings\r\n\r\n          console.log(\"Final Processed HTML (Fixed Lists):\", formattedHtml);\r\n\r\n          // ✅ Process `docx-preview` but DO NOT append it to the UI\r\n          const docxContainer = document.createElement(\"div\");\r\n          await renderAsync(e.target.result, docxContainer);\r\n\r\n          // ✅ Extract only relevant content, ignoring `docx-preview` elements\r\n          const extractedBodyContent = docxContainer.querySelector(\"article\")?.innerHTML || \"\";\r\n\r\n          // ✅ Ensure we use the most structured version\r\n          formattedHtml = extractedBodyContent.includes(formattedHtml)\r\n            ? extractedBodyContent\r\n            : extractedBodyContent || formattedHtml;\r\n\r\n          // ✅ Remove `docx-preview` elements BEFORE storing content\r\n          const tempContainer = document.createElement(\"div\");\r\n          tempContainer.innerHTML = formattedHtml;\r\n          tempContainer.querySelectorAll(\"section.docx, .docx-wrapper\").forEach((el) => el.remove());\r\n          formattedHtml = tempContainer.innerHTML.trim();\r\n\r\n          // ✅ Ensure proper table & list styling\r\n          formattedHtml = formattedHtml\r\n            .replace(/<table/g, '<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\"') \r\n            .replace(/<td/g, '<td style=\"padding: 8px; border: 1px solid black;\"') \r\n            .replace(/<ul/g, '<ul style=\"padding-left: 20px; list-style-type: disc; margin-top: 10px; margin-bottom: 10px;\"') \r\n            .replace(/<ol/g, '<ol style=\"padding-left: 20px; list-style-type: decimal; margin-top: 10px; margin-bottom: 10px;\"') \r\n            .replace(/<li/g, '<li style=\"margin-bottom: 5px;\"'); // ✅ Ensure list items have proper spacing\r\n\r\n          // ✅ Remove incorrect `<li>` wrapping on normal text\r\n          formattedHtml = formattedHtml.replace(/<li><strong>/g, \"<p><strong>\").replace(/<\\/strong><\\/li>/g, \"</strong></p>\");\r\n\r\n          // ✅ Extract images & convert to Base64\r\n          const extractedImages = await Promise.all(\r\n            Array.from(docxContainer.querySelectorAll(\"img\")).map(async (img) => {\r\n              const base64Image = await convertImageToBase64(img.src);\r\n              return { src: base64Image, alt: img.alt || \"Uploaded image\" };\r\n            })\r\n          );\r\n\r\n          // ✅ Store only cleaned & formatted content without `docx-preview`\r\n          setUploadedText(formattedHtml.trim());\r\n          setUploadedImages(extractedImages);\r\n          autoSaveToDatabase(formattedHtml.trim(), extractedImages);\r\n\r\n          // ✅ Remove `docx-preview` from the DOM after processing\r\n          document.querySelectorAll(\"section.docx, .docx-wrapper\").forEach((el) => el.remove());\r\n        } catch (error) {\r\n          console.error(\"Error processing .docx:\", error);\r\n        }\r\n      }\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  } else if (file.type.startsWith(\"image/\")) {\r\n    reader.onload = (e) => {\r\n      if (e.target?.result) {\r\n        const base64Image = e.target.result.toString();\r\n        const newImage = { src: base64Image, alt: \"Uploaded image\" };\r\n\r\n        setUploadedImages((prevImages) => [...prevImages, newImage]);\r\n        autoSaveToDatabase(uploadedText, [...uploadedImages, newImage]);\r\n      }\r\n    };\r\n    reader.readAsDataURL(file);\r\n  } else {\r\n    alert(\"Invalid file type. Please upload a .txt, .docx, or an image file.\");\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/* ✅ Function to Start Editing */\r\nconst startEditing = () => {\r\n  if (!selectedProfile) return;\r\n  \r\n  setTempDescription(profileData[selectedProfile]?.description || \"\");\r\n  setIsEditing(true);\r\n\r\n  if (editor) {\r\n      editor.commands.setContent(profileData[selectedProfile]?.description || \"\");\r\n  }\r\n};\r\n\r\n\r\n/* ✅ Function to Save Edited Description */\r\nconst saveEditedDescription = async () => {\r\n  if (!selectedProfile) return;\r\n\r\n  const formattedText = editor?.getHTML() || \"\";\r\n\r\n  try {\r\n    await fetch(`${API_URL}/profiles/${selectedProfile}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        description: formattedText,\r\n        images: uploadedImages, // ✅ Save updated images\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      }),\r\n    });\r\n\r\n    // ✅ Update profileData to reflect saved changes\r\n    setProfileData((prevData) => ({\r\n      ...prevData,\r\n      [selectedProfile]: {\r\n        description: formattedText,\r\n        images: uploadedImages, // ✅ Store updated images in state\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      },\r\n    }));\r\n\r\n    setIsEditing(false);\r\n  } catch (error) {\r\n    console.error(\"Error saving description:\", error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst removeImage = (index: number) => {\r\n  if (!selectedProfile || !isEditing) return; // ✅ Ensure we're in edit mode\r\n\r\n  setProfileData((prevData) => {\r\n    const updatedImages = (prevData[selectedProfile]?.images || []).filter((_, i) => i !== index);\r\n\r\n    return {\r\n      ...prevData,\r\n      [selectedProfile]: {\r\n        ...prevData[selectedProfile],\r\n        images: updatedImages,\r\n      },\r\n    };\r\n  });\r\n\r\n  // ✅ Temporarily update images during editing\r\n  setUploadedImages((prevImages) => prevImages.filter((_, i) => i !== index));\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ✅ Sanitize Extracted HTML */\r\n/* ✅ Sanitize Extracted HTML */\r\nconst sanitizeHTML = (html: string): string => {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, \"text/html\");\r\n\r\n  // ✅ Ensure lists (`<ul>`, `<ol>`, `<li>`) are preserved\r\n  doc.querySelectorAll(\"p:empty, div:empty\").forEach((node) => node.remove());\r\n  doc.querySelectorAll(\"br\").forEach((node) => node.remove());\r\n\r\n  // ✅ Log extracted HTML to verify if lists exist before rendering\r\n  console.log(\"Sanitized HTML Output:\", doc.body.innerHTML);\r\n\r\n  return doc.body.innerHTML;\r\n};\r\n\r\n\r\n/* Save to File */\r\nconst saveToFile = (format = \"txt\") => {\r\n  if (!uploadedText) {\r\n    alert(\"No content to save.\");\r\n    return;\r\n  }\r\n\r\n  if (!selectedProfile) {\r\n    alert(\"No profile selected.\");\r\n    return;\r\n  }\r\n\r\n  const sanitizedProfileName = selectedProfile.replace(/[^a-zA-Z0-9_-]/g, \"\");\r\n  const readableText = convertHtmlToPlainText(uploadedText); // ✅ Convert HTML to plain text\r\n\r\n  if (format === \"txt\") {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([readableText], { type: \"text/plain\" }); // ✅ Save as plain text\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = `${sanitizedProfileName}_Specifications.txt`;\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  } else if (format === \"docx\") {\r\n    const doc = new Document({\r\n      sections: [\r\n        {\r\n          properties: {},\r\n          children: readableText.split(\"\\n\").map(line => new Paragraph(line)), // ✅ Split into paragraphs\r\n        },\r\n      ],\r\n    });\r\n\r\n    Packer.toBlob(doc).then((blob) => {\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.download = `${sanitizedProfileName}_Specifications.docx`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    });\r\n  }\r\n};\r\n\r\nconst cancelEditing = () => {\r\n  setIsEditing(false);\r\n};\r\n\r\nconst autoSaveToDatabase = async (text: string, images: { src: string; alt: string }[]) => {\r\n  if (!selectedProfile) {\r\n    alert(\"No profile selected.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API_URL}/profiles/${selectedProfile}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        description: text,\r\n        images: images.map(img => img.src), // ✅ Ensure only the src is saved\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      console.log(\"Profile updated automatically.\");\r\n    } else {\r\n      console.error(\"Error saving profile.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error saving profile:\", error);\r\n  }\r\n};\r\n\r\n\r\nconst convertHtmlToPlainText = (html: string): string => {\r\n  const doc = new DOMParser().parseFromString(html, \"text/html\");\r\n  return doc.body.textContent || \"\";\r\n};\r\n\r\nconst editor = useEditor({\r\n  extensions: [\r\n    StarterKit.configure({\r\n      bulletList: false, // ✅ Disable default list handling\r\n      orderedList: false,\r\n    }),\r\n    Table.configure({\r\n      resizable: true,\r\n    }),\r\n    TableRow,\r\n    TableCell,\r\n    TableHeader,\r\n    BulletList, // ✅ Enable bullet points\r\n    OrderedList, // ✅ Enable numbered lists\r\n    ListItem,    // ✅ Enable list items\r\n  ],\r\n  content: uploadedText, // Initialize with the uploaded content\r\n  onUpdate: ({ editor }) => setTempDescription(editor.getHTML()), // Update state with editor changes\r\n  editorProps: {\r\n    attributes: {\r\n      class: \"prose focus:outline-none\",\r\n    },\r\n  },\r\n  immediatelyRender: false, // Fix SSR Hydration Mismatch\r\n});\r\n\r\n\r\n// Reset editor content when uploadedText changes\r\nuseEffect(() => {\r\n  if (editor && uploadedText) {\r\n    editor.commands.setContent(uploadedText); // Dynamically update editor content\r\n  }\r\n}, [uploadedText, editor]);\r\n\r\nconst handleProfileSelect = (profileName: string) => {\r\n  if (!profileName) return; // Prevent errors\r\n\r\n  setSelectedProfile(profileName);\r\n  setShowAbout(false); // Close About Section when switching profiles\r\n\r\n  // Ensure images are correctly set and do not become undefined\r\n  const profile = profileData[profileName] || { description: \"\", images: [], uploadedFileName: \"\" };\r\n\r\n  setUploadedImages(profile.images.length ? profile.images : []); // ✅ Ensure images exist\r\n  setUploadedText(profile.description);\r\n};\r\n\r\nconst toggleCheckout = () => {\r\n  if (!selectedProfile) return;\r\n  setShowCheckout(!showCheckout);\r\n};\r\n\r\nconst toggleCheckoutEditMode = () => {\r\n  console.log(\"Toggling Checkout Edit Mode\");\r\n  setIsCheckoutEditing(prev => !prev);\r\n};\r\n\r\n\r\nconst { active } = useDndContext(); // ✅ Get active drag item\r\n\r\n// Define droppable state\r\nconst { isOver: isOverTop, setNodeRef: topSectionRef } = useDroppable({\r\n  id: \"top-section\",\r\n  data: {\r\n    type: \"container\",\r\n    accepts: [\"draggable-item\"],\r\n    isDropZone: true,\r\n  },\r\n  disabled: false, // Ensure it's always active\r\n});\r\n\r\nconst { isOver: isOverBottom, setNodeRef: bottomSectionRef } = useDroppable({\r\n  id: \"bottom-section\",\r\n  data: {\r\n    accepts: [\"draggable-item\"],\r\n    type: \"container\"\r\n  }\r\n});\r\n\r\n// ✅ Add this after the useDroppable hooks\r\nuseEffect(() => {\r\n  console.log(\"Active Dragging Type:\", active?.data?.current?.type);\r\n}, [active]);\r\n\r\n\r\n// add this state to track the background color, to match checkout section's dynamic background\r\nconst [checkoutBgColor, setCheckoutBgColor] = useState('var(--background-color, #ffffff)');\r\n\r\n// Add an effect to update the background color when the theme changes\r\nuseEffect(() => {\r\n  const updateBackgroundColor = () => {\r\n    const isDarkMode = document.documentElement.classList.contains('dark');\r\n    setCheckoutBgColor(isDarkMode ? 'var(--dark-bg, #1a1a1a)' : 'var(--light-bg, #ffffff)');\r\n  };\r\n\r\n  // Initial update\r\n  updateBackgroundColor();\r\n\r\n  // Create observer for theme changes\r\n  const observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      if (mutation.attributeName === 'class') {\r\n        updateBackgroundColor();\r\n      }\r\n    });\r\n  });\r\n\r\n  // Start observing theme changes\r\n  observer.observe(document.documentElement, {\r\n    attributes: true,\r\n    attributeFilter: ['class'],\r\n  });\r\n\r\n  return () => observer.disconnect();\r\n}, []);\r\n\r\nconst lastValidDropZoneRef = useRef<string | null>(null);\r\n\r\nlet lastValidDropZone: { id: string } | null = null;\r\n\r\n// customCollisionDetection function\r\n// Update collision detection for better sensitivity\r\n// Replace your existing customCollisionDetection with this updated version\r\nconst customCollisionDetection: CollisionDetection = (args) => {\r\n  const { collisionRect, droppableContainers } = args;\r\n  const validDropZoneIds = new Set([\"top-section\", \"bottom-section\", \"1\", \"2\"]);\r\n\r\n  // Create expanded collision rect with larger detection area\r\n  const expandedRect = {\r\n    ...collisionRect,\r\n    width: collisionRect.width + 60,    // Increased detection area\r\n    height: collisionRect.height + 60,   \r\n    left: collisionRect.left - 30,      \r\n    right: collisionRect.right + 30,    \r\n    top: collisionRect.top - 30,        \r\n    bottom: collisionRect.bottom + 30    \r\n  };\r\n\r\n  return droppableContainers\r\n    .filter(container => validDropZoneIds.has(String(container.id)))\r\n    .map(container => {\r\n      const element = document.querySelector(`[data-droppable-id=\"${container.id}\"]`);\r\n      if (!element) return null;\r\n\r\n      const rect = element.getBoundingClientRect();\r\n      const isTopSection = container.id === \"top-section\" || container.id === \"1\";\r\n      \r\n      // Add padding for better drop detection\r\n      const adjustedRect = {\r\n        top: rect.top - (isTopSection ? 40 : 20),\r\n        bottom: rect.bottom + (isTopSection ? 40 : 20),\r\n        left: rect.left - (isTopSection ? 40 : 20),\r\n        right: rect.right + (isTopSection ? 40 : 20),\r\n        width: rect.width + (isTopSection ? 80 : 40),\r\n        height: rect.height + (isTopSection ? 80 : 40)\r\n      };\r\n\r\n      // More lenient intersection check\r\n      const intersects = (\r\n        expandedRect.left < adjustedRect.right &&\r\n        expandedRect.right > adjustedRect.left &&\r\n        expandedRect.top < adjustedRect.bottom &&\r\n        expandedRect.bottom > adjustedRect.top\r\n      );\r\n\r\n      if (!intersects) return null;\r\n\r\n      return {\r\n        id: String(container.id),\r\n        data: {\r\n          droppableContainer: {\r\n            id: String(container.id),\r\n            data: {\r\n              type: \"container\",\r\n              accepts: [\"draggable-item\"],\r\n              isDropZone: isTopSection\r\n            }\r\n          },\r\n          value: isTopSection ? 2 : 1,\r\n          rect: adjustedRect\r\n        }\r\n      } as CustomCollision;\r\n    })\r\n    .filter((collision): collision is CustomCollision => collision !== null)\r\n    .sort((a, b) => b.data.value - a.data.value);\r\n};\r\n\r\nuseEffect(() => {\r\n  if (!isCheckoutEditing) return; // Prevent execution if not in edit mode\r\n\r\n  console.log(\"✅ Registering Drop Zones (One-Time)\");\r\n\r\n  const topSection = document.querySelector('[data-droppable-id=\"1\"]');\r\n  const bottomSection = document.querySelector('[data-droppable-id=\"2\"]');\r\n\r\n  if (topSection) {\r\n    topSection.setAttribute('data-droppable', 'true');\r\n    topSection.setAttribute('data-type', 'container');\r\n  }\r\n\r\n  if (bottomSection) {\r\n    bottomSection.setAttribute('data-droppable', 'true');\r\n    bottomSection.setAttribute('data-type', 'container');\r\n  }\r\n\r\n  console.log(\"🔍 Found Drop Zones:\", topSection, bottomSection);\r\n\r\n  return () => {\r\n    console.log(\"🛑 Cleaning up Drop Zones (Once)\");\r\n  };\r\n}, [isCheckoutEditing]);\r\n\r\n\r\nconst sensors = useSensors(\r\n  useSensor(PointerSensor, {\r\n    activationConstraint: {\r\n      distance: 2,\r\n      tolerance: 5\r\n    },\r\n  })\r\n);\r\n\r\n\r\n// Updated drag end handler\r\nconst handleDragEnd = (event: DragEndEvent) => {\r\n  const { active, over } = event;\r\n  setActiveId(null);\r\n  setDragging(false);\r\n\r\n  if (!over) {\r\n    console.log(\"❌ No valid drop target detected\");\r\n    return;\r\n  }\r\n\r\n  const dropZoneId = String(over.id);\r\n  const draggedItemId = String(active.id);\r\n\r\n  console.log(`🛠️ Handling drop of item ${draggedItemId} into zone ${dropZoneId}`);\r\n\r\n  const draggedItem = items.find(item => item.id === draggedItemId) || \r\n                      droppedItems.find(item => item.id === draggedItemId);\r\n\r\n  if (!draggedItem) {\r\n    console.log(\"❌ Dragged item not found\");\r\n    return;\r\n  }\r\n\r\n  const isTopSection = dropZoneId === \"top-section\" || dropZoneId === \"1\";\r\n  const isBottomSection = dropZoneId === \"bottom-section\" || dropZoneId === \"2\";\r\n\r\n  setDroppedItems(prevDroppedItems => {\r\n    const alreadyInTop = prevDroppedItems.some(item => item.id === draggedItemId);\r\n\r\n    if (isTopSection && !alreadyInTop) {\r\n      console.log(`✅ Adding item ${draggedItemId} to top section`);\r\n      return [...prevDroppedItems, { ...draggedItem, isDropped: true }];\r\n    } \r\n    \r\n    if (isBottomSection) {\r\n      console.log(`✅ Removing item ${draggedItemId} from top section`);\r\n      return prevDroppedItems.filter(item => item.id !== draggedItemId);\r\n    }\r\n\r\n    return prevDroppedItems;\r\n  });\r\n\r\n  setItems(prevItems => {\r\n    const updatedItems = prevItems.map(item =>\r\n      item.id === draggedItemId ? { ...item, isDropped: isTopSection } : item\r\n    );\r\n    console.log(\"✅ Updated items after drop:\", updatedItems);\r\n    return [...updatedItems]; // Ensure a new array reference for reactivity\r\n  });\r\n\r\n  // ✅ FULL Reset of Drop Zones and SortableContext\r\n  setTimeout(() => {\r\n    console.log(\"🔄 FORCING FULL Reset of Drop Zones and SortableContext...\");\r\n    setDroppedItems(prev => [...prev]);\r\n    setItems(prev => [...prev]); // ✅ Ensure full re-render\r\n\r\n    // ✅ Force SortableContext to reset\r\n    setSortableKey(prev => prev + 1);\r\n  }, 200);\r\n};\r\n\r\n// Add new effect to maintain drop zones\r\nconst hasUpdatedDropZones = useRef(false); // ✅ Prevent multiple updates\r\n\r\nuseEffect(() => {\r\n  if (!isCheckoutEditing) return;\r\n\r\n  const startTime = performance.now(); // Start time measurement\r\n  console.log(\"⏳ Starting expensive operation...\");\r\n\r\n  // Simulating work\r\n  const dropZones = document.querySelectorAll('[data-droppable-id]');\r\n  dropZones.forEach(zone => {\r\n    zone.setAttribute('data-droppable', 'true');\r\n    zone.setAttribute('data-type', 'container');\r\n  });\r\n\r\n  const endTime = performance.now(); // End time measurement\r\n  console.log(`⚡ Expensive operation took ${endTime - startTime}ms`);\r\n}, [isCheckoutEditing]);\r\n\r\n\r\n\r\n// Add this useEffect to monitor state changes\r\nuseEffect(() => {\r\n  const itemsStatus = items.map(item => ({\r\n    id: item.id,\r\n    isDropped: item.isDropped,\r\n  }));\r\n  console.log('Items status:', itemsStatus);\r\n  console.log('Dropped items:', droppedItems);\r\n}, [items, droppedItems]);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🔵 Drop zones mounted:\", document.querySelectorAll(\"[data-droppable]\"));\r\n\r\n  setTimeout(() => {\r\n    const dropZones = document.querySelectorAll(\"[data-droppable]\");\r\n    console.log(\"✅ Drop zones found in DOM:\", dropZones);\r\n\r\n    dropZones.forEach((zone) => {\r\n      console.log(\"📍 Drop Zone Element:\", zone);\r\n      console.log(\"👉 Attributes:\", zone.attributes);\r\n      console.log(\"📏 Bounding Rect:\", zone.getBoundingClientRect());\r\n    });\r\n  }, 500); // Delay ensures elements are fully rendered\r\n\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🔄 Drop zones reloaded. Current drop zones:\", document.querySelectorAll(\"[data-droppable]\"));\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  document.querySelectorAll(\"[data-droppable]\").forEach((el) =>\r\n    console.log(\"🔍 Found Drop Zone ID:\", el.id)\r\n  );\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  document.querySelectorAll(\"[data-droppable]\").forEach((el) =>\r\n    console.log(\"✅ Drop Zone Element ID:\", el.id)\r\n  );\r\n}, []);\r\n\r\nconst [, setRender] = useState(false);\r\n\r\nuseEffect(() => {\r\n  setTimeout(() => {\r\n    console.log(\"✅ Forcing a re-render to ensure drop zones exist.\");\r\n    setRender(prev => !prev); // Toggle state to trigger re-render\r\n  }, 100);\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🛠️ isCheckoutEditing changed:\", isCheckoutEditing);\r\n}, [isCheckoutEditing]);\r\n\r\n// Update dropZoneStyle\r\nconst dropZoneStyle: React.CSSProperties = {\r\n  minHeight: \"250px\",\r\n  width: \"100%\",\r\n  padding: \"20px\",\r\n  boxSizing: \"border-box\",\r\n  border: isOverTop ? \"2px solid #2196F3\" : \"2px dashed #ccc\",\r\n  backgroundColor: isOverTop ? \"rgba(33, 150, 243, 0.1)\" : \"transparent\",\r\n  position: \"relative\",\r\n  zIndex: 1,\r\n  touchAction: \"none\",\r\n  userSelect: \"none\" as const,\r\n  overflow: \"visible\"\r\n};\r\n\r\nconst handleSaveCheckout = async () => {\r\n  if (!selectedProfile) {\r\n    console.log(\"❌ No active profile selected\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API_URL}/checkout/save`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        profile_id: selectedProfile, // ✅ Store checkout items uniquely per profile\r\n        items: droppedItems,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    console.log(`✅ Checkout items saved for profile ${selectedProfile}:`, result);\r\n  } catch (error) {\r\n    console.error(\"❌ Error saving checkout items:\", error);\r\n  }\r\n};\r\n\r\n\r\nconst handleCancelCheckout = async () => {\r\n  if (!selectedProfile) {\r\n    console.log(\"❌ No active profile selected\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API_URL}/checkout/load/${selectedProfile}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    setDroppedItems(result.items);\r\n    console.log(`🔄 Restored checkout items for profile ${selectedProfile}:`, result.items);\r\n  } catch (error) {\r\n    console.error(\"❌ Error loading previous checkout items:\", error);\r\n  }\r\n};\r\n\r\nconst handleProfileChange = async (profileId: string) => {\r\n  console.log(`🔄 Profile changed: ${profileId}`); // ✅ Log profile change\r\n  setSelectedProfile(profileId);\r\n\r\n  try {\r\n    const response = await fetch(`${API_URL}/checkout/load/${profileId}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    \r\n    setDroppedItems(result.items || []);\r\n    console.log(`✅ Loaded checkout items for profile ${profileId}:`, result.items);\r\n  } catch (error) {\r\n    console.error(\"❌ Error loading checkout items for profile:\", error);\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  if (selectedProfile) {\r\n    handleProfileChange(selectedProfile); // ✅ Load saved checkout items when profile changes\r\n  }\r\n}, [selectedProfile]);\r\n\r\nconsole.log(\"Rendering MainScreen:\");\r\nconsole.log(\"showToTestList:\", showToTestList);\r\nconsole.log(\"showThreeDModelWindow:\", showThreeDModelWindow);\r\n\r\n\r\nreturn (\r\n  <div className={styles.mainScreen}>\r\n    {!isSidebarOpen && (\r\n      <button\r\n        className={styles.retractExpandSidebarButton}\r\n        onClick={toggleSidebar}\r\n      >\r\n        <FaBars />\r\n      </button>\r\n    )}\r\n\r\n    <div className={`${styles.sidebar} ${isSidebarOpen ? \"\" : styles.hidden}`}>\r\n      <div className={styles.sidebarHeader}>\r\n        <span>Menu</span>\r\n        <button className={styles.toggleButton} onClick={toggleSidebar}>\r\n          ☰\r\n        </button>\r\n      </div>\r\n      <ul className={styles.menu}>\r\n        <li className={styles.menuItem} onClick={() => setSelectedProfile(null)}>\r\n          Home\r\n        </li>\r\n        <li \r\n  className={styles.menuItem} \r\n  onClick={() => {\r\n    console.log(\"🚀 Menu item clicked: Tests to Conduct\");\r\n    openToTestList();\r\n    // Force a state check after a short delay\r\n    setTimeout(() => {\r\n      console.log(\"🔍 showToTestList after menu click:\", showToTestList);\r\n    }, 100);\r\n  }}\r\n>\r\n  Tests to Conduct\r\n</li>\r\n        <li className={styles.menuItem}>\r\n          <div className={styles.profileContainer}>\r\n            <button\r\n              className={styles.profilesButton}\r\n              onClick={toggleProfileDropdown}\r\n            >\r\n              Profiles\r\n            </button>\r\n            <div className={styles.profileButtonGroup}>\r\n              <button\r\n                className={styles.dropdownButton}\r\n                onClick={toggleProfileDropdown}\r\n              >\r\n                {isProfileDropdownOpen ? \"▲\" : \"▼\"}\r\n              </button>\r\n              <button\r\n                className={styles.addProfileButton}\r\n                onClick={addProfile}\r\n              >\r\n                <FaPlus />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        {isProfileDropdownOpen && (\r\n          <ul className={styles.profileDropdown}>\r\n          {profiles.map((profile) => (\r\n            <li\r\n              key={profile.id || profile.name}\r\n              className={styles.profileSidebarItem}\r\n              onClick={() => {\r\n                handleProfileChange(profile.name); // ✅ Ensure checkout items load per profile\r\n              }}\r\n            >\r\n              {profile.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        \r\n        )}\r\n      </ul>\r\n      <div className={styles.settingsContainer}>\r\n        <button className={styles.settingsButton}>\r\n          <FaCog />\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div className={styles.content}>\r\n      {selectedProfile ? (\r\n        <div className={styles.profilePage}>\r\n          <div className={styles.profileHeading}>\r\n            <h1>{selectedProfile}</h1>\r\n            <button\r\n              className={styles.deleteButton}\r\n              onClick={() => deleteProfile(selectedProfile)}\r\n            >\r\n              <FaTrash />\r\n            </button>\r\n          </div>\r\n\r\n          {/* ✅ About/Specifications Button Below Profile Name */}\r\n          <button className={styles.aboutButton} onClick={toggleAbout}>\r\n            <FaInfoCircle /> About/Specifications\r\n          </button>\r\n\r\n          {/* ✅ Show/Hide About Section */}\r\n          {showAbout && (\r\n            <div\r\n              className={`${styles.aboutSection} ${\r\n                document.documentElement.classList.contains(\"dark\")\r\n                  ? styles.darkMode\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              {/* ✅ Editing Mode: Use Tiptap Rich Text Editor */}\r\n              {isEditing ? (\r\n                <>\r\n                  {/* ✅ Add Toolbar for Lists */}\r\n                  <div className=\"toolbar\">\r\n                    <button onClick={() => editor?.chain().focus().toggleBulletList().run()}>\r\n                      Bullet List\r\n                    </button>\r\n                    <button onClick={() => editor?.chain().focus().toggleOrderedList().run()}>\r\n                      Ordered List\r\n                    </button>\r\n                  </div>\r\n\r\n                  <EditorContent editor={editor} className={styles.richTextEditor} />\r\n\r\n                  {/* ✅ Show all images outside the editor */}\r\n                  {uploadedImages.length > 0 ? (\r\n                    <div className={styles.imageContainer}>\r\n                      {uploadedImages.map((image, index) => (\r\n                        <div key={index} className={styles.imageWrapper}>\r\n                          <img\r\n                            src={image.src}\r\n                            alt={image.alt}\r\n                            className={styles.uploadedImage}\r\n                          />\r\n                          {/* ✅ Remove button only renders in editing mode */}\r\n                          <button\r\n                            className={styles.removeImageButton}\r\n                            onClick={() => removeImage(index)}\r\n                          >\r\n                            ✖\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <p className={styles.imagePlaceholder}>No images uploaded</p>\r\n                  )}\r\n\r\n                  {/* ✅ File Upload Section (Only in Editing Mode) */}\r\n                  <div className={styles.uploadContainer}>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".txt, .docx\"\r\n                      onChange={handleFileUpload}\r\n                      className={styles.uploadInput}\r\n                    />\r\n                    {/* ✅ Show file name specific to the selected profile */}\r\n                    {selectedProfile &&\r\n                      profileData[selectedProfile]?.uploadedFileName && (\r\n                        <p>Uploaded: {profileData[selectedProfile].uploadedFileName}</p>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                /* ✅ Normal Mode: Display Formatted Content */\r\n                <>\r\n                  <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: sanitizeHTML(profileData[selectedProfile]?.description || \"<p>No description available.</p>\"),\r\n                      }}\r\n                  />\r\n                  {/* ✅ Show all images outside the editor */}\r\n                  {profileData[selectedProfile]?.images.length > 0 && (\r\n                    <div className={styles.imageContainer}>\r\n                      {selectedProfile && profileData[selectedProfile]?.images.map((image: { src: string; alt: string }, index: number) => (\r\n                        <div key={index} className={styles.imageWrapper}>\r\n                          <img \r\n                             src={image.src} \r\n                             alt={image.alt} \r\n                             className={styles.uploadedImage}\r\n                             onError={(e) => e.currentTarget.src = \"/fallback-image.png\"} // Provide a fallback image\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {/* ✅ Save, Edit, and Download Buttons */}\r\n                <div className={styles.actionButtons}>\r\n                  {!isEditing && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => saveToFile(\"txt\")}\r\n                        className={styles.downloadButton}\r\n                      >\r\n                        <FaDownload /> Save as .TXT\r\n                      </button>\r\n                      <button\r\n                        onClick={() => saveToFile(\"docx\")}\r\n                        className={styles.downloadButton}\r\n                      >\r\n                        <FaDownload /> Save as .DOCX\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  {isEditing ? (\r\n                    <>\r\n                      <button\r\n                        onClick={saveEditedDescription}\r\n                        className={styles.saveButton}\r\n                      >\r\n                        <FaCheck /> Save\r\n                      </button>\r\n                      <button\r\n                        onClick={cancelEditing}\r\n                        className={styles.cancelButton}\r\n                      >\r\n                        <FaTimes /> Cancel\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button className={styles.editButton} onClick={startEditing}>\r\n                      <FaEdit />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n              {/* ✅ Test Type & Checkout Button Located Outside About Section */}\r\n              <h2 className={styles.testTypeHeader}>Test Type</h2>\r\n              <button className={styles.checkoutButton} onClick={toggleCheckout}>\r\n                <FaWrench /> Checkout\r\n              </button>\r\n   \r\n \r\n              {showCheckout && (\r\n                <div className={styles.checkoutSection}\r\n                  style={{\r\n                    backgroundColor: checkoutBgColor,\r\n                    transition: 'background-color 0.3s ease',\r\n                  }}\r\n                >\r\n\r\n{(() => { console.log(\"🔄 Checkout Section Re-rendered\"); return null; })()}\r\n\r\n                <div className={styles.checkoutHeader} style={{ display: 'flex', alignItems: 'center' }}>\r\n                  <h3 style={{ marginRight: '10px' }}>Test Selection:</h3>\r\n                  <button className={styles.editButton} onClick={toggleCheckoutEditMode}>\r\n                    <FaEdit />\r\n                  </button>\r\n        \r\n                  {!isCheckoutEditing && (\r\n                    <button className={styles.startTestButton} style={{ marginLeft: 'auto' }}>\r\n                      <FaPlay /> Start Test\r\n                    </button>\r\n                  )}\r\n                </div>\r\n\r\n                <DndContext\r\n  sensors={sensors}\r\n  collisionDetection={customCollisionDetection}\r\n  onDragStart={({ active }) => {\r\n    setActiveId(String(active.id));\r\n    setDragging(true);\r\n  }}\r\n  onDragEnd={handleDragEnd}\r\n  onDragCancel={() => {\r\n    setActiveId(null);\r\n    setDragging(false);\r\n  }}\r\n>\r\n  {/* Top Section Drop Zone */}\r\n  <div\r\n  key=\"top-section\"\r\n  ref={topSectionRef}\r\n  id=\"top-section\"\r\n  data-id=\"1\"\r\n  data-droppable=\"true\"\r\n  data-droppable-id=\"1\"\r\n  data-type=\"container\"\r\n  className={`${styles.topSection} dropZoneArea ${isOverTop ? \"isOver\" : \"\"}`}\r\n  data-is-over={isOverTop ? \"true\" : \"false\"}\r\n  style={dropZoneStyle}\r\n>\r\n    {droppedItems.length === 0 && isCheckoutEditing && (\r\n      <div style={{ \r\n        position: \"absolute\", \r\n        top: \"50%\", \r\n        left: \"50%\", \r\n        transform: \"translate(-50%, -50%)\",\r\n        color: \"#666\",\r\n        fontStyle: \"italic\"\r\n      }}>\r\n        Drop items here\r\n      </div>\r\n    )}\r\n<SortableContext key={sortableKey} items={droppedItems} strategy={verticalListSortingStrategy}>\r\n  {droppedItems.map((item) => (\r\n    <div key={`top-${item.id}`} className={styles.droppableBox} style={{ position: 'relative', overflow: 'visible' }}>\r\n      <DraggableBox \r\n        id={item.id}\r\n        header={item.header}\r\n        options={item.options}\r\n        data={{ type: \"draggable-item\" }}\r\n        isDropped={true}\r\n        removeDroppedItem={removeDroppedItem}\r\n        isCheckoutEditing={isCheckoutEditing}\r\n      />\r\n    </div>\r\n  ))}\r\n</SortableContext>\r\n  </div>\r\n\r\n  {/* Bottom Section */}\r\n  {isCheckoutEditing && (\r\n    <div\r\n    ref={bottomSectionRef}\r\n    id=\"bottom-section\"\r\n    data-id=\"2\"\r\n    data-droppable=\"true\"\r\n    data-droppable-id=\"2\"\r\n    data-type=\"container\"\r\n    data-current='{\"type\": \"container\"}'\r\n    className={styles.bottomSection}\r\n    style={{\r\n      minHeight: \"200px\",\r\n      padding: \"20px\",\r\n      position: \"relative\",\r\n      border: isOverBottom ? \"2px solid #2196F3\" : \"2px dashed #ccc\",\r\n      backgroundColor: isOverBottom ? \"rgba(33, 150, 243, 0.1)\" : \"transparent\",\r\n      touchAction: \"none\",\r\n      userSelect: \"none\",\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(auto-fill, minmax(150px, 1fr))\",\r\n      gap: \"10px\",\r\n      pointerEvents: \"auto\"  // Add this to ensure dragging works\r\n    }}\r\n  >\r\n  <h4>Available Components</h4>\r\n  <SortableContext key={sortableKey} items={items} strategy={verticalListSortingStrategy}>\r\n\r\n  {items.map((item) => {\r\n  const isInTopSection = droppedItems.some(droppedItem => droppedItem.id === item.id);\r\n  return (\r\n    <div\r\n      key={`bottom-${item.id}`}\r\n      className={styles.dragItem}\r\n      data-draggable-id={item.id}\r\n      data-dropped={isInTopSection ? \"true\" : \"false\"}\r\n      style={{\r\n        opacity: isInTopSection ? 0.3 : 1,\r\n        pointerEvents: isInTopSection ? 'none' : 'auto',\r\n        cursor: isInTopSection ? 'not-allowed' : 'grab'\r\n      }}\r\n    >\r\n      <DraggableBox\r\n        id={item.id}\r\n        header={item.header}\r\n        options={item.options}\r\n        data={{ type: \"draggable-item\" }}\r\n        isDropped={isInTopSection}\r\n        isInBottomSection={true} // ✅ Ensure it knows it's in the bottom section\r\n      />\r\n    </div>\r\n  );\r\n})}\r\n</SortableContext>\r\n</div>\r\n  )}\r\n\r\n<DragOverlay>\r\n  {activeId ? (\r\n    <DraggableBox\r\n      id={activeId}\r\n      header={(items.find(item => item.id === activeId) || droppedItems.find(item => item.id === activeId))?.header || \"\"}\r\n      options={(items.find(item => item.id === activeId) || droppedItems.find(item => item.id === activeId))?.options || []}\r\n      data={{ type: \"draggable-item\" }} // ✅ Ensure this is added\r\n    />\r\n  ) : null}\r\n</DragOverlay>\r\n\r\n</DndContext>\r\n\r\n              {isCheckoutEditing && (\r\n                <div className={styles.editModeButtons}>\r\n<button className={styles.saveButton} onClick={() => {\r\n                      handleSaveCheckout();\r\n                      toggleCheckoutEditMode(); // ✅ Exit edit mode after saving\r\n                  }}>\r\n                    <FaCheck /> Save\r\n                  </button>\r\n                  <button className={styles.cancelButton} onClick={() => {\r\n                      handleCancelCheckout();\r\n                      toggleCheckoutEditMode(); // ✅ Exit edit mode after canceling\r\n                  }}>\r\n                    <FaTimes /> Cancel\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <h2 className={styles.ThreeDModelViewerHeader}>Satellite Model Viewer</h2>\r\n{/* ✅ Open the 3D Model Viewer for the selected profile */}\r\n<button\r\n  className={styles.threeDModelButton}\r\n  onClick={(e) => {\r\n    e.preventDefault();\r\n    console.log(\"🔘 3D Model button clicked\");\r\n    \r\n    // Find the profile to get its ID\r\n    const profile = profiles.find((p) => p.name === selectedProfile);\r\n    const profileId = profile?.id || 1;\r\n    \r\n    console.log(`📱 Opening 3D Model window for profile ID: ${profileId}`);\r\n    \r\n    // Ensure any pending state updates are completed first\r\n    setTimeout(() => {\r\n      // Call the openModelWindow function provided through props\r\n      openModelWindow(profileId);\r\n      \r\n      // Log the state after opening\r\n      setTimeout(() => {\r\n        console.log(\"🔍 After 3D Model button click:\");\r\n        console.log(\"- showThreeDModelWindow:\", showThreeDModelWindow);\r\n        console.log(\"- threeDModelProfileId:\", threeDModelProfileId);\r\n      }, 100);\r\n    }, 50);\r\n  }}\r\n>\r\n  <FaCube /> 3D Model Viewer\r\n</button>\r\n\r\n          </div>\r\n        ) : (\r\n          <div className={styles.profilePage}>\r\n            <h1 className={styles.profileHeading}>Satellite Automated Testing System</h1>\r\n            <p className={styles.profileSubtext}>Navigate using the side panel</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default MainScreen;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2222, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/ToTestList/ToTestList.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"actions\": \"ToTestList-module__vY2V8W__actions\",\n  \"addButton\": \"ToTestList-module__vY2V8W__addButton\",\n  \"clearButton\": \"ToTestList-module__vY2V8W__clearButton\",\n  \"closeButton\": \"ToTestList-module__vY2V8W__closeButton\",\n  \"dark\": \"ToTestList-module__vY2V8W__dark\",\n  \"deleteButton\": \"ToTestList-module__vY2V8W__deleteButton\",\n  \"drag-handle\": \"ToTestList-module__vY2V8W__drag-handle\",\n  \"form\": \"ToTestList-module__vY2V8W__form\",\n  \"header\": \"ToTestList-module__vY2V8W__header\",\n  \"popup\": \"ToTestList-module__vY2V8W__popup\",\n  \"popup-show\": \"ToTestList-module__vY2V8W__popup-show\",\n  \"selectedRow\": \"ToTestList-module__vY2V8W__selectedRow\",\n  \"table\": \"ToTestList-module__vY2V8W__table\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 2237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2243, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ToTestList/ToTestList.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styles from \"./ToTestList.module.css\";\r\nimport Draggable from \"react-draggable\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { WindowName } from \"types/types\";\r\n\r\ninterface ToTestListProps {\r\n  zIndex: number; \r\n  onMouseDown: () => void; \r\n  onClose: () => void;\r\n  bringWindowToFront: (windowName: WindowName) => void;\r\n  windowZIndexes: { [key: string]: number };\r\n  zIndexCounter: number;\r\n}\r\n\r\ninterface RowData {\r\n  sn: number;\r\n  test: string;\r\n  satellite: string;\r\n  dateTime: string;\r\n  loggedBy: string;\r\n  selected?: boolean;\r\n}\r\n\r\nconst ToTestList: React.FC<ToTestListProps> = ({ \r\n  zIndex, \r\n  onMouseDown, \r\n  onClose, \r\n  bringWindowToFront, \r\n  windowZIndexes, \r\n  zIndexCounter \r\n}) => {\r\n  // Use MutableRefObject instead of RefObject to satisfy Draggable's requirements\r\n  const nodeRef = useRef<HTMLDivElement>(null);\r\n  const [rows, setRows] = useState<RowData[]>([]);\r\n  const [formData, setFormData] = useState({\r\n    test: \"\",\r\n    satellite: \"\",\r\n    loggedBy: \"\",\r\n  });\r\n\r\n  // Create portal element once on mount\r\n  const [portalElement] = useState(() => {\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"toTestList-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n  // Get position from sessionStorage or use default\r\n  const savedPosition = sessionStorage.getItem('toTestListPosition');\r\n  const defaultPosition = savedPosition ? JSON.parse(savedPosition) : {\r\n    x: (window.innerWidth - 800) / 2, // Use correct width (800px)\r\n    y: (window.innerHeight - 500) / 2\r\n  };\r\n\r\n  const [position, setPosition] = useState(defaultPosition);\r\n\r\n  // When the window is clicked, bring it to front using the passed function\r\n  const handleWindowClick = () => {\r\n    console.log(`🖱️ Clicked ToTestList, bringing to front`);\r\n    onMouseDown();\r\n  };\r\n\r\n  // Load data from localStorage\r\n  useEffect(() => {\r\n    // Load data from localStorage\r\n    const savedRows = localStorage.getItem(\"toTestListRows\");\r\n    if (savedRows) {\r\n      setRows(JSON.parse(savedRows));\r\n    }\r\n\r\n    // Cleanup function for when component unmounts\r\n    return () => {\r\n      if (portalElement && portalElement.parentNode) {\r\n        portalElement.parentNode.removeChild(portalElement);\r\n      }\r\n    };\r\n  }, [portalElement]);\r\n\r\n  // Save data to localStorage when rows change\r\n  useEffect(() => {\r\n    if (rows.length > 0) {\r\n      localStorage.setItem(\"toTestListRows\", JSON.stringify(rows));\r\n    } else {\r\n      localStorage.removeItem(\"toTestListRows\");\r\n    }\r\n  }, [rows]);\r\n\r\n  // Save position to sessionStorage whenever it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('toTestListPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  const addItem = () => {\r\n    if (!formData.test) return; // Prevent adding empty items\r\n    \r\n    const newRow: RowData = {\r\n      sn: rows.length + 1,\r\n      test: formData.test,\r\n      satellite: formData.satellite,\r\n      dateTime: new Date().toLocaleString(),\r\n      loggedBy: formData.loggedBy || \"Anonymous\",\r\n    };\r\n    \r\n    setRows([...rows, newRow]);\r\n    setFormData({ test: \"\", satellite: \"\", loggedBy: \"\" });\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    const selectedIndex = rows.findIndex((row) => row.selected);\r\n    if (selectedIndex !== -1) {\r\n      const updatedRows = rows.filter((_, index) => index !== selectedIndex);\r\n\r\n      if (updatedRows.length === 0) {\r\n        // If the list is empty, clear localStorage\r\n        localStorage.removeItem(\"toTestListRows\");\r\n      } else {\r\n        // Otherwise, update the rows and save to localStorage\r\n        localStorage.setItem(\"toTestListRows\", JSON.stringify(updatedRows));\r\n      }\r\n\r\n      // Update state with recalculated S/N\r\n      setRows(\r\n        updatedRows.map((row, index) => ({\r\n          ...row,\r\n          sn: index + 1, // Recalculate S/N\r\n        }))\r\n      );\r\n    }\r\n  };\r\n\r\n  const clearList = () => {\r\n    if (window.confirm(\"Are you sure you want to clear all items?\")) {\r\n      setRows([]);\r\n      localStorage.removeItem(\"toTestListRows\"); // Explicitly clear localStorage\r\n    }\r\n  };\r\n\r\n  const toggleRowSelection = (index: number) => {\r\n    const updatedRows = rows.map((row, i) => ({\r\n      ...row,\r\n      selected: i === index ? !row.selected : false,\r\n    }));\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  // Add state to track dark mode\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  \r\n  // Update dark mode state on component mount and when theme changes\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      const isDark = document.documentElement.classList.contains(\"dark\");\r\n      console.log(\"🌓 ToTestList theme updated:\", isDark ? \"dark\" : \"light\");\r\n      setIsDarkMode(isDark);\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Set up observer for theme changes\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        if (mutation.attributeName === \"class\") {\r\n          checkDarkMode();\r\n        }\r\n      });\r\n    });\r\n    \r\n    observer.observe(document.documentElement, {\r\n      attributes: true,\r\n      attributeFilter: [\"class\"]\r\n    });\r\n    \r\n    // Also check periodically as a backup\r\n    const interval = setInterval(checkDarkMode, 1000);\r\n    \r\n    return () => {\r\n      observer.disconnect();\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n  \r\n  // Force immediate theme check when component renders\r\n  useEffect(() => {\r\n    setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n  }, []);\r\n\r\n  // Debug when z-index changes\r\n  useEffect(() => {\r\n    console.log(`ToTestList z-index updated to ${zIndex}`);\r\n  }, [zIndex]);\r\n\r\n  // Compute actual z-index to use, falling back to provided zIndex if needed\r\n  const effectiveZIndex = windowZIndexes[\"ToTestList\"] || zIndex;\r\n  console.log(`🎯 ToTestList using z-index:`, effectiveZIndex);\r\n\r\n  // Log when component renders\r\n  useEffect(() => {\r\n    console.log(\"ToTestList component rendering with z-index:\", effectiveZIndex);\r\n  }, [effectiveZIndex]);\r\n\r\n  return createPortal(\r\n    <div \r\n      style={{\r\n        position: \"absolute\",\r\n        zIndex: effectiveZIndex,\r\n        willChange: \"z-index\"\r\n      }}\r\n      data-window=\"ToTestList\"\r\n    >\r\n      <Draggable\r\n        // @ts-ignore: Ignoring type error for nodeRef as it's compatible at runtime\r\n        nodeRef={nodeRef}\r\n        handle=\".drag-handle\"\r\n        position={position}\r\n        onStop={(e, data) => {\r\n          console.log(`📌 ToTestList moved to: x=${data.x}, y=${data.y}`);\r\n          setPosition({ x: data.x, y: data.y });\r\n        }}\r\n      >\r\n        <div \r\n          ref={nodeRef} \r\n          className={styles.popup} \r\n          style={{ \r\n            position: \"fixed\", \r\n            backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n            color: isDarkMode ? \"#fff\" : \"#000\",\r\n            boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\",\r\n            width: \"800px\", // Add explicit width\r\n            userSelect: \"none\", // Prevent text selection during drag\r\n            willChange: \"transform\"\r\n          }}\r\n          onClick={handleWindowClick}\r\n        >\r\n          <div className={`${styles.header} drag-handle`}>\r\n            <h2>Tests to Conduct</h2>\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation(); // Prevents accidental reopening\r\n                onClose();\r\n              }}\r\n              className={styles.closeButton}\r\n              style={{ color: isDarkMode ? \"white\" : \"black\" }}\r\n            >\r\n              ✖\r\n            </button>\r\n          </div>\r\n          <table className={styles.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>S/N</th>\r\n                <th>Test</th>\r\n                <th>Satellite</th>\r\n                <th>Date/Time Logged</th>\r\n                <th>Logged by</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rows.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan={5} style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n                    No items added yet. Add a test below.\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                rows.map((row, index) => (\r\n                  <tr\r\n                    key={index}\r\n                    style={{\r\n                      backgroundColor: row.selected\r\n                        ? isDarkMode\r\n                          ? \"#003366\" // Dark blue for dark mode\r\n                          : \"#d0ebff\" // Light blue for light mode\r\n                        : \"transparent\",\r\n                    }}\r\n                    className={row.selected ? styles.selectedRow : \"\"}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation(); // Prevent window click handler\r\n                      toggleRowSelection(index);\r\n                    }}\r\n                  >\r\n                    <td>{row.sn}</td>\r\n                    <td>{row.test}</td>\r\n                    <td>{row.satellite}</td>\r\n                    <td>{row.dateTime}</td>\r\n                    <td>{row.loggedBy}</td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n          <div className={styles.form}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Test\"\r\n              value={formData.test}\r\n              onChange={(e) => setFormData({ ...formData, test: e.target.value })}\r\n              onMouseDown={(e) => e.stopPropagation()} // Prevent dragging when interacting with inputs\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Satellite\"\r\n              value={formData.satellite}\r\n              onChange={(e) => setFormData({ ...formData, satellite: e.target.value })}\r\n              onMouseDown={(e) => e.stopPropagation()}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Logged by\"\r\n              value={formData.loggedBy}\r\n              onChange={(e) => setFormData({ ...formData, loggedBy: e.target.value })}\r\n              onMouseDown={(e) => e.stopPropagation()}\r\n            />\r\n            <button \r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                addItem();\r\n              }} \r\n              className={styles.addButton}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n          <div className={styles.actions}>\r\n            <button \r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                deleteItem();\r\n              }} \r\n              className={styles.deleteButton}\r\n              disabled={!rows.some(row => row.selected)}\r\n            >\r\n              Delete Item\r\n            </button>\r\n            <button \r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                clearList();\r\n              }} \r\n              className={styles.clearButton}\r\n              disabled={rows.length === 0}\r\n            >\r\n              Clear List\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Draggable>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default ToTestList;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAqBA,MAAM,aAAwC,CAAC,EAC7C,MAAM,EACN,WAAW,EACX,OAAO,EACP,kBAAkB,EAClB,cAAc,EACd,aAAa,EACd;;IACC,gFAAgF;IAChF,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAC9C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QACvC,MAAM;QACN,WAAW;QACX,UAAU;IACZ;IAEA,sCAAsC;IACtC,MAAM,CAAC,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;+BAAE;YAC/B,MAAM,UAAU,SAAS,aAAa,CAAC;YACvC,QAAQ,EAAE,GAAG;YACb,SAAS,IAAI,CAAC,WAAW,CAAC;YAC1B,OAAO;QACT;;IAEA,kDAAkD;IAClD,MAAM,gBAAgB,eAAe,OAAO,CAAC;IAC7C,MAAM,kBAAkB,gBAAgB,KAAK,KAAK,CAAC,iBAAiB;QAClE,GAAG,CAAC,OAAO,UAAU,GAAG,GAAG,IAAI;QAC/B,GAAG,CAAC,OAAO,WAAW,GAAG,GAAG,IAAI;IAClC;IAEA,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,0EAA0E;IAC1E,MAAM,oBAAoB;QACxB,QAAQ,GAAG,CAAC,CAAC,yCAAyC,CAAC;QACvD;IACF;IAEA,8BAA8B;IAC9B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,8BAA8B;YAC9B,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,IAAI,WAAW;gBACb,QAAQ,KAAK,KAAK,CAAC;YACrB;YAEA,+CAA+C;YAC/C;wCAAO;oBACL,IAAI,iBAAiB,cAAc,UAAU,EAAE;wBAC7C,cAAc,UAAU,CAAC,WAAW,CAAC;oBACvC;gBACF;;QACF;+BAAG;QAAC;KAAc;IAElB,6CAA6C;IAC7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,IAAI,KAAK,MAAM,GAAG,GAAG;gBACnB,aAAa,OAAO,CAAC,kBAAkB,KAAK,SAAS,CAAC;YACxD,OAAO;gBACL,aAAa,UAAU,CAAC;YAC1B;QACF;+BAAG;QAAC;KAAK;IAET,sDAAsD;IACtD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,eAAe,OAAO,CAAC,sBAAsB,KAAK,SAAS,CAAC;QAC9D;+BAAG;QAAC;KAAS;IAEb,MAAM,UAAU;QACd,IAAI,CAAC,SAAS,IAAI,EAAE,QAAQ,6BAA6B;QAEzD,MAAM,SAAkB;YACtB,IAAI,KAAK,MAAM,GAAG;YAClB,MAAM,SAAS,IAAI;YACnB,WAAW,SAAS,SAAS;YAC7B,UAAU,IAAI,OAAO,cAAc;YACnC,UAAU,SAAS,QAAQ,IAAI;QACjC;QAEA,QAAQ;eAAI;YAAM;SAAO;QACzB,YAAY;YAAE,MAAM;YAAI,WAAW;YAAI,UAAU;QAAG;IACtD;IAEA,MAAM,aAAa;QACjB,MAAM,gBAAgB,KAAK,SAAS,CAAC,CAAC,MAAQ,IAAI,QAAQ;QAC1D,IAAI,kBAAkB,CAAC,GAAG;YACxB,MAAM,cAAc,KAAK,MAAM,CAAC,CAAC,GAAG,QAAU,UAAU;YAExD,IAAI,YAAY,MAAM,KAAK,GAAG;gBAC5B,2CAA2C;gBAC3C,aAAa,UAAU,CAAC;YAC1B,OAAO;gBACL,sDAAsD;gBACtD,aAAa,OAAO,CAAC,kBAAkB,KAAK,SAAS,CAAC;YACxD;YAEA,qCAAqC;YACrC,QACE,YAAY,GAAG,CAAC,CAAC,KAAK,QAAU,CAAC;oBAC/B,GAAG,GAAG;oBACN,IAAI,QAAQ;gBACd,CAAC;QAEL;IACF;IAEA,MAAM,YAAY;QAChB,IAAI,OAAO,OAAO,CAAC,8CAA8C;YAC/D,QAAQ,EAAE;YACV,aAAa,UAAU,CAAC,mBAAmB,gCAAgC;QAC7E;IACF;IAEA,MAAM,qBAAqB,CAAC;QAC1B,MAAM,cAAc,KAAK,GAAG,CAAC,CAAC,KAAK,IAAM,CAAC;gBACxC,GAAG,GAAG;gBACN,UAAU,MAAM,QAAQ,CAAC,IAAI,QAAQ,GAAG;YAC1C,CAAC;QACD,QAAQ;IACV;IAEA,+BAA+B;IAC/B,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,mEAAmE;IACnE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,MAAM;sDAAgB;oBACpB,MAAM,SAAS,SAAS,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;oBAC3D,QAAQ,GAAG,CAAC,gCAAgC,SAAS,SAAS;oBAC9D,cAAc;gBAChB;;YAEA,gBAAgB;YAChB;YAEA,oCAAoC;YACpC,MAAM,WAAW,IAAI;wCAAiB,CAAC;oBACrC,UAAU,OAAO;gDAAC,CAAC;4BACjB,IAAI,SAAS,aAAa,KAAK,SAAS;gCACtC;4BACF;wBACF;;gBACF;;YAEA,SAAS,OAAO,CAAC,SAAS,eAAe,EAAE;gBACzC,YAAY;gBACZ,iBAAiB;oBAAC;iBAAQ;YAC5B;YAEA,sCAAsC;YACtC,MAAM,WAAW,YAAY,eAAe;YAE5C;wCAAO;oBACL,SAAS,UAAU;oBACnB,cAAc;gBAChB;;QACF;+BAAG,EAAE;IAEL,qDAAqD;IACrD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,cAAc,SAAS,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC5D;+BAAG,EAAE;IAEL,6BAA6B;IAC7B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,QAAQ,GAAG,CAAC,CAAC,8BAA8B,EAAE,QAAQ;QACvD;+BAAG;QAAC;KAAO;IAEX,2EAA2E;IAC3E,MAAM,kBAAkB,cAAc,CAAC,aAAa,IAAI;IACxD,QAAQ,GAAG,CAAC,CAAC,4BAA4B,CAAC,EAAE;IAE5C,6BAA6B;IAC7B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,QAAQ,GAAG,CAAC,gDAAgD;QAC9D;+BAAG;QAAC;KAAgB;IAEpB,qBAAO,CAAA,GAAA,oKAAA,CAAA,eAAY,AAAD,gBAChB,6LAAC;QACC,OAAO;YACL,UAAU;YACV,QAAQ;YACR,YAAY;QACd;QACA,eAAY;kBAEZ,cAAA,6LAAC,4JAAA,CAAA,UAAS;YACR,4EAA4E;YAC5E,SAAS;YACT,QAAO;YACP,UAAU;YACV,QAAQ,CAAC,GAAG;gBACV,QAAQ,GAAG,CAAC,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;gBAC9D,YAAY;oBAAE,GAAG,KAAK,CAAC;oBAAE,GAAG,KAAK,CAAC;gBAAC;YACrC;sBAEA,cAAA,6LAAC;gBACC,KAAK;gBACL,WAAW,4JAAA,CAAA,UAAM,CAAC,KAAK;gBACvB,OAAO;oBACL,UAAU;oBACV,iBAAiB,aAAa,YAAY;oBAC1C,OAAO,aAAa,SAAS;oBAC7B,WAAW;oBACX,OAAO;oBACP,YAAY;oBACZ,YAAY;gBACd;gBACA,SAAS;;kCAET,6LAAC;wBAAI,WAAW,GAAG,4JAAA,CAAA,UAAM,CAAC,MAAM,CAAC,YAAY,CAAC;;0CAC5C,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;gCACC,SAAS,CAAC;oCACR,EAAE,eAAe,IAAI,gCAAgC;oCACrD;gCACF;gCACA,WAAW,4JAAA,CAAA,UAAM,CAAC,WAAW;gCAC7B,OAAO;oCAAE,OAAO,aAAa,UAAU;gCAAQ;0CAChD;;;;;;;;;;;;kCAIH,6LAAC;wBAAM,WAAW,4JAAA,CAAA,UAAM,CAAC,KAAK;;0CAC5B,6LAAC;0CACC,cAAA,6LAAC;;sDACC,6LAAC;sDAAG;;;;;;sDACJ,6LAAC;sDAAG;;;;;;sDACJ,6LAAC;sDAAG;;;;;;sDACJ,6LAAC;sDAAG;;;;;;sDACJ,6LAAC;sDAAG;;;;;;;;;;;;;;;;;0CAGR,6LAAC;0CACE,KAAK,MAAM,KAAK,kBACf,6LAAC;8CACC,cAAA,6LAAC;wCAAG,SAAS;wCAAG,OAAO;4CAAE,WAAW;4CAAU,SAAS;wCAAO;kDAAG;;;;;;;;;;2CAKnE,KAAK,GAAG,CAAC,CAAC,KAAK,sBACb,6LAAC;wCAEC,OAAO;4CACL,iBAAiB,IAAI,QAAQ,GACzB,aACE,UAAU,0BAA0B;+CACpC,UAAU,4BAA4B;+CACxC;wCACN;wCACA,WAAW,IAAI,QAAQ,GAAG,4JAAA,CAAA,UAAM,CAAC,WAAW,GAAG;wCAC/C,SAAS,CAAC;4CACR,EAAE,eAAe,IAAI,+BAA+B;4CACpD,mBAAmB;wCACrB;;0DAEA,6LAAC;0DAAI,IAAI,EAAE;;;;;;0DACX,6LAAC;0DAAI,IAAI,IAAI;;;;;;0DACb,6LAAC;0DAAI,IAAI,SAAS;;;;;;0DAClB,6LAAC;0DAAI,IAAI,QAAQ;;;;;;0DACjB,6LAAC;0DAAI,IAAI,QAAQ;;;;;;;uCAlBZ;;;;;;;;;;;;;;;;kCAwBf,6LAAC;wBAAI,WAAW,4JAAA,CAAA,UAAM,CAAC,IAAI;;0CACzB,6LAAC;gCACC,MAAK;gCACL,aAAY;gCACZ,OAAO,SAAS,IAAI;gCACpB,UAAU,CAAC,IAAM,YAAY;wCAAE,GAAG,QAAQ;wCAAE,MAAM,EAAE,MAAM,CAAC,KAAK;oCAAC;gCACjE,aAAa,CAAC,IAAM,EAAE,eAAe;;;;;;0CAEvC,6LAAC;gCACC,MAAK;gCACL,aAAY;gCACZ,OAAO,SAAS,SAAS;gCACzB,UAAU,CAAC,IAAM,YAAY;wCAAE,GAAG,QAAQ;wCAAE,WAAW,EAAE,MAAM,CAAC,KAAK;oCAAC;gCACtE,aAAa,CAAC,IAAM,EAAE,eAAe;;;;;;0CAEvC,6LAAC;gCACC,MAAK;gCACL,aAAY;gCACZ,OAAO,SAAS,QAAQ;gCACxB,UAAU,CAAC,IAAM,YAAY;wCAAE,GAAG,QAAQ;wCAAE,UAAU,EAAE,MAAM,CAAC,KAAK;oCAAC;gCACrE,aAAa,CAAC,IAAM,EAAE,eAAe;;;;;;0CAEvC,6LAAC;gCACC,SAAS,CAAC;oCACR,EAAE,eAAe;oCACjB;gCACF;gCACA,WAAW,4JAAA,CAAA,UAAM,CAAC,SAAS;0CAC5B;;;;;;;;;;;;kCAIH,6LAAC;wBAAI,WAAW,4JAAA,CAAA,UAAM,CAAC,OAAO;;0CAC5B,6LAAC;gCACC,SAAS,CAAC;oCACR,EAAE,eAAe;oCACjB;gCACF;gCACA,WAAW,4JAAA,CAAA,UAAM,CAAC,YAAY;gCAC9B,UAAU,CAAC,KAAK,IAAI,CAAC,CAAA,MAAO,IAAI,QAAQ;0CACzC;;;;;;0CAGD,6LAAC;gCACC,SAAS,CAAC;oCACR,EAAE,eAAe;oCACjB;gCACF;gCACA,WAAW,4JAAA,CAAA,UAAM,CAAC,WAAW;gCAC7B,UAAU,KAAK,MAAM,KAAK;0CAC3B;;;;;;;;;;;;;;;;;;;;;;;;;;;cAOT,SAAS,IAAI;AAEjB;GAxUM;KAAA;uCA0US"}},
    {"offset": {"line": 2766, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2771, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/ServerWindow/ServerWindow.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"closeButton\": \"ServerWindow-module__wfqmlq__closeButton\",\n  \"connectButton\": \"ServerWindow-module__wfqmlq__connectButton\",\n  \"dark\": \"ServerWindow-module__wfqmlq__dark\",\n  \"drag-handle\": \"ServerWindow-module__wfqmlq__drag-handle\",\n  \"form\": \"ServerWindow-module__wfqmlq__form\",\n  \"header\": \"ServerWindow-module__wfqmlq__header\",\n  \"input\": \"ServerWindow-module__wfqmlq__input\",\n  \"logWindow\": \"ServerWindow-module__wfqmlq__logWindow\",\n  \"popup\": \"ServerWindow-module__wfqmlq__popup\",\n  \"popup-show\": \"ServerWindow-module__wfqmlq__popup-show\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 2783, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2789, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ServerWindow/ServerWindow.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./ServerWindow.module.css\";\r\nimport { Rnd } from \"react-rnd\"; // Use react-rnd for draggable and resizable windows\r\nimport { createPortal } from \"react-dom\";\r\nimport { WindowName } from \"types/types\";\r\n\r\ninterface ServerWindowProps {\r\n  onClose: () => void;\r\n  zIndex: number; \r\n  onMouseDown: () => void; \r\n  bringWindowToFront: (windowName: WindowName) => void;\r\n  windowZIndexes: { [key: string]: number };\r\n  zIndexCounter: number;\r\n}\r\n\r\nconst ServerWindow: React.FC<ServerWindowProps> = ({ \r\n  zIndex, \r\n  onMouseDown, \r\n  onClose, \r\n  bringWindowToFront, \r\n  windowZIndexes, \r\n  zIndexCounter \r\n}) => {\r\n  const [serverAddress, setServerAddress] = useState<string>(\"\");\r\n  const [serverId, setServerId] = useState<string>(\"\");\r\n  const [status, setStatus] = useState<string>(\"Disconnected\");\r\n  const [logs, setLogs] = useState<{ timestamp: string; message: string }[]>([]);\r\n\r\n  const logsEndRef = useRef<HTMLDivElement | null>(null);\r\n  const navigate = useNavigate();\r\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  const windowName = \"ServerWindow\";\r\n\r\n  // Create portal element once on mount\r\n  const [portalElement] = useState(() => {\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"serverWindow-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n  // Important: Store position in sessionStorage to maintain it across renders\r\n  const savedPosition = sessionStorage.getItem('serverWindowPosition');\r\n  const defaultPosition = savedPosition ? JSON.parse(savedPosition) : {\r\n    x: (window.innerWidth - 600) / 2, // Correct width of 600px\r\n    y: (window.innerHeight - 500) / 2 // Better vertical centering\r\n  };\r\n\r\n  const [position, setPosition] = useState(defaultPosition);\r\n  \r\n  useEffect(() => {\r\n    // Scroll logs to bottom when they update\r\n    if (logsEndRef.current) {\r\n      logsEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n    \r\n    // Cleanup function for component unmount\r\n    return () => {\r\n      if (portalElement && portalElement.parentNode) {\r\n        portalElement.parentNode.removeChild(portalElement);\r\n      }\r\n    };\r\n  }, [logs, portalElement]);\r\n\r\n  const nodeRef = useRef<HTMLDivElement>(null!);\r\n\r\n  const appendLog = (message: string) => {\r\n    const timestamp = new Date().toLocaleString();\r\n    setLogs((prevLogs) => [...prevLogs, { timestamp, message }]);\r\n  };\r\n\r\n  // When the window is clicked, bring it to front using the passed function\r\n  const handleWindowClick = () => {\r\n    console.log(`🖱️ Clicked ${windowName}, bringing to front`);\r\n    onMouseDown();\r\n  };\r\n\r\n  const handleConnect = async () => {\r\n    if (!serverAddress || !serverId) {\r\n      alert(\"Please provide both Server Address and Server ID.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setStatus(\"Connecting...\");\r\n      appendLog(\"Attempting to connect to MCC server...\");\r\n      console.log(\"Connecting to:\", `${backendUrl}/connect_mcc`); // Log the URL\r\n\r\n      const response = await fetch(`${backendUrl}/connect_mcc`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          server_address: serverAddress,\r\n          server_id: serverId,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error(\"Non-JSON response:\", errorText);\r\n        appendLog(`HTTP error! Status: ${response.status} - ${errorText}`);\r\n        setStatus(\"Connection Error\");\r\n        return;\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(\"Backend response:\", result);\r\n\r\n      if (result.status === \"success\") {\r\n        setStatus(\"Connected\");\r\n        appendLog(result.message);\r\n        setTimeout(() => {// to let any state updates complete\r\n          navigate(\"/main\");\r\n        }, 100);\r\n      } else {\r\n        setStatus(\"Failed to Connect\");\r\n        appendLog(result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error connecting to MCC:\", error);\r\n      setStatus(\"Connection Error\");\r\n      appendLog(`Connection error: ${error instanceof Error ? error.message : String(error)}`);\r\n    }\r\n  };\r\n\r\n  // Debug when z-index changes\r\n  useEffect(() => {\r\n    console.log(`ServerWindow z-index updated to ${zIndex}`);\r\n  }, [zIndex]);\r\n  \r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      const isDark = document.documentElement.classList.contains(\"dark\");\r\n      console.log(\"🌓 Dark mode detected:\", isDark);\r\n      setIsDarkMode(isDark);\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Set up observer for theme changes\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        if (mutation.attributeName === \"class\") {\r\n          checkDarkMode();\r\n        }\r\n      });\r\n    });\r\n    \r\n    observer.observe(document.documentElement, {\r\n      attributes: true,\r\n      attributeFilter: [\"class\"]\r\n    });\r\n    \r\n    // Also check periodically as a backup\r\n    const interval = setInterval(checkDarkMode, 1000);\r\n    \r\n    return () => {\r\n      observer.disconnect();\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n  \r\n  // Ensure light/dark mode styling is applied on render\r\n  useEffect(() => {\r\n    // Force immediate check when component renders\r\n    setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n  }, []);\r\n\r\n  // Get the effective z-index value\r\n  const effectiveZIndex = windowZIndexes[\"ServerWindow\"] || zIndex;\r\n  \r\n  // Save position to sessionStorage whenever it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('serverWindowPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  return createPortal(\r\n    <Rnd\r\n      position={position}\r\n      size={{\r\n        width: 500,\r\n        height: \"auto\",\r\n      }}\r\n      dragHandleClassName=\"drag-handle\"\r\n      enableResizing={false}\r\n      onDragStop={(e, d) => {\r\n        console.log(`📌 ServerWindow moved to: x=${d.x}, y=${d.y}`);\r\n        // Save new position to state and sessionStorage\r\n        setPosition({ x: d.x, y: d.y });\r\n      }}\r\n      style={{ \r\n        position: \"fixed\",\r\n        zIndex: effectiveZIndex,\r\n        pointerEvents: \"auto\",\r\n        backgroundColor: isDarkMode ? \"#121212\" : \"white\",\r\n        borderRadius: \"10px\",\r\n        boxShadow: \"0 0 20px rgba(0, 0, 0, 0.3)\",\r\n        willChange: \"transform, z-index\"\r\n      }}\r\n      onClick={handleWindowClick}\r\n    >\r\n      <div \r\n        className={styles.popup} \r\n        style={{ \r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n          color: isDarkMode ? \"#fff\" : \"#000\"\r\n        }}\r\n      >\r\n        <div className={`${styles.header} drag-handle`}>\r\n          <h2>Server Connection</h2>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation(); // Prevents accidental reopening\r\n              onClose();\r\n            }}\r\n            className={styles.closeButton}\r\n            style={{\r\n              color: isDarkMode ? \"white\" : \"black\", // Apply color dynamically\r\n            }}\r\n          >\r\n            ✖\r\n          </button>\r\n        </div>\r\n        <div className={styles.form}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Server Address\"\r\n            value={serverAddress}\r\n            onChange={(e) => setServerAddress(e.target.value)}\r\n            className={styles.input}\r\n            onClick={(e) => e.stopPropagation()} // Prevent window click handler\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Server ID\"\r\n            value={serverId}\r\n            onChange={(e) => setServerId(e.target.value)}\r\n            className={styles.input}\r\n            onClick={(e) => e.stopPropagation()} // Prevent window click handler\r\n          />\r\n          <button \r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleConnect();\r\n            }} \r\n            className={styles.connectButton}\r\n          >\r\n            Connect\r\n          </button>\r\n        </div>\r\n        <p>Status: {status}</p>\r\n        <div className={styles.logs}>\r\n          <h3>Logs</h3>\r\n          <div\r\n            className={styles.logWindow}\r\n            style={{\r\n              maxHeight: \"250px\",\r\n              overflowY: \"scroll\",\r\n              border: \"1px solid #ccc\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              backgroundColor: isDarkMode ? \"#2a2a2a\" : \"#f5f5f5\"\r\n            }}\r\n            onClick={(e) => e.stopPropagation()} // Prevent window click handler\r\n          >\r\n            {logs.map((log, index) => (\r\n              <div key={index} style={{ display: \"flex\", alignItems: \"flex-start\" }}>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    minWidth: \"150px\",\r\n                    marginRight: \"8px\",\r\n                    textAlign: \"right\",\r\n                  }}\r\n                >\r\n                  [{log.timestamp}]\r\n                </span>\r\n                <span style={{ flex: 1 }}>{log.message}</span>\r\n              </div>\r\n            ))}\r\n            <div ref={logsEndRef}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Rnd>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport default ServerWindow;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3208, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ModelWindow/ThreeDModelWindow.jsx"],"sourcesContent":["// ThreeDModelWindow.jsx - Ultra minimal version\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\n\r\n// Global state for Three.js\r\nlet isInitialized = false;\r\nlet cleanupFunction = null;\r\nlet animationFrameId = null;\r\nlet hasCalledOnMouseDown = false;\r\n\r\nconst ThreeDModelWindow = (props) => {\r\n  // Extract props\r\n  const { profileId, zIndex, onMouseDown, onClose, showThreeDModelWindow } = props;\r\n  \r\n  // State\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [loadError, setLoadError] = useState(null);\r\n  const [loadingProgress, setLoadingProgress] = useState(0);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  \r\n  // Refs\r\n  const nodeRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const hasInitializedRef = useRef(false);\r\n  \r\n  // API URL\r\n  const API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(checkDarkMode);\r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Main initialization effect\r\n  useEffect(() => {\r\n    // Skip if not visible\r\n    if (!showThreeDModelWindow) {\r\n      return;\r\n    }\r\n    \r\n    // Bring window to front ONCE\r\n    if (!hasCalledOnMouseDown && onMouseDown) {\r\n      hasCalledOnMouseDown = true; // Set global flag\r\n      \r\n      // Delay to prevent infinite update loops\r\n      setTimeout(() => {\r\n        if (onMouseDown) onMouseDown();\r\n      }, 100);\r\n    }\r\n    \r\n    // Avoid duplicate initialization\r\n    if (hasInitializedRef.current) return;\r\n    hasInitializedRef.current = true;\r\n    \r\n    // Load model data\r\n    const loadModel = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        setLoadError(null);\r\n        \r\n        // Fetch model data\r\n        const response = await fetch(`${API_URL}/api/profile/${profileId}`);\r\n        if (!response.ok) throw new Error(`Failed to fetch model data: ${response.status}`);\r\n        \r\n        const data = await response.json();\r\n        \r\n        if (data.model_path) {\r\n          // Initialize after a delay to ensure container is ready\r\n          setTimeout(() => {\r\n            if (containerRef.current) {\r\n              initThreeJS(data.model_path, profileId);\r\n            }\r\n          }, 100);\r\n        } else {\r\n          setLoadError(\"No 3D model available for this profile\");\r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n        setLoadError(error instanceof Error ? error.message : \"Failed to load model\");\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadModel();\r\n    \r\n    // Component cleanup\r\n    return () => {\r\n      hasInitializedRef.current = false;\r\n      \r\n      // Clean up Three.js\r\n      if (cleanupFunction) {\r\n        try {\r\n          cleanupFunction();\r\n        } catch (e) {\r\n          console.warn(\"Error during cleanup:\", e);\r\n        }\r\n        cleanupFunction = null;\r\n      }\r\n      \r\n      // Cancel animation frame\r\n      if (animationFrameId) {\r\n        cancelAnimationFrame(animationFrameId);\r\n        animationFrameId = null;\r\n      }\r\n    };\r\n  }, [profileId, showThreeDModelWindow, API_URL, onMouseDown]);\r\n  \r\n  // Handle component close - Just call onClose\r\n  const handleClose = () => {\r\n    if (onClose) onClose();\r\n  };\r\n\r\n  // File upload handler\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) return;\r\n    \r\n    if (!selectedFile.name.endsWith('.glb')) {\r\n      alert('Error: Only .glb files are supported.');\r\n      return;\r\n    }\r\n    \r\n    // Check file size\r\n    const maxSize = 20 * 1024 * 1024; // 20MB\r\n    if (selectedFile.size > maxSize) {\r\n      alert(`Error: File exceeds 20MB limit (${(selectedFile.size/1024/1024).toFixed(2)}MB)`);\r\n      return;\r\n    }\r\n    \r\n    // Clean up\r\n    if (cleanupFunction) {\r\n      cleanupFunction();\r\n      cleanupFunction = null;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('profile_id', String(profileId));\r\n    \r\n    try {\r\n      const response = await fetch(`${API_URL}/api/upload-glb`, {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Server returned ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      // Reset\r\n      isInitialized = false;\r\n      \r\n      // Clear file input\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n      \r\n      // Initialize Three.js with delay\r\n      setTimeout(() => {\r\n        if (containerRef.current) {\r\n          initThreeJS(result.model_path, profileId);\r\n        }\r\n      }, 100);\r\n      \r\n    } catch (error) {\r\n      console.error('Error uploading:', error);\r\n      setLoadError(`Upload failed: ${error.message}`);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Initialize Three.js\r\n  const initThreeJS = (modelPath, profileId) => {\r\n    // Skip if already initialized\r\n    if (isInitialized) return;\r\n    \r\n    // Import modules\r\n    Promise.all([\r\n      import('three'),\r\n      import('three/examples/jsm/loaders/GLTFLoader.js'),\r\n      import('three/examples/jsm/controls/OrbitControls.js')\r\n    ]).then(([THREE, { GLTFLoader }, { OrbitControls }]) => {\r\n      if (!containerRef.current) {\r\n        setLoadError(\"UI error: Container not available\");\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        // Setup Three.js\r\n        const width = containerRef.current.clientWidth;\r\n        const height = containerRef.current.clientHeight;\r\n        \r\n        // Renderer\r\n        const renderer = new THREE.WebGLRenderer({ \r\n          antialias: true,\r\n          alpha: true \r\n        });\r\n        renderer.setSize(width, height);\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        \r\n        // Scene\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(isDarkMode ? 0x1a1a1a : 0xf5f5f5);\r\n        \r\n        // Camera\r\n        const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);\r\n        camera.position.set(5, 5, 10);\r\n        \r\n        // Lights\r\n        const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\r\n        scene.add(ambientLight);\r\n        \r\n        const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\r\n        directionalLight.position.set(10, 10, 5);\r\n        scene.add(directionalLight);\r\n        \r\n        // Clear container\r\n        while (containerRef.current.firstChild) {\r\n          try {\r\n            containerRef.current.removeChild(containerRef.current.firstChild);\r\n          } catch (e) {\r\n            console.warn(\"Error removing child:\", e);\r\n            break;\r\n          }\r\n        }\r\n        \r\n        // Add renderer\r\n        containerRef.current.appendChild(renderer.domElement);\r\n        \r\n        // Controls\r\n        const controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.enableDamping = true;\r\n        \r\n        // Full model path\r\n        let fullModelPath = modelPath;\r\n        if (modelPath) {\r\n          if (modelPath.startsWith('http')) {\r\n            fullModelPath = modelPath;\r\n          } else if (modelPath.startsWith('/')) {\r\n            fullModelPath = `${API_URL}${modelPath}`;\r\n          } else {\r\n            fullModelPath = `${API_URL}/${modelPath}`;\r\n          }\r\n        }\r\n        \r\n        // Define fallback paths\r\n        const priorityPaths = [\r\n          fullModelPath,\r\n          `${API_URL}/models/profile_${profileId}.glb`\r\n        ];\r\n        \r\n        // Load model\r\n        const loader = new GLTFLoader();\r\n        loader.load(\r\n          priorityPaths[0],\r\n          (gltf) => {\r\n            try {\r\n              const model = gltf.scene;\r\n              \r\n              // Center and scale\r\n              const box = new THREE.Box3().setFromObject(model);\r\n              const center = new THREE.Vector3();\r\n              box.getCenter(center);\r\n              model.position.sub(center);\r\n              \r\n              const size = box.getSize(new THREE.Vector3()).length();\r\n              const scale = 5 / size;\r\n              model.scale.set(scale, scale, scale);\r\n              \r\n              scene.add(model);\r\n              \r\n              setIsLoading(false);\r\n              isInitialized = true;\r\n            } catch (err) {\r\n              console.error(\"Error processing model:\", err);\r\n              setLoadError(`Error processing model: ${err.message}`);\r\n              setIsLoading(false);\r\n            }\r\n          },\r\n          (progress) => {\r\n            try {\r\n              if (progress.total > 0) {\r\n                const percent = Math.round((progress.loaded / progress.total) * 100);\r\n                setLoadingProgress(percent);\r\n              } else {\r\n                setLoadingProgress((prev) => (prev < 90 ? prev + 10 : prev));\r\n              }\r\n            } catch (err) {\r\n              console.warn(\"Error reporting progress:\", err);\r\n            }\r\n          },\r\n          (error) => {\r\n            console.error(\"Error loading model:\", error);\r\n            \r\n            // Try fallback\r\n            if (priorityPaths.length > 1) {\r\n              loader.load(\r\n                priorityPaths[1],\r\n                (gltf) => {\r\n                  try {\r\n                    const model = gltf.scene;\r\n                    \r\n                    // Center and scale\r\n                    const box = new THREE.Box3().setFromObject(model);\r\n                    const center = new THREE.Vector3();\r\n                    box.getCenter(center);\r\n                    model.position.sub(center);\r\n                    \r\n                    const size = box.getSize(new THREE.Vector3()).length();\r\n                    const scale = 5 / size;\r\n                    model.scale.set(scale, scale, scale);\r\n                    \r\n                    scene.add(model);\r\n                    \r\n                    setIsLoading(false);\r\n                    isInitialized = true;\r\n                  } catch (err) {\r\n                    console.error(\"Error processing model:\", err);\r\n                    setLoadError(`Error processing model: ${err.message}`);\r\n                    setIsLoading(false);\r\n                  }\r\n                },\r\n                (progress) => {\r\n                  try {\r\n                    if (progress.total > 0) {\r\n                      const percent = Math.round((progress.loaded / progress.total) * 100);\r\n                      setLoadingProgress(percent);\r\n                    }\r\n                  } catch (err) {\r\n                    console.warn(\"Error reporting progress:\", err);\r\n                  }\r\n                },\r\n                (finalError) => {\r\n                  setLoadError(\"Could not load model file. Please upload a model file.\");\r\n                  setIsLoading(false);\r\n                }\r\n              );\r\n            } else {\r\n              setLoadError(`Error loading model: ${error.message}`);\r\n              setIsLoading(false);\r\n            }\r\n          }\r\n        );\r\n        \r\n        // Resize handler\r\n        const handleResize = () => {\r\n          if (!containerRef.current) return;\r\n          \r\n          const width = containerRef.current.clientWidth;\r\n          const height = containerRef.current.clientHeight;\r\n          \r\n          renderer.setSize(width, height);\r\n          camera.aspect = width / height;\r\n          camera.updateProjectionMatrix();\r\n        };\r\n        \r\n        window.addEventListener('resize', handleResize);\r\n        \r\n        // Animation loop\r\n        const animate = () => {\r\n          if (!containerRef.current) return;\r\n          \r\n          controls.update();\r\n          renderer.render(scene, camera);\r\n          animationFrameId = requestAnimationFrame(animate);\r\n        };\r\n        \r\n        // Start animation\r\n        animate();\r\n        \r\n        // Store cleanup\r\n        cleanupFunction = () => {\r\n          window.removeEventListener('resize', handleResize);\r\n          \r\n          if (animationFrameId) {\r\n            cancelAnimationFrame(animationFrameId);\r\n            animationFrameId = null;\r\n          }\r\n          \r\n          if (controls) controls.dispose();\r\n          \r\n          if (renderer) {\r\n            renderer.dispose();\r\n            \r\n            if (renderer.domElement && renderer.domElement.parentNode) {\r\n              try {\r\n                renderer.domElement.parentNode.removeChild(renderer.domElement);\r\n              } catch (e) {\r\n                console.warn(\"Could not remove renderer:\", e);\r\n              }\r\n            }\r\n          }\r\n          \r\n          if (scene) {\r\n            scene.traverse((object) => {\r\n              if (!object) return;\r\n              \r\n              if (object.geometry) {\r\n                object.geometry.dispose();\r\n              }\r\n              \r\n              if (object.material) {\r\n                if (Array.isArray(object.material)) {\r\n                  object.material.forEach(material => {\r\n                    if (material.map) material.map.dispose();\r\n                    material.dispose();\r\n                  });\r\n                } else {\r\n                  if (object.material.map) object.material.map.dispose();\r\n                  object.material.dispose();\r\n                }\r\n              }\r\n            });\r\n            \r\n            scene.clear();\r\n          }\r\n          \r\n          isInitialized = false;\r\n        };\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error initializing Three.js:\", error);\r\n        setLoadError(\"Failed to initialize 3D viewer\");\r\n        setIsLoading(false);\r\n      }\r\n    }).catch(error => {\r\n      console.error(\"Error loading libraries:\", error);\r\n      setLoadError(\"Failed to load 3D libraries\");\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n  \r\n  // Don't render if not visible\r\n  if (!showThreeDModelWindow) {\r\n    return null;\r\n  }\r\n  \r\n  // Get default position\r\n  const defaultPosition = {\r\n    x: Math.max(0, (window.innerWidth - 600) / 2),\r\n    y: Math.max(0, (window.innerHeight - 550) / 2)\r\n  };\r\n  \r\n  // Normal render\r\n  return (\r\n    <Draggable\r\n      nodeRef={nodeRef}\r\n      handle=\".drag-handle\"\r\n      defaultPosition={defaultPosition}\r\n    >\r\n      <div \r\n        ref={nodeRef} \r\n        style={{ \r\n          position: \"fixed\",\r\n          zIndex: zIndex || 10000,\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n          color: isDarkMode ? \"#fff\" : \"#000\",\r\n          width: \"600px\",\r\n          borderRadius: \"10px\",\r\n          boxShadow: \"0 4px 20px rgba(0, 0, 0, 0.3)\",\r\n          overflow: \"hidden\"\r\n        }}\r\n      >\r\n        <div \r\n          className=\"drag-handle\"\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            padding: \"15px\",\r\n            backgroundColor: isDarkMode ? \"#2c2c2c\" : \"#f0f0f0\",\r\n            borderTopLeftRadius: \"10px\",\r\n            borderTopRightRadius: \"10px\",\r\n            cursor: \"grab\"\r\n          }}\r\n        >\r\n          <h2 style={{ margin: 0 }}>Satellite Model Viewer</h2>\r\n          <button\r\n            onClick={handleClose}\r\n            style={{ \r\n              color: isDarkMode ? \"white\" : \"black\",\r\n              background: \"none\",\r\n              border: \"none\",\r\n              fontSize: \"18px\",\r\n              cursor: \"pointer\"\r\n            }}\r\n          >\r\n            ✖\r\n          </button>\r\n        </div>\r\n        \r\n        <div style={{ padding: \"20px\" }}>\r\n          {/* 3D Model Viewer */}\r\n          <div \r\n            ref={containerRef}\r\n            style={{ \r\n              height: \"400px\", \r\n              marginBottom: \"20px\",\r\n              borderRadius: \"4px\",\r\n              overflow: \"hidden\",\r\n              border: `1px solid ${isDarkMode ? \"#333\" : \"#ddd\"}`,\r\n              position: \"relative\",\r\n              backgroundColor: isDarkMode ? \"#111\" : \"#f5f5f5\"\r\n            }}\r\n          >\r\n            {/* Loading overlay */}\r\n            {isLoading && (\r\n              <div style={{ \r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                backgroundColor: isDarkMode ? \"rgba(0,0,0,0.7)\" : \"rgba(255,255,255,0.7)\",\r\n                zIndex: 10\r\n              }}>\r\n                <div style={{ marginBottom: \"20px\", textAlign: \"center\" }}>\r\n                  <div style={{ fontSize: \"18px\", marginBottom: \"8px\" }}>\r\n                    Loading 3D model...\r\n                  </div>\r\n                  <div style={{ fontSize: \"14px\", opacity: 0.8 }}>\r\n                    {loadingProgress > 0 ? `${loadingProgress}%` : \"Initializing...\"}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div style={{ \r\n                  width: \"70%\", \r\n                  height: \"12px\", \r\n                  backgroundColor: isDarkMode ? \"#333\" : \"#ddd\",\r\n                  borderRadius: \"6px\",\r\n                  overflow: \"hidden\",\r\n                  boxShadow: \"inset 0 1px 3px rgba(0,0,0,0.2)\"\r\n                }}>\r\n                  <div style={{\r\n                    width: `${loadingProgress > 0 ? loadingProgress : 5}%`,\r\n                    height: \"100%\",\r\n                    backgroundColor: loadingProgress > 0 ? \"#00bcd4\" : \"#999\",\r\n                    transition: \"width 0.3s ease\"\r\n                  }} />\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Error message */}\r\n            {loadError && !isLoading && (\r\n              <div style={{ \r\n                position: \"absolute\",\r\n                top: 0,\r\n                left: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                backgroundColor: isDarkMode ? \"#1a1a1a\" : \"#f5f5f5\",\r\n                color: \"#e74c3c\",\r\n                padding: \"20px\",\r\n                textAlign: \"center\",\r\n                zIndex: 10\r\n              }}>\r\n                <div style={{ marginBottom: \"20px\" }}>\r\n                  <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n                    <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />\r\n                    <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\" />\r\n                  </svg>\r\n                </div>\r\n                <div>{loadError}</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* File Upload Section */}\r\n          <div style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            padding: \"15px\",\r\n            backgroundColor: isDarkMode ? \"#111\" : \"#f5f5f5\",\r\n            borderRadius: \"4px\",\r\n            border: \"1px solid \" + (isDarkMode ? \"#333\" : \"#ddd\")\r\n          }}>\r\n            <p style={{ margin: 0, fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n              Upload 3D Model\r\n            </p>\r\n            \r\n            <div style={{ fontSize: \"14px\", opacity: 0.8, marginBottom: \"8px\" }}>\r\n              Accepts <b>.glb</b> files - Max size: 20MB\r\n            </div>\r\n            \r\n            <div style={{ display: \"flex\", gap: \"10px\", alignItems: \"center\" }}>\r\n              <input \r\n                type=\"file\" \r\n                accept=\".glb\"\r\n                ref={fileInputRef}\r\n                onChange={(e) => {\r\n                  if (e.target.files && e.target.files.length > 0) {\r\n                    setSelectedFile(e.target.files[0]);\r\n                  }\r\n                }}\r\n                style={{ \r\n                  flex: 1,\r\n                  padding: \"8px\",\r\n                  border: \"1px solid \" + (isDarkMode ? \"#444\" : \"#ccc\"),\r\n                  borderRadius: \"4px\",\r\n                  backgroundColor: isDarkMode ? \"#222\" : \"#fff\",\r\n                  color: isDarkMode ? \"#fff\" : \"#000\"\r\n                }}\r\n              />\r\n              \r\n              <button \r\n                onClick={handleFileUpload}\r\n                disabled={!selectedFile || isLoading}\r\n                style={{\r\n                  padding: \"10px 16px\",\r\n                  backgroundColor: selectedFile && !isLoading ? \"#4caf50\" : \"#ccc\",\r\n                  color: \"white\",\r\n                  border: \"none\",\r\n                  borderRadius: \"4px\",\r\n                  cursor: selectedFile && !isLoading ? \"pointer\" : \"not-allowed\",\r\n                  fontWeight: \"bold\",\r\n                  minWidth: \"80px\"\r\n                }}\r\n              >\r\n                {isLoading ? \"Loading...\" : \"Upload\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default ThreeDModelWindow;"],"names":[],"mappings":"AAAA,gDAAgD;;;;;AAChD;AACA;AA0BkB;;;;;AAxBlB,4BAA4B;AAC5B,IAAI,gBAAgB;AACpB,IAAI,kBAAkB;AACtB,IAAI,mBAAmB;AACvB,IAAI,uBAAuB;AAE3B,MAAM,oBAAoB,CAAC;;IACzB,gBAAgB;IAChB,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,qBAAqB,EAAE,GAAG;IAE3E,QAAQ;IACR,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,OAAO;IACP,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IACvB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAC5B,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAC5B,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAEjC,UAAU;IACV,MAAM,UAAU,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI;IAErD,sBAAsB;IACtB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,MAAM;6DAAgB;oBACpB,cAAc,SAAS,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;gBAC5D;;YAEA,gBAAgB;YAChB;YAEA,0BAA0B;YAC1B,MAAM,WAAW,IAAI,iBAAiB;YACtC,SAAS,OAAO,CAAC,SAAS,eAAe,EAAE;gBACzC,YAAY;gBACZ,iBAAiB;oBAAC;iBAAQ;YAC5B;YAEA;+CAAO,IAAM,SAAS,UAAU;;QAClC;sCAAG,EAAE;IAEL,6BAA6B;IAC7B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,sBAAsB;YACtB,IAAI,CAAC,uBAAuB;gBAC1B;YACF;YAEA,6BAA6B;YAC7B,IAAI,CAAC,wBAAwB,aAAa;gBACxC,uBAAuB,MAAM,kBAAkB;gBAE/C,yCAAyC;gBACzC;mDAAW;wBACT,IAAI,aAAa;oBACnB;kDAAG;YACL;YAEA,iCAAiC;YACjC,IAAI,kBAAkB,OAAO,EAAE;YAC/B,kBAAkB,OAAO,GAAG;YAE5B,kBAAkB;YAClB,MAAM;yDAAY;oBAChB,IAAI;wBACF,aAAa;wBACb,aAAa;wBAEb,mBAAmB;wBACnB,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,aAAa,EAAE,WAAW;wBAClE,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,4BAA4B,EAAE,SAAS,MAAM,EAAE;wBAElF,MAAM,OAAO,MAAM,SAAS,IAAI;wBAEhC,IAAI,KAAK,UAAU,EAAE;4BACnB,wDAAwD;4BACxD;yEAAW;oCACT,IAAI,aAAa,OAAO,EAAE;wCACxB,YAAY,KAAK,UAAU,EAAE;oCAC/B;gCACF;wEAAG;wBACL,OAAO;4BACL,aAAa;4BACb,aAAa;wBACf;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,UAAU;wBACxB,aAAa,iBAAiB,QAAQ,MAAM,OAAO,GAAG;wBACtD,aAAa;oBACf;gBACF;;YAEA;YAEA,oBAAoB;YACpB;+CAAO;oBACL,kBAAkB,OAAO,GAAG;oBAE5B,oBAAoB;oBACpB,IAAI,iBAAiB;wBACnB,IAAI;4BACF;wBACF,EAAE,OAAO,GAAG;4BACV,QAAQ,IAAI,CAAC,yBAAyB;wBACxC;wBACA,kBAAkB;oBACpB;oBAEA,yBAAyB;oBACzB,IAAI,kBAAkB;wBACpB,qBAAqB;wBACrB,mBAAmB;oBACrB;gBACF;;QACF;sCAAG;QAAC;QAAW;QAAuB;QAAS;KAAY;IAE3D,6CAA6C;IAC7C,MAAM,cAAc;QAClB,IAAI,SAAS;IACf;IAEA,sBAAsB;IACtB,MAAM,mBAAmB;QACvB,IAAI,CAAC,cAAc;QAEnB,IAAI,CAAC,aAAa,IAAI,CAAC,QAAQ,CAAC,SAAS;YACvC,MAAM;YACN;QACF;QAEA,kBAAkB;QAClB,MAAM,UAAU,KAAK,OAAO,MAAM,OAAO;QACzC,IAAI,aAAa,IAAI,GAAG,SAAS;YAC/B,MAAM,CAAC,gCAAgC,EAAE,CAAC,aAAa,IAAI,GAAC,OAAK,IAAI,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC;YACtF;QACF;QAEA,WAAW;QACX,IAAI,iBAAiB;YACnB;YACA,kBAAkB;QACpB;QAEA,aAAa;QAEb,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ;QACxB,SAAS,MAAM,CAAC,cAAc,OAAO;QAErC,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,eAAe,CAAC,EAAE;gBACxD,QAAQ;gBACR,MAAM;YACR;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE,SAAS,MAAM,EAAE;YACtD;YAEA,MAAM,SAAS,MAAM,SAAS,IAAI;YAElC,QAAQ;YACR,gBAAgB;YAEhB,mBAAmB;YACnB,IAAI,aAAa,OAAO,EAAE;gBACxB,aAAa,OAAO,CAAC,KAAK,GAAG;YAC/B;YAEA,iCAAiC;YACjC,WAAW;gBACT,IAAI,aAAa,OAAO,EAAE;oBACxB,YAAY,OAAO,UAAU,EAAE;gBACjC;YACF,GAAG;QAEL,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oBAAoB;YAClC,aAAa,CAAC,eAAe,EAAE,MAAM,OAAO,EAAE;YAC9C,aAAa;QACf;IACF;IAEA,sBAAsB;IACtB,MAAM,cAAc,CAAC,WAAW;QAC9B,8BAA8B;QAC9B,IAAI,eAAe;QAEnB,iBAAiB;QACjB,QAAQ,GAAG,CAAC;;;;SAIX,EAAE,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE,EAAE,aAAa,EAAE,CAAC;YACjD,IAAI,CAAC,aAAa,OAAO,EAAE;gBACzB,aAAa;gBACb,aAAa;gBACb;YACF;YAEA,IAAI;gBACF,iBAAiB;gBACjB,MAAM,QAAQ,aAAa,OAAO,CAAC,WAAW;gBAC9C,MAAM,SAAS,aAAa,OAAO,CAAC,YAAY;gBAEhD,WAAW;gBACX,MAAM,WAAW,IAAI,MAAM,aAAa,CAAC;oBACvC,WAAW;oBACX,OAAO;gBACT;gBACA,SAAS,OAAO,CAAC,OAAO;gBACxB,SAAS,aAAa,CAAC,OAAO,gBAAgB;gBAE9C,QAAQ;gBACR,MAAM,QAAQ,IAAI,MAAM,KAAK;gBAC7B,MAAM,UAAU,GAAG,IAAI,MAAM,KAAK,CAAC,aAAa,WAAW;gBAE3D,SAAS;gBACT,MAAM,SAAS,IAAI,MAAM,iBAAiB,CAAC,IAAI,QAAQ,QAAQ,KAAK;gBACpE,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG;gBAE1B,SAAS;gBACT,MAAM,eAAe,IAAI,MAAM,YAAY,CAAC,UAAU;gBACtD,MAAM,GAAG,CAAC;gBAEV,MAAM,mBAAmB,IAAI,MAAM,gBAAgB,CAAC,UAAU;gBAC9D,iBAAiB,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI;gBACtC,MAAM,GAAG,CAAC;gBAEV,kBAAkB;gBAClB,MAAO,aAAa,OAAO,CAAC,UAAU,CAAE;oBACtC,IAAI;wBACF,aAAa,OAAO,CAAC,WAAW,CAAC,aAAa,OAAO,CAAC,UAAU;oBAClE,EAAE,OAAO,GAAG;wBACV,QAAQ,IAAI,CAAC,yBAAyB;wBACtC;oBACF;gBACF;gBAEA,eAAe;gBACf,aAAa,OAAO,CAAC,WAAW,CAAC,SAAS,UAAU;gBAEpD,WAAW;gBACX,MAAM,WAAW,IAAI,cAAc,QAAQ,SAAS,UAAU;gBAC9D,SAAS,aAAa,GAAG;gBAEzB,kBAAkB;gBAClB,IAAI,gBAAgB;gBACpB,IAAI,WAAW;oBACb,IAAI,UAAU,UAAU,CAAC,SAAS;wBAChC,gBAAgB;oBAClB,OAAO,IAAI,UAAU,UAAU,CAAC,MAAM;wBACpC,gBAAgB,GAAG,UAAU,WAAW;oBAC1C,OAAO;wBACL,gBAAgB,GAAG,QAAQ,CAAC,EAAE,WAAW;oBAC3C;gBACF;gBAEA,wBAAwB;gBACxB,MAAM,gBAAgB;oBACpB;oBACA,GAAG,QAAQ,gBAAgB,EAAE,UAAU,IAAI,CAAC;iBAC7C;gBAED,aAAa;gBACb,MAAM,SAAS,IAAI;gBACnB,OAAO,IAAI,CACT,aAAa,CAAC,EAAE,EAChB,CAAC;oBACC,IAAI;wBACF,MAAM,QAAQ,KAAK,KAAK;wBAExB,mBAAmB;wBACnB,MAAM,MAAM,IAAI,MAAM,IAAI,GAAG,aAAa,CAAC;wBAC3C,MAAM,SAAS,IAAI,MAAM,OAAO;wBAChC,IAAI,SAAS,CAAC;wBACd,MAAM,QAAQ,CAAC,GAAG,CAAC;wBAEnB,MAAM,OAAO,IAAI,OAAO,CAAC,IAAI,MAAM,OAAO,IAAI,MAAM;wBACpD,MAAM,QAAQ,IAAI;wBAClB,MAAM,KAAK,CAAC,GAAG,CAAC,OAAO,OAAO;wBAE9B,MAAM,GAAG,CAAC;wBAEV,aAAa;wBACb,gBAAgB;oBAClB,EAAE,OAAO,KAAK;wBACZ,QAAQ,KAAK,CAAC,2BAA2B;wBACzC,aAAa,CAAC,wBAAwB,EAAE,IAAI,OAAO,EAAE;wBACrD,aAAa;oBACf;gBACF,GACA,CAAC;oBACC,IAAI;wBACF,IAAI,SAAS,KAAK,GAAG,GAAG;4BACtB,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,SAAS,MAAM,GAAG,SAAS,KAAK,GAAI;4BAChE,mBAAmB;wBACrB,OAAO;4BACL,mBAAmB,CAAC,OAAU,OAAO,KAAK,OAAO,KAAK;wBACxD;oBACF,EAAE,OAAO,KAAK;wBACZ,QAAQ,IAAI,CAAC,6BAA6B;oBAC5C;gBACF,GACA,CAAC;oBACC,QAAQ,KAAK,CAAC,wBAAwB;oBAEtC,eAAe;oBACf,IAAI,cAAc,MAAM,GAAG,GAAG;wBAC5B,OAAO,IAAI,CACT,aAAa,CAAC,EAAE,EAChB,CAAC;4BACC,IAAI;gCACF,MAAM,QAAQ,KAAK,KAAK;gCAExB,mBAAmB;gCACnB,MAAM,MAAM,IAAI,MAAM,IAAI,GAAG,aAAa,CAAC;gCAC3C,MAAM,SAAS,IAAI,MAAM,OAAO;gCAChC,IAAI,SAAS,CAAC;gCACd,MAAM,QAAQ,CAAC,GAAG,CAAC;gCAEnB,MAAM,OAAO,IAAI,OAAO,CAAC,IAAI,MAAM,OAAO,IAAI,MAAM;gCACpD,MAAM,QAAQ,IAAI;gCAClB,MAAM,KAAK,CAAC,GAAG,CAAC,OAAO,OAAO;gCAE9B,MAAM,GAAG,CAAC;gCAEV,aAAa;gCACb,gBAAgB;4BAClB,EAAE,OAAO,KAAK;gCACZ,QAAQ,KAAK,CAAC,2BAA2B;gCACzC,aAAa,CAAC,wBAAwB,EAAE,IAAI,OAAO,EAAE;gCACrD,aAAa;4BACf;wBACF,GACA,CAAC;4BACC,IAAI;gCACF,IAAI,SAAS,KAAK,GAAG,GAAG;oCACtB,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,SAAS,MAAM,GAAG,SAAS,KAAK,GAAI;oCAChE,mBAAmB;gCACrB;4BACF,EAAE,OAAO,KAAK;gCACZ,QAAQ,IAAI,CAAC,6BAA6B;4BAC5C;wBACF,GACA,CAAC;4BACC,aAAa;4BACb,aAAa;wBACf;oBAEJ,OAAO;wBACL,aAAa,CAAC,qBAAqB,EAAE,MAAM,OAAO,EAAE;wBACpD,aAAa;oBACf;gBACF;gBAGF,iBAAiB;gBACjB,MAAM,eAAe;oBACnB,IAAI,CAAC,aAAa,OAAO,EAAE;oBAE3B,MAAM,QAAQ,aAAa,OAAO,CAAC,WAAW;oBAC9C,MAAM,SAAS,aAAa,OAAO,CAAC,YAAY;oBAEhD,SAAS,OAAO,CAAC,OAAO;oBACxB,OAAO,MAAM,GAAG,QAAQ;oBACxB,OAAO,sBAAsB;gBAC/B;gBAEA,OAAO,gBAAgB,CAAC,UAAU;gBAElC,iBAAiB;gBACjB,MAAM,UAAU;oBACd,IAAI,CAAC,aAAa,OAAO,EAAE;oBAE3B,SAAS,MAAM;oBACf,SAAS,MAAM,CAAC,OAAO;oBACvB,mBAAmB,sBAAsB;gBAC3C;gBAEA,kBAAkB;gBAClB;gBAEA,gBAAgB;gBAChB,kBAAkB;oBAChB,OAAO,mBAAmB,CAAC,UAAU;oBAErC,IAAI,kBAAkB;wBACpB,qBAAqB;wBACrB,mBAAmB;oBACrB;oBAEA,IAAI,UAAU,SAAS,OAAO;oBAE9B,IAAI,UAAU;wBACZ,SAAS,OAAO;wBAEhB,IAAI,SAAS,UAAU,IAAI,SAAS,UAAU,CAAC,UAAU,EAAE;4BACzD,IAAI;gCACF,SAAS,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,UAAU;4BAChE,EAAE,OAAO,GAAG;gCACV,QAAQ,IAAI,CAAC,8BAA8B;4BAC7C;wBACF;oBACF;oBAEA,IAAI,OAAO;wBACT,MAAM,QAAQ,CAAC,CAAC;4BACd,IAAI,CAAC,QAAQ;4BAEb,IAAI,OAAO,QAAQ,EAAE;gCACnB,OAAO,QAAQ,CAAC,OAAO;4BACzB;4BAEA,IAAI,OAAO,QAAQ,EAAE;gCACnB,IAAI,MAAM,OAAO,CAAC,OAAO,QAAQ,GAAG;oCAClC,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAA;wCACtB,IAAI,SAAS,GAAG,EAAE,SAAS,GAAG,CAAC,OAAO;wCACtC,SAAS,OAAO;oCAClB;gCACF,OAAO;oCACL,IAAI,OAAO,QAAQ,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,GAAG,CAAC,OAAO;oCACpD,OAAO,QAAQ,CAAC,OAAO;gCACzB;4BACF;wBACF;wBAEA,MAAM,KAAK;oBACb;oBAEA,gBAAgB;gBAClB;YAEF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,gCAAgC;gBAC9C,aAAa;gBACb,aAAa;YACf;QACF,GAAG,KAAK,CAAC,CAAA;YACP,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,aAAa;YACb,aAAa;QACf;IACF;IAEA,8BAA8B;IAC9B,IAAI,CAAC,uBAAuB;QAC1B,OAAO;IACT;IAEA,uBAAuB;IACvB,MAAM,kBAAkB;QACtB,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,OAAO,UAAU,GAAG,GAAG,IAAI;QAC3C,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,OAAO,WAAW,GAAG,GAAG,IAAI;IAC9C;IAEA,gBAAgB;IAChB,qBACE,6LAAC,4JAAA,CAAA,UAAS;QACR,SAAS;QACT,QAAO;QACP,iBAAiB;kBAEjB,cAAA,6LAAC;YACC,KAAK;YACL,OAAO;gBACL,UAAU;gBACV,QAAQ,UAAU;gBAClB,iBAAiB,aAAa,YAAY;gBAC1C,OAAO,aAAa,SAAS;gBAC7B,OAAO;gBACP,cAAc;gBACd,WAAW;gBACX,UAAU;YACZ;;8BAEA,6LAAC;oBACC,WAAU;oBACV,OAAO;wBACL,SAAS;wBACT,gBAAgB;wBAChB,YAAY;wBACZ,SAAS;wBACT,iBAAiB,aAAa,YAAY;wBAC1C,qBAAqB;wBACrB,sBAAsB;wBACtB,QAAQ;oBACV;;sCAEA,6LAAC;4BAAG,OAAO;gCAAE,QAAQ;4BAAE;sCAAG;;;;;;sCAC1B,6LAAC;4BACC,SAAS;4BACT,OAAO;gCACL,OAAO,aAAa,UAAU;gCAC9B,YAAY;gCACZ,QAAQ;gCACR,UAAU;gCACV,QAAQ;4BACV;sCACD;;;;;;;;;;;;8BAKH,6LAAC;oBAAI,OAAO;wBAAE,SAAS;oBAAO;;sCAE5B,6LAAC;4BACC,KAAK;4BACL,OAAO;gCACL,QAAQ;gCACR,cAAc;gCACd,cAAc;gCACd,UAAU;gCACV,QAAQ,CAAC,UAAU,EAAE,aAAa,SAAS,QAAQ;gCACnD,UAAU;gCACV,iBAAiB,aAAa,SAAS;4BACzC;;gCAGC,2BACC,6LAAC;oCAAI,OAAO;wCACV,UAAU;wCACV,KAAK;wCACL,MAAM;wCACN,OAAO;wCACP,QAAQ;wCACR,SAAS;wCACT,eAAe;wCACf,YAAY;wCACZ,gBAAgB;wCAChB,iBAAiB,aAAa,oBAAoB;wCAClD,QAAQ;oCACV;;sDACE,6LAAC;4CAAI,OAAO;gDAAE,cAAc;gDAAQ,WAAW;4CAAS;;8DACtD,6LAAC;oDAAI,OAAO;wDAAE,UAAU;wDAAQ,cAAc;oDAAM;8DAAG;;;;;;8DAGvD,6LAAC;oDAAI,OAAO;wDAAE,UAAU;wDAAQ,SAAS;oDAAI;8DAC1C,kBAAkB,IAAI,GAAG,gBAAgB,CAAC,CAAC,GAAG;;;;;;;;;;;;sDAInD,6LAAC;4CAAI,OAAO;gDACV,OAAO;gDACP,QAAQ;gDACR,iBAAiB,aAAa,SAAS;gDACvC,cAAc;gDACd,UAAU;gDACV,WAAW;4CACb;sDACE,cAAA,6LAAC;gDAAI,OAAO;oDACV,OAAO,GAAG,kBAAkB,IAAI,kBAAkB,EAAE,CAAC,CAAC;oDACtD,QAAQ;oDACR,iBAAiB,kBAAkB,IAAI,YAAY;oDACnD,YAAY;gDACd;;;;;;;;;;;;;;;;;gCAML,aAAa,CAAC,2BACb,6LAAC;oCAAI,OAAO;wCACV,UAAU;wCACV,KAAK;wCACL,MAAM;wCACN,OAAO;wCACP,QAAQ;wCACR,SAAS;wCACT,eAAe;wCACf,YAAY;wCACZ,gBAAgB;wCAChB,iBAAiB,aAAa,YAAY;wCAC1C,OAAO;wCACP,SAAS;wCACT,WAAW;wCACX,QAAQ;oCACV;;sDACE,6LAAC;4CAAI,OAAO;gDAAE,cAAc;4CAAO;sDACjC,cAAA,6LAAC;gDAAI,OAAM;gDAAK,QAAO;gDAAK,SAAQ;gDAAY,MAAK;gDAAO,QAAO;gDAAe,aAAY;;kEAC5F,6LAAC;wDAAO,IAAG;wDAAK,IAAG;wDAAK,GAAE;;;;;;kEAC1B,6LAAC;wDAAK,IAAG;wDAAK,IAAG;wDAAI,IAAG;wDAAK,IAAG;;;;;;kEAChC,6LAAC;wDAAK,IAAG;wDAAK,IAAG;wDAAK,IAAG;wDAAK,IAAG;;;;;;;;;;;;;;;;;sDAGrC,6LAAC;sDAAK;;;;;;;;;;;;;;;;;;sCAMZ,6LAAC;4BAAI,OAAO;gCACV,SAAS;gCACT,eAAe;gCACf,KAAK;gCACL,SAAS;gCACT,iBAAiB,aAAa,SAAS;gCACvC,cAAc;gCACd,QAAQ,eAAe,CAAC,aAAa,SAAS,MAAM;4BACtD;;8CACE,6LAAC;oCAAE,OAAO;wCAAE,QAAQ;wCAAG,UAAU;wCAAQ,YAAY;oCAAO;8CAAG;;;;;;8CAI/D,6LAAC;oCAAI,OAAO;wCAAE,UAAU;wCAAQ,SAAS;wCAAK,cAAc;oCAAM;;wCAAG;sDAC3D,6LAAC;sDAAE;;;;;;wCAAQ;;;;;;;8CAGrB,6LAAC;oCAAI,OAAO;wCAAE,SAAS;wCAAQ,KAAK;wCAAQ,YAAY;oCAAS;;sDAC/D,6LAAC;4CACC,MAAK;4CACL,QAAO;4CACP,KAAK;4CACL,UAAU,CAAC;gDACT,IAAI,EAAE,MAAM,CAAC,KAAK,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG;oDAC/C,gBAAgB,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE;gDACnC;4CACF;4CACA,OAAO;gDACL,MAAM;gDACN,SAAS;gDACT,QAAQ,eAAe,CAAC,aAAa,SAAS,MAAM;gDACpD,cAAc;gDACd,iBAAiB,aAAa,SAAS;gDACvC,OAAO,aAAa,SAAS;4CAC/B;;;;;;sDAGF,6LAAC;4CACC,SAAS;4CACT,UAAU,CAAC,gBAAgB;4CAC3B,OAAO;gDACL,SAAS;gDACT,iBAAiB,gBAAgB,CAAC,YAAY,YAAY;gDAC1D,OAAO;gDACP,QAAQ;gDACR,cAAc;gDACd,QAAQ,gBAAgB,CAAC,YAAY,YAAY;gDACjD,YAAY;gDACZ,UAAU;4CACZ;sDAEC,YAAY,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ5C;GAxoBM;KAAA;uCA0oBS"}},
    {"offset": {"line": 3996, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4001, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/WelcomeWindow/WelcomeWindow.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"buttonContainer\": \"WelcomeWindow-module__WdKywW__buttonContainer\",\n  \"buttonWithNotification\": \"WelcomeWindow-module__WdKywW__buttonWithNotification\",\n  \"dark\": \"WelcomeWindow-module__WdKywW__dark\",\n  \"dateTime\": \"WelcomeWindow-module__WdKywW__dateTime\",\n  \"logo\": \"WelcomeWindow-module__WdKywW__logo\",\n  \"notificationDot\": \"WelcomeWindow-module__WdKywW__notificationDot\",\n  \"welcomeButton\": \"WelcomeWindow-module__WdKywW__welcomeButton\",\n  \"welcomeHeader\": \"WelcomeWindow-module__WdKywW__welcomeHeader\",\n  \"welcomeWindow\": \"WelcomeWindow-module__WdKywW__welcomeWindow\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 4012, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4018, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/WelcomeWindow/WelcomeWindow.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport ToTestList from \"../ToTestList/ToTestList\"; // Import the ToTestList popup window React Component\r\nimport ServerWindow from \"../ServerWindow/ServerWindow\"; // Import Server Window Component\r\nimport styles from \"./WelcomeWindow.module.css\";\r\nimport { WindowName } from \"types/types\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Use require if not using images.d.ts\r\n//const logo = require(\"../../assets/logo.jpg\");\r\n\r\nconst WelcomeWindow: React.FC<{\r\n  openToTestList: () => void;\r\n  openServerWindow: () => void;\r\n}> = ({ \r\n  openToTestList,\r\n  openServerWindow\r\n}) => {\r\n\r\n  const [dateTime, setDateTime] = useState<string | null>(null);\r\n  const [showToTestList, setShowToTestList] = useState(false);\r\n  const [showServerWindow, setShowServerWindow] = useState(false);\r\n  const [hasTests, setHasTests] = useState(false); // Track if there are rows in the list\r\n  const nodeRef = useRef<HTMLDivElement>(null!);\r\n  const navigate = useNavigate();\r\n\r\n  // Check if the page is in dark mode\r\n  const isDarkMode = document.documentElement.classList.contains(\"dark\");\r\n\r\n  // Function to format date and time as DD/MM/YYYY HH:MM:SS\r\n  const formatDateTime = (date: Date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const year = date.getFullYear();\r\n    const hours = String(date.getHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n    const seconds = String(date.getSeconds()).padStart(2, \"0\");\r\n    return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  // Update the date/time every second\r\n  useEffect(() => {\r\n    const updateDateTime = () => setDateTime(formatDateTime(new Date()));\r\n    updateDateTime();\r\n    const interval = setInterval(updateDateTime, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Check for rows in localStorage\r\n  useEffect(() => {\r\n    const savedRows = localStorage.getItem(\"toTestListRows\");\r\n    const hasRows = savedRows ? JSON.parse(savedRows).length > 0 : false;\r\n    // setHasTests is always passed a valid boolean (true or false).\r\n    // may receive null or an empty string due to the logic\r\n    // without true / false and just > 0\r\n    setHasTests(hasRows);\r\n  }, [showToTestList]);\r\n\r\n  const handleToTestListOpen = () => {\r\n    console.log(\"Calling openToTestList\");\r\n    openToTestList(); // This will invoke the function from page.tsx\r\n  };\r\n\r\n  const handleToTestListClose = () => {\r\n    console.log(\"ToTestList closed\");\r\n    setShowToTestList(false);\r\n  };\r\n\r\n  const handleServerWindowOpen = () => {\r\n    console.log(\"Calling openServerWindow\");\r\n    openServerWindow(); // This will invoke the function from page.tsx\r\n  };\r\n\r\n  const handleServerWindowClose = () => {\r\n    console.log(\"ServerWindow closed\");\r\n    setShowServerWindow(false);\r\n  };\r\n  \r\n  return (\r\n    <Draggable nodeRef={nodeRef} handle={`.${styles.welcomeHeader}`} positionOffset={{ x: \"-50%\", y: \"-50%\" }}>\r\n      <div\r\n        ref={nodeRef}\r\n        className={styles.welcomeWindow}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          minHeight: \"200px\",\r\n          background: isDarkMode\r\n            ? \"linear-gradient(135deg, #000000, #1a1a1a)\"\r\n            : \"linear-gradient(135deg, #ffffff, #e6f7ff)\",\r\n        }}\r\n    >\r\n      <header className={`${styles.welcomeHeader} drag-handle`}>\r\n        <img src=\"/assets/SaRCLogo.png\" alt=\"Satellite Research Centre Logo\" className={styles.logo} />\r\n        <h2>Satellite Research Centre</h2>\r\n        <h1>Satellite Automated Testing System</h1>\r\n        {dateTime && <p className={styles.dateTime}>{dateTime}</p>}\r\n      </header>\r\n      <div className={styles.buttonContainer}>\r\n        <div className={styles.buttonWithNotification}>\r\n          <button\r\n            className={styles.welcomeButton}\r\n            onClick={handleToTestListOpen}\r\n          >\r\n            Tests to Conduct\r\n          </button>\r\n          {hasTests && <span className={styles.notificationDot}></span>}\r\n        </div>\r\n        <button\r\n          className={styles.welcomeButton}\r\n          onClick={handleServerWindowOpen}\r\n        >\r\n          MCC\r\n        </button>\r\n      </div>\r\n    </div>\r\n</Draggable>\r\n  );\r\n};\r\n\r\nexport default WelcomeWindow;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4229, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/app/page.tsx"],"sourcesContent":["// Fixed page.tsx - Key changes to avoid infinite rendering loop\n\n/* implement routing using react-router-dom, \nyou'll need to transform your page.tsx into an entry point for routing. */\n\n/* npm install react-router-dom */\n\n\"use client\";\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, useLocation } from \"react-router-dom\";\nimport MainScreen from \"../components/MainScreen/MainScreen\";\nimport ToTestList from \"../components/ToTestList/ToTestList\";\nimport ServerWindow from \"../components/ServerWindow/ServerWindow\";\nimport ThreeDModelWindow from \"../components/ModelWindow/ThreeDModelWindow\";\nimport WelcomeWindow from \"../components/WelcomeWindow/WelcomeWindow\";\nimport { WindowName } from \"types/types\";\n\nexport default function Page() {\n  // Window visibility state - Use refs to avoid state race conditions\n  const windowVisibilityRef = useRef({\n    ToTestList: false,\n    ServerWindow: false,\n    ThreeDModelWindow: false\n  });\n  \n  // State for reactive UI updates\n  const [windowVisibility, setWindowVisibility] = useState({\n    ToTestList: false,\n    ServerWindow: false,\n    ThreeDModelWindow: false\n  });\n\n  const [zIndexCounter, setZIndexCounter] = useState(10000); // Base z-index\n  const [windowZIndexes, setWindowZIndexes] = useState<{\n    ToTestList: number;\n    ServerWindow: number;\n    ThreeDModelWindow: number;\n  }>({\n    ToTestList: 10002,\n    ServerWindow: 10001,\n    ThreeDModelWindow: 10000,\n  });\n  \n  const [threeDModelProfileId, setThreeDModelProfileId] = useState<number | null>(1);\n  const [isOnMainScreen, setIsOnMainScreen] = useState(false);\n  \n  // Monitor current route to track if we're on main screen\n  const RouteObserver = () => {\n    const location = useLocation();\n    \n    useEffect(() => {\n      setIsOnMainScreen(location.pathname === '/main');\n    }, [location]);\n    \n    return null;\n  };\n\n  // Main function to bring a window to front\n  const bringWindowToFront = useCallback((windowName: WindowName) => {\n    console.log(`🎯 Bringing ${windowName} to front`);\n    \n    // Update both state and ref to prevent race conditions\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      [windowName]: true\n    };\n    \n    // Update visibility in state for UI rendering\n    setWindowVisibility(prev => {\n      if (prev[windowName] === true) {\n        return prev; // No change needed\n      }\n      return { ...prev, [windowName]: true };\n    });\n    \n    // Prevent z-index increases if window is already on top\n    setWindowZIndexes((prevIndexes) => {\n      const highestZIndex = Math.max(...Object.values(prevIndexes), 10000);\n      \n      if (prevIndexes[windowName] >= highestZIndex) {\n        console.log(`Window ${windowName} already at highest z-index (${prevIndexes[windowName]})`);\n        return prevIndexes; // Return unchanged to prevent loops\n      }\n      \n      // Only update if we're actually bringing something to the front\n      console.log(`Updating z-index for ${windowName} from ${prevIndexes[windowName]} to ${highestZIndex + 1}`);\n      return { ...prevIndexes, [windowName]: highestZIndex + 1 };\n    });\n    \n    // Only increment counter when actually changing z-indexes\n    setZIndexCounter(prev => prev + 1);\n  }, []);\n\n  const openToTestList = useCallback(() => {\n    console.log(\"🟢 Opening ToTestList window\");\n    \n    // Update ref first\n    windowVisibilityRef.current.ToTestList = true;\n    \n    // Set visibility directly\n    setWindowVisibility(prev => ({ ...prev, ToTestList: true }));\n    \n    // Update z-index\n    setWindowZIndexes((prevIndexes) => {\n      const highestZIndex = Math.max(...Object.values(prevIndexes), 10000);\n      return { ...prevIndexes, ToTestList: highestZIndex + 1 };\n    });\n    \n    setZIndexCounter(prev => prev + 1);\n  }, []);\n\n  const closeToTestList = useCallback(() => {\n    console.log(\"Closing ToTestList window\");\n    windowVisibilityRef.current.ToTestList = false;\n    setWindowVisibility(prev => ({ ...prev, ToTestList: false }));\n  }, []);\n\n  const openServerWindow = useCallback(() => {\n    console.log(\"Opening ServerWindow window\");\n    \n    // Update ref first\n    windowVisibilityRef.current.ServerWindow = true;\n    \n    // Set visibility directly\n    setWindowVisibility(prev => ({ ...prev, ServerWindow: true }));\n    \n    // Update z-index\n    setWindowZIndexes((prevIndexes) => {\n      const highestZIndex = Math.max(...Object.values(prevIndexes), 10000);\n      return { ...prevIndexes, ServerWindow: highestZIndex + 1 };\n    });\n    \n    setZIndexCounter(prev => prev + 1);\n  }, []);\n\n  const closeServerWindow = useCallback(() => {\n    console.log(\"Closing ServerWindow window\");\n    windowVisibilityRef.current.ServerWindow = false;\n    setWindowVisibility(prev => ({ ...prev, ServerWindow: false }));\n  }, []);\n\n  // Super simple implementation with no dependencies\n  const openModelWindow = useCallback((profileId: number = 1) => {\n    console.log(`🛰️ Opening 3D Model window for profile ID: ${profileId}`);\n    \n    // Update profile ID once\n    setThreeDModelProfileId(profileId);\n    \n    // Update visibility\n    windowVisibilityRef.current.ThreeDModelWindow = true;\n    setWindowVisibility(prev => ({\n      ...prev,\n      ThreeDModelWindow: true\n    }));\n\n    // Update z-index\n    setWindowZIndexes(prev => {\n      const highestZIndex = Math.max(...Object.values(prev), 10000);\n      return { ...prev, ThreeDModelWindow: highestZIndex + 1 };\n    });\n\n    setZIndexCounter(prev => prev + 1);\n  }, []);\n\n  const closeModelWindow = useCallback(() => {\n    console.log(\"🔴 Closing ThreeDModelWindow...\");\n    \n    // Just update visibility\n    windowVisibilityRef.current.ThreeDModelWindow = false;\n    setWindowVisibility(prev => ({ \n      ...prev, \n      ThreeDModelWindow: false \n    }));\n  }, []);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={\n          <WelcomeWindow \n            openToTestList={openToTestList} \n            openServerWindow={openServerWindow}\n          />\n        } />\n        <Route path=\"/main\" element={\n          <MainScreen \n            openToTestList={openToTestList}\n            closeToTestList={closeToTestList}\n            openServerWindow={openServerWindow}\n            openModelWindow={openModelWindow}\n            closeModelWindow={closeModelWindow}\n            showToTestList={windowVisibility.ToTestList}\n            showThreeDModelWindow={windowVisibility.ThreeDModelWindow}\n            threeDModelProfileId={threeDModelProfileId}\n            windowZIndexes={windowZIndexes}\n            bringWindowToFront={bringWindowToFront}\n            zIndexCounter={zIndexCounter}\n          />\n        } />\n      </Routes>\n\n      {/* Floating windows - now using simple inline rendering for other windows */}\n      <div className=\"window-container\">\n        {windowVisibility.ToTestList && (\n          <ToTestList\n            key=\"ToTestList\"\n            zIndex={windowZIndexes.ToTestList}\n            onMouseDown={() => bringWindowToFront(\"ToTestList\")}\n            onClose={closeToTestList}\n            bringWindowToFront={bringWindowToFront}\n            windowZIndexes={windowZIndexes}\n            zIndexCounter={zIndexCounter}\n          />\n        )}\n\n        {windowVisibility.ServerWindow && (\n          <ServerWindow\n            key=\"ServerWindow\"\n            zIndex={windowZIndexes.ServerWindow}\n            onMouseDown={() => bringWindowToFront(\"ServerWindow\")}\n            onClose={closeServerWindow}\n            bringWindowToFront={bringWindowToFront}\n            windowZIndexes={windowZIndexes}\n            zIndexCounter={zIndexCounter}\n          />\n        )}\n\n{windowVisibility.ThreeDModelWindow && (\n          <ThreeDModelWindow\n            key={`ThreeDModel-${threeDModelProfileId}`}\n            profileId={threeDModelProfileId}\n            zIndex={windowZIndexes.ThreeDModelWindow}\n            onMouseDown={() => bringWindowToFront(\"ThreeDModelWindow\")}\n            onClose={closeModelWindow}\n            showThreeDModelWindow={windowVisibility.ThreeDModelWindow}\n          />\n        )}\n      </div>\n    </Router>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4563, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}