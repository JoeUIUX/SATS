{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/app/layout.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./globals.css\";\n\n/* LIGHT DARK MODE SLIDER TOGGLER - START */\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n\n/* memory of user specified light/dark mode */\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedMode = localStorage.getItem(\"darkMode\");\n    if (savedMode) setDarkMode(savedMode === \"true\");\n\n    // Apply dark/light mode classes to <html> on component mount\n    const htmlElement = document.documentElement;\n    if (savedMode === \"true\") {\n      htmlElement.classList.add(\"dark\");\n      htmlElement.classList.remove(\"light\");\n    } else {\n      htmlElement.classList.add(\"light\");\n      htmlElement.classList.remove(\"dark\");\n    }\n  }, []);\n\n  const toggleDarkMode = () => {\n    setDarkMode((prevMode) => {\n      const newMode = !prevMode;\n      localStorage.setItem(\"darkMode\", newMode.toString());\n\n      // Update <html> class dynamically\n      const htmlElement = document.documentElement;\n      if (newMode) {\n        htmlElement.classList.add(\"dark\");\n        htmlElement.classList.remove(\"light\");\n      } else {\n        htmlElement.classList.add(\"light\");\n        htmlElement.classList.remove(\"dark\");\n      }\n\n      return newMode;\n    });\n  };\n\n  return (\n    <html lang=\"en\" className={darkMode ? \"dark\" : \"light\"}>\n      <body>\n        <div className=\"toggleContainer\">\n          <label className=\"switch\">\n            <input type=\"checkbox\" checked={darkMode} onChange={toggleDarkMode} />\n            <span className=\"slider\">\n              <FontAwesomeIcon icon={faMoon} className=\"icon moon\" />\n              <FontAwesomeIcon icon={faSun} className=\"icon sun\" />\n            </span>\n          </label>\n        </div>\n        {children}\n      </body>\n    </html>\n  );\n}\n\n/* LIGHT DARK MODE SLIDER TOGGLER - END */\n"],"names":[],"mappings":";;;;AAEA;AAGA,0CAA0C,GAC1C;AACA;;;AAPA;;;;;AAUe,SAAS,WAAW,EAAE,QAAQ,EAAiC;;IAC5E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,IAAI,WAAW,YAAY,cAAc;YAEzC,6DAA6D;YAC7D,MAAM,cAAc,SAAS,eAAe;YAC5C,IAAI,cAAc,QAAQ;gBACxB,YAAY,SAAS,CAAC,GAAG,CAAC;gBAC1B,YAAY,SAAS,CAAC,MAAM,CAAC;YAC/B,OAAO;gBACL,YAAY,SAAS,CAAC,GAAG,CAAC;gBAC1B,YAAY,SAAS,CAAC,MAAM,CAAC;YAC/B;QACF;+BAAG,EAAE;IAEL,MAAM,iBAAiB;QACrB,YAAY,CAAC;YACX,MAAM,UAAU,CAAC;YACjB,aAAa,OAAO,CAAC,YAAY,QAAQ,QAAQ;YAEjD,kCAAkC;YAClC,MAAM,cAAc,SAAS,eAAe;YAC5C,IAAI,SAAS;gBACX,YAAY,SAAS,CAAC,GAAG,CAAC;gBAC1B,YAAY,SAAS,CAAC,MAAM,CAAC;YAC/B,OAAO;gBACL,YAAY,SAAS,CAAC,GAAG,CAAC;gBAC1B,YAAY,SAAS,CAAC,MAAM,CAAC;YAC/B;YAEA,OAAO;QACT;IACF;IAEA,qBACE,6LAAC;QAAK,MAAK;QAAK,WAAW,WAAW,SAAS;kBAC7C,cAAA,6LAAC;;8BACC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAM,WAAU;;0CACf,6LAAC;gCAAM,MAAK;gCAAW,SAAS;gCAAU,UAAU;;;;;;0CACpD,6LAAC;gCAAK,WAAU;;kDACd,6LAAC,uKAAA,CAAA,kBAAe;wCAAC,MAAM,2KAAA,CAAA,SAAM;wCAAE,WAAU;;;;;;kDACzC,6LAAC,uKAAA,CAAA,kBAAe;wCAAC,MAAM,2KAAA,CAAA,QAAK;wCAAE,WAAU;;;;;;;;;;;;;;;;;;;;;;;gBAI7C;;;;;;;;;;;;AAIT,EAEA,wCAAwC;GAvDhB;KAAA","debugId":null}}]
}