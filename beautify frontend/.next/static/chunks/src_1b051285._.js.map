{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/utils/themeInitializer.js"],"sourcesContent":["// themeInitializer.js\r\n// This script should be included in your main layout to initialize themes from the database\r\n\r\n// API URL from environment or default\r\nconst API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n/**\r\n * Initialize theme backgrounds from the database settings\r\n * This should be called when the application starts\r\n */\r\nexport async function initializeThemeBackgrounds() {\r\n  try {\r\n    // Fetch settings from the backend\r\n    const response = await fetch(`${API_URL}/settings`);\r\n    if (!response.ok) {\r\n      console.error('Failed to fetch theme settings:', response.status);\r\n      return;\r\n    }\r\n    \r\n    const settings = await response.json();\r\n    console.log('Loaded theme settings:', settings);\r\n    \r\n    // Get current theme mode\r\n    const isDarkMode = document.documentElement.classList.contains('dark');\r\n    \r\n    // Apply background settings based on theme\r\n    applyBackgroundSettings(settings, isDarkMode);\r\n    \r\n    // Apply font settings if available\r\n    if (settings.font) {\r\n      document.documentElement.style.fontFamily = settings.font;\r\n    }\r\n    \r\n    // Set up observer for theme changes to update background\r\n    observeThemeChanges(settings);\r\n    \r\n  } catch (error) {\r\n    console.error('Error initializing theme backgrounds:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Apply background settings based on current theme mode\r\n */\r\nfunction applyBackgroundSettings(settings, isDarkMode) {\r\n  // Determine which background to use based on current theme\r\n  const backgroundPath = isDarkMode \r\n    ? settings.background || \"/assets/curve_background.png\"\r\n    : settings.background_light || \"/assets/lightcurve_background.png\";\r\n    \r\n  // Determine background color for solid color mode\r\n  const backgroundColor = isDarkMode\r\n    ? settings.backgroundColor || \"#000000\"\r\n    : settings.backgroundColorLight || \"#ffffff\";\r\n  \r\n  // Apply background to body\r\n  if (backgroundPath === \"none\") {\r\n    // Solid color mode\r\n    document.body.style.backgroundImage = \"none\";\r\n    document.body.style.backgroundColor = backgroundColor;\r\n    \r\n    // Also update CSS variables\r\n    if (isDarkMode) {\r\n      document.documentElement.style.setProperty('--page-bg-image', 'none');\r\n      document.documentElement.style.setProperty('--page-bg-color', backgroundColor);\r\n    } else {\r\n      document.documentElement.style.setProperty('--page-bg-image', 'none');\r\n      document.documentElement.style.setProperty('--page-bg-color', backgroundColor);\r\n    }\r\n  } else {\r\n    // Image background mode\r\n    document.body.style.backgroundImage = `url(${backgroundPath})`;\r\n    document.body.style.backgroundSize = \"cover\";\r\n    document.body.style.backgroundPosition = \"center\";\r\n    document.body.style.backgroundRepeat = \"no-repeat\";\r\n    \r\n    // Also update CSS variables\r\n    if (isDarkMode) {\r\n      document.documentElement.style.setProperty('--page-bg-image', `url(${backgroundPath})`);\r\n    } else {\r\n      document.documentElement.style.setProperty('--page-bg-image', `url(${backgroundPath})`);\r\n    }\r\n  }\r\n  \r\n  console.log(`Applied ${isDarkMode ? 'dark' : 'light'} mode background: ${backgroundPath === \"none\" ? backgroundColor : backgroundPath}`);\r\n}\r\n\r\n/**\r\n * Observe theme changes to update background accordingly\r\n */\r\nfunction observeThemeChanges(settings) {\r\n  // Create observer to watch for theme class changes\r\n  const observer = new MutationObserver(mutations => {\r\n    mutations.forEach(mutation => {\r\n      if (mutation.attributeName === 'class') {\r\n        // Check if dark mode was toggled\r\n        const isDarkMode = document.documentElement.classList.contains('dark');\r\n        console.log(`Theme changed to ${isDarkMode ? 'dark' : 'light'} mode`);\r\n        \r\n        // Apply background based on new theme\r\n        applyBackgroundSettings(settings, isDarkMode);\r\n      }\r\n    });\r\n  });\r\n  \r\n  // Start observing theme changes\r\n  observer.observe(document.documentElement, {\r\n    attributes: true,\r\n    attributeFilter: ['class']\r\n  });\r\n}\r\n\r\n// Call this function when the DOM is ready\r\nif (typeof document !== 'undefined') {\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', initializeThemeBackgrounds);\r\n  } else {\r\n    initializeThemeBackgrounds();\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/app/layout.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./globals.css\";\nimport { initializeThemeBackgrounds } from \"@/utils/themeInitializer\";\n\n/* LIGHT DARK MODE SLIDER TOGGLER - START */\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n\n/* memory of user specified light/dark mode */\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedMode = localStorage.getItem(\"darkMode\");\n    if (savedMode) setDarkMode(savedMode === \"true\");\n\n    // Apply dark/light mode classes to <html> on component mount\n    const htmlElement = document.documentElement;\n    if (savedMode === \"true\") {\n      htmlElement.classList.add(\"dark\");\n      htmlElement.classList.remove(\"light\");\n    } else {\n      htmlElement.classList.add(\"light\");\n      htmlElement.classList.remove(\"dark\");\n    }\n    \n    // Initialize theme backgrounds from database settings\n    initializeThemeBackgrounds();\n  }, []);\n\n  const toggleDarkMode = () => {\n    setDarkMode((prevMode) => {\n      const newMode = !prevMode;\n      localStorage.setItem(\"darkMode\", newMode.toString());\n\n      // Update <html> class dynamically\n      const htmlElement = document.documentElement;\n      if (newMode) {\n        htmlElement.classList.add(\"dark\");\n        htmlElement.classList.remove(\"light\");\n      } else {\n        htmlElement.classList.add(\"light\");\n        htmlElement.classList.remove(\"dark\");\n      }\n\n      return newMode;\n    });\n  };\n\n  return (\n    <html lang=\"en\" className={darkMode ? \"dark\" : \"light\"}>\n      <body>\n        <div className=\"toggleContainer\">\n          <label className=\"switch\">\n            <input type=\"checkbox\" checked={darkMode} onChange={toggleDarkMode} />\n            <span className=\"slider\">\n              <FontAwesomeIcon icon={faMoon} className=\"icon moon\" />\n              <FontAwesomeIcon icon={faSun} className=\"icon sun\" />\n            </span>\n          </label>\n        </div>\n        {children}\n      </body>\n    </html>\n  );\n}\n\n/* LIGHT DARK MODE SLIDER TOGGLER - END */\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA,0CAA0C,GAC1C;AACA;;;AARA;;;;;;AAWe,SAAS,WAAW,EAAE,QAAQ,EAAiC;;IAC5E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,IAAI,WAAW,YAAY,cAAc;YAEzC,6DAA6D;YAC7D,MAAM,cAAc,SAAS,eAAe;YAC5C,IAAI,cAAc,QAAQ;gBACxB,YAAY,SAAS,CAAC,GAAG,CAAC;gBAC1B,YAAY,SAAS,CAAC,MAAM,CAAC;YAC/B,OAAO;gBACL,YAAY,SAAS,CAAC,GAAG,CAAC;gBAC1B,YAAY,SAAS,CAAC,MAAM,CAAC;YAC/B;YAEA,sDAAsD;YACtD,CAAA,GAAA,mIAAA,CAAA,6BAA0B,AAAD;QAC3B;+BAAG,EAAE;IAEL,MAAM,iBAAiB;QACrB,YAAY,CAAC;YACX,MAAM,UAAU,CAAC;YACjB,aAAa,OAAO,CAAC,YAAY,QAAQ,QAAQ;YAEjD,kCAAkC;YAClC,MAAM,cAAc,SAAS,eAAe;YAC5C,IAAI,SAAS;gBACX,YAAY,SAAS,CAAC,GAAG,CAAC;gBAC1B,YAAY,SAAS,CAAC,MAAM,CAAC;YAC/B,OAAO;gBACL,YAAY,SAAS,CAAC,GAAG,CAAC;gBAC1B,YAAY,SAAS,CAAC,MAAM,CAAC;YAC/B;YAEA,OAAO;QACT;IACF;IAEA,qBACE,6LAAC;QAAK,MAAK;QAAK,WAAW,WAAW,SAAS;kBAC7C,cAAA,6LAAC;;8BACC,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAM,WAAU;;0CACf,6LAAC;gCAAM,MAAK;gCAAW,SAAS;gCAAU,UAAU;;;;;;0CACpD,6LAAC;gCAAK,WAAU;;kDACd,6LAAC,uKAAA,CAAA,kBAAe;wCAAC,MAAM,2KAAA,CAAA,SAAM;wCAAE,WAAU;;;;;;kDACzC,6LAAC,uKAAA,CAAA,kBAAe;wCAAC,MAAM,2KAAA,CAAA,QAAK;wCAAE,WAAU;;;;;;;;;;;;;;;;;;;;;;;gBAI7C;;;;;;;;;;;;AAIT,EAEA,wCAAwC;GA1DhB;KAAA","debugId":null}}]
}