{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/GPSTestPanel.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/components/GPSTestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css'; // Reuse the same styles as OBC1TestPanel\r\n\r\n// Import the GPS-specific functions\r\nimport { runGPSCheckout } from '@/services/checkout/gpsCheckout';\r\nimport { generateGPSReport } from '@/services/reports/gpsReport';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface GPSTestPanelProps {\r\n  options: string[];  // Contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const GPSTestPanel: React.FC<GPSTestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      console.log(\"Auto-starting test because isInitialRun =\", isInitialRun);\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting GPS Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for common parameters\r\n              if (param.includes(\"_GPS_5V_V\")) {\r\n                return `${param}=5.05`; // 5V supply voltage\r\n              } else if (param.includes(\"_GPS_5V_I\")) {\r\n                return `${param}=0.120`; // Current in Amps\r\n              } else if (param.includes(\"_GPS_3V3_V\")) {\r\n                return `${param}=3350`; // 3.3V supply in mV\r\n              } else if (param.includes(\"_Gps_TxCount\")) {\r\n                return `${param}=${Math.floor(Math.random() * 10)}`; // TX count\r\n              } else if (param.includes(\"_Gps_RxCount\")) {\r\n                return `${param}=${Math.floor(Math.random() * 10)}`; // RX count\r\n              } else if (param.includes(\"_Gps_TxBytes\")) {\r\n                return `${param}=${Math.floor(Math.random() * 1000)}`; // TX bytes\r\n              } else if (param.includes(\"_Gps_RxBytes\")) {\r\n                return `${param}=${Math.floor(Math.random() * 1000)}`; // RX bytes\r\n              } else {\r\n                return `${param}=simulated`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the GPS checkout test with progress updates\r\n      const results = await runGPSCheckout(sock, (step, percent) => {\r\n        setCurrentStep(step);\r\n        setProgress(percent);\r\n      });\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running GPS checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateGPSReport(results);\r\n      alert(`GPS report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            GPS Test Status\r\n          </h3>\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n            <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running standard GPS test.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span style={{\r\n              display: 'inline-block',\r\n              padding: '4px 8px',\r\n              borderRadius: '9999px',\r\n              fontSize: '12px',\r\n              fontWeight: '500',\r\n              backgroundColor: isForceSimulation ? \r\n                (isDarkMode ? 'rgba(245, 158, 11, 0.2)' : 'rgba(245, 158, 11, 0.1)') : \r\n                (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : 'rgba(16, 185, 129, 0.1)'),\r\n              color: isForceSimulation ? \r\n                (isDarkMode ? '#fbbf24' : '#d97706') : \r\n                (isDarkMode ? '#34d399' : '#059669')\r\n            }}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n              backgroundColor: isRunning ? '#9ca3af' :\r\n                hasRunTest ? '#4f46e5' : '#10b981',\r\n              color: 'white',\r\n              marginTop: '20px'\r\n            }}\r\n          >\r\n            {isRunning ? (\r\n              <>\r\n                <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                </svg>\r\n                Running Test...\r\n              </>\r\n            ) : hasRunTest ? (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Re-run Test\r\n              </>\r\n            ) : (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Run Test\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {results && (\r\n        <div className=\"space-y-4 mt-4\">\r\n          {/* GPS Power Status Card */}\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #064e3b, #065f46)\" \r\n                  : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n                color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                GPS Power Status\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <table \r\n                className={styles.table}\r\n                style={{\r\n                  color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                }}\r\n              >\r\n                <thead \r\n                  className={styles.tableHeader}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.tableBody}>\r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>GPS 5V Supply</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltages.gps5V.value} V</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span style={{\r\n                        display: 'inline-block',\r\n                        padding: '4px 8px',\r\n                        borderRadius: '9999px',\r\n                        fontSize: '12px',\r\n                        fontWeight: '500',\r\n                        backgroundColor: results.voltages.gps5V.pass ? \r\n                          (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : 'rgba(16, 185, 129, 0.1)') : \r\n                          (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : 'rgba(239, 68, 68, 0.1)'),\r\n                        color: results.voltages.gps5V.pass ? \r\n                          (isDarkMode ? '#34d399' : '#059669') : \r\n                          (isDarkMode ? '#f87171' : '#dc2626')\r\n                      }}>\r\n                        {results.voltages.gps5V.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>GPS 5V Current</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltages.gps5VCurrent.value} A</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>-</td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>GPS 3.3V Supply</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.voltages.gps3V3.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span style={{\r\n                        display: 'inline-block',\r\n                        padding: '4px 8px',\r\n                        borderRadius: '9999px',\r\n                        fontSize: '12px',\r\n                        fontWeight: '500',\r\n                        backgroundColor: results.voltages.gps3V3.pass ? \r\n                          (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : 'rgba(16, 185, 129, 0.1)') : \r\n                          (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : 'rgba(239, 68, 68, 0.1)'),\r\n                        color: results.voltages.gps3V3.pass ? \r\n                          (isDarkMode ? '#34d399' : '#059669') : \r\n                          (isDarkMode ? '#f87171' : '#dc2626')\r\n                      }}>\r\n                        {results.voltages.gps3V3.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Command Test Card */}\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                  : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                GPS Command Test\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <div style={{ marginBottom: '16px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <div style={{ fontWeight: '500', fontSize: '14px', color: isDarkMode ? '#d1d5db' : '#4b5563' }}>\r\n                  Command Test Status\r\n                </div>\r\n                <span style={{\r\n                  display: 'inline-block',\r\n                  padding: '4px 12px',\r\n                  borderRadius: '9999px',\r\n                  fontSize: '12px',\r\n                  fontWeight: '600',\r\n                  backgroundColor: results.stats.commandCheck.pass ? \r\n                    (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : 'rgba(16, 185, 129, 0.1)') : \r\n                    (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : 'rgba(239, 68, 68, 0.1)'),\r\n                  color: results.stats.commandCheck.pass ? \r\n                    (isDarkMode ? '#34d399' : '#059669') : \r\n                    (isDarkMode ? '#f87171' : '#dc2626')\r\n                }}>\r\n                  {results.stats.commandCheck.pass ? \"COMMAND SUCCEEDED\" : \"COMMAND FAILED\"}\r\n                </span>\r\n              </div>\r\n              \r\n              <div style={{ \r\n                backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                borderRadius: '8px',\r\n                padding: '12px',\r\n                marginBottom: '16px'\r\n              }}>\r\n                <table style={{ width: '100%', fontSize: '13px', color: isDarkMode ? '#d1d5db' : '#4b5563' }}>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style={{ padding: '4px 0' }}>TX Count Before:</td>\r\n                      <td style={{ padding: '4px 0', fontWeight: '600' }}>{results.stats.txCountBefore}</td>\r\n                      <td style={{ padding: '4px 0' }}>TX Count After:</td>\r\n                      <td style={{ padding: '4px 0', fontWeight: '600' }}>{results.stats.txCountAfter}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style={{ padding: '4px 0' }}>RX Count Before:</td>\r\n                      <td style={{ padding: '4px 0', fontWeight: '600' }}>{results.stats.rxCountBefore}</td>\r\n                      <td style={{ padding: '4px 0' }}>RX Count After:</td>\r\n                      <td style={{ padding: '4px 0', fontWeight: '600' }}>{results.stats.rxCountAfter}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style={{ padding: '4px 0' }}>TX Bytes Before:</td>\r\n                      <td style={{ padding: '4px 0', fontWeight: '600' }}>{results.stats.txBytesBefore}</td>\r\n                      <td style={{ padding: '4px 0' }}>TX Bytes After:</td>\r\n                      <td style={{ padding: '4px 0', fontWeight: '600' }}>{results.stats.txBytesAfter}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style={{ padding: '4px 0' }}>RX Bytes Before:</td>\r\n                      <td style={{ padding: '4px 0', fontWeight: '600' }}>{results.stats.rxBytesBefore}</td>\r\n                      <td style={{ padding: '4px 0' }}>RX Bytes After:</td>\r\n                      <td style={{ padding: '4px 0', fontWeight: '600' }}>{results.stats.rxBytesAfter}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Power Off Test Card */}\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                  : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n                color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                GPS Power Off Test\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <table \r\n                className={styles.table}\r\n                style={{\r\n                  color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                }}\r\n              >\r\n                <thead \r\n                  className={styles.tableHeader}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.tableBody}>\r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>GPS 5V Supply (Off)</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.powerOff.gps5V.value} V</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span style={{\r\n                        display: 'inline-block',\r\n                        padding: '4px 8px',\r\n                        borderRadius: '9999px',\r\n                        fontSize: '12px',\r\n                        fontWeight: '500',\r\n                        backgroundColor: results.powerOff.gps5V.pass ? \r\n                          (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : 'rgba(16, 185, 129, 0.1)') : \r\n                          (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : 'rgba(239, 68, 68, 0.1)'),\r\n                        color: results.powerOff.gps5V.pass ? \r\n                          (isDarkMode ? '#34d399' : '#059669') : \r\n                          (isDarkMode ? '#f87171' : '#dc2626')\r\n                      }}>\r\n                        {results.powerOff.gps5V.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>GPS 5V Current (Off)</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.powerOff.gps5VCurrent.value} A</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>-</td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>GPS 3.3V Supply (Off)</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.powerOff.gps3V3.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span style={{\r\n                        display: 'inline-block',\r\n                        padding: '4px 8px',\r\n                        borderRadius: '9999px',\r\n                        fontSize: '12px',\r\n                        fontWeight: '500',\r\n                        backgroundColor: results.powerOff.gps3V3.pass ? \r\n                          (isDarkMode ? 'rgba(16, 185, 129, 0.2)' : 'rgba(16, 185, 129, 0.1)') : \r\n                          (isDarkMode ? 'rgba(239, 68, 68, 0.2)' : 'rgba(239, 68, 68, 0.1)'),\r\n                        color: results.powerOff.gps3V3.pass ? \r\n                          (isDarkMode ? '#34d399' : '#059669') : \r\n                          (isDarkMode ? '#f87171' : '#dc2626')\r\n                      }}>\r\n                        {results.powerOff.gps3V3.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Generate Report Button */}\r\n          <div>\r\n            <button \r\n              onClick={generateReport}\r\n              className={styles.reportButton}\r\n              style={{\r\n                backgroundColor: \"#10b981\",\r\n                color: \"white\"\r\n              }}\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n              Generate Report\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}}]
}