{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/MainScreen/MainScreen.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"aboutButton\": \"MainScreen-module__4v2AYG__aboutButton\",\n  \"aboutSection\": \"MainScreen-module__4v2AYG__aboutSection\",\n  \"actionButtons\": \"MainScreen-module__4v2AYG__actionButtons\",\n  \"addProfileButton\": \"MainScreen-module__4v2AYG__addProfileButton\",\n  \"bottomSection\": \"MainScreen-module__4v2AYG__bottomSection\",\n  \"cancelButton\": \"MainScreen-module__4v2AYG__cancelButton\",\n  \"checkoutButton\": \"MainScreen-module__4v2AYG__checkoutButton\",\n  \"checkoutSection\": \"MainScreen-module__4v2AYG__checkoutSection\",\n  \"content\": \"MainScreen-module__4v2AYG__content\",\n  \"dark\": \"MainScreen-module__4v2AYG__dark\",\n  \"deleteButton\": \"MainScreen-module__4v2AYG__deleteButton\",\n  \"docx\": \"MainScreen-module__4v2AYG__docx\",\n  \"docx-wrapper\": \"MainScreen-module__4v2AYG__docx-wrapper\",\n  \"downloadButton\": \"MainScreen-module__4v2AYG__downloadButton\",\n  \"dragItem\": \"MainScreen-module__4v2AYG__dragItem\",\n  \"dropHereText\": \"MainScreen-module__4v2AYG__dropHereText\",\n  \"dropZone\": \"MainScreen-module__4v2AYG__dropZone\",\n  \"dropZoneArea\": \"MainScreen-module__4v2AYG__dropZoneArea\",\n  \"dropdownButton\": \"MainScreen-module__4v2AYG__dropdownButton\",\n  \"droppableBox\": \"MainScreen-module__4v2AYG__droppableBox\",\n  \"editButton\": \"MainScreen-module__4v2AYG__editButton\",\n  \"editButtons\": \"MainScreen-module__4v2AYG__editButtons\",\n  \"editModeButtons\": \"MainScreen-module__4v2AYG__editModeButtons\",\n  \"editableArea\": \"MainScreen-module__4v2AYG__editableArea\",\n  \"editableTextarea\": \"MainScreen-module__4v2AYG__editableTextarea\",\n  \"emptyDropZone\": \"MainScreen-module__4v2AYG__emptyDropZone\",\n  \"hidden\": \"MainScreen-module__4v2AYG__hidden\",\n  \"hiddenDropZone\": \"MainScreen-module__4v2AYG__hiddenDropZone\",\n  \"imageContainer\": \"MainScreen-module__4v2AYG__imageContainer\",\n  \"imageWrapper\": \"MainScreen-module__4v2AYG__imageWrapper\",\n  \"isDragging\": \"MainScreen-module__4v2AYG__isDragging\",\n  \"isDropped\": \"MainScreen-module__4v2AYG__isDropped\",\n  \"isEnabled\": \"MainScreen-module__4v2AYG__isEnabled\",\n  \"isOver\": \"MainScreen-module__4v2AYG__isOver\",\n  \"mainScreen\": \"MainScreen-module__4v2AYG__mainScreen\",\n  \"menu\": \"MainScreen-module__4v2AYG__menu\",\n  \"menuItem\": \"MainScreen-module__4v2AYG__menuItem\",\n  \"profileActions\": \"MainScreen-module__4v2AYG__profileActions\",\n  \"profileButtonGroup\": \"MainScreen-module__4v2AYG__profileButtonGroup\",\n  \"profileContainer\": \"MainScreen-module__4v2AYG__profileContainer\",\n  \"profileDropdown\": \"MainScreen-module__4v2AYG__profileDropdown\",\n  \"profileHeading\": \"MainScreen-module__4v2AYG__profileHeading\",\n  \"profilePage\": \"MainScreen-module__4v2AYG__profilePage\",\n  \"profileSidebarItem\": \"MainScreen-module__4v2AYG__profileSidebarItem\",\n  \"profileSubtext\": \"MainScreen-module__4v2AYG__profileSubtext\",\n  \"profilesButton\": \"MainScreen-module__4v2AYG__profilesButton\",\n  \"removeDraggedItemsButton\": \"MainScreen-module__4v2AYG__removeDraggedItemsButton\",\n  \"removeImageButton\": \"MainScreen-module__4v2AYG__removeImageButton\",\n  \"retractExpandSidebarButton\": \"MainScreen-module__4v2AYG__retractExpandSidebarButton\",\n  \"richTextEditor\": \"MainScreen-module__4v2AYG__richTextEditor\",\n  \"saveButton\": \"MainScreen-module__4v2AYG__saveButton\",\n  \"scrollableContainer\": \"MainScreen-module__4v2AYG__scrollableContainer\",\n  \"settingsButton\": \"MainScreen-module__4v2AYG__settingsButton\",\n  \"settingsContainer\": \"MainScreen-module__4v2AYG__settingsContainer\",\n  \"sidebar\": \"MainScreen-module__4v2AYG__sidebar\",\n  \"sidebarHeader\": \"MainScreen-module__4v2AYG__sidebarHeader\",\n  \"startTestButton\": \"MainScreen-module__4v2AYG__startTestButton\",\n  \"threeDModelButton\": \"MainScreen-module__4v2AYG__threeDModelButton\",\n  \"toggleButton\": \"MainScreen-module__4v2AYG__toggleButton\",\n  \"topSection\": \"MainScreen-module__4v2AYG__topSection\",\n  \"uploadButton\": \"MainScreen-module__4v2AYG__uploadButton\",\n  \"uploadContainer\": \"MainScreen-module__4v2AYG__uploadContainer\",\n  \"uploadNote\": \"MainScreen-module__4v2AYG__uploadNote\",\n  \"uploadedFileName\": \"MainScreen-module__4v2AYG__uploadedFileName\",\n  \"uploadedImage\": \"MainScreen-module__4v2AYG__uploadedImage\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/MainScreen/DraggableBox.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useSortable } from \"@dnd-kit/sortable\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport { CSSProperties } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styles from \"./MainScreen.module.css\";\r\n\r\ninterface DraggableBoxProps {\r\n  id: string;\r\n  header: string;\r\n  options: string[];\r\n  data?: {\r\n    type: string;\r\n    [key: string]: any;\r\n  };\r\n  isDropped?: boolean;\r\n  isInBottomSection?: boolean;\r\n  className?: string;\r\n  removeDroppedItem?: (id: string) => void;\r\n  isCheckoutEditing?: boolean;\r\n  checkedOptions?: Record<string, boolean>; // New prop to track checked state\r\n  onOptionChange?: (id: string, option: string, checked: boolean) => void; // New handler\r\n}\r\n\r\nconst DraggableBox: React.FC<DraggableBoxProps> = ({ \r\n  id, \r\n  header, \r\n  options, \r\n  data, \r\n  isDropped, \r\n  isInBottomSection, \r\n  removeDroppedItem, \r\n  isCheckoutEditing = false,\r\n  className,\r\n  checkedOptions = {}, // Default to empty object\r\n  onOptionChange // Handler for checkbox changes\r\n}) => {\r\n  const {\r\n    attributes,\r\n    listeners,\r\n    setNodeRef,\r\n    transform,\r\n    transition,\r\n    isDragging\r\n  } = useSortable({\r\n    id: id,\r\n    data: {\r\n      type: \"draggable-item\",\r\n      isDraggable: !isDropped || isCheckoutEditing,\r\n      isDropped: isDropped\r\n    },\r\n    disabled: false\r\n  });\r\n\r\n  const isDarkMode = document.documentElement.classList.contains(\"dark\");\r\n\r\n  const defaultBgColor = isDarkMode ? \"#2d2d2d\" : \"#f8f9fa\";  \r\n  const droppedBgColor = defaultBgColor; \r\n\r\n  const shouldApplyEffect = isInBottomSection && isDropped && !isCheckoutEditing;\r\n\r\n  // Calculate height dynamically based on the max number of options in all dropped items\r\n  const baseHeight = 80; // Base height for header and padding\r\n  const optionHeight = 24; // Height per option\r\n  const maxVisibleOptions = 10; // Allow up to 10 options before scrolling\r\n  const totalHeight = baseHeight + (Math.min(options.length, maxVisibleOptions) * optionHeight);\r\n  const requiresScroll = options.length > maxVisibleOptions;\r\n\r\n  const [maxHeight, setMaxHeight] = useState(totalHeight);\r\n\r\n  useEffect(() => {\r\n    const allDroppedBoxes = document.querySelectorAll('[data-dropped=\"true\"]');\r\n    let highest = totalHeight;\r\n\r\n    allDroppedBoxes.forEach(box => {\r\n      const optionCount = box.querySelectorAll(\"label\").length;\r\n      const calculatedHeight = baseHeight + (Math.min(optionCount, maxVisibleOptions) * optionHeight);\r\n      if (calculatedHeight > highest) {\r\n        highest = calculatedHeight;\r\n      }\r\n    });\r\n\r\n    setMaxHeight(highest);\r\n  }, [options.length, isDropped]);\r\n\r\n  const style: CSSProperties = {\r\n    transform: CSS.Transform.toString(transform),\r\n    transition: \"background-color 0.3s ease-in-out, opacity 0.3s ease-in-out\",\r\n    padding: \"8px\",\r\n    margin: \"0\",\r\n    backgroundColor: isDropped ? droppedBgColor : defaultBgColor,\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    cursor: shouldApplyEffect ? \"not-allowed\" : isDragging ? \"grabbing\" : \"grab\", // ✅ Only disable cursor in bottom section\r\n    display: \"inline-block\",\r\n    width: \"145px\",\r\n    height: `${maxHeight}px`, // ✅ Apply max height across all boxes\r\n    boxSizing: \"border-box\",\r\n    opacity: shouldApplyEffect ? 0.5 : 1, // ✅ Only make translucent in bottom section\r\n    color: isDarkMode ? \"#ffffff\" : \"black\",\r\n    position: \"relative\",\r\n    zIndex: isDragging ? 999 : 1, // ✅ Ensure correct layering\r\n    touchAction: \"none\",\r\n    userSelect: \"none\",\r\n    overflowY: requiresScroll ? \"auto\" : \"hidden\", // ✅ Only enable scrolling after 10 options\r\n    overflowX: \"hidden\", \r\n    whiteSpace: \"normal\", \r\n    pointerEvents: shouldApplyEffect ? \"none\" : \"auto\", // ✅ Only make unselectable in bottom section\r\n  };\r\n\r\n  // Handle checkbox change\r\n  const handleCheckboxChange = (option: string, checked: boolean) => {\r\n    if (onOptionChange) {\r\n      onOptionChange(id, option, checked);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      {...attributes}\r\n      {...(isDropped && !isCheckoutEditing ? {} : listeners)}\r\n      data-draggable-id={id}\r\n      data-dropped={isDropped ? \"true\" : \"false\"}\r\n      className={className}\r\n    >\r\n{isDropped && removeDroppedItem && isCheckoutEditing && (\r\n  <button\r\n    onClick={() => removeDroppedItem(id)}\r\n    className={styles.removeDraggedItemsButton}\r\n  >\r\n    ✖\r\n  </button>\r\n)}\r\n\r\n      <h4 style={{ textAlign: \"center\", wordWrap: \"break-word\" }}>{header}</h4>\r\n      {options.map(option => (\r\n        <label key={option} style={{ \r\n          display: \"flex\", \r\n          alignItems: \"center\", \r\n          fontSize: \"12px\", \r\n          marginBottom: \"4px\", \r\n          textAlign: \"left\" \r\n        }}>\r\n          <input \r\n            type=\"checkbox\" \r\n            disabled={isDropped && !isCheckoutEditing}\r\n            style={{ marginRight: \"6px\" }}\r\n            checked={checkedOptions[option] || false}\r\n            onChange={(e) => handleCheckboxChange(option, e.target.checked)}\r\n          />\r\n          <span>{option}</span>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableBox;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\n        \"flex-1 outline-none bg-background dark:bg-background text-foreground dark:text-foreground\", // Added bg-background and text-foreground with dark variants\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/card.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const Card: React.FC<CardProps> = ({ \r\n  children, \r\n  className = '', \r\n  ...props \r\n}) => {\r\n  return (\r\n    <div \r\n      className={`bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow p-4 ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardHeader: React.FC<CardHeaderProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`mb-4 ${className}`} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardTitle: React.FC<CardTitleProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <h3 className={`text-lg font-semibold text-gray-900 dark:text-white ${className}`} {...props}>\r\n      {children}\r\n    </h3>\r\n  );\r\n};\r\n\r\ninterface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardContent: React.FC<CardContentProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={className} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const CardFooter: React.FC<CardFooterProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`mt-4 ${className}`} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;;;;;;AAOO,MAAM,OAA4B,CAAC,EACxC,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,WAAW,CAAC,4FAA4F,EAAE,WAAW;QACpH,GAAG,KAAK;kBAER;;;;;;AAGP;KAba;AAoBN,MAAM,aAAwC,CAAC,EACpD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,6LAAC;QAAI,WAAW,CAAC,KAAK,EAAE,WAAW;QAAG,GAAG,KAAK;kBAC3C;;;;;;AAGP;MAVa;AAiBN,MAAM,YAAsC,CAAC,EAClD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,6LAAC;QAAG,WAAW,CAAC,oDAAoD,EAAE,WAAW;QAAG,GAAG,KAAK;kBACzF;;;;;;AAGP;MAVa;AAiBN,MAAM,cAA0C,CAAC,EACtD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,6LAAC;QAAI,WAAW;QAAY,GAAG,KAAK;kBACjC;;;;;;AAGP;MAVa;AAiBN,MAAM,aAAwC,CAAC,EACpD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,6LAAC;QAAI,WAAW,CAAC,KAAK,EAAE,WAAW;QAAG,GAAG,KAAK;kBAC3C;;;;;;AAGP;MAVa","debugId":null}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/alert.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface AlertProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  variant?: 'default' | 'destructive' | 'warning' | 'success';\r\n}\r\n\r\nexport const Alert: React.FC<AlertProps> = ({\r\n  children,\r\n  className = '',\r\n  variant = 'default',\r\n  ...props\r\n}) => {\r\n  const variantClasses = {\r\n    default: 'bg-blue-50 border-blue-200 text-blue-800 dark:bg-blue-900/50 dark:border-blue-800 dark:text-blue-200',\r\n    destructive: 'bg-red-50 border-red-200 text-red-800 dark:bg-red-900/50 dark:border-red-800 dark:text-red-200',\r\n    warning: 'bg-yellow-50 border-yellow-200 text-yellow-800 dark:bg-yellow-900/50 dark:border-yellow-800 dark:text-yellow-200',\r\n    success: 'bg-green-50 border-green-200 text-green-800 dark:bg-green-900/50 dark:border-green-800 dark:text-green-200'\r\n  };\r\n  \r\n  return (\r\n    <div\r\n      role=\"alert\"\r\n      className={`p-4 mb-4 border rounded-lg ${variantClasses[variant]} ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface AlertTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const AlertTitle: React.FC<AlertTitleProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <h4\r\n      className={`font-medium text-lg mb-1 ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </h4>\r\n  );\r\n};\r\n\r\ninterface AlertDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport const AlertDescription: React.FC<AlertDescriptionProps> = ({\r\n  children,\r\n  className = '',\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`text-sm ${className}`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;;;;AAQO,MAAM,QAA8B,CAAC,EAC1C,QAAQ,EACR,YAAY,EAAE,EACd,UAAU,SAAS,EACnB,GAAG,OACJ;IACC,MAAM,iBAAiB;QACrB,SAAS;QACT,aAAa;QACb,SAAS;QACT,SAAS;IACX;IAEA,qBACE,6LAAC;QACC,MAAK;QACL,WAAW,CAAC,2BAA2B,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW;QAC9E,GAAG,KAAK;kBAER;;;;;;AAGP;KAtBa;AA6BN,MAAM,aAAwC,CAAC,EACpD,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,WAAW,CAAC,yBAAyB,EAAE,WAAW;QACjD,GAAG,KAAK;kBAER;;;;;;AAGP;MAba;AAoBN,MAAM,mBAAoD,CAAC,EAChE,QAAQ,EACR,YAAY,EAAE,EACd,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,WAAW,CAAC,QAAQ,EAAE,WAAW;QAChC,GAAG,KAAK;kBAER;;;;;;AAGP;MAba","debugId":null}},
    {"offset": {"line": 604, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ui/index.ts"],"sourcesContent":["// components/ui/index.ts\r\nexport * from './button';\r\nexport * from './progress';\r\nexport * from './tabs';\r\nexport * from './card';\r\nexport * from './alert';"],"names":[],"mappings":"AAAA,yBAAyB","debugId":null}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/utils/mccUtils.ts"],"sourcesContent":["// src/utils/mccUtils.ts\r\n// TypeScript implementation that supports both real and simulated modes\r\n\r\n// Define environment configuration\r\nconst MCC_CONFIG = {\r\n  // Use environment variables or a default\r\n  SIMULATION_MODE: process.env.REACT_APP_MCC_SIMULATION === 'true' \r\n                  || process.env.NODE_ENV === 'development',\r\n  LOG_LEVEL: process.env.REACT_APP_MCC_LOG_LEVEL || 'info',\r\n};\r\n\r\n// Socket interface to standardize both real and simulated connections\r\nexport interface IMccSocket {\r\n  send: (message: string) => Promise<void>;\r\n  receive: (maxBytes?: number, timeout?: number) => Promise<string>;\r\n  close: () => void;\r\n  isSimulated?: boolean; // Flag to identify if this is a simulated socket\r\n}\r\n\r\n// Logger for MCC operations\r\n// SHOWN IN BROWSER CONSOLE\r\nconst mccLogger = {\r\n  debug: (message: string, ...args: any[]) => {\r\n    if (MCC_CONFIG.LOG_LEVEL === 'debug') {\r\n      console.debug(`[MCC] ${message}`, ...args);\r\n    }\r\n  },\r\n  info: (message: string, ...args: any[]) => {\r\n    if (['debug', 'info'].includes(MCC_CONFIG.LOG_LEVEL)) {\r\n      console.info(`[MCC] ${message}`, ...args);\r\n    }\r\n  },\r\n  warn: (message: string, ...args: any[]) => {\r\n    console.warn(`[MCC] ${message}`, ...args);\r\n  },\r\n  error: (message: string, ...args: any[]) => {\r\n    console.error(`[MCC] ${message}`, ...args);\r\n  }\r\n};\r\n\r\n// Simulated MCC Socket implementation\r\nclass SimulatedMccSocket implements IMccSocket {\r\n  private readonly simulatedData: Map<string, string>;\r\n  private readonly delays: boolean;\r\n  public isSimulated: boolean = true;\r\n  \r\n  constructor(delays = true) {\r\n    this.simulatedData = new Map();\r\n    this.delays = delays;\r\n    \r\n    // Initialize with some default values\r\n    this.simulatedData.set(\"OBC1_FW_Ver_Major\", \"1\");\r\n    this.simulatedData.set(\"OBC1_FW_Ver_Minor\", \"2\");\r\n    this.simulatedData.set(\"OBC1_FW_Ver_Patch\", \"3\");\r\n    this.simulatedData.set(\"OBC1_3V3_D\", \"3300\");\r\n    this.simulatedData.set(\"OBC1_PS_3V3_OBC2_V\", \"3298\");\r\n    this.simulatedData.set(\"OBC1_PS_5V_OBC2_V\", \"5042\");\r\n    this.simulatedData.set(\"OBC1_PS_5V_OBC2_I\", \"120\");\r\n    this.simulatedData.set(\"OBC1_PS_3V3_OBC2_I\", \"80\");\r\n    this.simulatedData.set(\"OBC1_thruster_ch1_T\", \"24.5\");\r\n    this.simulatedData.set(\"OBC1_thruster_ch2_T\", \"25.2\");\r\n    this.simulatedData.set(\"OBC1_leocam_ch1_T\", \"22.1\");\r\n    this.simulatedData.set(\"OBC1_leocam_ch2_T\", \"23.0\");\r\n    this.simulatedData.set(\"OBC1_leocam_ch3_T\", \"22.7\");\r\n    this.simulatedData.set(\"OBC1_leocam_ch4_T\", \"23.5\");\r\n    this.simulatedData.set(\"OBC1_Q8_eMMC0_state\", \"1\");\r\n    this.simulatedData.set(\"OBC1_Q8_eMMC1_state\", \"0\");\r\n    this.simulatedData.set(\"OBC1_vcc_pspll\", \"0.85\");\r\n    this.simulatedData.set(\"OBC1_vcc_psbatt\", \"1.20\");\r\n    this.simulatedData.set(\"OBC1_vccint\", \"1.00\");\r\n    this.simulatedData.set(\"OBC1_vccbram\", \"1.00\");\r\n    this.simulatedData.set(\"OBC1_vccaux\", \"1.80\");\r\n    this.simulatedData.set(\"OBC1_ps_temp\", \"45.2\");\r\n    this.simulatedData.set(\"OBC1_remote_temp\", \"42.3\");\r\n    this.simulatedData.set(\"OBC1_pl_temp\", \"47.1\");\r\n    this.simulatedData.set(\"OBC1_Sys_uptime\", \"12345\");\r\n    this.simulatedData.set(\"OBC1_Sys_loads_1m\", \"0.25\");\r\n    this.simulatedData.set(\"OBC1_Sys_loads_5m\", \"0.30\");\r\n    this.simulatedData.set(\"OBC1_Sys_loads_15m\", \"0.28\");\r\n    this.simulatedData.set(\"OBC1_Sys_totalram\", \"1048576\");\r\n    this.simulatedData.set(\"OBC1_Sys_freeram\", \"524288\");\r\n    this.simulatedData.set(\"OBC1_Sys_sharedram\", \"65536\");\r\n    this.simulatedData.set(\"OBC1_Sys_bufferram\", \"32768\");\r\n    this.simulatedData.set(\"OBC1_Sys_totalswap\", \"2097152\");\r\n    this.simulatedData.set(\"OBC1_Sys_freeswap\", \"2097152\");\r\n    this.simulatedData.set(\"OBC1_Sys_procs\", \"68\");\r\n    this.simulatedData.set(\"OBC1_Sys_totalhigh\", \"0\");\r\n    this.simulatedData.set(\"OBC1_Sys_freehigh\", \"0\");\r\n    this.simulatedData.set(\"OBC1_Sys_mem_unit\", \"1\");\r\n    \r\n    mccLogger.info(`Initialized simulated MCC socket with ${this.simulatedData.size} parameters`);\r\n  }\r\n  \r\n  public async send(message: string): Promise<void> {\r\n    mccLogger.debug(`[SIM] Sending: ${message.trim()}`);\r\n    \r\n    // Parse the message to update simulated data if it's a set command\r\n    if (message.includes('.value=')) {\r\n      const [param, valueStr] = message.trim().split('.value=');\r\n      const value = valueStr.trim();\r\n      this.simulatedData.set(param, value);\r\n      mccLogger.debug(`[SIM] Set ${param} to ${value}`);\r\n    }\r\n    \r\n    // Add simulated delay if enabled\r\n    if (this.delays) {\r\n      await new Promise(resolve => setTimeout(resolve, 50 + Math.random() * 100));\r\n    }\r\n    \r\n    return Promise.resolve();\r\n  }\r\n  \r\n  public async receive(maxBytes = 4096, timeout = 5000): Promise<string> {\r\n    // This would contain the read logic for parameters that have been \r\n    // requested with param.log=true in a real implementation\r\n    \r\n    // In our simulation, just get the last parameters from the log=true messages\r\n    const loggedParams = Array.from(this.simulatedData.keys())\r\n      .filter(key => key.endsWith('.log') && this.simulatedData.get(key) === 'true');\r\n    \r\n    // Add simulated delay if enabled\r\n    if (this.delays) {\r\n      await new Promise(resolve => setTimeout(resolve, 100 + Math.random() * 200));\r\n    }\r\n    \r\n    // For simulation, if log=true isn't set (because we don't track it),\r\n    // we'll just respond to the actual parameter name\r\n    // Extract parameter names from something like \"param.log=true\\n\"\r\n    const responses: string[] = [];\r\n    \r\n    // Extract all parameters from buffer that may have been sent with .log=true\r\n    const requestBuffer = this.recentRequests.join('\\n');\r\n    const paramMatches = Array.from(requestBuffer.matchAll(/([A-Za-z0-9_]+)\\.log=true/g));\r\n    \r\n    if (paramMatches.length > 0) {\r\n      for (const match of paramMatches) {\r\n        const param = match[1];\r\n        // Check if we have this parameter\r\n        if (this.simulatedData.has(param)) {\r\n          responses.push(`${param}=${this.simulatedData.get(param)}`);\r\n        } else {\r\n          // Generate a random value for simulation\r\n          const randomValue = (Math.random() * 100).toFixed(2);\r\n          responses.push(`${param}=${randomValue}`);\r\n        }\r\n      }\r\n    }\r\n    \r\n    mccLogger.debug(`[SIM] Received response: ${responses.join('\\n')}`);\r\n    return responses.join('\\n');\r\n  }\r\n  \r\n  public close(): void {\r\n    mccLogger.info('[SIM] Closed simulated MCC socket');\r\n  }\r\n  \r\n  // Track recent requests for simulation purposes\r\n  private recentRequests: string[] = [];\r\n  \r\n  // Helper method to simulate reading multiple parameters\r\npublic simulateRead(parameters: string[]): string[] {\r\n  // Add debugging output\r\n  console.log(`Simulating read for: ${parameters.join(', ')}`);\r\n  \r\n  return parameters.map(param => {\r\n    // Get value from the map, or generate a realistic one if not found\r\n    let value = this.simulatedData.get(param);\r\n    \r\n    if (!value) {\r\n      // Generate a realistic value based on parameter name\r\n      if (param.includes(\"FW_Ver\")) {\r\n        value = param.includes(\"Major\") ? \"1\" : \r\n               param.includes(\"Minor\") ? \"2\" : \"3\";\r\n      } else if (param.includes(\"3V3\") || param.includes(\"3v3\")) {\r\n        value = \"3300\";\r\n      } else if (param.includes(\"5V\") || param.includes(\"5v\")) {\r\n        value = \"5000\";\r\n      } else if (param.includes(\"temp\") || param.includes(\"Temp\") || param.includes(\"_T\")) {\r\n        value = (20 + Math.floor(Math.random() * 10)).toString();\r\n      } else if (param.includes(\"eMMC\") || param.includes(\"emmc\")) {\r\n        value = \"1\";\r\n      } else {\r\n        value = \"simulated\";\r\n      }\r\n      \r\n      // Store it for consistent future responses\r\n      this.simulatedData.set(param, value);\r\n    }\r\n    \r\n    console.log(`Simulated ${param}=${value}`);\r\n    return `${param}=${value}`;\r\n  });\r\n}\r\n}\r\n\r\n// Real MCC Socket implementation using WebSocket\r\nclass RealMccSocket implements IMccSocket {\r\n  private readonly socket: WebSocket;\r\n  private readonly callbacks: Map<string, (data: string) => void>;\r\n  private readonly timeouts: Map<string, NodeJS.Timeout>;\r\n  public isSimulated: boolean = false;\r\n  \r\n  constructor(socket: WebSocket) {\r\n    this.socket = socket;\r\n    this.callbacks = new Map();\r\n    this.timeouts = new Map();\r\n    \r\n    // Set up message handler\r\n    this.socket.onmessage = this.handleMessage.bind(this);\r\n    this.socket.onerror = this.handleError.bind(this);\r\n    this.socket.onclose = this.handleClose.bind(this);\r\n    \r\n    mccLogger.info('Initialized real MCC socket connection');\r\n  }\r\n  \r\n  private handleMessage(event: MessageEvent): void {\r\n    const data = event.data;\r\n    mccLogger.debug(`[REAL] Received: ${data}`);\r\n    \r\n    // Call any registered callbacks\r\n    for (const [id, callback] of this.callbacks) {\r\n      callback(data);\r\n      \r\n      // Remove the callback and its timeout\r\n      this.callbacks.delete(id);\r\n      const timeout = this.timeouts.get(id);\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        this.timeouts.delete(id);\r\n      }\r\n    }\r\n  }\r\n  \r\n  private handleError(event: Event): void {\r\n    mccLogger.error(`[REAL] WebSocket error: ${event}`);\r\n    \r\n    // Reject all pending callbacks with the error\r\n    for (const [id, callback] of this.callbacks) {\r\n      callback(`ERROR: WebSocket error occurred`);\r\n      this.callbacks.delete(id);\r\n      \r\n      const timeout = this.timeouts.get(id);\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        this.timeouts.delete(id);\r\n      }\r\n    }\r\n  }\r\n  \r\n  private handleClose(event: CloseEvent): void {\r\n    mccLogger.warn(`[REAL] WebSocket closed: ${event.code} ${event.reason}`);\r\n    \r\n    // Reject all pending callbacks\r\n    for (const [id, callback] of this.callbacks) {\r\n      callback(`ERROR: WebSocket closed: ${event.code} ${event.reason}`);\r\n      this.callbacks.delete(id);\r\n      \r\n      const timeout = this.timeouts.get(id);\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        this.timeouts.delete(id);\r\n      }\r\n    }\r\n  }\r\n  \r\n  public async send(message: string): Promise<void> {\r\n    mccLogger.debug(`[REAL] Sending: ${message.trim()}`);\r\n    \r\n    return new Promise<void>((resolve, reject) => {\r\n      if (this.socket.readyState !== WebSocket.OPEN) {\r\n        mccLogger.error('[REAL] Socket not open');\r\n        reject(new Error('Socket not open'));\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        this.socket.send(message);\r\n        resolve();\r\n      } catch (error) {\r\n        mccLogger.error(`[REAL] Send error: ${error}`);\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n  \r\n  public async receive(maxBytes = 4096, timeout = 5000): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n      const id = `receive-${Date.now()}-${Math.random()}`;\r\n      \r\n      // Create a timeout handler\r\n      const timeoutId = setTimeout(() => {\r\n        this.callbacks.delete(id);\r\n        reject(new Error(`Receive timeout after ${timeout}ms`));\r\n      }, timeout);\r\n      \r\n      // Store the timeout and callback\r\n      this.timeouts.set(id, timeoutId);\r\n      this.callbacks.set(id, resolve);\r\n    });\r\n  }\r\n  \r\n  public close(): void {\r\n    mccLogger.info('[REAL] Closing MCC socket');\r\n    this.socket.close();\r\n    \r\n    // Clear all timeouts\r\n    for (const timeoutId of this.timeouts.values()) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    this.timeouts.clear();\r\n    this.callbacks.clear();\r\n  }\r\n}\r\n\r\n/**\r\n * Test WebSocket connectivity to verify the server is reachable\r\n * This function is specifically designed to verify connectivity before showing success in the UI\r\n */\r\nexport async function testWebSocketConnection(serverAddress: string): Promise<boolean> {\r\n  return new Promise((resolve) => {\r\n    try {\r\n      // Create a WebSocket connection just to test if it can connect\r\n      const socket = new WebSocket(`ws://${serverAddress}`);\r\n      \r\n      // Set a timeout to prevent hanging on connection attempts\r\n      const timeout = setTimeout(() => {\r\n        socket.close();\r\n        resolve(false);\r\n      }, 3000);\r\n      \r\n      socket.onopen = () => {\r\n        clearTimeout(timeout);\r\n        socket.close();\r\n        resolve(true);\r\n      };\r\n      \r\n      socket.onerror = () => {\r\n        clearTimeout(timeout);\r\n        socket.close();\r\n        resolve(false);\r\n      };\r\n    } catch (error) {\r\n      mccLogger.error(`Connection test error: ${error}`);\r\n      resolve(false);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Create an MCC socket connection based on configuration\r\n * \r\n * @param serverAddress Server address in format \"host:port\"\r\n * @param forceReal Whether to force using a real connection even if simulation mode is enabled\r\n * @param fallbackToSim Whether to fall back to a simulated connection if the real one fails\r\n * @returns A promise that resolves to an IMccSocket interface\r\n */\r\nexport async function createMccSocket(\r\n  serverAddress: string, \r\n  forceReal = false, \r\n  fallbackToSim = true\r\n): Promise<IMccSocket> {\r\n  // Check if we should use simulation mode\r\n  if (MCC_CONFIG.SIMULATION_MODE && !forceReal) {\r\n    mccLogger.info(`Creating simulated MCC socket (address: ${serverAddress})`);\r\n    return new SimulatedMccSocket();\r\n  }\r\n  \r\n  // Parse the original server address\r\n  const [host, portStr] = serverAddress.split(\":\");\r\n  const port = parseInt(portStr || \"9377\", 10);\r\n  \r\n  try {\r\n    // Connect to our proxy server instead of directly to the MCC server\r\n    const proxyUrl = \"ws://localhost:8080\"; // WebSocket proxy URL\r\n    mccLogger.info(`Connecting to MCC server at ${host}:${port} via proxy ${proxyUrl}`);\r\n    \r\n    const socket = new WebSocket(proxyUrl);\r\n    \r\n    // Wait for the WebSocket connection to open\r\n    await new Promise<void>((resolve, reject) => {\r\n      socket.onopen = () => {\r\n        mccLogger.info(`WebSocket connection to proxy established`);\r\n        \r\n        // Once connected to the proxy, request connection to the actual MCC server\r\n        const connectRequest = {\r\n          command: 'connect',\r\n          host: host,\r\n          port: port\r\n        };\r\n        \r\n        socket.send(JSON.stringify(connectRequest));\r\n        \r\n        // Set up handler for the connection response\r\n        const messageHandler = (event: MessageEvent) => {\r\n          try {\r\n            const response = JSON.parse(event.data);\r\n            \r\n            if (response.status === 'connected') {\r\n              mccLogger.info(`Successfully connected to MCC server via proxy`);\r\n              socket.removeEventListener('message', messageHandler);\r\n              resolve();\r\n            } else if (response.status === 'error') {\r\n              socket.removeEventListener('message', messageHandler);\r\n              reject(new Error(response.message || 'Failed to connect to MCC server'));\r\n            }\r\n          } catch (error) {\r\n            // Not a JSON response, might be regular MCC data\r\n            // Just ignore it for now\r\n          }\r\n        };\r\n        \r\n        socket.addEventListener('message', messageHandler);\r\n        \r\n        // Add a timeout for the MCC server connection\r\n        setTimeout(() => {\r\n          socket.removeEventListener('message', messageHandler);\r\n          reject(new Error('MCC connection timeout (10000ms)'));\r\n        }, 10000);\r\n      };\r\n      \r\n      socket.onerror = (err) => {\r\n        mccLogger.error(`WebSocket connection to proxy error: ${err}`);\r\n        reject(new Error(`WebSocket connection error to proxy`));\r\n      };\r\n      \r\n      // Add a timeout for the proxy connection\r\n      setTimeout(() => reject(new Error('Proxy connection timeout (5000ms)')), 5000);\r\n    });\r\n    \r\n    // At this point, we're connected to both the proxy and the MCC server\r\n    return new ProxyMccSocket(socket);\r\n  } catch (error) {\r\n    mccLogger.error(`Failed to connect to MCC server via proxy: ${error}`);\r\n    \r\n    // Fall back to simulation if configured to do so\r\n    if (fallbackToSim) {\r\n      mccLogger.warn(`Falling back to simulation mode due to connection error`);\r\n      return new SimulatedMccSocket();\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n}\r\n\r\n// New class to handle communication through the proxy\r\nclass ProxyMccSocket implements IMccSocket {\r\n  private readonly socket: WebSocket;\r\n  private readonly callbacks: Map<string, (data: string) => void>;\r\n  private readonly timeouts: Map<string, NodeJS.Timeout>;\r\n  public isSimulated: boolean = false;\r\n  \r\n  constructor(socket: WebSocket) {\r\n    this.socket = socket;\r\n    this.callbacks = new Map();\r\n    this.timeouts = new Map();\r\n    \r\n    // Set up message handler\r\n    this.socket.onmessage = this.handleMessage.bind(this);\r\n    this.socket.onerror = this.handleError.bind(this);\r\n    this.socket.onclose = this.handleClose.bind(this);\r\n    \r\n    mccLogger.info('Initialized proxy MCC socket connection');\r\n  }\r\n  \r\n// In mccUtils.ts, in the ProxyMccSocket class handleMessage method\r\nprivate handleMessage(event: MessageEvent): void {\r\n  const data = event.data;\r\n  mccLogger.debug(`[PROXY] Received: ${data}`);\r\n  \r\n  // Try to parse as JSON first (might be a control message from the proxy)\r\n  try {\r\n    const jsonResponse = JSON.parse(data);\r\n    if (jsonResponse.status) {\r\n      // This is a control message, not MCC data\r\n      mccLogger.info(`Proxy message: ${jsonResponse.message}`);\r\n      return;\r\n    }\r\n  } catch (e) {\r\n    // Not JSON, treat as regular MCC data\r\n  }\r\n  \r\n  // Call all registered callbacks with the raw data\r\n  const handlersToRemove = [];\r\n  \r\n  for (const [id, callback] of this.callbacks) {\r\n    callback(data);\r\n    \r\n    // Add to removal list\r\n    handlersToRemove.push(id);\r\n    \r\n    // Clear the timeout\r\n    const timeout = this.timeouts.get(id);\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n      this.timeouts.delete(id);\r\n    }\r\n  }\r\n  \r\n  // Remove callbacks outside the loop to avoid modification during iteration\r\n  for (const id of handlersToRemove) {\r\n    this.callbacks.delete(id);\r\n  }\r\n}\r\n  \r\n  private handleError(event: Event): void {\r\n    mccLogger.error(`[PROXY] WebSocket error: ${event}`);\r\n    \r\n    // Reject all pending callbacks with the error\r\n    for (const [id, callback] of this.callbacks) {\r\n      callback(`ERROR: WebSocket error occurred`);\r\n      this.callbacks.delete(id);\r\n      \r\n      const timeout = this.timeouts.get(id);\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        this.timeouts.delete(id);\r\n      }\r\n    }\r\n  }\r\n  \r\n  private handleClose(event: CloseEvent): void {\r\n    mccLogger.warn(`[PROXY] WebSocket closed: ${event.code} ${event.reason}`);\r\n    \r\n    // Reject all pending callbacks\r\n    for (const [id, callback] of this.callbacks) {\r\n      callback(`ERROR: WebSocket closed: ${event.code} ${event.reason}`);\r\n      this.callbacks.delete(id);\r\n      \r\n      const timeout = this.timeouts.get(id);\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        this.timeouts.delete(id);\r\n      }\r\n    }\r\n  }\r\n  \r\n  public async send(message: string): Promise<void> {\r\n    mccLogger.debug(`[PROXY] Sending: ${message.trim()}`);\r\n    \r\n    return new Promise<void>((resolve, reject) => {\r\n      if (this.socket.readyState !== WebSocket.OPEN) {\r\n        mccLogger.error('[PROXY] Socket not open');\r\n        reject(new Error('Socket not open'));\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        this.socket.send(message);\r\n        resolve();\r\n      } catch (error) {\r\n        mccLogger.error(`[PROXY] Send error: ${error}`);\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n  \r\n  public async receive(maxBytes = 4096, timeout = 20000): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n      const id = `receive-${Date.now()}-${Math.random()}`;\r\n      \r\n      // Create a timeout handler\r\n      const timeoutId = setTimeout(() => {\r\n        this.callbacks.delete(id);\r\n        reject(new Error(`Receive timeout after ${timeout}ms`));\r\n      }, timeout);\r\n      \r\n      // Store the timeout and callback\r\n      this.timeouts.set(id, timeoutId);\r\n      this.callbacks.set(id, resolve);\r\n    });\r\n  }\r\n  \r\n  public close(): void {\r\n    mccLogger.info('[PROXY] Closing MCC socket');\r\n    this.socket.close();\r\n    \r\n    // Clear all timeouts\r\n    for (const timeoutId of this.timeouts.values()) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    this.timeouts.clear();\r\n    this.callbacks.clear();\r\n  }\r\n}\r\n\r\n/**\r\n * Connect to the MCC server - a backwards-compatible wrapper for createMccSocket\r\n * \r\n * @param serverAddress Server address in format \"host:port\"\r\n * @param forceSim Flag to force simulation mode\r\n * @param throwErrors Whether to throw errors (if false, returns null on error)\r\n * @returns A promise that resolves to an IMccSocket interface or null if connection fails\r\n */\r\nexport async function connectToMcc(\r\n  serverAddress: string,\r\n  forceSim = false,\r\n  throwErrors = false\r\n): Promise<IMccSocket | null> {\r\n  try {\r\n    // If forceSim is true, use simulation mode\r\n    if (forceSim) {\r\n      setSimulationMode(true);\r\n      return new SimulatedMccSocket();\r\n    }\r\n    \r\n    return await createMccSocket(serverAddress, false, true);\r\n  } catch (error) {\r\n    mccLogger.error(`Connection error: ${error}`);\r\n    \r\n    if (throwErrors) {\r\n      throw error;\r\n    }\r\n    \r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n* Send a command to set a parameter value over a socket connection\r\n* \r\n* @param sock The socket connection to the MCC server\r\n* @param parameter The parameter name to set\r\n* @param value The value to set\r\n* @returns A promise that resolves when the command is sent\r\n*/\r\nexport async function mccifSet(sock: any, parameter: string, value: any): Promise<void> {\r\n  // Format the message in the same way as the Python implementation\r\n  // Ensure clean formatting with no extra whitespace or tokens\r\n  const message = `${parameter}.value=${value}\\n`;\r\n  \r\n  // Add a log to identify what's happening\r\n  console.log(`📡 mccifSet: ${parameter}=${value}, using ${sock? (sock.isSimulated ? \"simulated\" : \"real\") : \"no\"} socket`);\r\n  \r\n  // Check if we're in development mode and sock might be missing\r\n  if (!sock) {\r\n    console.warn(`Using simulation fallback for ${parameter}=${value}`);\r\n    return Promise.resolve();\r\n  }\r\n  \r\n  // If this is a real socket with send function, use it directly\r\n  if (sock && typeof sock.send === 'function') {\r\n    console.log(`Using ${sock.isSimulated ? \"simulated\" : \"real\"} socket to set ${parameter}=${value}`);\r\n    \r\n    try {\r\n      await sock.send(message);\r\n      \r\n      // Add a small delay after sending command to ensure processing\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      \r\n      return Promise.resolve();\r\n    } catch (error) {\r\n      console.error(`Error sending command ${parameter}=${value}:`, error);\r\n      return Promise.resolve(); // Continue despite error\r\n    }\r\n  }\r\n  \r\n  // For backward compatibility, handle the old simulation API\r\n  if (sock && typeof sock.simulateRead === 'function') {\r\n    console.log(`Using simulation mode to set ${parameter}=${value}`);\r\n    if (typeof sock.send === 'function') {\r\n      return sock.send(message);\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n  \r\n  // If no valid socket is available, log the error but don't throw\r\n  console.error(\"No valid socket connection available\");\r\n  return Promise.resolve(); // Don't reject, just continue\r\n}\r\n\r\n/**\r\n* Read parameter values over a socket connection\r\n* \r\n* @param sock The socket connection to the MCC server\r\n* @param parameters Array of parameter names to read\r\n* @returns A promise that resolves to an array of response strings\r\n*/\r\n// Around line 640-720 in mccUtils.ts, in the mccifRead function\r\nexport async function mccifRead(sock: any, parameters: string[]): Promise<string[]> {\r\n  // Log what's happening\r\n  console.log(`📡 mccifRead: ${parameters.length} parameters, using ${sock? (sock.isSimulated ? \"simulated\" : \"real\") : \"no\"} socket`);\r\n  \r\n  // If we have a socket with simulateRead function, use it directly\r\n  if (sock && typeof sock.simulateRead === 'function') {\r\n    console.log(`Using simulation to read ${parameters.length} parameters`);\r\n    return sock.simulateRead(parameters);\r\n  }\r\n    \r\n  // Check if we have a real socket with send/receive functions\r\n  if (sock && typeof sock.send === 'function') {\r\n    console.log(`📡 ${sock.isSimulated ? \"SIMULATED\" : \"REAL\"} READ: Reading ${parameters.length} parameters from server`);\r\n    try {\r\n      // Construct message to enable logging for each parameter\r\n      let message = \"\";\r\n      for (const param of parameters) {\r\n        message += `${param}.log=true\\n`;\r\n      }\r\n      \r\n      // Send the message\r\n      await sock.send(message);\r\n      \r\n      // Add a small delay to ensure the server has time to process\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      \r\n      // Receive the response - INCREASE CHUNK SIZE and REDUCE TIMEOUT maybe\r\n      // 4096 bytes and 20000ms\r\n      const response = await sock.receive(4096, 20000);\r\n      \r\n      if (!response || response.length === 0) {\r\n        throw new Error(\"Empty response from server\");\r\n      }\r\n      \r\n      // Process the response\r\n      console.log(`📡 Data received for ${parameters.length} parameters:`, response);\r\n      \r\n      // Check if the response is just a string 'simulated response'\r\n      if (response === 'simulated response') {\r\n        console.log('⚠️ Received \"simulated response\" from socket - falling back to simulated values');\r\n        return simulateParameterValues(parameters);\r\n      }\r\n      \r\n      // Split response into lines and handle partial responses\r\n      const lines = response.split('\\n');\r\n      \r\n      // If we don't get enough lines, try to use what we have\r\n      const result = lines.slice(0, Math.min(parameters.length, lines.length));\r\n      \r\n      // If we got fewer lines than expected, pad with simulated values\r\n      if (result.length < parameters.length) {\r\n        console.log(`⚠️ Received only ${result.length} of ${parameters.length} parameters - padding with simulations`);\r\n        \r\n        // Create a map of received parameters for lookup\r\n        const receivedParams = new Map();\r\n        for (const line of result) {\r\n          const parts = line.split('=');\r\n          if (parts.length >= 2) {\r\n            receivedParams.set(parts[0], line);\r\n          }\r\n        }\r\n        \r\n        // Build final result array with actual or simulated values\r\n        const finalResult = parameters.map(param => {\r\n          if (receivedParams.has(param)) {\r\n            return receivedParams.get(param);\r\n          } else {\r\n            return simulateParameter(param);\r\n          }\r\n        });\r\n        \r\n        return finalResult;\r\n      }\r\n      \r\n      // Disable logging before returning\r\n      message = \"\";\r\n      for (const param of parameters) {\r\n        message += `${param}.log=false\\n`;\r\n      }\r\n      await sock.send(message);\r\n      \r\n      return result;\r\n    } catch (error) {\r\n      console.error(`MCC read error: ${error}`);\r\n      // Fall back to simulation if there's an error\r\n      console.warn(\"Falling back to simulation due to error\");\r\n      return simulateParameterValues(parameters);\r\n    }\r\n  }\r\n\r\n  // If we're in development mode without a real server or proper simulation, return hardcoded values\r\n  console.warn(\"No valid socket connection available, using fallback simulated values\");\r\n  return simulateParameterValues(parameters);\r\n}\r\n\r\n// Helper function to generate simulated values\r\nfunction simulateParameterValues(parameters: string[]): string[] {\r\n  return parameters.map(param => simulateParameter(param));\r\n}\r\n\r\nfunction simulateParameter(param: string): string {\r\n  // Generate appropriate simulated values based on parameter name\r\n  if (param.includes(\"FW_Ver\")) {\r\n    const version = param.includes(\"Major\") ? \"1\" : \r\n                   param.includes(\"Minor\") ? \"2\" : \"3\";\r\n    return `${param}=${version}`;\r\n  } else if (param.includes(\"3V3\") || param.includes(\"3v3\")) {\r\n    return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n  } else if (param.includes(\"5V\") || param.includes(\"5v\")) {\r\n    return `${param}=${5000 + Math.floor(Math.random() * 100)}`;\r\n  } else if (param.includes(\"temp\") || param.includes(\"Temp\") || param.includes(\"_T\")) {\r\n    return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n  } else if (param.includes(\"eMMC\")) {\r\n    return `${param}=1`;\r\n  } else {\r\n    return `${param}=simulated`;\r\n  }\r\n}\r\n\r\n// Export a helper to check if we're in simulation mode\r\nexport function isSimulationMode(): boolean {\r\n  return MCC_CONFIG.SIMULATION_MODE;\r\n}\r\n\r\n// Export a helper to toggle simulation mode at runtime\r\n// In utils/mccUtils.ts, modify setSimulationMode\r\nexport function setSimulationMode(enabled: boolean): void {\r\n  const previous = MCC_CONFIG.SIMULATION_MODE;\r\n  MCC_CONFIG.SIMULATION_MODE = enabled;\r\n  \r\n  if (previous !== enabled) {\r\n    mccLogger.info(`Simulation mode changed from ${previous} to ${enabled}`);\r\n    \r\n    // Broadcast the change to help with debugging\r\n    window.dispatchEvent(new CustomEvent('mcc-simulation-changed', { \r\n      detail: { enabled }\r\n    }));\r\n  }\r\n}\r\n\r\nexport function debugSocketType(sock: any): string {\r\n  if (!sock) return \"No socket\";\r\n  if (sock.isSimulated === true) return \"Simulated socket\";\r\n  if (sock.isSimulated === false) return \"Real socket\";\r\n  if (typeof sock.simulateRead === 'function') return \"Legacy simulated socket\";\r\n  if (typeof sock.send === 'function' && typeof sock.receive === 'function') return \"Socket with send/receive\";\r\n  return \"Unknown socket type\";\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1296, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/CheckoutTestProgress/components/OBC1TestPanel.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"button\": \"OBC1TestPanel-module___sU2RW__button\",\n  \"buttonIcon\": \"OBC1TestPanel-module___sU2RW__buttonIcon\",\n  \"card\": \"OBC1TestPanel-module___sU2RW__card\",\n  \"cardContent\": \"OBC1TestPanel-module___sU2RW__cardContent\",\n  \"cardHeader\": \"OBC1TestPanel-module___sU2RW__cardHeader\",\n  \"cardIcon\": \"OBC1TestPanel-module___sU2RW__cardIcon\",\n  \"cardTitle\": \"OBC1TestPanel-module___sU2RW__cardTitle\",\n  \"infoCard\": \"OBC1TestPanel-module___sU2RW__infoCard\",\n  \"infoContent\": \"OBC1TestPanel-module___sU2RW__infoContent\",\n  \"infoIcon\": \"OBC1TestPanel-module___sU2RW__infoIcon\",\n  \"infoLabel\": \"OBC1TestPanel-module___sU2RW__infoLabel\",\n  \"infoValue\": \"OBC1TestPanel-module___sU2RW__infoValue\",\n  \"parameterBox\": \"OBC1TestPanel-module___sU2RW__parameterBox\",\n  \"parameterIcon\": \"OBC1TestPanel-module___sU2RW__parameterIcon\",\n  \"parameterLabel\": \"OBC1TestPanel-module___sU2RW__parameterLabel\",\n  \"parameterValue\": \"OBC1TestPanel-module___sU2RW__parameterValue\",\n  \"progressBar\": \"OBC1TestPanel-module___sU2RW__progressBar\",\n  \"progressBarFill\": \"OBC1TestPanel-module___sU2RW__progressBarFill\",\n  \"progressContainer\": \"OBC1TestPanel-module___sU2RW__progressContainer\",\n  \"progressLabel\": \"OBC1TestPanel-module___sU2RW__progressLabel\",\n  \"progressStep\": \"OBC1TestPanel-module___sU2RW__progressStep\",\n  \"progressValue\": \"OBC1TestPanel-module___sU2RW__progressValue\",\n  \"reportButton\": \"OBC1TestPanel-module___sU2RW__reportButton\",\n  \"spin\": \"OBC1TestPanel-module___sU2RW__spin\",\n  \"spinnerIcon\": \"OBC1TestPanel-module___sU2RW__spinnerIcon\",\n  \"statusBadge\": \"OBC1TestPanel-module___sU2RW__statusBadge\",\n  \"table\": \"OBC1TestPanel-module___sU2RW__table\",\n  \"tableBody\": \"OBC1TestPanel-module___sU2RW__tableBody\",\n  \"tableHeader\": \"OBC1TestPanel-module___sU2RW__tableHeader\",\n  \"tableRowAlt\": \"OBC1TestPanel-module___sU2RW__tableRowAlt\",\n  \"tempCard\": \"OBC1TestPanel-module___sU2RW__tempCard\",\n  \"tempGrid\": \"OBC1TestPanel-module___sU2RW__tempGrid\",\n  \"tempLabel\": \"OBC1TestPanel-module___sU2RW__tempLabel\",\n  \"tempValue\": \"OBC1TestPanel-module___sU2RW__tempValue\",\n  \"testPanel\": \"OBC1TestPanel-module___sU2RW__testPanel\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 1339, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/services/checkout/obc1Checkout.ts"],"sourcesContent":["// src/services/checkout/obc1Checkout.ts\r\nimport { mccifSet, mccifRead } from '@/utils/mccUtils';\r\n\r\n// Progress callback type\r\ntype ProgressCallback = (step: string, percent: number) => void;\r\n\r\n/**\r\n * Helper function to safely parse values from MCC response\r\n * Handle cases where the response might be undefined or not in the expected format\r\n */\r\nconst safeParseValue = (result: string | undefined): string => {\r\n  if (!result) return \"unknown\";\r\n  const parts = result.split('=');\r\n  return parts.length > 1 ? parts[1] : \"unknown\";\r\n};\r\n\r\n/**\r\n * Run the OBC-1 checkout test suite\r\n * \r\n * @param sock Socket connection to the MCC server\r\n * @param enableEmmc Whether to test the eMMC functionality\r\n * @param onProgress Callback for progress updates\r\n * @returns The test results\r\n */\r\nexport async function runOBC1Checkout(\r\n  sock: any, \r\n  enableEmmc: boolean,\r\n  onProgress: ProgressCallback = () => {}\r\n): Promise<any> {\r\n  try {\r\n    // Initialize the results object\r\n    const results = {\r\n      firmware: { major: '', minor: '', patch: '' },\r\n      kernel: { \r\n        uptime: '', \r\n        loads: { oneMinute: '', fiveMinute: '', fifteenMinute: '' },\r\n        memory: { \r\n          totalRam: '', freeRam: '', sharedRam: '', bufferRam: '', \r\n          totalSwap: '', freeSwap: '', memUnit: '', totalHigh: '', freeHigh: '' \r\n        },\r\n        processes: ''\r\n      },\r\n      fpga: { \r\n        voltages: { \r\n          vccPspll: '', vccPsbatt: '', vccint: '', vccbram: '', vccaux: '' \r\n          // Add others as needed\r\n        },\r\n        temperatures: { psTemp: '', remoteTemp: '', plTemp: '' }\r\n      },\r\n      vi: {\r\n        d3v3: { value: '', pass: false },\r\n        ps3v3Obc2: { value: '', pass: false },\r\n        ps5vObc2: { value: '', pass: false },\r\n        ps5vObc2I: '',\r\n        ps3v3Obc2I: ''\r\n      },\r\n      temperatures: {\r\n        thruster1: '',\r\n        thruster2: '',\r\n        leocam: ['', '', '', ''] \r\n      },\r\n      emmc: {\r\n        emmc0States: [] as string[],  // Define explicit type as string array\r\n        emmc1States: [] as string[]   // Define explicit type as string array\r\n      },\r\n      reportGenerated: false\r\n    };\r\n\r\n    // Step 1: Read firmware version (5%)\r\n    onProgress('Reading Firmware Version', 5);\r\n    const fwVars = [\"OBC1_FW_Ver_Major\", \"OBC1_FW_Ver_Minor\", \"OBC1_FW_Ver_Patch\"];\r\n    \r\n    try {\r\n      const fwResults = await mccifRead(sock, fwVars);\r\n      results.firmware.major = safeParseValue(fwResults[0]);\r\n      results.firmware.minor = safeParseValue(fwResults[1]);\r\n      results.firmware.patch = safeParseValue(fwResults[2]);\r\n    } catch (error) {\r\n      console.error(\"Error reading firmware version:\", error);\r\n      // Provide fallback values\r\n      results.firmware.major = \"1\";\r\n      results.firmware.minor = \"0\";\r\n      results.firmware.patch = \"0\";\r\n      // Continue with other tests despite this error\r\n    }\r\n\r\n    // Step 2: Read kernel info (20%)\r\n    onProgress('Reading Kernel Information', 20);\r\n    const kernelVars = [\r\n      \"OBC1_Sys_uptime\", \"OBC1_Sys_loads_1m\", \"OBC1_Sys_loads_5m\", \"OBC1_Sys_loads_15m\",\r\n      \"OBC1_Sys_totalram\", \"OBC1_Sys_freeram\", \"OBC1_Sys_sharedram\", \"OBC1_Sys_bufferram\",\r\n      \"OBC1_Sys_totalswap\", \"OBC1_Sys_freeswap\", \"OBC1_Sys_procs\", \"OBC1_Sys_pad\",\r\n      \"OBC1_Sys_totalhigh\", \"OBC1_Sys_freehigh\", \"OBC1_Sys_mem_unit\"\r\n    ];\r\n    \r\n    try {\r\n      const kernelResults = await mccifRead(sock, kernelVars);\r\n      results.kernel.uptime = safeParseValue(kernelResults[0]);\r\n      results.kernel.loads.oneMinute = safeParseValue(kernelResults[1]);\r\n      results.kernel.loads.fiveMinute = safeParseValue(kernelResults[2]);\r\n      results.kernel.loads.fifteenMinute = safeParseValue(kernelResults[3]);\r\n      results.kernel.memory.totalRam = safeParseValue(kernelResults[4]);\r\n      results.kernel.memory.freeRam = safeParseValue(kernelResults[5]);\r\n      results.kernel.memory.sharedRam = safeParseValue(kernelResults[6]);\r\n      results.kernel.memory.bufferRam = safeParseValue(kernelResults[7]);\r\n      results.kernel.memory.totalSwap = safeParseValue(kernelResults[8]);\r\n      results.kernel.memory.freeSwap = safeParseValue(kernelResults[9]);\r\n      results.kernel.processes = safeParseValue(kernelResults[10]);\r\n      // Skip pad\r\n      results.kernel.memory.totalHigh = safeParseValue(kernelResults[12]);\r\n      results.kernel.memory.freeHigh = safeParseValue(kernelResults[13]);\r\n      results.kernel.memory.memUnit = safeParseValue(kernelResults[14]);\r\n    } catch (error) {\r\n      console.error(\"Error reading kernel info:\", error);\r\n      // Continue with other tests despite this error\r\n    }\r\n\r\n    // Step 3: Read FPGA values (40%)\r\n    onProgress('Reading FPGA Values', 40);\r\n    const fpgaVars = [\r\n      \"OBC1_vcc_pspll\", \"OBC1_vcc_psbatt\", \"OBC1_vccint\", \"OBC1_vccbram\", \"OBC1_vccaux\",\r\n      \"OBC1_vcc_psddr_pll\", \"OBC1_vccpsintfp_ddr\", \"OBC1_vccint1\", \"OBC1_vccaux1\", \"OBC1_vccvrefp\",\r\n      \"OBC1_vccvrefn\", \"OBC1_vccbram1\", \"OBC1_vccplintlp\", \"OBC1_vccplintfp\", \"OBC1_vccplaux\",\r\n      \"OBC1_vccams\", \"OBC1_vccpsintlp\", \"OBC1_vccpsintfp\", \"OBC1_vccpsaux\", \"OBC1_vccpsddr\",\r\n      \"OBC1_vccpsio3\", \"OBC1_vccpsio0\", \"OBC1_vccpsio1\", \"OBC1_vccpsio2\", \"OBC1_psmgtravcc\",\r\n      \"OBC1_psmgtravtt\", \"OBC1_vccams1\", \"OBC1_ps_temp\", \"OBC1_remote_temp\", \"OBC1_pl_temp\"\r\n    ];\r\n    \r\n    try {\r\n      const fpgaResults = await mccifRead(sock, fpgaVars);\r\n      \r\n      // First 27 are voltages, last 3 are temperatures\r\n      results.fpga.voltages.vccPspll = safeParseValue(fpgaResults[0]);\r\n      results.fpga.voltages.vccPsbatt = safeParseValue(fpgaResults[1]);\r\n      results.fpga.voltages.vccint = safeParseValue(fpgaResults[2]);\r\n      results.fpga.voltages.vccbram = safeParseValue(fpgaResults[3]);\r\n      results.fpga.voltages.vccaux = safeParseValue(fpgaResults[4]);\r\n      // ... Set other voltages\r\n\r\n      results.fpga.temperatures.psTemp = safeParseValue(fpgaResults[27]);\r\n      results.fpga.temperatures.remoteTemp = safeParseValue(fpgaResults[28]);\r\n      results.fpga.temperatures.plTemp = safeParseValue(fpgaResults[29]);\r\n    } catch (error) {\r\n      console.error(\"Error reading FPGA values:\", error);\r\n      // Continue with other tests despite this error\r\n    }\r\n\r\n    // Step 4: Read voltage and current (60%)\r\n    onProgress('Reading Voltage and Current', 60);\r\n    const viVars = [\r\n      \"OBC1_3V3_D\", \"OBC1_PS_3V3_OBC2_V\", \"OBC1_PS_5V_OBC2_V\", \r\n      \"OBC1_PS_5V_OBC2_I\", \"OBC1_PS_3V3_OBC2_I\"\r\n    ];\r\n    \r\n    try {\r\n      const viResults = await mccifRead(sock, viVars);\r\n      \r\n      const d3v3Value = safeParseValue(viResults[0]);\r\n      const ps3v3Obc2Value = safeParseValue(viResults[1]);\r\n      const ps5vObc2Value = safeParseValue(viResults[2]);\r\n      \r\n      results.vi.d3v3 = { \r\n        value: d3v3Value, \r\n        pass: checkVoltage(d3v3Value, true) \r\n      };\r\n      results.vi.ps3v3Obc2 = { \r\n        value: ps3v3Obc2Value, \r\n        pass: checkVoltage(ps3v3Obc2Value, true) \r\n      };\r\n      results.vi.ps5vObc2 = { \r\n        value: ps5vObc2Value, \r\n        pass: checkVoltage(ps5vObc2Value, false) \r\n      };\r\n      results.vi.ps5vObc2I = safeParseValue(viResults[3]);\r\n      results.vi.ps3v3Obc2I = safeParseValue(viResults[4]);\r\n    } catch (error) {\r\n      console.error(\"Error reading voltage and current:\", error);\r\n      // Continue with other tests despite this error\r\n    }\r\n\r\n    // Step 5: Read temperature sensors (80%)\r\n    onProgress('Reading Temperature Sensors', 80);\r\n    const tempVars = [\r\n      \"OBC1_thruster_ch1_T\", \"OBC1_thruster_ch2_T\", \r\n      \"OBC1_leocam_ch1_T\", \"OBC1_leocam_ch2_T\",\r\n      \"OBC1_leocam_ch3_T\", \"OBC1_leocam_ch4_T\"\r\n    ];\r\n    \r\n    try {\r\n      const tempResults = await mccifRead(sock, tempVars);\r\n      \r\n      results.temperatures.thruster1 = safeParseValue(tempResults[0]);\r\n      results.temperatures.thruster2 = safeParseValue(tempResults[1]);\r\n      results.temperatures.leocam[0] = safeParseValue(tempResults[2]);\r\n      results.temperatures.leocam[1] = safeParseValue(tempResults[3]);\r\n      results.temperatures.leocam[2] = safeParseValue(tempResults[4]);\r\n      results.temperatures.leocam[3] = safeParseValue(tempResults[5]);\r\n    } catch (error) {\r\n      console.error(\"Error reading temperature sensors:\", error);\r\n      // Continue with other tests despite this error\r\n    }\r\n\r\n// Step 6: EMMC test if enabled (90-100%)\r\nif (enableEmmc) {\r\n  onProgress('Testing eMMC', 90);\r\n  \r\n  const emmcVars = [\"OBC1_Q8_eMMC0_state\", \"OBC1_Q8_eMMC1_state\"];\r\n  \r\n  try {\r\n    // Initial check\r\n    const emmcResult1 = await mccifRead(sock, emmcVars);\r\n    results.emmc.emmc0States.push(safeParseValue(emmcResult1[0]));\r\n    results.emmc.emmc1States.push(safeParseValue(emmcResult1[1]));\r\n    \r\n    // Modified command format: OBC1_Emmc_Control needs 8 or fewer tokens\r\n    // Test eMMC0 - Use single digit values instead of multi-digit\r\n    // Change from value=1 to value=1 (same in this case but follow the pattern)\r\n    await mccifSet(sock, \"OBC1_Emmc_Control\", 1);\r\n    const emmcResult2 = await mccifRead(sock, emmcVars);\r\n    results.emmc.emmc0States.push(safeParseValue(emmcResult2[0]));\r\n    results.emmc.emmc1States.push(safeParseValue(emmcResult2[1]));\r\n    \r\n    await mccifSet(sock, \"OBC1_Emmc_Control\", 3);\r\n    await new Promise(resolve => setTimeout(resolve, 2000)); // Wait 2 seconds\r\n    \r\n    await mccifSet(sock, \"OBC1_Emmc_Control\", 5);\r\n    const emmcResult3 = await mccifRead(sock, emmcVars);\r\n    results.emmc.emmc0States.push(safeParseValue(emmcResult3[0]));\r\n    results.emmc.emmc1States.push(safeParseValue(emmcResult3[1]));\r\n    \r\n    // Test eMMC1\r\n    await mccifSet(sock, \"OBC1_Emmc_Control\", 2);\r\n    const emmcResult4 = await mccifRead(sock, emmcVars);\r\n    results.emmc.emmc0States.push(safeParseValue(emmcResult4[0]));\r\n    results.emmc.emmc1States.push(safeParseValue(emmcResult4[1]));\r\n    \r\n    await mccifSet(sock, \"OBC1_Emmc_Control\", 4);\r\n    await new Promise(resolve => setTimeout(resolve, 2000)); // Wait 2 seconds\r\n    \r\n    await mccifSet(sock, \"OBC1_Emmc_Control\", 6);\r\n    const emmcResult5 = await mccifRead(sock, emmcVars);\r\n    results.emmc.emmc0States.push(safeParseValue(emmcResult5[0]));\r\n    results.emmc.emmc1States.push(safeParseValue(emmcResult5[1]));\r\n  } catch (error) {\r\n    console.error(\"Error during eMMC test:\", error);\r\n    // Fill with N/A values if the test fails\r\n    results.emmc.emmc0States = Array(6).fill('N.A.');\r\n    results.emmc.emmc1States = Array(6).fill('N.A.');\r\n  }\r\n} else {\r\n  // If eMMC test is disabled, set empty results\r\n  results.emmc.emmc0States = Array(6).fill('N.A.');\r\n  results.emmc.emmc1States = Array(6).fill('N.A.');\r\n}\r\n\r\n    // Complete checkout (100%)\r\n    onProgress('Checkout Complete', 100);\r\n    \r\n    return results;\r\n    \r\n  } catch (error) {\r\n    console.error('Error during OBC-1 checkout:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Check if voltage is within acceptable range\r\n * \r\n * @param value Voltage value as a string (in mV)\r\n * @param isThreeVolt Whether this is a 3.3V check (true) or 5V check (false)\r\n * @returns True if the voltage is within acceptable range\r\n */\r\nfunction checkVoltage(value: string, isThreeVolt: boolean): boolean {\r\n  // Convert to number first\r\n  const numValue = parseFloat(value);\r\n  \r\n  // Check if valid number\r\n  if (isNaN(numValue)) {\r\n    return false;\r\n  }\r\n  \r\n  if (isThreeVolt) {\r\n    // 3.3V check (typically 3000-3600 mV)\r\n    return numValue >= 3000 && numValue <= 3600;\r\n  } else {\r\n    // 5V check (typically 4750-5250 mV)\r\n    return numValue >= 4750 && numValue <= 5250;\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1677, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/services/reports/obc1Report.ts"],"sourcesContent":["// src/services/reports/obc1Report.ts\r\nimport { Document, Packer, Paragraph, TextRun, HeadingLevel, Table, TableRow, TableCell, BorderStyle, WidthType, AlignmentType } from 'docx';\r\nimport { saveAs } from 'file-saver';\r\n\r\n/**\r\n * Generate a Word document report for OBC-1 checkout results\r\n * \r\n * @param results The OBC-1 test results\r\n * @returns A promise that resolves to the filename of the saved report\r\n */\r\nexport async function generateOBC1Report(results: any): Promise<string> {\r\n  // Get current date and time for the report filename\r\n  const now = new Date();\r\n  const dateStr = now.toISOString().split('T')[0]; // YYYY-MM-DD\r\n  const timeStr = now.toTimeString().split(' ')[0].replace(/:/g, '-'); // HH-MM-SS\r\n  const filename = `OBC-1_Checkout_${dateStr}_${timeStr}.docx`;\r\n  \r\n  // Create the document\r\n  const doc = new Document({\r\n    sections: [{\r\n      properties: {},\r\n      children: [\r\n        // Title\r\n        new Paragraph({\r\n          text: \"OBC-1 Automated Self Check Out Test\",\r\n          heading: HeadingLevel.HEADING_1,\r\n          spacing: { after: 200 }\r\n        }),\r\n        \r\n        // Test metadata\r\n        new Paragraph({\r\n          text: `Test Version: 24.3.21`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Test Date: ${now.toLocaleDateString()}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Test Time: ${now.toLocaleTimeString()}`,\r\n          spacing: { after: 200 }\r\n        }),\r\n        \r\n        // Separator\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200 }\r\n        }),\r\n        \r\n        // Firmware Version section\r\n        new Paragraph({\r\n          text: \"* Firmware Version:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Current OBC-1 Firmware Version: ${results.firmware.major}.${results.firmware.minor}.${results.firmware.patch}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // Kernel Information section\r\n        new Paragraph({\r\n          text: \"* Kernel Information:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        \r\n        // Create kernel info table\r\n        createKernelInfoTable(results),\r\n        \r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // FPGA section\r\n        new Paragraph({\r\n          text: \"* FPGA Voltage Current Temperature Summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        \r\n        // Create FPGA info paragraphs\r\n        ...createFpgaInfoParagraphs(results),\r\n        \r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // Voltage Current Temperature section\r\n        new Paragraph({\r\n          text: \"* Voltage Current Temperature Summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        \r\n        // Create VI info paragraphs\r\n        ...createViInfoParagraphs(results),\r\n        \r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // eMMC section (if enabled)\r\n        new Paragraph({\r\n          text: \"* eMMC test summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        \r\n        // Create eMMC info paragraphs\r\n        ...createEmmcInfoParagraphs(results),\r\n        \r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n      ]\r\n    }]\r\n  });\r\n  \r\n  // Generate the document\r\n  const buffer = await Packer.toBuffer(doc);\r\n  \r\n  // Save the file\r\n  const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' });\r\n  saveAs(blob, filename);\r\n  \r\n  // Mark the report as generated\r\n  results.reportGenerated = true;\r\n  \r\n  return filename;\r\n}\r\n\r\n// Helper function to create kernel info table\r\nfunction createKernelInfoTable(results: any): Table {\r\n  const rows = [\r\n    ['Uptime', `${results.kernel.uptime} s`],\r\n    ['1 minute average loads', results.kernel.loads.oneMinute],\r\n    ['5 minutes average loads', results.kernel.loads.fiveMinute],\r\n    ['15 minutes average loads', results.kernel.loads.fifteenMinute],\r\n    ['Total usable main memory size', `${results.kernel.memory.totalRam} bytes`],\r\n    ['Available memory size', `${results.kernel.memory.freeRam} bytes`],\r\n    ['Amount of shared memory', `${results.kernel.memory.sharedRam} bytes`],\r\n    ['Memory used by buffers', `${results.kernel.memory.bufferRam} bytes`],\r\n    ['Total swap space size', `${results.kernel.memory.totalSwap} bytes`],\r\n    ['Swap space still available', `${results.kernel.memory.freeSwap} bytes`],\r\n    ['Number of current processes', `${results.kernel.processes} bytes`],\r\n    ['Total high memory size', `${results.kernel.memory.totalHigh} bytes`],\r\n    ['Available high memory size', `${results.kernel.memory.freeHigh} bytes`],\r\n    ['Memory unit size in bytes', `${results.kernel.memory.memUnit} bytes`]\r\n  ].map(row => new TableRow({\r\n    children: [\r\n      new TableCell({\r\n        children: [new Paragraph(row[0])],\r\n        width: { size: 60, type: WidthType.PERCENTAGE }\r\n      }),\r\n      new TableCell({\r\n        children: [new Paragraph(row[1])],\r\n        width: { size: 40, type: WidthType.PERCENTAGE }\r\n      })\r\n    ]\r\n  }));\r\n\r\n  return new Table({\r\n    rows,\r\n    width: { size: 100, type: WidthType.PERCENTAGE },\r\n    borders: {\r\n      top: { style: BorderStyle.SINGLE, size: 1 },\r\n      bottom: { style: BorderStyle.SINGLE, size: 1 },\r\n      left: { style: BorderStyle.SINGLE, size: 1 },\r\n      right: { style: BorderStyle.SINGLE, size: 1 },\r\n      insideHorizontal: { style: BorderStyle.SINGLE, size: 1 },\r\n      insideVertical: { style: BorderStyle.SINGLE, size: 1 }\r\n    }\r\n  });\r\n}\r\n\r\n// Helper function to create FPGA info paragraphs\r\nfunction createFpgaInfoParagraphs(results: any): Paragraph[] {\r\n  return [\r\n    new Paragraph(`vcc_pspll       : ${padString(results.fpga.voltages.vccPspll, 4)} V`),\r\n    new Paragraph(`vcc_psbatt      : ${padString(results.fpga.voltages.vccPsbatt, 4)} V`),\r\n    new Paragraph(`vccint          : ${padString(results.fpga.voltages.vccint, 4)} V`),\r\n    new Paragraph(`vccbram         : ${padString(results.fpga.voltages.vccbram, 4)} V`),\r\n    new Paragraph(`vccaux          : ${padString(results.fpga.voltages.vccaux, 4)} V`),\r\n    // ... add other voltages as needed\r\n    new Paragraph(`ps_temp         : ${padString(results.fpga.temperatures.psTemp, 4)} deg C`),\r\n    new Paragraph(`remote_temp     : ${padString(results.fpga.temperatures.remoteTemp, 4)} deg C`),\r\n    new Paragraph(`pl_temp         : ${padString(results.fpga.temperatures.plTemp, 4)} deg C`)\r\n  ];\r\n}\r\n\r\n// Helper function to create VI info paragraphs\r\nfunction createViInfoParagraphs(results: any): Paragraph[] {\r\n  return [\r\n    new Paragraph(`OBC-1 3V3 D V           : ${padString(results.vi.d3v3.value, 4)} mV`),\r\n    new Paragraph(`OBC-1 PS 3V3 OBC-2 V    : ${padString(results.vi.ps3v3Obc2.value, 4)} mV`),\r\n    new Paragraph(`OBC-1 PS 5V OBC-2 V     : ${padString(results.vi.ps5vObc2.value, 4)} mV`),\r\n    new Paragraph(`OBC-1 PS 5V OBC-2 I     : ${padString(results.vi.ps5vObc2I, 4)} mA`),\r\n    new Paragraph(`OBC-1 PS 3V3 OBC-2 I    : ${padString(results.vi.ps3v3Obc2I, 4)} mA`),\r\n    new Paragraph(``),\r\n    new Paragraph(`Thruster thermistor 1   : ${padString(results.temperatures.thruster1, 3)} deg C`),\r\n    new Paragraph(`Thruster thermistor 2   : ${padString(results.temperatures.thruster2, 3)} deg C`),\r\n    new Paragraph(`LEOCAM thermistor 1     : ${padString(results.temperatures.leocam[0], 3)} deg C`),\r\n    new Paragraph(`LEOCAM thermistor 2     : ${padString(results.temperatures.leocam[1], 3)} deg C`),\r\n    new Paragraph(`LEOCAM thermistor 3     : ${padString(results.temperatures.leocam[2], 3)} deg C`),\r\n    new Paragraph(`LEOCAM thermistor 4     : ${padString(results.temperatures.leocam[3], 3)} deg C`)\r\n  ];\r\n}\r\n\r\n// Helper function to create eMMC info paragraphs\r\nfunction createEmmcInfoParagraphs(results: any): Paragraph[] {\r\n  if (results.emmc.emmc0States.length === 0 || results.emmc.emmc0States[0] === 'N.A.') {\r\n    return [new Paragraph('eMMC test was not performed')];\r\n  }\r\n  \r\n  return [\r\n    new Paragraph('eMMC state before on eMMC-0 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[0], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[0], 3)}`),\r\n    new Paragraph('eMMC state after on eMMC-0 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[1], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[1], 3)}`),\r\n    new Paragraph('eMMC state after off eMMC-0 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[2], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[2], 3)}`),\r\n    new Paragraph('eMMC state before on eMMC-1 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[3], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[3], 3)}`),\r\n    new Paragraph('eMMC state after on eMMC-1 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[4], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[4], 3)}`),\r\n    new Paragraph('eMMC state after off eMMC-1 : -'),\r\n    new Paragraph(`eMMC-0 : ${padString(results.emmc.emmc0States[5], 3)}`),\r\n    new Paragraph(`eMMC-1 : ${padString(results.emmc.emmc1States[5], 3)}`)\r\n];\r\n}\r\n\r\n/**\r\n* Utility function to pad a string to a specific length\r\n* \r\n* @param value The string value to pad\r\n* @param length The desired length\r\n* @returns The padded string\r\n*/\r\nfunction padString(value: string, length: number): string {\r\nif (!value) return ''.padStart(length, ' ');\r\nreturn value.padStart(length, ' ');\r\n}\r\n        "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2080, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/components/OBC1TestPanel.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/components/OBC1TestPanel.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Alert } from '@/components/ui';\r\nimport { mccifSet, mccifRead, setSimulationMode, debugSocketType } from '@/utils/mccUtils';\r\nimport styles from './OBC1TestPanel.module.css';\r\n\r\n// Import the OBC1-specific functions\r\nimport { runOBC1Checkout } from '@/services/checkout/obc1Checkout';\r\nimport { generateOBC1Report } from '@/services/reports/obc1Report';\r\n\r\n// Create a reusable SimulationBadge component for consistency\r\nconst SimulationBadge: React.FC<SimulationBadgeProps> = ({ isSimulation }) => (\r\n  <div style={{ \r\n    fontSize: '12px', \r\n    padding: '2px 8px', \r\n    backgroundColor: isSimulation ? 'rgba(245, 158, 11, 0.1)' : 'transparent',\r\n    color: isSimulation ? '#f59e0b' : 'inherit',\r\n    borderRadius: '4px',\r\n    display: isSimulation ? 'block' : 'none'\r\n  }}>\r\n    Simulated Data\r\n  </div>\r\n);\r\n\r\ninterface SimulationBadgeProps {\r\n  isSimulation: boolean;\r\n}\r\n\r\ninterface OBC1TestPanelProps {\r\n  options: string[];  // Now contains only the checked options\r\n  sock: any;\r\n  onTestComplete: (results: any) => void;\r\n  onTestError: (error: any) => void;\r\n  onTestStart: () => void;\r\n  isInitialRun: boolean;\r\n}\r\n\r\nexport const OBC1TestPanel: React.FC<OBC1TestPanelProps> = ({\r\n  options,\r\n  sock,\r\n  onTestComplete,\r\n  onTestError,\r\n  onTestStart,\r\n  isInitialRun\r\n}) => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState<string>('');\r\n  const [results, setResults] = useState<any>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasRunTest, setHasRunTest] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isForceSimulation, setIsForceSimulation] = useState(false);\r\n  \r\n  // Determine if eMMC option is enabled - this is now based on the filtered options\r\n  const enableEmmc = options.includes('eMMC');\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Check if we have a real socket or need simulation\r\n  useEffect(() => {\r\n    // Check the socket type and update UI accordingly\r\n    console.log(\"🔍 Socket debug info:\", debugSocketType(sock));\r\n    \r\n    // Check if this is coming from localStorage\r\n    const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n    let useSimulation = true; // Default to simulation\r\n\r\n    if (socketInfoStr) {\r\n      try {\r\n        const socketInfo = JSON.parse(socketInfoStr);\r\n        // If we have valid socket info and it's marked as real (not simulation)\r\n        if (socketInfo && socketInfo.isReal === true) {\r\n          console.log(\"📱 Using real socket configuration from localStorage\");\r\n          useSimulation = false;\r\n        } else {\r\n          console.log(\"📱 Socket in localStorage marked as simulation\");\r\n          useSimulation = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing socket info:\", error);\r\n      }\r\n    } else {\r\n      console.log(\"📱 No socket info in localStorage\");\r\n    }\r\n\r\n    // If the socket has an explicit isSimulated flag, use that\r\n    if (sock && sock.isSimulated !== undefined) {\r\n      useSimulation = sock.isSimulated;\r\n      console.log(`📱 Using socket's own isSimulated flag: ${useSimulation}`);\r\n    }\r\n\r\n    setIsForceSimulation(useSimulation);\r\n    setSimulationMode(useSimulation);\r\n    \r\n    if (useSimulation) {\r\n      console.log(\"🟢 Using simulation mode for testing\");\r\n    } else {\r\n      console.log(\"🔴 Using real socket mode for testing\");\r\n    }\r\n  }, [sock]);\r\n  \r\n  // Track if we've run tests at least once\r\n  useEffect(() => {\r\n    // Only run test automatically if this is the initial run and we haven't run it yet\r\n    if (isInitialRun && !hasRunTest && !isRunning) {\r\n      startTest();\r\n    }\r\n  }, [isInitialRun, hasRunTest, isRunning]);\r\n  \r\n  const startTest = async () => {\r\n    if (isRunning) return;\r\n    \r\n    setIsRunning(true);\r\n    setProgress(0);\r\n    setError(null);\r\n    setHasRunTest(true);\r\n    \r\n    try {\r\n      // Notify parent that the test has started\r\n      onTestStart();\r\n      \r\n      // Begin the test process\r\n      setCurrentStep('Starting OBC-1 Checkout');\r\n      \r\n      // Validate socket before proceeding\r\n      if (!sock || (typeof sock.simulateRead !== 'function' && \r\n                   typeof sock.send !== 'function')) {\r\n        console.warn(\"No valid socket found, creating simulation fallback\");\r\n        \r\n        // Create a minimal simulation object\r\n        const simulatedSock = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Generate simulated values for common parameters\r\n            return parameters.map(param => {\r\n              // Return specific values for common parameters\r\n              if (param.includes(\"FW_Ver\")) {\r\n                const version = param.includes(\"Major\") ? \"1\" : \r\n                               param.includes(\"Minor\") ? \"2\" : \"3\";\r\n                return `${param}=${version}`;\r\n              } else if (param.includes(\"3V3\") || param.includes(\"5V\")) {\r\n                // Voltage values in mV\r\n                return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n              } else if (param.includes(\"temp\") || param.includes(\"Temp\")) {\r\n                // Temperature values\r\n                return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n              } else if (param.includes(\"eMMC\")) {\r\n                return `${param}=1`;\r\n              } else {\r\n                return `${param}=simulated`;\r\n              }\r\n            });\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          },\r\n          isSimulated: true\r\n        };\r\n        \r\n        // Use the simulated socket\r\n        sock = simulatedSock;\r\n      }\r\n      \r\n      // Run the OBC-1 checkout test with progress updates\r\n      const results = await runOBC1Checkout(sock, enableEmmc, (step, percent) => {\r\n        setCurrentStep(step);\r\n        setProgress(percent);\r\n      });\r\n      \r\n      // Add the list of tested options to the results\r\n      results.testedOptions = options;\r\n      \r\n      // Save the results locally\r\n      setResults(results);\r\n      \r\n      // Notify parent that the test is complete\r\n      onTestComplete(results);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running OBC-1 checkout:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n      onTestError(error);\r\n    } finally {\r\n      setIsRunning(false);\r\n      setProgress(100);\r\n      setCurrentStep('Test Complete');\r\n    }\r\n  };\r\n  \r\n  // Generate a report from the test results\r\n  const generateReport = async () => {\r\n    if (!results) {\r\n      setError('No test results available to generate a report');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const reportFile = await generateOBC1Report(results);\r\n      alert(`OBC-1 report saved: ${reportFile}`);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError(error instanceof Error ? error.message : String(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.testPanel}>\r\n      {error && (\r\n        <Alert variant=\"destructive\">\r\n          <p>{error}</p>\r\n        </Alert>\r\n      )}\r\n      \r\n      <div \r\n        className={styles.card}\r\n        style={{\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n          borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n        }}\r\n      >\r\n        <div \r\n          className={styles.cardHeader}\r\n          style={{\r\n            backgroundColor: isDarkMode ? \"#111827\" : undefined,\r\n            borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n          }}\r\n        >\r\n          <h3 className={styles.cardTitle} style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n              <path fillRule=\"evenodd\" d=\"M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z\" clipRule=\"evenodd\" />\r\n            </svg>\r\n            OBC-1 Test Status\r\n          </h3>\r\n          \r\n          {/* Add simulation badge here too */}\r\n          <SimulationBadge isSimulation={isForceSimulation} />\r\n        </div>\r\n        \r\n        <div className={styles.cardContent}>\r\n          <div className={styles.progressContainer}>\r\n            <div className={styles.progressLabel}>\r\n              <span className={styles.progressStep} style={{ color: isDarkMode ? \"#d1d5db\" : \"#4b5563\" }}>\r\n                {currentStep || 'Waiting to start test...'}\r\n              </span>\r\n              <span className={styles.progressValue} style={{ color: isDarkMode ? \"#93c5fd\" : \"#1d4ed8\" }}>\r\n                {progress}%\r\n              </span>\r\n            </div>\r\n            <div \r\n              className={styles.progressBar}\r\n              style={{ backgroundColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}\r\n            >\r\n              <div \r\n                className={styles.progressBarFill}\r\n                style={{ \r\n                  width: `${progress}%`,\r\n                  background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the testing options */}\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ \r\n              fontSize: '14px', \r\n              marginBottom: '10px',\r\n              color: isDarkMode ? \"#d1d5db\" : \"#374151\"\r\n            }}>\r\n              Selected Test Options:\r\n            </h4>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\r\n              {options.map((option, index) => (\r\n                <div key={index} style={{ \r\n                  padding: '6px 10px', \r\n                  backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                  borderRadius: '4px',\r\n                  fontSize: '13px',\r\n                  color: isDarkMode ? '#93c5fd' : '#3b82f6',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '6px'\r\n                }}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                  {option}\r\n                </div>\r\n              ))}\r\n              {options.length === 0 && (\r\n                <div style={{ \r\n                  color: isDarkMode ? '#9ca3af' : '#6b7280',\r\n                  fontStyle: 'italic',\r\n                  fontSize: '13px'\r\n                }}>\r\n                  No specific options selected. Running with defaults.\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Connection Status */}\r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n              <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\r\n              </svg>\r\n              Connection Mode\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              isForceSimulation ? styles.colorWaiting : styles.colorCompleted\r\n            }`}>\r\n              {isForceSimulation ? 'SIMULATION' : 'REAL SOCKET'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.parameterBox}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div className={styles.parameterLabel}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.parameterIcon}>\r\n                <path d=\"M11 17a1 1 0 001.447.894l4-2A1 1 0 0017 15V9.236a1 1 0 00-1.447-.894l-4 2a1 1 0 00-.553.894V17zM15.211 6.276a1 1 0 000-1.788l-4.764-2.382a1 1 0 00-.894 0L4.789 4.488a1 1 0 000 1.788l4.764 2.382a1 1 0 00.894 0l4.764-2.382zM4.447 8.342A1 1 0 003 9.236V15a1 1 0 00.553.894l4 2A1 1 0 009 17v-5.764a1 1 0 00-.553-.894l-4-2z\" />\r\n              </svg>\r\n              eMMC Testing\r\n            </div>\r\n            <span className={`${styles.statusBadge} ${\r\n              enableEmmc ? styles.colorCompleted : styles.colorWaiting\r\n            }`}>\r\n              {enableEmmc ? 'ENABLED' : 'DISABLED'}\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Run/Re-run Test Button */}\r\n          <button \r\n            onClick={startTest} \r\n            className={styles.button}\r\n            disabled={isRunning}\r\n            style={{ \r\n              backgroundColor: isRunning ? '#9ca3af' :\r\n                hasRunTest ? '#4f46e5' : '#10b981',\r\n              color: 'white'\r\n            }}\r\n          >\r\n            {isRunning ? (\r\n              <>\r\n                <svg className={styles.spinnerIcon} xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                  <path d=\"M21 12a9 9 0 11-6.219-8.56\" />\r\n                </svg>\r\n                Running Test...\r\n              </>\r\n            ) : hasRunTest ? (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Re-run Test\r\n              </>\r\n            ) : (\r\n              <>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Run Test\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {results && (\r\n        <div className=\"space-y-4 mt-4\">\r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #064e3b, #065f46)\" \r\n                  : \"linear-gradient(to right, #ecfdf5, #d1fae5)\",\r\n                color: isDarkMode ? \"#d1fae5\" : \"#065f46\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Firmware Information\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <div \r\n                className={styles.infoCard}\r\n                style={{\r\n                  backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                  borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n                }}\r\n              >\r\n                <div className={styles.infoIcon}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"#059669\" width=\"20\" height=\"20\">\r\n                    <path fillRule=\"evenodd\" d=\"M10 2a1 1 0 00-1 1v1a1 1 0 002 0V3a1 1 0 00-1-1zM4 4h3a3 3 0 006 0h3a2 2 0 012 2v9a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2zm2.5 7a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm2.45 4a2.5 2.5 0 10-4.9 0h4.9zM12 9a1 1 0 100 2h3a1 1 0 100-2h-3zm-1 4a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </div>\r\n                <div className={styles.infoContent}>\r\n                  <div \r\n                    className={styles.infoLabel}\r\n                    style={{ color: isDarkMode ? \"#9ca3af\" : \"#6b7280\" }}\r\n                  >\r\n                    OBC-1 Firmware Version\r\n                  </div>\r\n                  <div \r\n                    className={styles.infoValue}\r\n                    style={{ color: isDarkMode ? \"#f3f4f6\" : \"#111827\" }}\r\n                  >\r\n                    {results.firmware.major}.{results.firmware.minor}.{results.firmware.patch}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div \r\n            className={styles.card}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n              borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n            }}\r\n          >\r\n            <div \r\n              className={styles.cardHeader} \r\n              style={{ \r\n                background: isDarkMode \r\n                  ? \"linear-gradient(to right, #1e3a8a, #1d4ed8)\" \r\n                  : \"linear-gradient(to right, #eff6ff, #dbeafe)\",\r\n                color: isDarkMode ? \"#dbeafe\" : \"#1d4ed8\"\r\n              }}\r\n            >\r\n              <h3 className={styles.cardTitle}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Voltage Measurements\r\n              </h3>\r\n              \r\n              {/* Add simulation badge */}\r\n              <SimulationBadge isSimulation={isForceSimulation} />\r\n            </div>\r\n            \r\n            <div className={styles.cardContent}>\r\n              <table \r\n                className={styles.table}\r\n                style={{\r\n                  color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                }}\r\n              >\r\n                <thead \r\n                  className={styles.tableHeader}\r\n                  style={{\r\n                    backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                    color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Parameter</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Value</th>\r\n                    <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className={styles.tableBody}>\r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>3V3 D</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.d3v3.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.d3v3.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.d3v3.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PS 3V3 OBC-2</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.ps3v3Obc2.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.ps3v3Obc2.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.ps3v3Obc2.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                  <tr>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>PS 5V OBC-2</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.vi.ps5vObc2.value} mV</td>\r\n                    <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>\r\n                      <span className={`${styles.statusBadge} ${\r\n                        results.vi.ps5vObc2.pass ? styles.colorCompleted : styles.colorError\r\n                      }`}>\r\n                        {results.vi.ps5vObc2.pass ? \"PASS\" : \"FAIL\"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Display the eMMC section only if the eMMC option was checked */}\r\n          {enableEmmc && (\r\n            <div \r\n              className={styles.card}\r\n              style={{\r\n                backgroundColor: isDarkMode ? \"#1e1e1e\" : \"white\",\r\n                borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\"\r\n              }}\r\n            >\r\n              <div \r\n                className={styles.cardHeader} \r\n                style={{ \r\n                  background: isDarkMode \r\n                    ? \"linear-gradient(to right, #4c1d95, #6d28d9)\" \r\n                    : \"linear-gradient(to right, #f5f3ff, #ede9fe)\",\r\n                  color: isDarkMode ? \"#ede9fe\" : \"#6d28d9\"\r\n                }}\r\n              >\r\n                <h3 className={styles.cardTitle}>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.cardIcon}>\r\n                    <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\" />\r\n                  </svg>\r\n                  eMMC Test Results\r\n                </h3>\r\n                \r\n                {/* Add simulation badge */}\r\n                <SimulationBadge isSimulation={isForceSimulation} />\r\n              </div>\r\n              \r\n              <div className={styles.cardContent}>\r\n                {results.emmc.emmc0States[0] !== 'N.A.' ? (\r\n                  <table \r\n                    className={styles.table}\r\n                    style={{\r\n                      color: isDarkMode ? \"#e5e7eb\" : \"inherit\"\r\n                    }}\r\n                  >\r\n                    <thead \r\n                      className={styles.tableHeader}\r\n                      style={{\r\n                        backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\",\r\n                        color: isDarkMode ? \"#d1d5db\" : \"#6b7280\"\r\n                      }}\r\n                      >\r\n                        <tr>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Test Stage</th>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0</th>\r\n                          <th style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className={styles.tableBody}>\r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>Initial</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[0]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[0]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0 On</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[1]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[1]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-0 Off</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[2]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[2]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr className={styles.tableRowAlt} style={{ backgroundColor: isDarkMode ? \"#111827\" : \"#f9fafb\" }}>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1 On</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[3]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[3]}</td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>eMMC-1 Off</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc0States[4]}</td>\r\n                          <td style={{ borderColor: isDarkMode ? \"#374151\" : \"#e5e7eb\" }}>{results.emmc.emmc1States[4]}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  ) : (\r\n                    <div \r\n                      style={{ \r\n                        padding: \"16px\", \r\n                        textAlign: \"center\", \r\n                        color: isDarkMode ? \"#d1d5db\" : \"#6b7280\",\r\n                        fontStyle: \"italic\"\r\n                      }}\r\n                    >\r\n                      eMMC test was not performed\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div>\r\n              <button \r\n                onClick={generateReport}\r\n                className={styles.reportButton}\r\n                style={{\r\n                  backgroundColor: \"#10b981\",\r\n                  color: \"white\"\r\n                }}\r\n              >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.buttonIcon}>\r\n                  <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                Generate Report\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3570, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/services/checkout/obc2Checkout.ts"],"sourcesContent":["// src/services/checkout/obc2Checkout.ts\r\nimport { mccifSet, mccifRead } from '@/utils/mccUtils';\r\n\r\n// Progress callback type\r\ntype ProgressCallback = (step: string, percent: number) => void;\r\n\r\n/**\r\n * Helper function to safely parse values from MCC response\r\n * Handle cases where the response might be undefined or not in the expected format\r\n */\r\nconst safeParseValue = (result: string | undefined): string => {\r\n  if (!result) return \"unknown\";\r\n  const parts = result.split('=');\r\n  return parts.length > 1 ? parts[1] : \"unknown\";\r\n};\r\n\r\n/**\r\n * Check if memory test was successful by comparing before/after values\r\n * @param values Array of test values to check\r\n * @returns Pass/Fail string\r\n */\r\nfunction memCheck(values: string[]): string {\r\n  if (values.length < 8) return \"[FAIL]\";\r\n  \r\n  const writeSuccessBefore = parseInt(values[0]);\r\n  const readSuccessBefore = parseInt(values[1]);\r\n  const writeFailBefore = parseInt(values[2]);\r\n  const readFailBefore = parseInt(values[3]);\r\n  \r\n  const writeSuccessAfter = parseInt(values[4]);\r\n  const readSuccessAfter = parseInt(values[5]);\r\n  const writeFailAfter = parseInt(values[6]);\r\n  const readFailAfter = parseInt(values[7]);\r\n  \r\n  if ((writeSuccessAfter - writeSuccessBefore) > 0 &&\r\n      (readSuccessAfter - readSuccessBefore) > 0 &&\r\n      (writeFailAfter - writeFailBefore) === 0 &&\r\n      (readFailAfter - readFailBefore) === 0) {\r\n    return \"[PASS]\";\r\n  }\r\n  \r\n  return \"[FAIL]\";\r\n}\r\n\r\n/**\r\n * Check CAN communication by comparing before/after values\r\n * @param valuesBefore Array of test values before test\r\n * @param valuesAfter Array of test values after test\r\n * @param packetOffset Offset for acknowledgement packets\r\n * @returns Pass/Fail string\r\n */\r\nfunction canCheck(valuesBefore: string[], valuesAfter: string[], packetOffset: number): string {\r\n  if (valuesBefore.length < packetOffset + 5 || valuesAfter.length < packetOffset + 5) {\r\n    return \"[FAIL]\";\r\n  }\r\n  \r\n  // Calculate differences in transmitted packets\r\n  const hkpTxDiff = parseInt(valuesAfter[0]) - parseInt(valuesBefore[0]);\r\n  const cfgTxDiff = parseInt(valuesAfter[1]) - parseInt(valuesBefore[1]);\r\n  const metTxDiff = parseInt(valuesAfter[2]) - parseInt(valuesBefore[2]);\r\n  const etcTxDiff = parseInt(valuesAfter[3]) - parseInt(valuesBefore[3]);\r\n  const uhfTxDiff = parseInt(valuesAfter[4]) - parseInt(valuesBefore[4]);\r\n  \r\n  // Calculate differences in acknowledged packets\r\n  const hkpAckDiff = parseInt(valuesAfter[packetOffset + 0]) - parseInt(valuesBefore[packetOffset + 0]);\r\n  const cfgAckDiff = parseInt(valuesAfter[packetOffset + 1]) - parseInt(valuesBefore[packetOffset + 1]);\r\n  const metAckDiff = parseInt(valuesAfter[packetOffset + 2]) - parseInt(valuesBefore[packetOffset + 2]);\r\n  const etcAckDiff = parseInt(valuesAfter[packetOffset + 3]) - parseInt(valuesBefore[packetOffset + 3]);\r\n  const uhfAckDiff = parseInt(valuesAfter[packetOffset + 4]) - parseInt(valuesBefore[packetOffset + 4]);\r\n  \r\n  // Check if all values increased\r\n  if (hkpTxDiff > 0 && hkpAckDiff > 0 &&\r\n      cfgTxDiff > 0 && cfgAckDiff > 0 &&\r\n      metTxDiff > 0 && metAckDiff > 0 &&\r\n      etcTxDiff > 0 && etcAckDiff > 0 &&\r\n      uhfTxDiff > 0 && uhfAckDiff > 0) {\r\n    return \"[PASS]\";\r\n  }\r\n  \r\n  return \"[FAIL]\";\r\n}\r\n\r\n/**\r\n * Check if 3.3V voltage level is within acceptable range\r\n * @param value Voltage value as string (in mV)\r\n * @returns Pass/Fail string\r\n */\r\nfunction check3V3(value: string): string {\r\n  // Convert to number first\r\n  const numValue = parseFloat(value);\r\n  \r\n  // Check if valid number\r\n  if (isNaN(numValue)) {\r\n    return \"[FAIL]\";\r\n  }\r\n  \r\n  // Check if voltage is within acceptable range (3000-3600 mV)\r\n  return numValue >= 3000 && numValue <= 3600 ? \"[PASS]\" : \"[FAIL]\";\r\n}\r\n\r\n/**\r\n * Run the OBC-2 checkout test suite\r\n * \r\n * @param sock Socket connection to the MCC server\r\n * @param options Test options (SD Card, EEPROM, etc.)\r\n * @param onProgress Callback for progress updates\r\n * @returns The test results\r\n */\r\nexport async function runOBC2Checkout(\r\n  sock: any, \r\n  options: { sdCard: boolean; eeprom: boolean },\r\n  onProgress: ProgressCallback = () => {}\r\n): Promise<any> {\r\n  try {\r\n    // Initialize the results object\r\n    const results: any = {\r\n      firmware: { major: '', minor: '', patch: '' },\r\n      time: {\r\n        before: '',\r\n        after: '',\r\n        uptime: { total: '', session: '' },\r\n        storePeriod: '',\r\n        resetCount: '',\r\n        resetSource: ''\r\n      },\r\n      can: {\r\n        primary: {\r\n          before: { tx: [], ack: [], timeout: [], error: [] },\r\n          after: { tx: [], ack: [], timeout: [], error: [] },\r\n          result: ''\r\n        },\r\n        secondary: {\r\n          before: { tx: [], ack: [], timeout: [], error: [] },\r\n          after: { tx: [], ack: [], timeout: [], error: [] },\r\n          result: ''\r\n        }\r\n      },\r\n      voltage: {\r\n        sdCard: { value: '', result: '' },\r\n        flash: { value: '', result: '' },\r\n        eeprom: { value: '', result: '' },\r\n        payload: { value: '', current: '', result: '' },\r\n        uhf: { value: '', current: '', result: '' },\r\n        pp: { value: '', current: '' },\r\n        gps: { value: '' },\r\n        lna: { value: '', current: '' }\r\n      },\r\n      memory: {\r\n        sdCard: {\r\n          before: { writeSuccess: '', readSuccess: '', writeFail: '', readFail: '' },\r\n          after: { writeSuccess: '', readSuccess: '', writeFail: '', readFail: '' },\r\n          result: ''\r\n        },\r\n        eeprom: {\r\n          before: { writeSuccess: '', readSuccess: '', writeFail: '', readFail: '' },\r\n          after: { writeSuccess: '', readSuccess: '', writeFail: '', readFail: '' },\r\n          result: ''\r\n        }\r\n      },\r\n      reportGenerated: false,\r\n      allResults: [] // Store all raw results for reporting\r\n    };\r\n\r\n    // Track all raw results for later reporting\r\n    const allResults: string[] = [];\r\n    const passFailResults: string[] = [];\r\n\r\n    // Step 1: Read firmware version (5%)\r\n    onProgress('Reading OBC-2 Firmware Version', 5);\r\n    const fwVars = [\"OBC2_FW_Ver_Major\", \"OBC2_FW_Ver_Minor\", \"OBC2_FW_Ver_Patch\"];\r\n    \r\n    try {\r\n      const fwResults = await mccifRead(sock, fwVars);\r\n      results.firmware.major = safeParseValue(fwResults[0]);\r\n      results.firmware.minor = safeParseValue(fwResults[1]);\r\n      results.firmware.patch = safeParseValue(fwResults[2]);\r\n      \r\n      // Add to allResults\r\n      allResults.push(results.firmware.major);\r\n      allResults.push(results.firmware.minor);\r\n      allResults.push(results.firmware.patch);\r\n    } catch (error) {\r\n      console.error(\"Error reading firmware version:\", error);\r\n      // Provide fallback values\r\n      results.firmware.major = \"1\";\r\n      results.firmware.minor = \"0\";\r\n      results.firmware.patch = \"0\";\r\n      \r\n      // Add to allResults\r\n      allResults.push(results.firmware.major);\r\n      allResults.push(results.firmware.minor);\r\n      allResults.push(results.firmware.patch);\r\n    }\r\n\r\n    // Step 2: Check and update time (15%)\r\n    onProgress('Checking OBC-2 Time', 15);\r\n    try {\r\n      // Read current time\r\n      const timeResult = await mccifRead(sock, [\"OBC2_Time\"]);\r\n      results.time.before = safeParseValue(timeResult[0]);\r\n      allResults.push(results.time.before);\r\n      \r\n      // Set time to now\r\n      await mccifSet(sock, \"OBC2_Time\", \"NOW\");\r\n      \r\n      // Read updated time\r\n      const updatedTimeResult = await mccifRead(sock, [\"OBC2_Time\"]);\r\n      results.time.after = safeParseValue(updatedTimeResult[0]);\r\n      allResults.push(results.time.after);\r\n    } catch (error) {\r\n      console.error(\"Error updating time:\", error);\r\n      results.time.before = \"error\";\r\n      results.time.after = \"error\";\r\n      \r\n      // Add to allResults\r\n      allResults.push(\"error\");\r\n      allResults.push(\"error\");\r\n    }\r\n\r\n    // Step 3: Read time related variables (20%)\r\n    onProgress('Reading OBC-2 Time Information', 20);\r\n    const timeVars = [\r\n      \"OBC2_Time\", \"OBC2_Uptime_Total\", \"OBC2_StorePeriod\", \r\n      \"OBC2_Uptime_Session\", \"OBC2_ResetCount\", \"OBC2_ResetSource\"\r\n    ];\r\n    \r\n    try {\r\n      const timeResults = await mccifRead(sock, timeVars);\r\n      results.time.current = safeParseValue(timeResults[0]);\r\n      results.time.uptime.total = safeParseValue(timeResults[1]);\r\n      results.time.storePeriod = safeParseValue(timeResults[2]);\r\n      results.time.uptime.session = safeParseValue(timeResults[3]);\r\n      results.time.resetCount = safeParseValue(timeResults[4]);\r\n      results.time.resetSource = safeParseValue(timeResults[5]);\r\n      \r\n      // Add to allResults\r\n      allResults.push(results.time.current);\r\n      allResults.push(results.time.uptime.total);\r\n      allResults.push(results.time.storePeriod);\r\n      allResults.push(results.time.uptime.session);\r\n      allResults.push(results.time.resetCount);\r\n      allResults.push(results.time.resetSource);\r\n    } catch (error) {\r\n      console.error(\"Error reading time information:\", error);\r\n      \r\n      // Add default values to allResults\r\n      [\"error\", \"0\", \"0\", \"0\", \"0\", \"unknown\"].forEach(val => allResults.push(val));\r\n    }\r\n\r\n    // Step 4: CAN communication test - primary (30%)\r\n    onProgress('Testing Primary CAN Communication', 30);\r\n    const canVars = [\r\n      \"OBC1_InterComm_Obc2_Hkp_Tx\", \"OBC1_InterComm_Obc2_Cfg_Tx\", \"OBC1_InterComm_Obc2_Met_Tx\",\r\n      \"OBC1_InterComm_Obc2_Etc_Tx\", \"OBC1_InterComm_Obc2_Uhf_Tx\", \"OBC1_InterComm_Obc2_Hkp_Ack\",\r\n      \"OBC1_InterComm_Obc2_Cfg_Ack\", \"OBC1_InterComm_Obc2_Met_Ack\", \"OBC1_InterComm_Obc2_Etc_Ack\",\r\n      \"OBC1_InterComm_Obc2_Uhf_Ack\", \"OBC1_InterComm_Obc2_Hkp_Timeout\", \"OBC1_InterComm_Obc2_Cfg_Timeout\",\r\n      \"OBC1_InterComm_Obc2_Met_Timeout\", \"OBC1_InterComm_Obc2_Etc_Timeout\",\r\n      \"OBC1_InterComm_Obc2_Uhf_Timeout\", \"OBC1_InterComm_Obc2_Hkp_Error\", \"OBC1_InterComm_Obc2_Cfg_Error\",\r\n      \"OBC1_InterComm_Obc2_Met_Error\", \"OBC1_InterComm_Obc2_Etc_Error\", \"OBC1_InterComm_Obc2_Uhf_Error\"\r\n    ];\r\n    \r\n    const canSetting = [\"OBC1_Intercomm_PriSec_Cfg\"];\r\n    \r\n    try {\r\n      // Read initial CAN values\r\n      const canBeforeResults = await mccifRead(sock, canVars);\r\n      \r\n      // Store before values\r\n      const canBeforeValues: string[] = canBeforeResults.map(safeParseValue);\r\n      \r\n      // Update results object\r\n      for (let i = 0; i < 5; i++) {\r\n        results.can.primary.before.tx.push(canBeforeValues[i]);\r\n      }\r\n      for (let i = 5; i < 10; i++) {\r\n        results.can.primary.before.ack.push(canBeforeValues[i]);\r\n      }\r\n      for (let i = 10; i < 15; i++) {\r\n        results.can.primary.before.timeout.push(canBeforeValues[i]);\r\n      }\r\n      for (let i = 15; i < 20; i++) {\r\n        results.can.primary.before.error.push(canBeforeValues[i]);\r\n      }\r\n      \r\n      // Add to allResults\r\n      allResults.push(...canBeforeValues);\r\n      \r\n      // Read CAN configuration\r\n      const canSettingResult = await mccifRead(sock, canSetting);\r\n      const canSettingValue = safeParseValue(canSettingResult[0]);\r\n      allResults.push(canSettingValue);\r\n      \r\n      // Wait for communication to occur\r\n      await new Promise(resolve => setTimeout(resolve, 20000));\r\n      \r\n      // Read CAN values after waiting\r\n      const canAfterResults = await mccifRead(sock, canVars);\r\n      const canAfterValues: string[] = canAfterResults.map(safeParseValue);\r\n      \r\n      // Update results object\r\n      for (let i = 0; i < 5; i++) {\r\n        results.can.primary.after.tx.push(canAfterValues[i]);\r\n      }\r\n      for (let i = 5; i < 10; i++) {\r\n        results.can.primary.after.ack.push(canAfterValues[i]);\r\n      }\r\n      for (let i = 10; i < 15; i++) {\r\n        results.can.primary.after.timeout.push(canAfterValues[i]);\r\n      }\r\n      for (let i = 15; i < 20; i++) {\r\n        results.can.primary.after.error.push(canAfterValues[i]);\r\n      }\r\n      \r\n      // Add to allResults\r\n      allResults.push(...canAfterValues);\r\n      \r\n      // Check primary CAN result\r\n      results.can.primary.result = canCheck(canBeforeValues, canAfterValues, 5);\r\n      passFailResults.push(results.can.primary.result);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error testing primary CAN:\", error);\r\n      results.can.primary.result = \"[FAIL]\";\r\n      passFailResults.push(\"[FAIL]\");\r\n      \r\n      // Add placeholder values to allResults for failed test\r\n      for (let i = 0; i < 41; i++) {\r\n        allResults.push(\"error\");\r\n      }\r\n    }\r\n\r\n    // Step 5: CAN communication test - secondary (50%)\r\n    onProgress('Testing Secondary CAN Communication', 50);\r\n    try {\r\n      // Set to secondary CAN\r\n      await mccifSet(sock, \"OBC1_Intercomm_PriSec_Cfg\", 31);\r\n      \r\n      // Read initial CAN values for secondary\r\n      const canSecBeforeResults = await mccifRead(sock, canVars);\r\n      const canSecBeforeValues: string[] = canSecBeforeResults.map(safeParseValue);\r\n      \r\n      // Update results object\r\n      for (let i = 0; i < 5; i++) {\r\n        results.can.secondary.before.tx.push(canSecBeforeValues[i]);\r\n      }\r\n      for (let i = 5; i < 10; i++) {\r\n        results.can.secondary.before.ack.push(canSecBeforeValues[i]);\r\n      }\r\n      for (let i = 10; i < 15; i++) {\r\n        results.can.secondary.before.timeout.push(canSecBeforeValues[i]);\r\n      }\r\n      for (let i = 15; i < 20; i++) {\r\n        results.can.secondary.before.error.push(canSecBeforeValues[i]);\r\n      }\r\n      \r\n      // Add to allResults\r\n      allResults.push(...canSecBeforeValues);\r\n      \r\n      // Read secondary CAN configuration\r\n      const canSecSettingResult = await mccifRead(sock, canSetting);\r\n      const canSecSettingValue = safeParseValue(canSecSettingResult[0]);\r\n      allResults.push(canSecSettingValue);\r\n      \r\n      // Wait for communication to occur\r\n      await new Promise(resolve => setTimeout(resolve, 20000));\r\n      \r\n      // Read CAN values after waiting\r\n      const canSecAfterResults = await mccifRead(sock, canVars);\r\n      const canSecAfterValues: string[] = canSecAfterResults.map(safeParseValue);\r\n      \r\n      // Update results object\r\n      for (let i = 0; i < 5; i++) {\r\n        results.can.secondary.after.tx.push(canSecAfterValues[i]);\r\n      }\r\n      for (let i = 5; i < 10; i++) {\r\n        results.can.secondary.after.ack.push(canSecAfterValues[i]);\r\n      }\r\n      for (let i = 10; i < 15; i++) {\r\n        results.can.secondary.after.timeout.push(canSecAfterValues[i]);\r\n      }\r\n      for (let i = 15; i < 20; i++) {\r\n        results.can.secondary.after.error.push(canSecAfterValues[i]);\r\n      }\r\n      \r\n      // Add to allResults\r\n      allResults.push(...canSecAfterValues);\r\n      \r\n      // Check secondary CAN result\r\n      results.can.secondary.result = canCheck(canSecBeforeValues, canSecAfterValues, 5);\r\n      passFailResults.push(results.can.secondary.result);\r\n      \r\n      // Reset to primary CAN\r\n      await mccifSet(sock, \"OBC1_Intercomm_PriSec_Cfg\", 0);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error testing secondary CAN:\", error);\r\n      results.can.secondary.result = \"[FAIL]\";\r\n      passFailResults.push(\"[FAIL]\");\r\n      \r\n      // Add placeholder values to allResults for failed test\r\n      for (let i = 0; i < 41; i++) {\r\n        allResults.push(\"error\");\r\n      }\r\n      \r\n      // Try to reset to primary CAN\r\n      try {\r\n        await mccifSet(sock, \"OBC1_Intercomm_PriSec_Cfg\", 0);\r\n      } catch (error) {\r\n        console.error(\"Error resetting to primary CAN:\", error);\r\n      }\r\n    }\r\n\r\n    // Step 6: Read voltage and current values (65%)\r\n    onProgress('Reading OBC-2 Voltage and Current', 65);\r\n    const viVars = [\r\n      \"OBC2_SDCard_3V3_V\", \"OBC2_Flash_3v3_V\", \"OBC2_EEPROM_3V3_V\", \"OBC2_Payload_3V3_V\",\r\n      \"OBC2_Payload_3V3_I\", \"OBC2_UHF_3V3_V\", \"OBC2_UHF_3V3_I\", \"OBC2_PP_3V3_V\", \"OBC2_PP_3V3_I\",\r\n      \"OBC2_GPS_3V3_V\", \"OBC2_LNA_V\", \"OBC2_LNA_I\"\r\n    ];\r\n    \r\n    try {\r\n      const viResults = await mccifRead(sock, viVars);\r\n      const viValues: string[] = viResults.map(safeParseValue);\r\n      \r\n      // Update voltage results\r\n      results.voltage.sdCard.value = viValues[0];\r\n      results.voltage.flash.value = viValues[1];\r\n      results.voltage.eeprom.value = viValues[2];\r\n      results.voltage.payload.value = viValues[3];\r\n      results.voltage.payload.current = viValues[4];\r\n      results.voltage.uhf.value = viValues[5];\r\n      results.voltage.uhf.current = viValues[6];\r\n      results.voltage.pp.value = viValues[7];\r\n      results.voltage.pp.current = viValues[8];\r\n      results.voltage.gps.value = viValues[9];\r\n      results.voltage.lna.value = viValues[10];\r\n      results.voltage.lna.current = viValues[11];\r\n      \r\n      // Check voltage results\r\n      results.voltage.sdCard.result = check3V3(viValues[0]);\r\n      results.voltage.flash.result = check3V3(viValues[1]);\r\n      results.voltage.eeprom.result = check3V3(viValues[2]);\r\n      results.voltage.payload.result = check3V3(viValues[3]);\r\n      results.voltage.uhf.result = check3V3(viValues[5]);\r\n      \r\n      // Add to passFailResults\r\n      passFailResults.push(results.voltage.sdCard.result);\r\n      passFailResults.push(results.voltage.flash.result);\r\n      passFailResults.push(results.voltage.eeprom.result);\r\n      passFailResults.push(results.voltage.payload.result);\r\n      passFailResults.push(results.voltage.uhf.result);\r\n      \r\n      // Add to allResults\r\n      allResults.push(...viValues);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error reading voltage and current:\", error);\r\n      \r\n      // Add placeholder values\r\n      const errorValues = Array(12).fill(\"error\");\r\n      allResults.push(...errorValues);\r\n      \r\n      // Add fail results\r\n      const failResults = Array(5).fill(\"[FAIL]\");\r\n      passFailResults.push(...failResults);\r\n    }\r\n\r\n    // Step 7: SD Card test if enabled (80%)\r\n    if (options.sdCard) {\r\n      onProgress('Testing OBC-2 SD Card', 80);\r\n      \r\n      try {\r\n        // Read SD Card voltage\r\n        const sdVoltageResult = await mccifRead(sock, [\"OBC2_SDCard_3V3_V\"]);\r\n        const sdVoltage = safeParseValue(sdVoltageResult[0]);\r\n        allResults.push(sdVoltage);\r\n        \r\n        // Read SD Card counters before test\r\n        const sdVars = [\"OBC2_SD_WriteSuccess\", \"OBC2_SD_ReadSuccess\", \"OBC2_SD_WriteFail\", \"OBC2_SD_ReadFail\"];\r\n        const sdBeforeResults = await mccifRead(sock, sdVars);\r\n        const sdBeforeValues = sdBeforeResults.map(safeParseValue);\r\n        \r\n        // Store before values\r\n        results.memory.sdCard.before.writeSuccess = sdBeforeValues[0];\r\n        results.memory.sdCard.before.readSuccess = sdBeforeValues[1];\r\n        results.memory.sdCard.before.writeFail = sdBeforeValues[2];\r\n        results.memory.sdCard.before.readFail = sdBeforeValues[3];\r\n        \r\n        // Add to allResults\r\n        allResults.push(...sdBeforeValues);\r\n        \r\n        // Run SD Card test\r\n        await mccifSet(sock, \"OBC2_SD_Control\", 6);\r\n        \r\n        // Read SD Card counters after test\r\n        const sdAfterResults = await mccifRead(sock, sdVars);\r\n        const sdAfterValues = sdAfterResults.map(safeParseValue);\r\n        \r\n        // Store after values\r\n        results.memory.sdCard.after.writeSuccess = sdAfterValues[0];\r\n        results.memory.sdCard.after.readSuccess = sdAfterValues[1];\r\n        results.memory.sdCard.after.writeFail = sdAfterValues[2];\r\n        results.memory.sdCard.after.readFail = sdAfterValues[3];\r\n        \r\n        // Add to allResults\r\n        allResults.push(...sdAfterValues);\r\n        \r\n        // Check SD Card test result\r\n        const sdTestValues = [...sdBeforeValues, ...sdAfterValues];\r\n        results.memory.sdCard.result = memCheck(sdTestValues);\r\n        passFailResults.push(results.memory.sdCard.result);\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error testing SD Card:\", error);\r\n        results.memory.sdCard.result = \"[FAIL]\";\r\n        passFailResults.push(\"[FAIL]\");\r\n        \r\n        // Add placeholder values to allResults\r\n        const errorValues = Array(9).fill(\"N.A.\");\r\n        allResults.push(...errorValues);\r\n      }\r\n    } else {\r\n      // SD Card test not enabled\r\n      results.memory.sdCard.result = \"Not tested\";\r\n      passFailResults.push(\"Not tested\");\r\n      \r\n      // Add placeholder values to allResults\r\n      const naValues = Array(9).fill(\"N.A.\");\r\n      allResults.push(...naValues);\r\n    }\r\n\r\n    // Step 8: EEPROM test if enabled (90%)\r\n    if (options.eeprom) {\r\n      onProgress('Testing OBC-2 EEPROM', 90);\r\n      \r\n      try {\r\n        // Read EEPROM voltage\r\n        const eepromVoltageResult = await mccifRead(sock, [\"OBC2_EEPROM_3V3_V\"]);\r\n        const eepromVoltage = safeParseValue(eepromVoltageResult[0]);\r\n        allResults.push(eepromVoltage);\r\n        \r\n        // Read EEPROM counters before test\r\n        const eepromVars = [\"OBC2_EEPROM_WriteSuccess\", \"OBC2_EEPROM_ReadSuccess\", \r\n                          \"OBC2_EEPROM_WriteFail\", \"OBC2_EEPROM_ReadFail\"];\r\n        const eepromBeforeResults = await mccifRead(sock, eepromVars);\r\n        const eepromBeforeValues = eepromBeforeResults.map(safeParseValue);\r\n        \r\n        // Store before values\r\n        results.memory.eeprom.before.writeSuccess = eepromBeforeValues[0];\r\n        results.memory.eeprom.before.readSuccess = eepromBeforeValues[1];\r\n        results.memory.eeprom.before.writeFail = eepromBeforeValues[2];\r\n        results.memory.eeprom.before.readFail = eepromBeforeValues[3];\r\n        \r\n        // Add to allResults\r\n        allResults.push(...eepromBeforeValues);\r\n        \r\n        // Run EEPROM test\r\n        await mccifSet(sock, \"OBC2_EEPROM_Control\", 7);\r\n        \r\n        // Read EEPROM counters after test\r\n        const eepromAfterResults = await mccifRead(sock, eepromVars);\r\n        const eepromAfterValues = eepromAfterResults.map(safeParseValue);\r\n        \r\n        // Store after values\r\n        results.memory.eeprom.after.writeSuccess = eepromAfterValues[0];\r\n        results.memory.eeprom.after.readSuccess = eepromAfterValues[1];\r\n        results.memory.eeprom.after.writeFail = eepromAfterValues[2];\r\n        results.memory.eeprom.after.readFail = eepromAfterValues[3];\r\n        \r\n        // Add to allResults\r\n        allResults.push(...eepromAfterValues);\r\n        \r\n        // Check EEPROM test result\r\n        const eepromTestValues = [...eepromBeforeValues, ...eepromAfterValues];\r\n        results.memory.eeprom.result = memCheck(eepromTestValues);\r\n        passFailResults.push(results.memory.eeprom.result);\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error testing EEPROM:\", error);\r\n        results.memory.eeprom.result = \"[FAIL]\";\r\n        passFailResults.push(\"[FAIL]\");\r\n        \r\n        // Add placeholder values to allResults\r\n        const errorValues = Array(9).fill(\"N.A.\");\r\n        allResults.push(...errorValues);\r\n      }\r\n    } else {\r\n      // EEPROM test not enabled\r\n      results.memory.eeprom.result = \"Not tested\";\r\n      passFailResults.push(\"Not tested\");\r\n      \r\n      // Add placeholder values to allResults\r\n      const naValues = Array(9).fill(\"N.A.\");\r\n      allResults.push(...naValues);\r\n    }\r\n\r\n    // Step 9: Final time reading (100%)\r\n    onProgress('Final OBC-2 Time Check', 100);\r\n    try {\r\n      const finalTimeResults = await mccifRead(sock, timeVars);\r\n      const finalTimeValues = finalTimeResults.map(safeParseValue);\r\n      \r\n      // Update final time values\r\n      results.time.final = {\r\n        current: finalTimeValues[0],\r\n        uptime: {\r\n          total: finalTimeValues[1],\r\n          session: finalTimeValues[3]\r\n        },\r\n        storePeriod: finalTimeValues[2],\r\n        resetCount: finalTimeValues[4],\r\n        resetSource: finalTimeValues[5]\r\n      };\r\n      \r\n      // Add to allResults\r\n      allResults.push(...finalTimeValues);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error reading final time information:\", error);\r\n      \r\n      // Add placeholder values to allResults\r\n      const errorValues = Array(6).fill(\"error\");\r\n      allResults.push(...errorValues);\r\n    }\r\n\r\n    // Store all results arrays in the results object\r\n    results.allResults = allResults;\r\n    results.passFailResults = passFailResults;\r\n    \r\n    return results;\r\n    \r\n  } catch (error) {\r\n    console.error('Error during OBC-2 checkout:', error);\r\n    throw error;\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4228, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/services/reports/obc2Report.ts"],"sourcesContent":["// src/services/reports/obc2Report.ts\r\nimport { Document, Packer, Paragraph, TextRun, HeadingLevel, Table, TableRow, TableCell, BorderStyle, WidthType, AlignmentType } from 'docx';\r\nimport { saveAs } from 'file-saver';\r\n\r\n/**\r\n * Generate a Word document report for OBC-2 checkout results\r\n * \r\n * @param results The OBC-2 test results\r\n * @returns A promise that resolves to the filename of the saved report\r\n */\r\nexport async function generateOBC2Report(results: any): Promise<string> {\r\n  // Get current date and time for the report filename\r\n  const now = new Date();\r\n  const dateStr = now.toISOString().split('T')[0]; // YYYY-MM-DD\r\n  const timeStr = now.toTimeString().split(' ')[0].replace(/:/g, '-'); // HH-MM-SS\r\n  const filename = `OBC-2_Checkout_${dateStr}_${timeStr}.docx`;\r\n  \r\n  // Create the document\r\n  const doc = new Document({\r\n    sections: [{\r\n      properties: {},\r\n      children: [\r\n        // Title\r\n        new Paragraph({\r\n          text: \"OBC-2 Automated Self Check Out Test\",\r\n          heading: HeadingLevel.HEADING_1,\r\n          spacing: { after: 200 }\r\n        }),\r\n        \r\n        // Test metadata\r\n        new Paragraph({\r\n          text: `Test Version: 24.3.21`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Test Date: ${now.toLocaleDateString()}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Test Time: ${now.toLocaleTimeString()}`,\r\n          spacing: { after: 200 }\r\n        }),\r\n        \r\n        // Separator\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200 }\r\n        }),\r\n        \r\n        // Firmware Version section\r\n        new Paragraph({\r\n          text: \"* Firmware Version:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Current OBC-2 Firmware Version: ${results.firmware.major}.${results.firmware.minor}.${results.firmware.patch}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Time Sync section\r\n        new Paragraph({\r\n          text: \"* Time Sync:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `BEFORE update OBC-2 Time: ${results.time.before} UTC`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `AFTER update OBC-2 Time: ${results.time.after} UTC`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Test Summary section\r\n        new Paragraph({\r\n          text: \"* Test Summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Primary CAN             : ${results.can.primary.result}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Secondary CAN           : ${results.can.secondary.result}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `SD Card Voltage         : ${results.voltage.sdCard.result}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Flash Voltage           : ${results.voltage.flash.result}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `EEPROM Voltage          : ${results.voltage.eeprom.result}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Payload Voltage         : ${results.voltage.payload.result}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `UHF Voltage             : ${results.voltage.uhf.result}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `SD Card                 : ${results.memory.sdCard.result}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `EEPROM                  : ${results.memory.eeprom.result}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // OBC-2 Checkout Summary section\r\n        new Paragraph({\r\n          text: \"* OBC-2 Checkout Summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `OBC-2 Time              : ${results.time.current} UTC`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `OBC-2 Uptime Total      : ${results.time.uptime.total} sec`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `OBC-2 Store Period      : ${results.time.storePeriod} sec`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `OBC-2 Uptime Session    : ${results.time.uptime.session} sec`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `OBC-2 Reset Count       : ${results.time.resetCount}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `OBC-2 Reset Source      : ${results.time.resetSource}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // Primary CAN Check Summary section\r\n        new Paragraph({\r\n          text: \"* OBC-2 CAN Check Summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Primary CAN : -- ${results.can.primary.result}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        ...createPrimaryCansSection(results),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // Secondary CAN Check Summary section\r\n        new Paragraph({\r\n          text: \"* OBC-2 CAN Check Summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: `Secondary CAN : -- ${results.can.secondary.result}`,\r\n          spacing: { after: 100 }\r\n        }),\r\n        ...createSecondaryCansSection(results),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // Voltage Current Summary section\r\n        new Paragraph({\r\n          text: \"* Voltage Current Summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        ...createVoltageCurrentSection(results),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Page break\r\n        new Paragraph({\r\n          text: \"\",\r\n          pageBreakBefore: true\r\n        }),\r\n        \r\n        // Memory Test Summary section\r\n        new Paragraph({\r\n          text: \"* Memory Test Summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        ...createMemoryTestSection(results),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n        \r\n        // Final checkout time information\r\n        new Paragraph({\r\n          text: \"* OBC-2 Final Checkout Summary:\",\r\n          heading: HeadingLevel.HEADING_2,\r\n          spacing: { after: 100 }\r\n        }),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 100 }\r\n        }),\r\n        ...createFinalCheckoutSection(results),\r\n        new Paragraph({\r\n          text: \"--------------------------------------------------------------------\",\r\n          spacing: { after: 200, before: 200 }\r\n        }),\r\n      ]\r\n    }]\r\n  });\r\n  \r\n  // Generate the document\r\n  const buffer = await Packer.toBuffer(doc);\r\n  \r\n  // Save the file\r\n  const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' });\r\n  saveAs(blob, filename);\r\n  \r\n  // Mark the report as generated\r\n  results.reportGenerated = true;\r\n  \r\n  return filename;\r\n}\r\n\r\n// Helper function for Primary CAN section\r\nfunction createPrimaryCansSection(results: any): Paragraph[] {\r\n  const paragraphs: Paragraph[] = [];\r\n  \r\n  if (results.can && results.can.primary) {\r\n    const section = results.can.primary;\r\n    \r\n    // Before test\r\n    const txBefore = section.before.tx || [];\r\n    const ackBefore = section.before.ack || [];\r\n    const timeoutBefore = section.before.timeout || [];\r\n    const errorBefore = section.before.error || [];\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Transmit before test        : ${padString(txBefore[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Transmit before test        : ${padString(txBefore[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Transmit before test        : ${padString(txBefore[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Transmit before test        : ${padString(txBefore[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Transmit before test        : ${padString(txBefore[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Acknowledgement before test : ${padString(ackBefore[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Acknowledgement before test : ${padString(ackBefore[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Acknowledgement before test : ${padString(ackBefore[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Acknowledgement before test : ${padString(ackBefore[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Acknowledgement before test : ${padString(ackBefore[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Timeout before test         : ${padString(timeoutBefore[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Timeout before test         : ${padString(timeoutBefore[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Timeout before test         : ${padString(timeoutBefore[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Timeout before test         : ${padString(timeoutBefore[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Timeout before test         : ${padString(timeoutBefore[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Error before test           : ${padString(errorBefore[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Error before test           : ${padString(errorBefore[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Error before test           : ${padString(errorBefore[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Error before test           : ${padString(errorBefore[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Error before test           : ${padString(errorBefore[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: ``, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CAN Primary Secondary Config    : ${results.canConfig || \"0\"}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: ``, spacing: { after: 100 } }));\r\n    \r\n    // After test\r\n    const txAfter = section.after.tx || [];\r\n    const ackAfter = section.after.ack || [];\r\n    const timeoutAfter = section.after.timeout || [];\r\n    const errorAfter = section.after.error || [];\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Transmit after test         : ${padString(txAfter[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Transmit after test         : ${padString(txAfter[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Transmit after test         : ${padString(txAfter[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Transmit after test         : ${padString(txAfter[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Transmit after test         : ${padString(txAfter[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Acknowledgement after test  : ${padString(ackAfter[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Acknowledgement after test  : ${padString(ackAfter[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Acknowledgement after test  : ${padString(ackAfter[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Acknowledgement after test  : ${padString(ackAfter[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Acknowledgement after test  : ${padString(ackAfter[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Timeout after test          : ${padString(timeoutAfter[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Timeout after test          : ${padString(timeoutAfter[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Timeout after test          : ${padString(timeoutAfter[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Timeout after test          : ${padString(timeoutAfter[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Timeout after test          : ${padString(timeoutAfter[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Error after test            : ${padString(errorAfter[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Error after test            : ${padString(errorAfter[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Error after test            : ${padString(errorAfter[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Error after test            : ${padString(errorAfter[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Error after test            : ${padString(errorAfter[4], 4)}`, spacing: { after: 100 } }));\r\n  }\r\n  \r\n  return paragraphs;\r\n}\r\n\r\n// Helper function for Secondary CAN section\r\nfunction createSecondaryCansSection(results: any): Paragraph[] {\r\n  const paragraphs: Paragraph[] = [];\r\n  \r\n  if (results.can && results.can.secondary) {\r\n    const section = results.can.secondary;\r\n    \r\n    // Before test\r\n    const txBefore = section.before.tx || [];\r\n    const ackBefore = section.before.ack || [];\r\n    const timeoutBefore = section.before.timeout || [];\r\n    const errorBefore = section.before.error || [];\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Transmit before test        : ${padString(txBefore[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Transmit before test        : ${padString(txBefore[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Transmit before test        : ${padString(txBefore[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Transmit before test        : ${padString(txBefore[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Transmit before test        : ${padString(txBefore[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Acknowledgement before test : ${padString(ackBefore[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Acknowledgement before test : ${padString(ackBefore[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Acknowledgement before test : ${padString(ackBefore[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Acknowledgement before test : ${padString(ackBefore[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Acknowledgement before test : ${padString(ackBefore[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Timeout before test         : ${padString(timeoutBefore[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Timeout before test         : ${padString(timeoutBefore[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Timeout before test         : ${padString(timeoutBefore[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Timeout before test         : ${padString(timeoutBefore[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Timeout before test         : ${padString(timeoutBefore[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Error before test           : ${padString(errorBefore[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Error before test           : ${padString(errorBefore[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Error before test           : ${padString(errorBefore[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Error before test           : ${padString(errorBefore[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Error before test           : ${padString(errorBefore[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: ``, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CAN Primary Secondary Config    : ${results.canConfig || \"31\"}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: ``, spacing: { after: 100 } }));\r\n    \r\n    // After test\r\n    const txAfter = section.after.tx || [];\r\n    const ackAfter = section.after.ack || [];\r\n    const timeoutAfter = section.after.timeout || [];\r\n    const errorAfter = section.after.error || [];\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Transmit after test         : ${padString(txAfter[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Transmit after test         : ${padString(txAfter[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Transmit after test         : ${padString(txAfter[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Transmit after test         : ${padString(txAfter[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Transmit after test         : ${padString(txAfter[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Acknowledgement after test  : ${padString(ackAfter[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Acknowledgement after test  : ${padString(ackAfter[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Acknowledgement after test  : ${padString(ackAfter[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Acknowledgement after test  : ${padString(ackAfter[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Acknowledgement after test  : ${padString(ackAfter[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Timeout after test          : ${padString(timeoutAfter[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Timeout after test          : ${padString(timeoutAfter[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Timeout after test          : ${padString(timeoutAfter[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Timeout after test          : ${padString(timeoutAfter[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Timeout after test          : ${padString(timeoutAfter[4], 4)}`, spacing: { after: 100 } }));\r\n    \r\n    paragraphs.push(new Paragraph({ text: `HKP Error after test            : ${padString(errorAfter[0], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `CFG Error after test            : ${padString(errorAfter[1], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `MET Error after test            : ${padString(errorAfter[2], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `ETC Error after test            : ${padString(errorAfter[3], 4)}`, spacing: { after: 100 } }));\r\n    paragraphs.push(new Paragraph({ text: `UHF Error after test            : ${padString(errorAfter[4], 4)}`, spacing: { after: 100 } }));\r\n  }\r\n  \r\n  return paragraphs;\r\n}\r\n\r\n// Helper function for Voltage Current section\r\nfunction createVoltageCurrentSection(results: any): Paragraph[] {\r\n    const paragraphs: Paragraph[] = [];\r\n    \r\n    if (results.voltage) {\r\n      const v = results.voltage;\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 SDCard 3V3 V  : ${padString(v.sdCard.value, 4)} mV    ${v.sdCard.result}`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Flash 3v3 V   : ${padString(v.flash.value, 4)} mV    ${v.flash.result}`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 EEPROM 3V3 V  : ${padString(v.eeprom.value, 4)} mV    ${v.eeprom.result}`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({ text: ``, spacing: { after: 100 } }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Payload 3V3 V : ${padString(v.payload.value, 4)} mV    ${v.payload.result}`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Payload 3V3 I : ${padString(v.payload.current, 4)} mA`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({ text: ``, spacing: { after: 100 } }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 UHF 3V3 V     : ${padString(v.uhf.value, 4)} mV    ${v.uhf.result}`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 UHF 3V3 I     : ${padString(v.uhf.current, 4)} mA`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({ text: ``, spacing: { after: 100 } }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 PP 3V3 V      : ${padString(v.pp.value, 4)} mV`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 PP 3V3 I      : ${padString(v.pp.current, 4)} mA`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({ text: ``, spacing: { after: 100 } }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 GPS V         : ${padString(v.gps.value, 4)} mV`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 LNA V         : ${padString(v.lna.value, 4)} mV`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 LNA I         : ${padString(v.lna.current, 4)} mA`,\r\n        spacing: { after: 100 }\r\n      }));\r\n    }\r\n    \r\n    return paragraphs;\r\n  }\r\n  \r\n  // Helper function for Memory Test section\r\n  function createMemoryTestSection(results: any): Paragraph[] {\r\n    const paragraphs: Paragraph[] = [];\r\n    \r\n    if (results.memory) {\r\n      // SD Card Test\r\n      paragraphs.push(new Paragraph({\r\n        text: `SD Card : -- ${results.memory.sdCard.result}`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      if (results.memory.sdCard.result !== \"Not tested\") {\r\n        const sdCard = results.memory.sdCard;\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `OBC-2 SDCard 3V3 V          : ${padString(results.voltage.sdCard.value, 4)} mV`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Write Success before test   : ${padString(sdCard.before.writeSuccess, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Read Success before test    : ${padString(sdCard.before.readSuccess, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Write Fail before test      : ${padString(sdCard.before.writeFail, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Read Fail before test       : ${padString(sdCard.before.readFail, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Write Success after test    : ${padString(sdCard.after.writeSuccess, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Read Success after test     : ${padString(sdCard.after.readSuccess, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Write Fail after test       : ${padString(sdCard.after.writeFail, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Read Fail after test        : ${padString(sdCard.after.readFail, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n      } else {\r\n        paragraphs.push(new Paragraph({\r\n          text: `SD Card test was not performed`,\r\n          spacing: { after: 100 }\r\n        }));\r\n      }\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `--------------------------------------------------------------------`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      // EEPROM Test\r\n      paragraphs.push(new Paragraph({\r\n        text: `EEPROM : -- ${results.memory.eeprom.result}`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      if (results.memory.eeprom.result !== \"Not tested\") {\r\n        const eeprom = results.memory.eeprom;\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `OBC-2 EEPROM 3V3 V          : ${padString(results.voltage.eeprom.value, 4)} mV`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Write Success before test   : ${padString(eeprom.before.writeSuccess, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Read Success before test    : ${padString(eeprom.before.readSuccess, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Write Fail before test      : ${padString(eeprom.before.writeFail, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Read Fail before test       : ${padString(eeprom.before.readFail, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Write Success after test    : ${padString(eeprom.after.writeSuccess, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Read Success after test     : ${padString(eeprom.after.readSuccess, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Write Fail after test       : ${padString(eeprom.after.writeFail, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n        \r\n        paragraphs.push(new Paragraph({\r\n          text: `Read Fail after test        : ${padString(eeprom.after.readFail, 4)}`,\r\n          spacing: { after: 100 }\r\n        }));\r\n      } else {\r\n        paragraphs.push(new Paragraph({\r\n          text: `EEPROM test was not performed`,\r\n          spacing: { after: 100 }\r\n        }));\r\n      }\r\n    }\r\n    \r\n    return paragraphs;\r\n  }\r\n  \r\n  // Helper function for final checkout section\r\n  function createFinalCheckoutSection(results: any): Paragraph[] {\r\n    const paragraphs: Paragraph[] = [];\r\n    \r\n    if (results.time && results.time.final) {\r\n      const final = results.time.final;\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Time              : ${final.current} UTC`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Uptime Total      : ${final.uptime.total} sec`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Store Period      : ${final.storePeriod} sec`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Uptime Session    : ${final.uptime.session} sec`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Reset Count       : ${final.resetCount}`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Reset Source      : ${final.resetSource}`,\r\n        spacing: { after: 100 }\r\n      }));\r\n    } else {\r\n      // Use the initial time readings if final time readings are not available\r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Time              : ${results.time.current} UTC`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Uptime Total      : ${results.time.uptime.total} sec`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Store Period      : ${results.time.storePeriod} sec`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Uptime Session    : ${results.time.uptime.session} sec`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Reset Count       : ${results.time.resetCount}`,\r\n        spacing: { after: 100 }\r\n      }));\r\n      \r\n      paragraphs.push(new Paragraph({\r\n        text: `OBC-2 Reset Source      : ${results.time.resetSource}`,\r\n        spacing: { after: 100 }\r\n      }));\r\n    }\r\n    \r\n    return paragraphs;\r\n  }\r\n  \r\n  /**\r\n   * Utility function to pad a string to a specific length\r\n   * \r\n   * @param value The string value to pad\r\n   * @param length The desired length\r\n   * @returns The padded string\r\n   */\r\n  function padString(value: string | number | undefined, length: number): string {\r\n    if (value === undefined || value === null) return ''.padStart(length, ' ');\r\n    return String(value).padStart(length, ' ');\r\n  }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5558, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/CheckoutTestProgress/CheckoutTestProgress.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"checkoutWindow\": \"CheckoutTestProgress-module__GtrGZW__checkoutWindow\",\n  \"closeButton\": \"CheckoutTestProgress-module__GtrGZW__closeButton\",\n  \"colorCompleted\": \"CheckoutTestProgress-module__GtrGZW__colorCompleted\",\n  \"colorError\": \"CheckoutTestProgress-module__GtrGZW__colorError\",\n  \"colorRunning\": \"CheckoutTestProgress-module__GtrGZW__colorRunning\",\n  \"colorWaiting\": \"CheckoutTestProgress-module__GtrGZW__colorWaiting\",\n  \"contentArea\": \"CheckoutTestProgress-module__GtrGZW__contentArea\",\n  \"progressBar\": \"CheckoutTestProgress-module__GtrGZW__progressBar\",\n  \"progressBarFill\": \"CheckoutTestProgress-module__GtrGZW__progressBarFill\",\n  \"progressContainer\": \"CheckoutTestProgress-module__GtrGZW__progressContainer\",\n  \"progressHeading\": \"CheckoutTestProgress-module__GtrGZW__progressHeading\",\n  \"progressHeadingIcon\": \"CheckoutTestProgress-module__GtrGZW__progressHeadingIcon\",\n  \"pulse\": \"CheckoutTestProgress-module__GtrGZW__pulse\",\n  \"pulseAnimation\": \"CheckoutTestProgress-module__GtrGZW__pulseAnimation\",\n  \"realBadge\": \"CheckoutTestProgress-module__GtrGZW__realBadge\",\n  \"realMessage\": \"CheckoutTestProgress-module__GtrGZW__realMessage\",\n  \"resetButton\": \"CheckoutTestProgress-module__GtrGZW__resetButton\",\n  \"runAllButton\": \"CheckoutTestProgress-module__GtrGZW__runAllButton\",\n  \"runAllButtonIcon\": \"CheckoutTestProgress-module__GtrGZW__runAllButtonIcon\",\n  \"simulationBadge\": \"CheckoutTestProgress-module__GtrGZW__simulationBadge\",\n  \"simulationMessage\": \"CheckoutTestProgress-module__GtrGZW__simulationMessage\",\n  \"statusBadge\": \"CheckoutTestProgress-module__GtrGZW__statusBadge\",\n  \"statusCard\": \"CheckoutTestProgress-module__GtrGZW__statusCard\",\n  \"statusCardActive\": \"CheckoutTestProgress-module__GtrGZW__statusCardActive\",\n  \"statusCardTitle\": \"CheckoutTestProgress-module__GtrGZW__statusCardTitle\",\n  \"statusGrid\": \"CheckoutTestProgress-module__GtrGZW__statusGrid\",\n  \"tabButton\": \"CheckoutTestProgress-module__GtrGZW__tabButton\",\n  \"tabButtonActive\": \"CheckoutTestProgress-module__GtrGZW__tabButtonActive\",\n  \"tabIcon\": \"CheckoutTestProgress-module__GtrGZW__tabIcon\",\n  \"tabsContainer\": \"CheckoutTestProgress-module__GtrGZW__tabsContainer\",\n  \"tabsList\": \"CheckoutTestProgress-module__GtrGZW__tabsList\",\n  \"titleIcon\": \"CheckoutTestProgress-module__GtrGZW__titleIcon\",\n  \"windowHeader\": \"CheckoutTestProgress-module__GtrGZW__windowHeader\",\n  \"windowTitle\": \"CheckoutTestProgress-module__GtrGZW__windowTitle\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 5600, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/CheckoutTestProgress/CheckoutTestProgress.tsx"],"sourcesContent":["// src/components/CheckoutTestProgress/CheckoutTestProgress.tsx\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Button } from \"@/components/ui\";\r\nimport { OBC1TestPanel } from \"./components/OBC1TestPanel\";\r\nimport { OBC2TestPanel } from \"./components/OBC2TestPanel\";\r\nimport styles from \"./CheckoutTestProgress.module.css\";\r\nimport { setSimulationMode } from '@/utils/mccUtils';\r\n\r\n// Updated interface to include checkedOptions\r\ninterface CheckoutItem {\r\n  id: string;\r\n  header: string;\r\n  options: string[];\r\n  checkedOptions?: Record<string, boolean>; // Optional to maintain backward compatibility\r\n}\r\n\r\ninterface TestResult {\r\n  component: string;\r\n  status: 'running' | 'completed' | 'error' | 'waiting';\r\n  results: any;\r\n  message?: string;\r\n}\r\n\r\ninterface CheckoutTestProgressProps {\r\n  droppedItems: CheckoutItem[];\r\n  onClose: () => void;\r\n  zIndex: number;\r\n  onMouseDown: () => void;\r\n  sock: any;\r\n}\r\n\r\nconst CheckoutTestProgress: React.FC<CheckoutTestProgressProps> = ({\r\n  droppedItems,\r\n  onClose,\r\n  zIndex,\r\n  onMouseDown,\r\n  sock\r\n}) => {\r\n  const [overallProgress, setOverallProgress] = useState<number>(0);\r\n  const [testResults, setTestResults] = useState<Record<string, TestResult>>({});\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n  const [isSavingReport, setIsSavingReport] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<string>(\"\");\r\n  const [initialRunDone, setInitialRunDone] = useState(false);\r\n  const [currentlyRunningTest, setCurrentlyRunningTest] = useState<string | null>(null);\r\n  const [windowSize, setWindowSize] = useState({ width: 0, height: 0 });\r\n  const [filteredDroppedItems, setFilteredDroppedItems] = useState<CheckoutItem[]>([]);\r\n  \r\n  // Use non-null assertion to ensure TypeScript knows this ref will be assigned\r\n  const nodeRef = useRef<HTMLDivElement>(null) as React.RefObject<HTMLDivElement>;\r\n  const [portalElement] = useState(() => {\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"checkoutTestProgress-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n  // Load the filtered items with checked options from localStorage\r\n  useEffect(() => {\r\n    const filteredItemsJson = localStorage.getItem('checkoutTestItems');\r\n    \r\n    if (filteredItemsJson) {\r\n      try {\r\n        const parsedItems = JSON.parse(filteredItemsJson);\r\n        \r\n        if (Array.isArray(parsedItems) && parsedItems.length > 0) {\r\n          console.log(\"📋 Using filtered items with checked options:\", parsedItems);\r\n          setFilteredDroppedItems(parsedItems);\r\n        } else {\r\n          console.log(\"⚠️ No valid filtered items found, using original dropped items\");\r\n          setFilteredDroppedItems(droppedItems);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error parsing filtered items:\", e);\r\n        setFilteredDroppedItems(droppedItems);\r\n      }\r\n    } else {\r\n      // If no filtered items in localStorage, use the original droppedItems\r\n      // but try to only include options that are checked\r\n      console.log(\"⚠️ No filtered items in localStorage, using original items\");\r\n      \r\n      // For backward compatibility - try to filter based on checkedOptions if available\r\n      const backwardCompatibleItems = droppedItems.map(item => {\r\n        if (item.checkedOptions) {\r\n          // Get the list of options that are checked\r\n          const checkedOptionsList = Object.entries(item.checkedOptions)\r\n            .filter(([_, isChecked]) => isChecked)\r\n            .map(([option]) => option);\r\n          \r\n          // Only include checked options if any exist, otherwise keep all options\r\n          return {\r\n            ...item,\r\n            options: checkedOptionsList.length > 0 ? checkedOptionsList : item.options\r\n          };\r\n        }\r\n        \r\n        return item;\r\n      });\r\n      \r\n      setFilteredDroppedItems(backwardCompatibleItems);\r\n    }\r\n  }, [droppedItems]);\r\n\r\n  // Generate component map for easy lookups\r\n  const componentMap = filteredDroppedItems.reduce((acc, item) => {\r\n    acc[item.header] = item;\r\n    return acc;\r\n  }, {} as Record<string, CheckoutItem>);\r\n\r\n  // Set initial active tab to the first filtered item\r\n  useEffect(() => {\r\n    if (filteredDroppedItems.length > 0 && !activeTab) {\r\n      setActiveTab(filteredDroppedItems[0].header);\r\n    }\r\n  }, [filteredDroppedItems, activeTab]);\r\n\r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  // Update progress when test results change\r\n  useEffect(() => {\r\n    updateOverallProgress();\r\n  }, [testResults]);\r\n\r\n  // Run initial tests for all filtered components\r\n  useEffect(() => {\r\n    if (!initialRunDone && filteredDroppedItems.length > 0) {\r\n      // Mark as done\r\n      setInitialRunDone(true);\r\n      \r\n      // Set up all filtered components with initial waiting status\r\n      const initialResults: Record<string, TestResult> = {};\r\n      filteredDroppedItems.forEach(item => {\r\n        initialResults[item.header] = {\r\n          component: item.header,\r\n          status: 'waiting',\r\n          results: null\r\n        };\r\n      });\r\n      \r\n      setTestResults(initialResults);\r\n      \r\n      // Find the first component to test\r\n      runNextTest(initialResults);\r\n    }\r\n  }, [filteredDroppedItems, initialRunDone]);\r\n\r\n  // Update window size on mount\r\n  useEffect(() => {\r\n    // Calculate available screen space (80% of viewport)\r\n    const maxWidth = Math.min(1600, window.innerWidth * 0.8);\r\n    const maxHeight = Math.min(900, window.innerHeight * 0.8);\r\n    \r\n    setWindowSize({\r\n      width: maxWidth,\r\n      height: maxHeight\r\n    });\r\n    \r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      const maxWidth = Math.min(1600, window.innerWidth * 0.8);\r\n      const maxHeight = Math.min(900, window.innerHeight * 0.8);\r\n      \r\n      setWindowSize({\r\n        width: maxWidth,\r\n        height: maxHeight\r\n      });\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Calculate overall progress based on filtered items\r\n  const updateOverallProgress = () => {\r\n    if (filteredDroppedItems.length === 0) return;\r\n\r\n    const completedCount = Object.values(testResults).filter(\r\n      result => result.status === 'completed' || result.status === 'error'\r\n    ).length;\r\n    \r\n    const newProgress = Math.floor((completedCount / filteredDroppedItems.length) * 100);\r\n    setOverallProgress(newProgress);\r\n    \r\n    // Check if all tests are complete\r\n    if (completedCount === filteredDroppedItems.length) {\r\n      setIsComplete(true);\r\n      setCurrentlyRunningTest(null);\r\n    }\r\n  };\r\n\r\n  // Update a specific test result\r\n  const updateTestResult = (component: string, result: Partial<TestResult>) => {\r\n    setTestResults(prev => {\r\n      const updatedResults = {\r\n        ...prev,\r\n        [component]: {\r\n          ...(prev[component] || { component, status: 'waiting', results: null }),\r\n          ...result\r\n        }\r\n      };\r\n      \r\n      // If a test just completed, check if we should run the next one\r\n      if (result.status === 'completed' || result.status === 'error') {\r\n        // Clear the currently running test\r\n        if (currentlyRunningTest === component) {\r\n          setCurrentlyRunningTest(null);\r\n        }\r\n        \r\n        // Find and run next test (with small delay to allow UI to update)\r\n        setTimeout(() => {\r\n          runNextTest(updatedResults);\r\n        }, 500);\r\n      }\r\n      \r\n      return updatedResults;\r\n    });\r\n  };\r\n\r\n  // Find and run the next pending test from filtered items\r\n  const runNextTest = (currentResults: Record<string, TestResult>) => {\r\n    // Don't try to run another test if one is already running\r\n    if (currentlyRunningTest) return;\r\n    \r\n    // Find the next waiting component from filtered items\r\n    const nextComponent = filteredDroppedItems.find(item => \r\n      currentResults[item.header]?.status === 'waiting'\r\n    );\r\n    \r\n    if (nextComponent) {\r\n      // Set as currently running\r\n      setCurrentlyRunningTest(nextComponent.header);\r\n      \r\n      // Mark it as running in the results\r\n      setTestResults(prev => ({\r\n        ...prev,\r\n        [nextComponent.header]: {\r\n          ...(prev[nextComponent.header] || { component: nextComponent.header, results: null }),\r\n          status: 'running'\r\n        }\r\n      }));\r\n      \r\n      // Automatically switch to the tab with the running test\r\n      setActiveTab(nextComponent.header);\r\n    }\r\n  };\r\n\r\n  // Generate and save test report\r\n  const saveTestReport = async () => {\r\n    setIsSavingReport(true);\r\n    \r\n    try {\r\n      // Call report generation for each completed test\r\n      for (const item of filteredDroppedItems) {\r\n        const result = testResults[item.header];\r\n        if (result && result.status === 'completed') {\r\n          // Here you would call the appropriate report generator for each component\r\n          console.log(`Generating report for ${item.header}...`);\r\n          // For example: await generateOBC1Report(result.results);\r\n        }\r\n      }\r\n      \r\n      alert(\"Test reports have been generated and saved successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error generating report:\", error);\r\n      alert(\"Failed to generate test reports.\");\r\n    } finally {\r\n      setIsSavingReport(false);\r\n    }\r\n  };\r\n\r\n  // Run all tests again (reset and restart)\r\n  const runAllTests = () => {\r\n    // Reset all test results to waiting\r\n    const resetResults: Record<string, TestResult> = {};\r\n    filteredDroppedItems.forEach(item => {\r\n      resetResults[item.header] = {\r\n        component: item.header,\r\n        status: 'waiting',\r\n        results: null\r\n      };\r\n    });\r\n    \r\n    setTestResults(resetResults);\r\n    setIsComplete(false);\r\n    setCurrentlyRunningTest(null);\r\n    \r\n    // Start running tests\r\n    runNextTest(resetResults);\r\n  };\r\n\r\n  // Calculate test stage status for each filtered component\r\n  const getTestStatusSummary = () => {\r\n    return filteredDroppedItems.map(item => ({\r\n      component: item.header,\r\n      status: testResults[item.header]?.status || 'waiting',\r\n      isActive: currentlyRunningTest === item.header\r\n    }));\r\n  };\r\n\r\n  // When a tab has a OBC1/OBC2TestPanel that requires options, only pass the filtered options\r\n  const getComponentOptions = (header: string): string[] => {\r\n    const component = filteredDroppedItems.find(item => item.header === header);\r\n    return component?.options || [];\r\n  };\r\n  \r\n  // Safely reuse position from session storage or use defaults\r\n  const savedPosition = (() => {\r\n    try {\r\n      const saved = sessionStorage.getItem('checkoutTestPositionPosition');\r\n      if (saved) {\r\n        const parsed = JSON.parse(saved);\r\n        \r\n        // Validate the saved position - ensure it's within reasonable bounds\r\n        const viewportHeight = window.innerHeight;\r\n        const viewportWidth = window.innerWidth;\r\n        \r\n        return {\r\n          x: Math.min(Math.max(parsed.x, -400), viewportWidth - 450),\r\n          y: Math.min(Math.max(parsed.y, 0), viewportHeight - 100)\r\n        };\r\n      }\r\n      \r\n      // Default center position if no saved position\r\n      return {\r\n        x: Math.max(0, (window.innerWidth - windowSize.width) / 2), \r\n        y: Math.max(0, (window.innerHeight - windowSize.height) / 2)\r\n      };\r\n    } catch (e) {\r\n      // Default center position in case of error\r\n      return {\r\n        x: Math.max(0, (window.innerWidth - windowSize.width) / 2),\r\n        y: Math.max(0, (window.innerHeight - windowSize.height) / 2)\r\n      };\r\n    }\r\n  })();\r\n\r\n  const [position, setPosition] = useState(savedPosition);\r\n\r\n  // Save position to sessionStorage when it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('checkoutTestPositionPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  const getStatusClassName = (status: string): string => {\r\n    switch (status) {\r\n      case 'completed': return styles.colorCompleted;\r\n      case 'error': return styles.colorError;\r\n      case 'running': return `${styles.colorRunning} ${styles.pulseAnimation}`;\r\n      default: return styles.colorWaiting;\r\n    }\r\n  };\r\n\r\n// Near the beginning of your component\r\nuseEffect(() => {\r\n  // Check if we have real socket info saved\r\n  const socketInfo = localStorage.getItem('mccSocketInfo');\r\n  let shouldUseSimulation = true; // Default to simulation\r\n\r\n  if (socketInfo) {\r\n    try {\r\n      const parsed = JSON.parse(socketInfo);\r\n      if (parsed && parsed.isReal) {\r\n        console.log(\"📡 Using real socket based on stored configuration\");\r\n        shouldUseSimulation = false;\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error parsing socket info:\", e);\r\n    }\r\n  }\r\n\r\n  // Set simulation mode based on availability of real connection\r\n  setSimulationMode(shouldUseSimulation);\r\n  console.log(`🔧 Setting simulation mode to: ${shouldUseSimulation}`);\r\n}, []);\r\n\r\n  // Modified component to specifically pass only checked options to the test panels\r\n  return createPortal(\r\n    <Draggable\r\n      nodeRef={nodeRef}\r\n      handle=\".drag-handle\"\r\n      position={position}\r\n      onStop={(e, data) => {\r\n        setPosition({ x: data.x, y: data.y });\r\n      }}\r\n    >\r\n      <div ref={nodeRef} className={styles.checkoutWindow} style={{/* styles */}}>\r\n        {/* Header - Fixed */}\r\n        <div className={`${styles.windowHeader} drag-handle`}>\r\n          <h2 className={styles.windowTitle}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={styles.titleIcon}>\r\n              <path d=\"M20 6v10a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2Z\"/>\r\n              <path d=\"m10 10 5 3-5 3v-6Z\"/>\r\n            </svg>\r\n            Satellite Checkout Test Control Centre\r\n          </h2>\r\n          \r\n          <button \r\n            className={styles.resetButton}\r\n            onClick={() => {\r\n              setPosition({\r\n                x: (window.innerWidth - windowSize.width) / 2,\r\n                y: (window.innerHeight - windowSize.height) / 2\r\n              });\r\n            }}\r\n          >\r\n            Reset Position\r\n          </button>\r\n          \r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onClose();\r\n            }}\r\n            className={styles.closeButton}\r\n          >\r\n            ✖\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content area with Test Panels */}\r\n        <div className={styles.contentArea}>\r\n{/* Test tabs */}\r\n{filteredDroppedItems.length > 0 ? (\r\n  <div className={styles.tabsContainer}>\r\n    <div className={styles.tabsList}>\r\n      {filteredDroppedItems.map(item => (\r\n        <button\r\n          key={item.header} \r\n          onClick={() => setActiveTab(item.header)}\r\n          className={`${styles.tabButton} ${activeTab === item.header ? styles.tabButtonActive : ''}`}\r\n        >\r\n          {item.header}\r\n          {testResults[item.header]?.status === 'completed' && (\r\n            <span className={styles.tabIcon}>✓</span>\r\n          )}\r\n          {testResults[item.header]?.status === 'error' && (\r\n            <span className={styles.tabIcon}>✗</span>\r\n          )}\r\n          {testResults[item.header]?.status === 'running' && (\r\n            <span className={`${styles.tabIcon} ${styles.pulseAnimation}`}>⟳</span>\r\n          )}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n) : (\r\n  <div className=\"p-6 text-center\">\r\n    <p>No test items with checked options found. Please check at least one option in the Checkout Section and try again.</p>\r\n  </div>\r\n)}\r\n\r\n          {/* Test Content Grid Layout */}\r\n          {filteredDroppedItems.length > 0 && (\r\n            <div style={{ flex: 1, display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '16px', padding: '0 16px 16px 16px', overflow: 'hidden' }}>\r\n              {/* Left Panel - Active test component */}\r\n              <div style={{ overflow: 'auto', height: '100%', display: activeTab ? 'block' : 'none' }}>\r\n                {filteredDroppedItems.map(item => (\r\n                  <div \r\n                    key={item.header} \r\n                    style={{ \r\n                      display: activeTab === item.header ? 'block' : 'none',\r\n                      height: '100%',\r\n                      overflow: 'auto'\r\n                    }}\r\n                  >\r\n                    {/* Render the appropriate test panel based on component type */}\r\n                    {item.header === \"OBC-1\" && (\r\n                      <OBC1TestPanel\r\n                        options={getComponentOptions(item.header)} // Pass only the filtered/checked options\r\n                        sock={sock}\r\n                        onTestComplete={(results) => \r\n                          updateTestResult(item.header, { \r\n                            status: 'completed', \r\n                            results \r\n                          })\r\n                        }\r\n                        onTestError={(error: Error | string | unknown) => \r\n                          updateTestResult(item.header, { \r\n                            status: 'error', \r\n                            message: error instanceof Error ? error.message : String(error) \r\n                          })\r\n                        }\r\n                        onTestStart={() => \r\n                          updateTestResult(item.header, { \r\n                            status: 'running' \r\n                          })\r\n                        }\r\n                        isInitialRun={currentlyRunningTest === item.header}\r\n                      />\r\n                    )}\r\n                    \r\n                    {item.header === \"OBC-2\" && (\r\n  <OBC2TestPanel\r\n    options={getComponentOptions(item.header)}\r\n    sock={sock}\r\n    onTestComplete={(results) => \r\n      updateTestResult(item.header, { \r\n        status: 'completed', \r\n        results \r\n      })\r\n    }\r\n    onTestError={(error: Error | string | unknown) => \r\n      updateTestResult(item.header, { \r\n        status: 'error', \r\n        message: error instanceof Error ? error.message : String(error) \r\n      })\r\n    }\r\n    onTestStart={() => \r\n      updateTestResult(item.header, { \r\n        status: 'running' \r\n      })\r\n    }\r\n    isInitialRun={currentlyRunningTest === item.header}\r\n  />\r\n)}\r\n\r\n                    {/* Add implementations for other component types here */}\r\n                    {/* For now, show a placeholder for unimplemented components */}\r\n                    {![\"OBC-1\", \"OBC-2\"].includes(item.header) && (\r\n                      <div className=\"p-6\">\r\n                        <div style={{\r\n                          padding: '20px',\r\n                          borderRadius: '8px',\r\n                          backgroundColor: isDarkMode ? '#1e1e1e' : '#f9fafb',\r\n                          border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                          marginBottom: '16px',\r\n                          textAlign: 'center'\r\n                        }}>\r\n                          <h3 style={{ marginBottom: '16px', color: isDarkMode ? '#d1d5db' : '#374151' }}>\r\n                            {item.header} Test Panel\r\n                          </h3>\r\n                          <p style={{ marginBottom: '16px', color: isDarkMode ? '#9ca3af' : '#6b7280' }}>\r\n                            Testing options: {getComponentOptions(item.header).join(', ')}\r\n                          </p>\r\n                          <button \r\n                            className={styles.runAllButton}\r\n                            style={{\r\n                              backgroundColor: \"#3b82f6\",\r\n                              color: \"white\",\r\n                              margin: \"16px auto\"\r\n                            }}\r\n                            onClick={() => {\r\n                              // Update status to running\r\n                              updateTestResult(item.header, { status: 'running' });\r\n                              \r\n                              // Simulate a test run\r\n                              setTimeout(() => {\r\n                                updateTestResult(item.header, { \r\n                                  status: 'completed',\r\n                                  results: { \r\n                                    simulated: true,\r\n                                    testedOptions: getComponentOptions(item.header)\r\n                                  }\r\n                                });\r\n                              }, 2000);\r\n                            }}\r\n                          >\r\n                            {testResults[item.header]?.status === 'completed' || \r\n                             testResults[item.header]?.status === 'error' \r\n                              ? \"Re-run Test\" : \"Run Test\"}\r\n                          </button>\r\n                          \r\n                          {/* Show options available for this component */}\r\n                          {item.options.length > 0 && (\r\n                            <div style={{ \r\n                              marginTop: '24px', \r\n                              padding: '12px', \r\n                              backgroundColor: isDarkMode ? '#111827' : '#f3f4f6',\r\n                              borderRadius: '6px',\r\n                              textAlign: 'left'\r\n                            }}>\r\n                              <h4 style={{ \r\n                                fontSize: '14px', \r\n                                marginBottom: '8px',\r\n                                color: isDarkMode ? '#d1d5db' : '#4b5563' \r\n                              }}>\r\n                                Options to be tested:\r\n                              </h4>\r\n                              <ul style={{ \r\n                                listStyleType: 'disc', \r\n                                paddingLeft: '20px',\r\n                                color: isDarkMode ? '#9ca3af' : '#6b7280'\r\n                              }}>\r\n                                {getComponentOptions(item.header).map((option, index) => (\r\n                                  <li key={index}>{option}</li>\r\n                                ))}\r\n                              </ul>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        \r\n                        {/* Simulated test results for completed tests */}\r\n                        {testResults[item.header]?.status === 'completed' && (\r\n                          <div style={{\r\n                            padding: '20px',\r\n                            borderRadius: '8px',\r\n                            backgroundColor: isDarkMode ? '#1e1e1e' : '#f9fafb',\r\n                            border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n                          }}>\r\n                            <h3 style={{ \r\n                              marginBottom: '16px', \r\n                              color: isDarkMode ? '#d1d5db' : '#374151',\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              gap: '8px'\r\n                            }}>\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                              </svg>\r\n                              {item.header} Test Results\r\n                            </h3>\r\n                            \r\n                            <div style={{\r\n                              backgroundColor: isDarkMode ? '#0d1117' : '#f3f4f6',\r\n                              borderRadius: '6px',\r\n                              padding: '12px',\r\n                              fontFamily: 'monospace',\r\n                              fontSize: '14px',\r\n                              color: isDarkMode ? '#9ca3af' : '#374151'\r\n                            }}>\r\n                              <p>✅ All tests completed successfully</p>\r\n                              <p>⏱️ Test duration: 1.24s</p>\r\n                              <p>🔍 Tested options: {getComponentOptions(item.header).join(', ')}</p>\r\n                            </div>\r\n                            \r\n                            <button \r\n                              style={{\r\n                                marginTop: '16px',\r\n                                padding: '8px 16px',\r\n                                backgroundColor: '#10b981',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                borderRadius: '4px',\r\n                                cursor: 'pointer',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                gap: '6px'\r\n                              }}\r\n                            >\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\r\n                              </svg>\r\n                              Generate Report\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              {/* Right Panel - Test Status Overview */}\r\n              <div style={{ overflow: 'auto', height: '100%' }}>\r\n                {/* Overall Progress Card */}\r\n                <div className={styles.progressContainer}>\r\n                  <h3 className={styles.progressHeading}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.progressHeadingIcon}>\r\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    Test Progress\r\n                  </h3>\r\n\r\n                  <div className=\"flex justify-between items-center text-sm mb-2\">\r\n                    <span>{overallProgress}% Complete</span>\r\n                    <span className={`${styles.statusBadge} ${\r\n                      isComplete ? styles.colorCompleted : \r\n                      currentlyRunningTest ? styles.colorRunning : \r\n                      styles.colorWaiting\r\n                    }`}>\r\n                      {isComplete ? \"✅ All Tests Completed\" : \r\n                      currentlyRunningTest ? `⚙️ Running: ${currentlyRunningTest}` : \r\n                      \"⏳ Preparing Tests...\"}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className={styles.progressBar}>\r\n                    <div \r\n                      className={styles.progressBarFill}\r\n                      style={{ \r\n                        width: `${overallProgress}%`,\r\n                        background: 'linear-gradient(to right, #3b82f6, #4f46e5)'\r\n                      }}\r\n                    >\r\n                      {overallProgress}%\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Controls */}\r\n                  <div className=\"flex justify-end mt-4\">\r\n                    <button \r\n                      onClick={runAllTests}\r\n                      disabled={currentlyRunningTest !== null}\r\n                      className={styles.runAllButton}\r\n                      style={{\r\n                        backgroundColor: currentlyRunningTest === null ? \"#3b82f6\" : \"#9ca3af\",\r\n                        color: \"white\"\r\n                      }}\r\n                    >\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles.runAllButtonIcon} viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 01-1 1H4a1 1 0 01-1-1v-5a1 1 0 011-1 1 1 0 01.008.057z\" clipRule=\"evenodd\" />\r\n                      </svg>\r\n                      Run All Tests Again\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Test Status Grid */}\r\n                <div className={styles.progressContainer}>\r\n                  <h4 className=\"text-sm font-medium mb-2 flex items-center\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className={styles.progressHeadingIcon}>\r\n                      <path d=\"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\" />\r\n                      <path fillRule=\"evenodd\" d=\"M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                    Test Status Overview\r\n                  </h4>\r\n                  \r\n                  <div className={styles.statusGrid} style={{ gridTemplateColumns: 'repeat(auto-fill, minmax(140px, 1fr))' }}>\r\n                    {getTestStatusSummary().map((item) => (\r\n                      <div\r\n                        key={item.component}\r\n                        className={`${styles.statusCard} ${item.isActive ? styles.statusCardActive : ''} ${getStatusClassName(item.status)}`}\r\n                        onClick={() => setActiveTab(item.component)}\r\n                      >\r\n                        <div className={styles.statusCardTitle}>{item.component}</div>\r\n                        <div className={`${styles.statusBadge} ${getStatusClassName(item.status)}`}>\r\n                          {item.status === 'completed' && \"✓ Complete\"}\r\n                          {item.status === 'error' && \"✗ Error\"}\r\n                          {item.status === 'running' && \"⟳ Running\"}\r\n                          {item.status === 'waiting' && \"⏱ Waiting\"}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  {/* Save Report Button */}\r\n                  <div style={{ display: \"flex\", justifyContent: \"flex-end\", marginTop: \"8px\" }}>\r\n                    <button\r\n                      onClick={saveTestReport}\r\n                      disabled={!isComplete || isSavingReport || filteredDroppedItems.length === 0}\r\n                      className={styles.runAllButton}\r\n                      style={{\r\n                        backgroundColor: !isComplete || isSavingReport || filteredDroppedItems.length === 0 \r\n                          ? \"#9ca3af\" : \"#10b981\",\r\n                        color: \"white\"\r\n                      }}\r\n                    >\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles.runAllButtonIcon} viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                      </svg>\r\n                      {isSavingReport ? \"Saving...\" : \"Save Reports\"}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Component Options Summary */}\r\n                <div \r\n                  style={{ \r\n                    border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    borderRadius: '8px',\r\n                    backgroundColor: isDarkMode ? '#1e1e1e' : '#ffffff',\r\n                    overflow: 'hidden',\r\n                    marginTop: '16px'\r\n                  }}\r\n                >\r\n                  <div style={{ \r\n                    padding: '12px 16px',\r\n                    backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                    borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    color: isDarkMode ? '#e5e7eb' : '#1f2937',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <h3>Selected Options Summary</h3>\r\n                  </div>\r\n                  \r\n                  <div style={{ padding: '16px' }}>\r\n                    {filteredDroppedItems.map(item => (\r\n                      <div \r\n                        key={item.header}\r\n                        style={{\r\n                          marginBottom: '12px',\r\n                          padding: '12px',\r\n                          backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                          borderRadius: '8px',\r\n                          border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`\r\n                        }}\r\n                      >\r\n                        <div style={{ \r\n                          fontSize: '14px', \r\n                          fontWeight: 'bold',\r\n                          marginBottom: '8px',\r\n                          color: isDarkMode ? '#e5e7eb' : '#374151'\r\n                        }}>\r\n                          {item.header}\r\n                        </div>\r\n                        {getComponentOptions(item.header).length > 0 ? (\r\n                          <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280' }}>\r\n                            {getComponentOptions(item.header).map((option, index) => (\r\n                              <div \r\n                                key={index}\r\n                                style={{\r\n                                  padding: '4px 8px',\r\n                                  backgroundColor: isDarkMode ? '#1f2937' : '#f3f4f6',\r\n                                  borderRadius: '4px',\r\n                                  display: 'inline-block',\r\n                                  margin: '0 4px 4px 0',\r\n                                  fontSize: '12px'\r\n                                }}\r\n                              >\r\n                                ✓ {option}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        ) : (\r\n                          <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280', fontStyle: 'italic', fontSize: '12px' }}>\r\n                            No options selected for this component\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Testing Log Output */}\r\n                <div style={{ \r\n                  border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                  borderRadius: '8px',\r\n                  backgroundColor: isDarkMode ? '#1e1e1e' : '#ffffff',\r\n                  overflow: 'hidden',\r\n                  marginTop: '16px'\r\n                }}>\r\n                  <div style={{ \r\n                    padding: '12px 16px',\r\n                    backgroundColor: isDarkMode ? '#111827' : '#f9fafb',\r\n                    borderBottom: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\r\n                    color: isDarkMode ? '#e5e7eb' : '#1f2937',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                  }}>\r\n                    <h3>Test Console Output</h3>\r\n                    <button style={{ \r\n                      backgroundColor: 'transparent',\r\n                      border: 'none',\r\n                      color: isDarkMode ? '#d1d5db' : '#6b7280',\r\n                      cursor: 'pointer',\r\n                      fontSize: '12px'\r\n                    }}>\r\n                      Clear\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  <div style={{ \r\n                    padding: '12px',\r\n                    maxHeight: '200px',\r\n                    overflowY: 'auto',\r\n                    fontFamily: 'monospace',\r\n                    fontSize: '12px',\r\n                    backgroundColor: isDarkMode ? '#0d1117' : '#f8fafc',\r\n                    color: isDarkMode ? '#d1d5db' : '#374151'\r\n                  }}>\r\n                    {currentlyRunningTest ? (\r\n                      <>\r\n                        <div style={{ color: '#3b82f6' }}>\r\n                          [INFO] {new Date().toLocaleTimeString()} - Starting test for {currentlyRunningTest}\r\n                        </div>\r\n                        <div style={{ color: isDarkMode ? '#d1d5db' : '#6b7280' }}>\r\n                          [DEBUG] {new Date().toLocaleTimeString()} - Initializing test environment\r\n                        </div>\r\n                        <div style={{ color: isDarkMode ? '#d1d5db' : '#6b7280' }}>\r\n                          [DEBUG] {new Date().toLocaleTimeString()} - Testing options: {getComponentOptions(currentlyRunningTest).join(', ')}\r\n                        </div>\r\n                        <div className={styles.pulseAnimation} style={{ color: '#10b981' }}>\r\n                          [INFO] {new Date().toLocaleTimeString()} - Running test procedures...\r\n                        </div>\r\n                      </>\r\n                    ) : isComplete ? (\r\n                      <div style={{ color: '#10b981' }}>\r\n                        [SUCCESS] {new Date().toLocaleTimeString()} - All tests completed successfully!\r\n                      </div>\r\n                    ) : (\r\n                      filteredDroppedItems.length === 0 ? (\r\n                        <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280', fontStyle: 'italic' }}>\r\n                          No test items with checked options found. Please check options in the Checkout Section.\r\n                        </div>\r\n                      ) : (\r\n                        <div style={{ color: isDarkMode ? '#9ca3af' : '#6b7280', fontStyle: 'italic' }}>\r\n                          Ready to start tests. Click \"Run All Tests Again\" to begin.\r\n                        </div>\r\n                      )\r\n                    )}\r\n                    \r\n                    {/* Display completed test logs */}\r\n                    {Object.entries(testResults)\r\n                      .filter(([_, result]) => result.status === 'completed' || result.status === 'error')\r\n                      .map(([component, result]) => {\r\n                        const options = getComponentOptions(component);\r\n                        return (\r\n                          <div key={component} style={{ \r\n                            color: result.status === 'completed' ? '#10b981' : '#ef4444',\r\n                            marginTop: '4px'\r\n                          }}>\r\n                            [{result.status === 'completed' ? 'SUCCESS' : 'ERROR'}] {new Date().toLocaleTimeString()} - \r\n                            {result.status === 'completed' \r\n                              ? ` ${component} test completed successfully, options: ${options.join(', ')}` \r\n                              : ` ${component} test failed: ${result.message || 'unknown error'}`}\r\n                          </div>\r\n                        );\r\n                      })\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Draggable>,\r\n    portalElement\r\n  );\r\n};\r\n\r\nexport default CheckoutTestProgress;\r\n                "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7090, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/MainScreen/MainScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styles from \"./MainScreen.module.css\";\r\nimport ToTestList from \"../ToTestList/ToTestList\";\r\nimport { FaCube, FaCheck, FaTimes, FaWrench, FaBars, FaCog, FaPlus, FaEdit, FaTrash, FaInfoCircle, FaPlay } from \"react-icons/fa\";\r\nimport { FaDownload } from \"react-icons/fa\";\r\nimport mammoth from \"mammoth\"; // Import mammoth for `.docx` extraction, npm install mammoth\r\nimport { renderAsync } from \"docx-preview\"; // npm install docx-preview\r\nimport { Document, Packer, Paragraph } from \"docx\"; // npm install docx\r\nimport { EditorContent, useEditor } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport { Profile } from '@/types/types';\r\nimport Table from \"@tiptap/extension-table\";\r\nimport TableRow from \"@tiptap/extension-table-row\";\r\nimport TableCell from \"@tiptap/extension-table-cell\";\r\nimport TableHeader from \"@tiptap/extension-table-header\";\r\nimport BulletList from \"@tiptap/extension-bullet-list\";\r\nimport OrderedList from \"@tiptap/extension-ordered-list\";\r\nimport ListItem from \"@tiptap/extension-list-item\";\r\nimport TurndownService from \"turndown\";\r\nimport { DragOverlay, DndContext, closestCorners, closestCenter, pointerWithin, getFirstCollision, useSensor, useSensors, PointerSensor } from \"@dnd-kit/core\";\r\nimport { Collision, CollisionDetection } from \"@dnd-kit/core\";\r\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\r\nimport DraggableBox from \"../MainScreen/DraggableBox\"; // Import Draggable Box\r\nimport { useDroppable } from \"@dnd-kit/core\";\r\nimport { useDndContext } from \"@dnd-kit/core\";\r\nimport { rectIntersection } from \"@dnd-kit/core\";\r\nimport { DragEndEvent, UniqueIdentifier } from '@dnd-kit/core';\r\nimport ThreeDModelWindow from \"@/components/ModelWindow/ThreeDModelWindow\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { WindowName } from \"@/types/types\";\r\nimport CheckoutTestProgress from \"@/components/CheckoutTestProgress/CheckoutTestProgress\";\r\nimport { connectToMcc, setSimulationMode } from \"@/utils/mccUtils\";\r\nimport SettingsWindow from \"@/components/SettingsWindow/SettingsWindow\";\r\n\r\nconst API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\"; // fall back\r\n// Ensure this is correct\r\n\r\ninterface DroppableContainerType {\r\n  id: string;\r\n  data: {\r\n    type: string;\r\n    accepts: string[];\r\n    isDropZone?: boolean;\r\n  };\r\n}\r\n\r\ninterface CollisionRect {\r\n  top: number;\r\n  bottom: number;\r\n  left: number;\r\n  right: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\ninterface CollisionData {\r\n  droppableContainer: DroppableContainerType;\r\n  value: number;\r\n  rect: CollisionRect;\r\n}\r\n\r\ninterface CustomCollision {\r\n  id: string;\r\n  data: CollisionData;\r\n}\r\n\r\ninterface DraggableItem {\r\n  id: string;\r\n  header: string;\r\n  options: string[];\r\n  isDropped: boolean;\r\n  checkedOptions: Record<string, boolean>;\r\n}\r\n\r\ninterface MainScreenProps {\r\n  openToTestList: (forceRender?: boolean) => void; // Updated to accept optional parameter\r\n  closeToTestList: () => void;  // ✅ Accept close function as a prop\r\n  openServerWindow: () => void;\r\n  openModelWindow: (profileId?: number) => void;\r\n  closeModelWindow: () => void;  // ✅ Accept close function\r\n  showToTestList: boolean;  // ✅ Accept this prop\r\n  showThreeDModelWindow: boolean;  // ✅ Accept this prop\r\n  threeDModelProfileId: number | null;  // ✅ Accept profile ID\r\n  windowZIndexes: { [key in WindowName]: number };  // ✅ Ensure proper indexing\r\n  bringWindowToFront: (windowName: WindowName) => void;  // ✅ Ensure correct function type\r\n  zIndexCounter: number;  // ✅ Accept counter\r\n  navigateWithState?: (to: string, options?: any) => void;\r\n  showSettingsWindow: boolean;\r\n  openSettingsWindow: () => void;\r\n  closeSettingsWindow: () => void;\r\n}\r\n\r\nconst MainScreen: React.FC<MainScreenProps> = ({ \r\n  openToTestList, \r\n  closeToTestList, // ✅ Use close function\r\n  openServerWindow, \r\n  openModelWindow,\r\n  closeModelWindow,  // ✅ Use function from props\r\n  showToTestList,  // ✅ Use this prop\r\n  showThreeDModelWindow,  // ✅ Use this prop\r\n  threeDModelProfileId,  // ✅ Use profile ID from props\r\n  windowZIndexes, // ✅ Use windowZIndexes from props\r\n  bringWindowToFront,  // ✅ Use function from props\r\n  zIndexCounter,  // ✅ Use counter from props\r\n  showSettingsWindow,\r\n  openSettingsWindow,\r\n  closeSettingsWindow,\r\n}): React.ReactElement => {\r\n\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [isProfileDropdownOpen, setIsProfileDropdownOpen] = useState(false);\r\n  const [profiles, setProfiles] = useState<Profile[]>([]);\r\n  const [selectedProfile, setSelectedProfile] = useState<string | null>(null);\r\n  const [showAbout, setShowAbout] = useState(false);\r\n  const [uploadedText, setUploadedText] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(false); // for aboutSection\r\n  const [tempDescription, setTempDescription] = useState(\"\");\r\n  const [uploadedImages, setUploadedImages] = useState<{ src: string; alt: string }[]>([]);\r\n  const [uploadedFileName, setUploadedFileName] = useState<string | null>(null);\r\n  const [profileData, setProfileData] = useState<{ \r\n    [key: string]: { \r\n      description: string; \r\n      images: { src: string; alt: string }[]; \r\n      uploadedFileName?: string; // ✅ Store filename per profile\r\n    } \r\n  }>({});\r\n  const [showCheckout, setShowCheckout] = useState(false);\r\n  const [isCheckoutEditing, setIsCheckoutEditing] = useState(false); // For checkoutSection\r\n  const [droppedItems, setDroppedItems] = useState<DraggableItem[]>([]);\r\n  // Manage draggable items\r\n  const [items, setItems] = useState<DraggableItem[]>([\r\n    { id: \"1\", header: \"OBC-1\", options: [\"eMMC\"], isDropped: false, checkedOptions: {} }, // ✅ Ensure consistent key name\r\n    { id: \"2\", header: \"OBC-2\", options: [\"SD Card\", \"EEPROM\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"3\", header: \"S-Band\", options: [\"Telemetry\", \"Ground Pass\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"4\", header: \"UHF\", options: [\"Telemetry\", \"Ground Pass\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"5\", header: \"HEPS\", options: [\"Solar Panel\", \"Heater\", \"Hdrm\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"6\", header: \"ADCS\", options: [\"Version Check\", \"Gyroscope\", \"Magnetometer\", \"Star Tracker\", \"FOG\", \"Fine Sun Sensor\", \"Coarse Sun Sensor\", \"Earth Sensor\", \"Reaction Wheel\", \"Magnetic Torquer\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"7\", header: \"GPS\", options: [\"Version Check\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"8\", header: \"Propulsion\", options: [\"ECU-1 PMA\", \"ECU-1 PPU-1\", \"ECU-2 PMA\", \"ECU-2 PPU-2\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"9\", header: \"PCS\", options: [\"SD Card\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"10\", header: \"Payload\", options: [\"LEOCAM\", \"AOD\"], isDropped: false, checkedOptions: {} },\r\n    { id: \"11\", header: \"X-Band\", options: [\"Telecommand\", \"Telemetry\"], isDropped: false, checkedOptions: {} },\r\n  ]);\r\n  const [activeId, setActiveId] = useState<string | null>(null);\r\n  const [dummyState, setDummyState] = useState(false); // Declare a state for forcing re-renders\r\n  const [sortableKey, setSortableKey] = useState(0);\r\n  const [show3DModel, setShow3DModel] = useState(false); // Manage pop-up visibility\r\n  const [selectedProfileId, setSelectedProfileId] = useState<number | null>(null);\r\n  const [showCheckoutTest, setShowCheckoutTest] = useState(false);\r\n  const [mccSocket, setMccSocket] = useState<any>(null);\r\n  // Add this state to store the real MCC socket\r\nconst [realMccSocket, setRealMccSocket] = useState<any>(null);\r\nconst [settingsWindowVisible, setSettingsWindowVisible] = useState(showSettingsWindow);\r\n  \r\n  // In MainScreen.tsx, add this after your state declarations but before your functions\r\n  const dragTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined);\r\n\r\n  const removeDroppedItem = (itemId: string) => {\r\n    if (dragTimeoutRef.current) {\r\n      clearTimeout(dragTimeoutRef.current);\r\n    }\r\n  \r\n    console.log(`🗑️ Attempting to remove item ${itemId} from top section`);\r\n  \r\n    // ✅ Remove from `droppedItems`\r\n    setDroppedItems(prev => {\r\n      const updatedDroppedItems = prev.filter(item => item.id !== itemId);\r\n      console.log(\"✅ Updated dropped items after removal:\", updatedDroppedItems);\r\n      return [...updatedDroppedItems]; // ✅ Force reactivity\r\n    });\r\n  \r\n    // ✅ Ensure item is draggable again by updating `items` state\r\n    setItems(prev => {\r\n      const updatedItems = prev.map(item => {\r\n        if (item.id === itemId) {\r\n          console.log(`✅ Resetting isDropped for item ${itemId}`);\r\n          return { ...item, isDropped: false };\r\n        }\r\n        return item;\r\n      });\r\n      console.log(\"✅ Updated items after removal:\", updatedItems);\r\n      return [...updatedItems]; // ✅ Ensure a new array reference for reactivity\r\n    });\r\n  \r\n    // ✅ Reset DOM attributes to make the item draggable again\r\n    setTimeout(() => {\r\n      const bottomItem = document.querySelector(`[data-draggable-id=\"${itemId}\"]`) as HTMLElement;\r\n      if (bottomItem) {\r\n        console.log(`✅ Resetting DOM attributes for item ${itemId}`);\r\n        bottomItem.removeAttribute('data-dropped');\r\n        bottomItem.style.pointerEvents = 'auto';\r\n        bottomItem.style.opacity = '1';\r\n        bottomItem.style.cursor = 'grab';\r\n      }\r\n    }, 50);\r\n  \r\n    setActiveId(null);\r\n    setDragging(false);\r\n  \r\n    // ✅ FULL Reset of Drop Zones and SortableContext\r\n    setTimeout(() => {\r\n      console.log(\"🔄 FORCING FULL Reset of Drop Zones and SortableContext...\");\r\n      setDroppedItems(prev => [...prev]);\r\n      setItems(prev => [...prev]); // ✅ Ensure full re-render\r\n  \r\n      // ✅ Force SortableContext to reset\r\n      setSortableKey(prev => prev + 1);\r\n    }, 200);\r\n  };\r\n  \r\n// Add a function to handle checkbox changes\r\nconst handleOptionChange = (itemId: string, option: string, checked: boolean) => {\r\n  console.log(`Checkbox changed: ${itemId}, option: ${option}, checked: ${checked}`);\r\n  // Update items if the item is in the bottom section\r\n  setItems(prevItems => \r\n    prevItems.map(item => \r\n      item.id === itemId \r\n        ? { \r\n            ...item, \r\n            checkedOptions: { \r\n              ...item.checkedOptions, \r\n              [option]: checked \r\n            } \r\n          }\r\n        : item\r\n    )\r\n  );\r\n  \r\n  // Update droppedItems if the item is in the top section\r\n  setDroppedItems(prevItems => \r\n    prevItems.map(item => \r\n      item.id === itemId \r\n        ? { \r\n            ...item, \r\n            checkedOptions: { \r\n              ...item.checkedOptions, \r\n              [option]: checked \r\n            } \r\n          }\r\n        : item\r\n    )\r\n  );\r\n  \r\n  // Save the updated state to the database\r\n  handleSaveCheckout();\r\n};\r\n  \r\n  \r\n  const observerRef = useRef<MutationObserver | null>(null);\r\n\r\n  const renderCount = useRef(0); // Track how many times it runs\r\n\r\n  useEffect(() => {\r\n    if (!isCheckoutEditing) return;\r\n  \r\n    renderCount.current += 1;\r\n    console.log(`🔁 useEffect executed ${renderCount.current} times`);\r\n  \r\n    const dropZones = document.querySelectorAll('[data-droppable-id]');\r\n    dropZones.forEach(zone => {\r\n      zone.setAttribute('data-droppable', 'true');\r\n      zone.setAttribute('data-type', 'container');\r\n    });\r\n  \r\n  }, [isCheckoutEditing]);\r\n  \r\n  \r\n  \r\n  \r\n\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"🔄 Drop zones reloaded due to dragging state\");\r\n  }, [dragging]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchProfiles();\r\n  }, []);\r\n\r\n  const fetchProfiles = async () => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/profiles`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch profiles.\");\r\n      }\r\n  \r\n      const data = await response.json();\r\n  \r\n      let profileMap: {\r\n        [key: string]: { description: string; images: { src: string; alt: string }[], uploadedFileName?: string };\r\n      } = {};\r\n  \r\n      data.forEach((profile: Profile) => {\r\n        profileMap[profile.name] = {\r\n          description: profile.description || \"\",\r\n          images: profile.images && Array.isArray(profile.images)\r\n            ? profile.images.map(img => \r\n                typeof img === \"string\" \r\n                  ? { src: img, alt: \"Uploaded image\" } \r\n                  : img) \r\n            : [],\r\n          uploadedFileName: profile.uploadedFileName || \"\",\r\n        };\r\n      });\r\n  \r\n      setProfiles(data);\r\n      setProfileData(profileMap);\r\n    } catch (error) {\r\n      console.error(\"Error fetching profiles:\", error);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const toggleSidebar = () => setIsSidebarOpen(!isSidebarOpen);\r\n  const toggleProfileDropdown = () => setIsProfileDropdownOpen(!isProfileDropdownOpen);\r\n  const toggleAbout = () => {\r\n    if (!selectedProfile) return;\r\n    setShowAbout(!showAbout);\r\n  };\r\n\r\n\r\n  const addProfile = async () => {\r\n    let profileName = prompt(\"Enter profile name:\");\r\n  \r\n    if (!profileName || profileName.trim() === \"\") {\r\n      alert(\"Profile name cannot be empty.\");\r\n      return;\r\n    }\r\n  \r\n    profileName = profileName.trim();\r\n  \r\n    if (profiles.some((profile) => profile.name.toLowerCase() === profileName.toLowerCase())) {\r\n      alert(\"Profile name already exists! Choose a different name.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch(`${API_URL}/profiles`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ name: profileName, description: \"\", images: [] }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorMessage = await response.json();\r\n        throw new Error(errorMessage.error || \"Failed to create profile.\");\r\n      }\r\n  \r\n      const newProfile = await response.json();\r\n      setProfiles([...profiles, newProfile]);\r\n  \r\n      // Initialize profile data\r\n      setProfileData((prev) => ({\r\n        ...prev,\r\n        [newProfile.name]: { description: \"\", images: [] },\r\n      }));\r\n    } catch (error: unknown) {\r\n      console.error(\"Error adding profile:\", error);\r\n      if (error instanceof Error) {\r\n        alert(error.message);\r\n      } else {\r\n        alert(\"An unexpected error occurred.\");\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n  const deleteProfile = async (profileName: string) => {\r\n    const confirmDelete = window.confirm(`Are you sure you want to delete the profile: ${profileName}?`);\r\n    if (!confirmDelete) {\r\n      return; // Cancel deletion if user clicks \"Cancel\"\r\n    }\r\n  \r\n    try {\r\n      await fetch(`${API_URL}/profiles/${profileName}`, { method: \"DELETE\" });\r\n      setProfiles(profiles.filter((profile) => profile.name !== profileName));\r\n      setSelectedProfile(null);\r\n    } catch (error) {\r\n      console.error(\"Error deleting profile:\", error);\r\n    }\r\n  };\r\n  \r\n  const convertImageToBase64 = async (imageUrl: string): Promise<string> => {\r\n    try {\r\n      const response = await fetch(imageUrl);\r\n      const blob = await response.blob();\r\n      return new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result as string);\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error converting image to Base64:\", error);\r\n      return \"\";\r\n    }\r\n  };\r\n  \r\n  let formattedHtml = \"\";\r\n\r\n  const turndownService = new TurndownService();\r\n  turndownService.addRule(\"list\", {\r\n    filter: [\"ul\", \"ol\"],\r\n    replacement: function (content: string, node: Node) {\r\n      return (node as HTMLElement).outerHTML; // ✅ Typecast `node` as `HTMLElement`\r\n    },\r\n  });\r\n  \r\n  \r\n/* Function to handle file uploads */\r\nconst handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  if (!selectedProfile) return;\r\n\r\n  const file = event.target.files?.[0];\r\n  if (!file) return;\r\n\r\n  const fileName = file.name;\r\n\r\n  // ✅ Store the file name (avoid unnecessary re-renders)\r\n  setProfileData((prevData) => ({\r\n    ...prevData,\r\n    [selectedProfile]: {\r\n      ...prevData[selectedProfile],\r\n      uploadedFileName: fileName,\r\n    },\r\n  }));\r\n\r\n  const reader = new FileReader();\r\n\r\n  if (file.type === \"text/plain\") {\r\n    reader.onload = (e) => {\r\n      if (e.target?.result) {\r\n        const uploadedText = e.target.result.toString().trim();\r\n        console.log(\"Extracted Text Content:\", uploadedText);\r\n        setUploadedText(uploadedText);\r\n        autoSaveToDatabase(uploadedText, uploadedImages);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  } else if (file.name.endsWith(\".docx\")) {\r\n    reader.onload = async (e) => {\r\n      if (e.target?.result instanceof ArrayBuffer) {\r\n        try {\r\n          let formattedHtml = \"\";\r\n\r\n          // ✅ Extract HTML using `mammoth.convertToHtml()`\r\n          const mammothResult = await mammoth.convertToHtml({ arrayBuffer: e.target.result });\r\n          let extractedHtml = mammothResult.value.trim();\r\n\r\n          console.log(\"Mammoth Extracted Content (With Lists):\", extractedHtml);\r\n\r\n          // ✅ Preserve bullet points & numbered lists properly\r\n          formattedHtml = extractedHtml\r\n            .replace(/<p>\\s*•\\s*/g, \"<ul><li>\") // Fix unordered lists\r\n            .replace(/<p>\\s*\\d+\\.\\s*/g, \"<ol><li>\") // Fix ordered lists\r\n            .replace(/<\\/p>\\s*<p>/g, \"</li><li>\") // Ensure list items are correctly wrapped\r\n            .replace(/<\\/p>/g, \"</li></ul>\") // Close unordered lists properly\r\n            .replace(/<\\/ol><\\/li>/g, \"</ol>\") // Close ordered lists properly\r\n            .replace(/<\\/li><\\/ul>(?!<\\/li>)/g, \"</ul>\"); // Remove misaligned list endings\r\n\r\n          console.log(\"Final Processed HTML (Fixed Lists):\", formattedHtml);\r\n\r\n          // ✅ Process `docx-preview` but DO NOT append it to the UI\r\n          const docxContainer = document.createElement(\"div\");\r\n          await renderAsync(e.target.result, docxContainer);\r\n\r\n          // ✅ Extract only relevant content, ignoring `docx-preview` elements\r\n          const extractedBodyContent = docxContainer.querySelector(\"article\")?.innerHTML || \"\";\r\n\r\n          // ✅ Ensure we use the most structured version\r\n          formattedHtml = extractedBodyContent.includes(formattedHtml)\r\n            ? extractedBodyContent\r\n            : extractedBodyContent || formattedHtml;\r\n\r\n          // ✅ Remove `docx-preview` elements BEFORE storing content\r\n          const tempContainer = document.createElement(\"div\");\r\n          tempContainer.innerHTML = formattedHtml;\r\n          tempContainer.querySelectorAll(\"section.docx, .docx-wrapper\").forEach((el) => el.remove());\r\n          formattedHtml = tempContainer.innerHTML.trim();\r\n\r\n          // ✅ Ensure proper table & list styling\r\n          formattedHtml = formattedHtml\r\n            .replace(/<table/g, '<table style=\"border-collapse: collapse; width: 100%; border: 1px solid black;\"') \r\n            .replace(/<td/g, '<td style=\"padding: 8px; border: 1px solid black;\"') \r\n            .replace(/<ul/g, '<ul style=\"padding-left: 20px; list-style-type: disc; margin-top: 10px; margin-bottom: 10px;\"') \r\n            .replace(/<ol/g, '<ol style=\"padding-left: 20px; list-style-type: decimal; margin-top: 10px; margin-bottom: 10px;\"') \r\n            .replace(/<li/g, '<li style=\"margin-bottom: 5px;\"'); // ✅ Ensure list items have proper spacing\r\n\r\n          // ✅ Remove incorrect `<li>` wrapping on normal text\r\n          formattedHtml = formattedHtml.replace(/<li><strong>/g, \"<p><strong>\").replace(/<\\/strong><\\/li>/g, \"</strong></p>\");\r\n\r\n          // ✅ Extract images & convert to Base64\r\n          const extractedImages = await Promise.all(\r\n            Array.from(docxContainer.querySelectorAll(\"img\")).map(async (img) => {\r\n              const base64Image = await convertImageToBase64(img.src);\r\n              return { src: base64Image, alt: img.alt || \"Uploaded image\" };\r\n            })\r\n          );\r\n\r\n          // ✅ Store only cleaned & formatted content without `docx-preview`\r\n          setUploadedText(formattedHtml.trim());\r\n          setUploadedImages(extractedImages);\r\n          autoSaveToDatabase(formattedHtml.trim(), extractedImages);\r\n\r\n          // ✅ Remove `docx-preview` from the DOM after processing\r\n          document.querySelectorAll(\"section.docx, .docx-wrapper\").forEach((el) => el.remove());\r\n        } catch (error) {\r\n          console.error(\"Error processing .docx:\", error);\r\n        }\r\n      }\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  } else if (file.type.startsWith(\"image/\")) {\r\n    reader.onload = (e) => {\r\n      if (e.target?.result) {\r\n        const base64Image = e.target.result.toString();\r\n        const newImage = { src: base64Image, alt: \"Uploaded image\" };\r\n\r\n        setUploadedImages((prevImages) => [...prevImages, newImage]);\r\n        autoSaveToDatabase(uploadedText, [...uploadedImages, newImage]);\r\n      }\r\n    };\r\n    reader.readAsDataURL(file);\r\n  } else {\r\n    alert(\"Invalid file type. Please upload a .txt, .docx, or an image file.\");\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/* ✅ Function to Start Editing */\r\nconst startEditing = () => {\r\n  if (!selectedProfile) return;\r\n  \r\n  setTempDescription(profileData[selectedProfile]?.description || \"\");\r\n  setIsEditing(true);\r\n\r\n  if (editor) {\r\n      editor.commands.setContent(profileData[selectedProfile]?.description || \"\");\r\n  }\r\n};\r\n\r\n\r\n/* ✅ Function to Save Edited Description */\r\nconst saveEditedDescription = async () => {\r\n  if (!selectedProfile) return;\r\n\r\n  const formattedText = editor?.getHTML() || \"\";\r\n\r\n  try {\r\n    await fetch(`${API_URL}/profiles/${selectedProfile}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        description: formattedText,\r\n        images: uploadedImages, // ✅ Save updated images\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      }),\r\n    });\r\n\r\n    // ✅ Update profileData to reflect saved changes\r\n    setProfileData((prevData) => ({\r\n      ...prevData,\r\n      [selectedProfile]: {\r\n        description: formattedText,\r\n        images: uploadedImages, // ✅ Store updated images in state\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      },\r\n    }));\r\n\r\n    setIsEditing(false);\r\n  } catch (error) {\r\n    console.error(\"Error saving description:\", error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst removeImage = (index: number) => {\r\n  if (!selectedProfile || !isEditing) return; // ✅ Ensure we're in edit mode\r\n\r\n  setProfileData((prevData) => {\r\n    const updatedImages = (prevData[selectedProfile]?.images || []).filter((_, i) => i !== index);\r\n\r\n    return {\r\n      ...prevData,\r\n      [selectedProfile]: {\r\n        ...prevData[selectedProfile],\r\n        images: updatedImages,\r\n      },\r\n    };\r\n  });\r\n\r\n  // ✅ Temporarily update images during editing\r\n  setUploadedImages((prevImages) => prevImages.filter((_, i) => i !== index));\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* ✅ Sanitize Extracted HTML */\r\n/* ✅ Sanitize Extracted HTML */\r\nconst sanitizeHTML = (html: string): string => {\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(html, \"text/html\");\r\n\r\n  // ✅ Ensure lists (`<ul>`, `<ol>`, `<li>`) are preserved\r\n  doc.querySelectorAll(\"p:empty, div:empty\").forEach((node) => node.remove());\r\n  doc.querySelectorAll(\"br\").forEach((node) => node.remove());\r\n\r\n  // ✅ Log extracted HTML to verify if lists exist before rendering\r\n  console.log(\"Sanitized HTML Output:\", doc.body.innerHTML);\r\n\r\n  return doc.body.innerHTML;\r\n};\r\n\r\n\r\n/* Save to File */\r\nconst saveToFile = (format = \"txt\") => {\r\n  if (!uploadedText) {\r\n    alert(\"No content to save.\");\r\n    return;\r\n  }\r\n\r\n  if (!selectedProfile) {\r\n    alert(\"No profile selected.\");\r\n    return;\r\n  }\r\n\r\n  const sanitizedProfileName = selectedProfile.replace(/[^a-zA-Z0-9_-]/g, \"\");\r\n  const readableText = convertHtmlToPlainText(uploadedText); // ✅ Convert HTML to plain text\r\n\r\n  if (format === \"txt\") {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([readableText], { type: \"text/plain\" }); // ✅ Save as plain text\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = `${sanitizedProfileName}_Specifications.txt`;\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  } else if (format === \"docx\") {\r\n    const doc = new Document({\r\n      sections: [\r\n        {\r\n          properties: {},\r\n          children: readableText.split(\"\\n\").map(line => new Paragraph(line)), // ✅ Split into paragraphs\r\n        },\r\n      ],\r\n    });\r\n\r\n    Packer.toBlob(doc).then((blob) => {\r\n      const url = URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.download = `${sanitizedProfileName}_Specifications.docx`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    });\r\n  }\r\n};\r\n\r\nconst cancelEditing = () => {\r\n  setIsEditing(false);\r\n};\r\n\r\nconst autoSaveToDatabase = async (text: string, images: { src: string; alt: string }[]) => {\r\n  if (!selectedProfile) {\r\n    alert(\"No profile selected.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API_URL}/profiles/${selectedProfile}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        description: text,\r\n        images: images.map(img => img.src), // ✅ Ensure only the src is saved\r\n        uploadedFileName: profileData[selectedProfile]?.uploadedFileName || \"\",\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      console.log(\"Profile updated automatically.\");\r\n    } else {\r\n      console.error(\"Error saving profile.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error saving profile:\", error);\r\n  }\r\n};\r\n\r\n\r\nconst convertHtmlToPlainText = (html: string): string => {\r\n  const doc = new DOMParser().parseFromString(html, \"text/html\");\r\n  return doc.body.textContent || \"\";\r\n};\r\n\r\nconst editor = useEditor({\r\n  extensions: [\r\n    StarterKit.configure({\r\n      bulletList: false, // ✅ Disable default list handling\r\n      orderedList: false,\r\n    }),\r\n    Table.configure({\r\n      resizable: true,\r\n    }),\r\n    TableRow,\r\n    TableCell,\r\n    TableHeader,\r\n    BulletList, // ✅ Enable bullet points\r\n    OrderedList, // ✅ Enable numbered lists\r\n    ListItem,    // ✅ Enable list items\r\n  ],\r\n  content: uploadedText, // Initialize with the uploaded content\r\n  onUpdate: ({ editor }) => setTempDescription(editor.getHTML()), // Update state with editor changes\r\n  editorProps: {\r\n    attributes: {\r\n      class: \"prose focus:outline-none\",\r\n    },\r\n  },\r\n  immediatelyRender: false, // Fix SSR Hydration Mismatch\r\n});\r\n\r\n\r\n// Reset editor content when uploadedText changes\r\nuseEffect(() => {\r\n  if (editor && uploadedText) {\r\n    editor.commands.setContent(uploadedText); // Dynamically update editor content\r\n  }\r\n}, [uploadedText, editor]);\r\n\r\nconst handleProfileSelect = (profileName: string) => {\r\n  if (!profileName) return; // Prevent errors\r\n\r\n  setSelectedProfile(profileName);\r\n  setShowAbout(false); // Close About Section when switching profiles\r\n\r\n  // Ensure images are correctly set and do not become undefined\r\n  const profile = profileData[profileName] || { description: \"\", images: [], uploadedFileName: \"\" };\r\n\r\n  setUploadedImages(profile.images.length ? profile.images : []); // ✅ Ensure images exist\r\n  setUploadedText(profile.description);\r\n};\r\n\r\nconst toggleCheckout = async () => {\r\n  if (!selectedProfile) return;\r\n  \r\n  if (!showCheckout) {\r\n    // If opening the checkout section, ensure items are loaded\r\n    await handleLoadCheckout(selectedProfile);\r\n  }\r\n  \r\n  setShowCheckout(!showCheckout);\r\n};\r\n\r\nconst toggleCheckoutEditMode = () => {\r\n  console.log(\"Toggling Checkout Edit Mode\");\r\n  setIsCheckoutEditing(prev => !prev);\r\n};\r\n\r\n\r\nconst { active } = useDndContext(); // ✅ Get active drag item\r\n\r\n// Define droppable state\r\nconst { isOver: isOverTop, setNodeRef: topSectionRef } = useDroppable({\r\n  id: \"top-section\",\r\n  data: {\r\n    type: \"container\",\r\n    accepts: [\"draggable-item\"],\r\n    isDropZone: true,\r\n  },\r\n  disabled: false, // Ensure it's always active\r\n});\r\n\r\nconst { isOver: isOverBottom, setNodeRef: bottomSectionRef } = useDroppable({\r\n  id: \"bottom-section\",\r\n  data: {\r\n    accepts: [\"draggable-item\"],\r\n    type: \"container\"\r\n  }\r\n});\r\n\r\n// ✅ Add this after the useDroppable hooks\r\nuseEffect(() => {\r\n  console.log(\"Active Dragging Type:\", active?.data?.current?.type);\r\n}, [active]);\r\n\r\n\r\n// add this state to track the background color, to match checkout section's dynamic background\r\nconst [checkoutBgColor, setCheckoutBgColor] = useState('var(--background-color, #ffffff)');\r\n\r\n// Add an effect to update the background color when the theme changes\r\nuseEffect(() => {\r\n  const updateBackgroundColor = () => {\r\n    const isDarkMode = document.documentElement.classList.contains('dark');\r\n    setCheckoutBgColor(isDarkMode ? 'var(--dark-bg, #1a1a1a)' : 'var(--light-bg, #ffffff)');\r\n  };\r\n\r\n  // Initial update\r\n  updateBackgroundColor();\r\n\r\n  // Create observer for theme changes\r\n  const observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      if (mutation.attributeName === 'class') {\r\n        updateBackgroundColor();\r\n      }\r\n    });\r\n  });\r\n\r\n  // Start observing theme changes\r\n  observer.observe(document.documentElement, {\r\n    attributes: true,\r\n    attributeFilter: ['class'],\r\n  });\r\n\r\n  return () => observer.disconnect();\r\n}, []);\r\n\r\nconst lastValidDropZoneRef = useRef<string | null>(null);\r\n\r\nlet lastValidDropZone: { id: string } | null = null;\r\n\r\n// customCollisionDetection function\r\n// Update collision detection for better sensitivity\r\n// Replace your existing customCollisionDetection with this updated version\r\nconst customCollisionDetection: CollisionDetection = (args) => {\r\n  const { collisionRect, droppableContainers } = args;\r\n  const validDropZoneIds = new Set([\"top-section\", \"bottom-section\", \"1\", \"2\"]);\r\n\r\n  // Create expanded collision rect with larger detection area\r\n  const expandedRect = {\r\n    ...collisionRect,\r\n    width: collisionRect.width + 60,    // Increased detection area\r\n    height: collisionRect.height + 60,   \r\n    left: collisionRect.left - 30,      \r\n    right: collisionRect.right + 30,    \r\n    top: collisionRect.top - 30,        \r\n    bottom: collisionRect.bottom + 30    \r\n  };\r\n\r\n  return droppableContainers\r\n    .filter(container => validDropZoneIds.has(String(container.id)))\r\n    .map(container => {\r\n      const element = document.querySelector(`[data-droppable-id=\"${container.id}\"]`);\r\n      if (!element) return null;\r\n\r\n      const rect = element.getBoundingClientRect();\r\n      const isTopSection = container.id === \"top-section\" || container.id === \"1\";\r\n      \r\n      // Add padding for better drop detection\r\n      const adjustedRect = {\r\n        top: rect.top - (isTopSection ? 40 : 20),\r\n        bottom: rect.bottom + (isTopSection ? 40 : 20),\r\n        left: rect.left - (isTopSection ? 40 : 20),\r\n        right: rect.right + (isTopSection ? 40 : 20),\r\n        width: rect.width + (isTopSection ? 80 : 40),\r\n        height: rect.height + (isTopSection ? 80 : 40)\r\n      };\r\n\r\n      // More lenient intersection check\r\n      const intersects = (\r\n        expandedRect.left < adjustedRect.right &&\r\n        expandedRect.right > adjustedRect.left &&\r\n        expandedRect.top < adjustedRect.bottom &&\r\n        expandedRect.bottom > adjustedRect.top\r\n      );\r\n\r\n      if (!intersects) return null;\r\n\r\n      return {\r\n        id: String(container.id),\r\n        data: {\r\n          droppableContainer: {\r\n            id: String(container.id),\r\n            data: {\r\n              type: \"container\",\r\n              accepts: [\"draggable-item\"],\r\n              isDropZone: isTopSection\r\n            }\r\n          },\r\n          value: isTopSection ? 2 : 1,\r\n          rect: adjustedRect\r\n        }\r\n      } as CustomCollision;\r\n    })\r\n    .filter((collision): collision is CustomCollision => collision !== null)\r\n    .sort((a, b) => b.data.value - a.data.value);\r\n};\r\n\r\nuseEffect(() => {\r\n  if (!isCheckoutEditing) return; // Prevent execution if not in edit mode\r\n\r\n  console.log(\"✅ Registering Drop Zones (One-Time)\");\r\n\r\n  const topSection = document.querySelector('[data-droppable-id=\"1\"]');\r\n  const bottomSection = document.querySelector('[data-droppable-id=\"2\"]');\r\n\r\n  if (topSection) {\r\n    topSection.setAttribute('data-droppable', 'true');\r\n    topSection.setAttribute('data-type', 'container');\r\n  }\r\n\r\n  if (bottomSection) {\r\n    bottomSection.setAttribute('data-droppable', 'true');\r\n    bottomSection.setAttribute('data-type', 'container');\r\n  }\r\n\r\n  console.log(\"🔍 Found Drop Zones:\", topSection, bottomSection);\r\n\r\n  return () => {\r\n    console.log(\"🛑 Cleaning up Drop Zones (Once)\");\r\n  };\r\n}, [isCheckoutEditing]);\r\n\r\n\r\nconst sensors = useSensors(\r\n  useSensor(PointerSensor, {\r\n    activationConstraint: {\r\n      distance: 2,\r\n      tolerance: 5\r\n    },\r\n  })\r\n);\r\n\r\n\r\n// Update the handleDragEnd function to preserve checkedOptions\r\nconst handleDragEnd = (event: DragEndEvent) => {\r\n  const { active, over } = event;\r\n  setActiveId(null);\r\n  setDragging(false);\r\n\r\n  if (!over) {\r\n    console.log(\"❌ No valid drop target detected\");\r\n    return;\r\n  }\r\n\r\n  const dropZoneId = String(over.id);\r\n  const draggedItemId = String(active.id);\r\n\r\n  console.log(`🛠️ Handling drop of item ${draggedItemId} into zone ${dropZoneId}`);\r\n\r\n  const draggedItem = items.find(item => item.id === draggedItemId) || \r\n                     droppedItems.find(item => item.id === draggedItemId);\r\n\r\n  if (!draggedItem) {\r\n    console.log(\"❌ Dragged item not found\");\r\n    return;\r\n  }\r\n\r\n  const isTopSection = dropZoneId === \"top-section\" || dropZoneId === \"1\";\r\n  const isBottomSection = dropZoneId === \"bottom-section\" || dropZoneId === \"2\";\r\n\r\n\r\n// Preserve checkedOptions when moving between sections\r\nsetDroppedItems(prevDroppedItems => {\r\n  const alreadyInTop = prevDroppedItems.some(item => item.id === draggedItemId);\r\n\r\n  if (isTopSection && !alreadyInTop) {\r\n    console.log(`✅ Adding item ${draggedItemId} to top section`);\r\n    return [...prevDroppedItems, { \r\n      ...draggedItem, \r\n      isDropped: true,\r\n      // Preserve checked options\r\n      checkedOptions: draggedItem.checkedOptions || {}\r\n      }];\r\n    } \r\n    \r\n    if (isBottomSection) {\r\n      console.log(`✅ Removing item ${draggedItemId} from top section`);\r\n      return prevDroppedItems.filter(item => item.id !== draggedItemId);\r\n    }\r\n\r\n    return prevDroppedItems;\r\n  });\r\n\r\n  setItems(prevItems => {\r\n    const updatedItems = prevItems.map(item =>\r\n      item.id === draggedItemId ? { \r\n        ...item, \r\n        isDropped: isTopSection,\r\n        // Preserve checked options\r\n        checkedOptions: draggedItem.checkedOptions || {}\r\n      } : item\r\n    );\r\n    console.log(\"✅ Updated items after drop:\", updatedItems);\r\n    return [...updatedItems]; // Ensure a new array reference for reactivity\r\n  });\r\n\r\n  // After updating state, save the checkout items to the database\r\n  setTimeout(() => {\r\n    handleSaveCheckout();\r\n  }, 200);\r\n\r\n  // Rest of the function remains the same...\r\n  setTimeout(() => {\r\n    console.log(\"🔄 FORCING FULL Reset of Drop Zones and SortableContext...\");\r\n    setDroppedItems(prev => [...prev]);\r\n    setItems(prev => [...prev]); // ✅ Ensure full re-render\r\n\r\n    // Force SortableContext to reset\r\n    setSortableKey(prev => prev + 1);\r\n  }, 200);\r\n};\r\n\r\n// Finally, modify the \"Start Test\" button handler to only test checked options\r\n// Update the Start Test button click handler\r\nconst handleStartTest = () => {\r\n  console.log(\"🚀 Start Test button clicked\");\r\n  \r\n  // Check if droppedItems is empty\r\n  if (droppedItems.length === 0) {\r\n    console.warn(\"⚠️ No items in droppedItems, CheckoutTestProgress won't render\");\r\n    alert(\"Please add components to the checkout section before starting the test.\");\r\n    return;\r\n  }\r\n  \r\n// Filter the droppedItems to create a version that only includes checked options\r\nconst itemsWithCheckedOptions = droppedItems.map(item => {\r\n  // Get the options that are checked (true in checkedOptions)\r\n  const checkedOptionsList = Object.entries(item.checkedOptions || {})\r\n    .filter(([_, isChecked]) => isChecked)\r\n    .map(([option]) => option);\r\n  \r\n  // If no options are checked, include all options as a fallback\r\n  const optionsToTest = checkedOptionsList.length > 0 \r\n    ? checkedOptionsList \r\n    : item.options;\r\n  \r\n  // Return a version of the item with only the checked options\r\n  return {\r\n    ...item,\r\n    options: optionsToTest // Replace with only the checked options\r\n  };\r\n});\r\n  \r\n  // Make sure there's at least one item with options to test\r\n  const hasTestableItems = itemsWithCheckedOptions.some(item => item.options.length > 0);\r\n  \r\n  if (!hasTestableItems) {\r\n    alert(\"Please check at least one option in the checkout section before starting the test.\");\r\n    return;\r\n  }\r\n  \r\n  // Store the filtered items for the test window to use\r\n  localStorage.setItem('checkoutTestItems', JSON.stringify(itemsWithCheckedOptions));\r\n  \r\n  // Store a flag in localStorage to signal that the window should be open\r\n  localStorage.setItem('showCheckoutTest', 'true');\r\n  \r\n  // Update the state\r\n  setShowCheckoutTest(true);\r\n  \r\n  // Force a re-render\r\n  setDummyState(prev => !prev);\r\n  \r\n  console.log(\"CheckoutTest window should now be visible with checked options:\", itemsWithCheckedOptions);\r\n};\r\n\r\n// Add this to your useEffect hooks section\r\nuseEffect(() => {\r\n  // Check localStorage on component mount\r\n  const shouldShowWindow = localStorage.getItem('showCheckoutTest') === 'true';\r\n  \r\n  if (shouldShowWindow) {\r\n    console.log(\"🔄 Restoring CheckoutTest window from localStorage\");\r\n    setShowCheckoutTest(true);\r\n  }\r\n}, []);\r\n\r\n// Update handleCloseCheckoutTest to also clear localStorage\r\nconst handleCloseCheckoutTest = () => {\r\n  console.log(\"🔴 Closing checkout test window\");\r\n  localStorage.removeItem('showCheckoutTest');\r\n  setShowCheckoutTest(false);\r\n};\r\n\r\n// Add new effect to maintain drop zones\r\nconst hasUpdatedDropZones = useRef(false); // ✅ Prevent multiple updates\r\n\r\nuseEffect(() => {\r\n  if (!isCheckoutEditing) return;\r\n\r\n  const startTime = performance.now(); // Start time measurement\r\n  console.log(\"⏳ Starting expensive operation...\");\r\n\r\n  // Simulating work\r\n  const dropZones = document.querySelectorAll('[data-droppable-id]');\r\n  dropZones.forEach(zone => {\r\n    zone.setAttribute('data-droppable', 'true');\r\n    zone.setAttribute('data-type', 'container');\r\n  });\r\n\r\n  const endTime = performance.now(); // End time measurement\r\n  console.log(`⚡ Expensive operation took ${endTime - startTime}ms`);\r\n}, [isCheckoutEditing]);\r\n\r\n\r\n\r\n// Add this useEffect to monitor state changes\r\nuseEffect(() => {\r\n  const itemsStatus = items.map(item => ({\r\n    id: item.id,\r\n    isDropped: item.isDropped,\r\n  }));\r\n  console.log('Items status:', itemsStatus);\r\n  console.log('Dropped items:', droppedItems);\r\n}, [items, droppedItems]);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🔵 Drop zones mounted:\", document.querySelectorAll(\"[data-droppable]\"));\r\n\r\n  setTimeout(() => {\r\n    const dropZones = document.querySelectorAll(\"[data-droppable]\");\r\n    console.log(\"✅ Drop zones found in DOM:\", dropZones);\r\n\r\n    dropZones.forEach((zone) => {\r\n      console.log(\"📍 Drop Zone Element:\", zone);\r\n      console.log(\"👉 Attributes:\", zone.attributes);\r\n      console.log(\"📏 Bounding Rect:\", zone.getBoundingClientRect());\r\n    });\r\n  }, 500); // Delay ensures elements are fully rendered\r\n\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🔄 Drop zones reloaded. Current drop zones:\", document.querySelectorAll(\"[data-droppable]\"));\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  document.querySelectorAll(\"[data-droppable]\").forEach((el) =>\r\n    console.log(\"🔍 Found Drop Zone ID:\", el.id)\r\n  );\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  document.querySelectorAll(\"[data-droppable]\").forEach((el) =>\r\n    console.log(\"✅ Drop Zone Element ID:\", el.id)\r\n  );\r\n}, []);\r\n\r\nconst [, setRender] = useState(false);\r\n\r\nuseEffect(() => {\r\n  setTimeout(() => {\r\n    console.log(\"✅ Forcing a re-render to ensure drop zones exist.\");\r\n    setRender(prev => !prev); // Toggle state to trigger re-render\r\n  }, 100);\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🛠️ isCheckoutEditing changed:\", isCheckoutEditing);\r\n}, [isCheckoutEditing]);\r\n\r\n// Update dropZoneStyle\r\nconst dropZoneStyle: React.CSSProperties = {\r\n  minHeight: \"250px\",\r\n  width: \"100%\",\r\n  padding: \"20px\",\r\n  boxSizing: \"border-box\",\r\n  border: isOverTop ? \"2px solid #2196F3\" : \"2px dashed #ccc\",\r\n  backgroundColor: isOverTop ? \"rgba(33, 150, 243, 0.1)\" : \"transparent\",\r\n  position: \"relative\",\r\n  zIndex: 1,\r\n  touchAction: \"none\",\r\n  userSelect: \"none\" as const,\r\n  overflow: \"visible\"\r\n};\r\n\r\n// Update the handleSaveCheckout function to save the checked options state\r\nconst handleSaveCheckout = async () => {\r\n  if (!selectedProfile) {\r\n    console.log(\"❌ No active profile selected\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    console.log(\"💾 Saving checkout items with checkbox states:\", droppedItems);\r\n    \r\n    // Create a complete copy of droppedItems with all necessary properties\r\n    const itemsToSave = droppedItems.map(item => ({\r\n      id: item.id,\r\n      header: item.header,\r\n      options: item.options,\r\n      isDropped: true,\r\n      checkedOptions: item.checkedOptions || {} // Ensure we always have checkedOptions\r\n    }));\r\n    \r\n    // Retry logic for better persistence\r\n    const saveWithRetry = async (retries = 3) => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/checkout/save`, {\r\n          method: \"POST\",\r\n          headers: { \r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            profile_id: selectedProfile,\r\n            items: itemsToSave,\r\n          }),\r\n          mode: 'cors',  // Explicitly use CORS mode\r\n          credentials: 'omit'  // Don't send credentials\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Server error: ${response.status}`);\r\n        }\r\n\r\n        return await response.json();\r\n      } catch (error) {\r\n        if (retries > 0) {\r\n          console.log(`⚠️ Retry saving (${retries} attempts left)...`);\r\n          await new Promise(resolve => setTimeout(resolve, 500));\r\n          return saveWithRetry(retries - 1);\r\n        }\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    const result = await saveWithRetry();\r\n    console.log(`✅ Checkout items saved for profile ${selectedProfile}:`, result);\r\n    \r\n    // Also save to localStorage as a backup\r\n    localStorage.setItem(`checkout_items_${selectedProfile}`, \r\n                         JSON.stringify(itemsToSave));\r\n  } catch (error) {\r\n    console.error(\"❌ Error saving checkout items:\", error);\r\n    \r\n    // Try to save to localStorage as a fallback\r\n    localStorage.setItem(`checkout_items_${selectedProfile}`, \r\n                       JSON.stringify(droppedItems));\r\n  }\r\n};\r\n\r\n\r\nconst handleCancelCheckout = async () => {\r\n  if (!selectedProfile) {\r\n    console.log(\"❌ No active profile selected\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API_URL}/checkout/load/${selectedProfile}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    const result = await response.json();\r\n    setDroppedItems(result.items);\r\n    console.log(`🔄 Restored checkout items for profile ${selectedProfile}:`, result.items);\r\n  } catch (error) {\r\n    console.error(\"❌ Error loading previous checkout items:\", error);\r\n  }\r\n};\r\n\r\n// Update the handleLoadCheckout function with proper typing\r\n// with better error handling and CORS configuration\r\n\r\nconst handleLoadCheckout = async (profileId: string) => {\r\n  try {\r\n    console.log(`📝 Loading checkout items for profile: ${profileId}`);\r\n    \r\n    // Create AbortController to set a timeout on the fetch\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout\r\n    \r\n    const response = await fetch(`${API_URL}/checkout/load/${profileId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      mode: 'cors',       // Explicitly set CORS mode\r\n      credentials: 'omit', // Don't send credentials\r\n      signal: controller.signal // Add timeout signal\r\n    });\r\n    \r\n    // Clear the timeout\r\n    clearTimeout(timeoutId);\r\n    \r\n    console.log(`📝 Response status: ${response.status}`);\r\n    \r\n    if (!response.ok) {\r\n      console.warn(`Server returned error status: ${response.status}`);\r\n      throw new Error(`Server error: ${response.status}`);\r\n    }\r\n\r\n    // Try to parse the response, with error handling for invalid JSON\r\n    const result = await response.json().catch(e => {\r\n      console.error(\"Error parsing JSON response:\", e);\r\n      return { error: \"Invalid JSON response\", items: [] };\r\n    });\r\n    \r\n    if (result.items && Array.isArray(result.items)) {\r\n      // Ensure each item has a checkedOptions object and isDropped flag\r\n      const loadedItems = result.items.map((item: any) => ({\r\n        ...item,\r\n        isDropped: true,\r\n        checkedOptions: item.checkedOptions || {},\r\n      }));\r\n      \r\n      // Set dropped items first\r\n      setDroppedItems(loadedItems);\r\n      \r\n      // Make a copy of the original items\r\n      setItems(prevItems => {\r\n        const updatedItems = [...prevItems];\r\n        \r\n        // Mark dropped items in the items array\r\n        updatedItems.forEach(item => {\r\n          // Check if this item exists in loadedItems\r\n          const matchingItem = loadedItems.find((loaded: DraggableItem) => loaded.id === item.id);\r\n          if (matchingItem) {\r\n            // Update to match the loaded state\r\n            item.isDropped = true;\r\n            item.checkedOptions = {...matchingItem.checkedOptions};\r\n          } else {\r\n            // Make sure it's marked as not dropped\r\n            item.isDropped = false;\r\n          }\r\n        });\r\n        \r\n        return updatedItems;\r\n      });\r\n      \r\n      console.log(`✅ Loaded checkout items for profile ${profileId}:`, loadedItems);\r\n    } else {\r\n      console.log(`ℹ️ No saved checkout items found for profile ${profileId}`);\r\n      setDroppedItems([]);\r\n      \r\n      // Reset the dropped state in the items array\r\n      setItems(prevItems => \r\n        prevItems.map(item => ({\r\n          ...item,\r\n          isDropped: false,\r\n          checkedOptions: {}\r\n        }))\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.error(\"❌ Error loading checkout items for profile:\", error);\r\n    \r\n    // Try fallback from localStorage\r\n    tryLocalStorageFallback(profileId);\r\n  }\r\n};\r\n\r\n// Extract the localStorage fallback into a separate function for better readability\r\nconst tryLocalStorageFallback = (profileId: string) => {\r\n  try {\r\n    const localStorageKey = `checkout_items_${profileId}`;\r\n    const savedItems = localStorage.getItem(localStorageKey);\r\n    \r\n    if (savedItems) {\r\n      console.log(`🔄 Falling back to localStorage for profile ${profileId}`);\r\n      const parsedItems = JSON.parse(savedItems);\r\n      \r\n      if (Array.isArray(parsedItems) && parsedItems.length > 0) {\r\n        setDroppedItems(parsedItems);\r\n        \r\n        // Also update the items array with isDropped flags\r\n        setItems(prevItems => {\r\n          const updatedItems = [...prevItems];\r\n          \r\n          updatedItems.forEach(item => {\r\n            const matchingItem = parsedItems.find((saved: DraggableItem) => saved.id === item.id);\r\n            if (matchingItem) {\r\n              item.isDropped = true;\r\n              item.checkedOptions = {...matchingItem.checkedOptions};\r\n            } else {\r\n              item.isDropped = false;\r\n            }\r\n          });\r\n          \r\n          return updatedItems;\r\n        });\r\n        \r\n        console.log(`✅ Successfully loaded ${parsedItems.length} items from localStorage`);\r\n        return; // Exit early since we successfully restored from localStorage\r\n      }\r\n    }\r\n    \r\n    // If localStorage fallback fails or is empty, reset everything\r\n    resetItemStates();\r\n    \r\n  } catch (localStorageError) {\r\n    console.error(\"❌ Error accessing localStorage fallback:\", localStorageError);\r\n    resetItemStates();\r\n  }\r\n};\r\n\r\n// Extract reset logic to a separate function\r\nconst resetItemStates = () => {\r\n  setDroppedItems([]);\r\n  \r\n  // Reset the items array\r\n  setItems(prevItems => \r\n    prevItems.map(item => ({\r\n      ...item,\r\n      isDropped: false,\r\n      checkedOptions: {}\r\n    }))\r\n  );\r\n};\r\n\r\n// Update the profile change handler to load checkout items with their checkbox states\r\nconst handleProfileChange = async (profileId: string) => {\r\n  console.log(`🔄 Profile changed: ${profileId}`);\r\n  setSelectedProfile(profileId);\r\n  await handleLoadCheckout(profileId);\r\n};\r\n\r\n// useEffect for profile changes to load checkout items immediately\r\nuseEffect(() => {\r\n  if (selectedProfile) {\r\n    // Add a small delay to ensure database connections are ready\r\n    const timer = setTimeout(() => {\r\n      handleLoadCheckout(selectedProfile);\r\n    }, 50);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }\r\n}, [selectedProfile]);\r\n\r\n// Add effect to ensure items and droppedItems stay in sync\r\nuseEffect(() => {\r\n  // This ensures items marked as dropped appear in droppedItems\r\n  const droppedIds = droppedItems.map(item => item.id);\r\n  \r\n  // Check if there are items that should be in droppedItems but aren't\r\n  const itemsThatShouldBeDropped = items.filter(item => \r\n    item.isDropped && !droppedIds.includes(item.id)\r\n  );\r\n  \r\n  // If we found inconsistencies, fix them\r\n  if (itemsThatShouldBeDropped.length > 0) {\r\n    console.log(\"⚠️ Found inconsistent dropped state, fixing...\");\r\n    setDroppedItems(prev => [...prev, ...itemsThatShouldBeDropped]);\r\n  }\r\n}, [items, droppedItems]);\r\n\r\n// Update the useEffect in MainScreen.tsx to better initialize the MCC socket\r\nuseEffect(() => {\r\n  if (showCheckoutTest && !mccSocket) {\r\n    // Initialize a simulated MCC socket for testing\r\n    const initMccSocket = async () => {\r\n      try {\r\n        console.log(\"Attempting to create MCC socket...\");\r\n        \r\n        // Force simulation mode for testing purposes\r\n        const socket = await connectToMcc(\"localhost:8080\");\r\n        \r\n        if (socket) {\r\n          setMccSocket(socket);\r\n          console.log(\"✅ MCC socket initialized for testing\");\r\n        } else {\r\n          console.warn(\"⚠️ Socket is null, using simulation fallback\");\r\n          \r\n          // Create a minimal simulation object that implements the necessary methods\r\n          const simulatedSocket = {\r\n            simulateRead: (parameters: string[]) => {\r\n              // Return simulated values for each parameter\r\n              return parameters.map(param => `${param}=simulated`);\r\n            },\r\n            send: async (message: string) => {\r\n              console.log(`[SIM] Sending message: ${message}`);\r\n              return Promise.resolve();\r\n            },\r\n            receive: async () => {\r\n              console.log(`[SIM] Receiving data`);\r\n              return Promise.resolve(\"simulated response\");\r\n            }\r\n          };\r\n          \r\n          setMccSocket(simulatedSocket);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Error initializing MCC socket:\", error);\r\n        \r\n        // Create a fallback simulation\r\n        const simulatedSocket = {\r\n          simulateRead: (parameters: string[]) => {\r\n            // Return simulated values for each parameter\r\n            return parameters.map(param => `${param}=simulated`);\r\n          },\r\n          send: async (message: string) => {\r\n            console.log(`[SIM] Sending message: ${message}`);\r\n            return Promise.resolve();\r\n          },\r\n          receive: async () => {\r\n            console.log(`[SIM] Receiving data`);\r\n            return Promise.resolve(\"simulated response\");\r\n          }\r\n        };\r\n        \r\n        setMccSocket(simulatedSocket);\r\n      }\r\n    };\r\n    \r\n    initMccSocket();\r\n  }\r\n}, [showCheckoutTest, mccSocket]);\r\n\r\nconsole.log(\"Rendering MainScreen:\");\r\nconsole.log(\"showToTestList:\", showToTestList);\r\nconsole.log(\"showThreeDModelWindow:\", showThreeDModelWindow);\r\n\r\nuseEffect(() => {\r\n  console.log(\"🔍 Checking if CheckoutTestProgress exists:\", !!CheckoutTestProgress);\r\n  if (!CheckoutTestProgress) {\r\n    console.error(\"❌ CheckoutTestProgress component is undefined!\");\r\n  }\r\n}, []);\r\n\r\n// Initialize mccSocket once on component mount instead of waiting\r\nuseEffect(() => {\r\n  // Create a simple simulated socket if it doesn't exist yet\r\n  if (!mccSocket) {\r\n    console.log(\"🔄 Pre-initializing simulated MCC socket\");\r\n    \r\n    // Create a simple simulated socket for testing\r\n    const simulatedSocket = {\r\n      simulateRead: (parameters: string[]) => {\r\n        return parameters.map(param => {\r\n          // Generate simulated values for common parameters\r\n          if (param.includes(\"FW_Ver\")) {\r\n            const version = param.includes(\"Major\") ? \"1\" : \r\n                          param.includes(\"Minor\") ? \"2\" : \"3\";\r\n            return `${param}=${version}`;\r\n          } else if (param.includes(\"3V3\") || param.includes(\"5V\")) {\r\n            // Voltage values in mV\r\n            return `${param}=${3300 + Math.floor(Math.random() * 100)}`;\r\n          } else if (param.includes(\"temp\") || param.includes(\"Temp\")) {\r\n            // Temperature values\r\n            return `${param}=${20 + Math.floor(Math.random() * 10)}`;\r\n          } else if (param.includes(\"eMMC\")) {\r\n            return `${param}=1`;\r\n          } else {\r\n            return `${param}=simulated`;\r\n          }\r\n        });\r\n      },\r\n      send: async (message: string) => {\r\n        console.log(`[SIM] Sending: ${message}`);\r\n        return Promise.resolve();\r\n      },\r\n      receive: async () => {\r\n        return Promise.resolve(\"simulated response\");\r\n      }\r\n    };\r\n    \r\n    setMccSocket(simulatedSocket);\r\n  }\r\n}, [mccSocket]);\r\n\r\nuseEffect(() => {\r\n\r\n  setSimulationMode(false);\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  // Attempt to retrieve the socket info\r\n  const socketInfoStr = localStorage.getItem('mccSocketInfo');\r\n  if (socketInfoStr) {\r\n    try {\r\n      const socketInfo = JSON.parse(socketInfoStr);\r\n      if (socketInfo.isReal && socketInfo.address) {\r\n        console.log(`Reconnecting to real MCC server at ${socketInfo.address}`);\r\n        \r\n        // Create a real socket connection\r\n        connectToMcc(socketInfo.address)\r\n          .then(socket => {\r\n            if (socket) {\r\n              console.log(\"✅ Successfully reconnected to real MCC server\");\r\n              setMccSocket(socket);\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.error(\"❌ Failed to reconnect to MCC server:\", err);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error parsing socket info:\", error);\r\n    }\r\n  }\r\n}, []);\r\n\r\n// Update useEffect to watch for changes from parent\r\nuseEffect(() => {\r\n  setSettingsWindowVisible(showSettingsWindow);\r\n}, [showSettingsWindow]);\r\n\r\nreturn (\r\n  <div className={styles.mainScreen}>\r\n    {!isSidebarOpen && (\r\n      <button\r\n        className={styles.retractExpandSidebarButton}\r\n        onClick={toggleSidebar}\r\n      >\r\n        <FaBars />\r\n      </button>\r\n    )}\r\n\r\n    <div className={`${styles.sidebar} ${isSidebarOpen ? \"\" : styles.hidden}`}>\r\n      <div className={styles.sidebarHeader}>\r\n        <span>Menu</span>\r\n        <button className={styles.toggleButton} onClick={toggleSidebar}>\r\n          ☰\r\n        </button>\r\n      </div>\r\n      <ul className={styles.menu}>\r\n        <li className={styles.menuItem} onClick={() => setSelectedProfile(null)}>\r\n          Home\r\n        </li>\r\n{/* Focused visibility fix for Tests to Conduct button */}\r\n<li \r\n  className={styles.menuItem} \r\n  onClick={(e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    console.log(\"🔍 Focused visibility fix initiated\");\r\n    \r\n    // Toggle the window\r\n    if (showToTestList) {\r\n      console.log(\"Closing ToTestList\");\r\n      closeToTestList();\r\n    } else {\r\n      console.log(\"Opening ToTestList and bringing to front\");\r\n      openToTestList();\r\n      \r\n      // Ensure window is visible and positioned correctly\r\n      setTimeout(() => {\r\n        const toTestListWindow = document.querySelector('[data-window=\"ToTestList\"]');\r\n        if (toTestListWindow) {\r\n          console.log(\"ToTestList found, ensuring visibility and position\");\r\n          \r\n          // Ensure the window is visible\r\n          (toTestListWindow as HTMLElement).style.visibility = 'visible';\r\n          (toTestListWindow as HTMLElement).style.display = 'block';\r\n          (toTestListWindow as HTMLElement).style.opacity = '1';\r\n          \r\n          // Bring to front\r\n          bringWindowToFront(\"ToTestList\");\r\n          \r\n          // Force position to center if it's off-screen\r\n          const windowRect = toTestListWindow.getBoundingClientRect();\r\n          if (windowRect.left < 0 || windowRect.top < 0 || \r\n              windowRect.right > window.innerWidth || windowRect.bottom > window.innerHeight) {\r\n            console.log(\"Window appears to be off-screen, centering it\");\r\n            \r\n            // Try to set position through sessionStorage\r\n            try {\r\n              const centerPosition = {\r\n                x: (window.innerWidth - 800) / 2, \r\n                y: (window.innerHeight - 500) / 2\r\n              };\r\n              sessionStorage.setItem('toTestListPosition', JSON.stringify(centerPosition));\r\n              console.log(\"Set centered position:\", centerPosition);\r\n              \r\n              // Attempt to force position directly\r\n              const draggableElement = toTestListWindow.querySelector('[style*=\"transform\"]');\r\n              if (draggableElement) {\r\n                (draggableElement as HTMLElement).style.transform = \r\n                  `translate(${centerPosition.x}px, ${centerPosition.y}px)`;\r\n              }\r\n              \r\n              // Last resort: reload the page\r\n              window.location.reload();\r\n            } catch (error) {\r\n              console.error(\"Error centering window:\", error);\r\n            }\r\n          }\r\n        }\r\n      }, 100);\r\n    }\r\n  }}\r\n>\r\n  Tests to Conduct\r\n</li>\r\n        <li className={styles.menuItem}>\r\n          <div className={styles.profileContainer}>\r\n            <button\r\n              className={styles.profilesButton}\r\n              onClick={toggleProfileDropdown}\r\n            >\r\n              Profiles\r\n            </button>\r\n            <div className={styles.profileButtonGroup}>\r\n              <button\r\n                className={styles.dropdownButton}\r\n                onClick={toggleProfileDropdown}\r\n              >\r\n                {isProfileDropdownOpen ? \"▲\" : \"▼\"}\r\n              </button>\r\n              <button\r\n                className={styles.addProfileButton}\r\n                onClick={addProfile}\r\n              >\r\n                <FaPlus />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </li>\r\n        {isProfileDropdownOpen && (\r\n          <ul className={styles.profileDropdown}>\r\n          {profiles.map((profile) => (\r\n            <li\r\n              key={profile.id || profile.name}\r\n              className={styles.profileSidebarItem}\r\n              onClick={() => {\r\n                handleProfileChange(profile.name); // ✅ Ensure checkout items load per profile\r\n              }}\r\n            >\r\n              {profile.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        \r\n        )}\r\n      </ul>\r\n      <div className={styles.settingsContainer}>\r\n      <button \r\n  className={styles.settingsButton} \r\n  onClick={() => {\r\n    openSettingsWindow();\r\n  }}\r\n>\r\n          <FaCog />\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div className={styles.content}>\r\n      {selectedProfile ? (\r\n        <div className={styles.profilePage}>\r\n          <div className={styles.profileHeading}>\r\n            <h1>{selectedProfile}</h1>\r\n            <button\r\n              className={styles.deleteButton}\r\n              onClick={() => deleteProfile(selectedProfile)}\r\n            >\r\n              <FaTrash />\r\n            </button>\r\n          </div>\r\n\r\n          {/* ✅ About/Specifications Button Below Profile Name */}\r\n          <button className={styles.aboutButton} onClick={toggleAbout}>\r\n            <FaInfoCircle /> About/Specifications\r\n          </button>\r\n\r\n          {/* ✅ Show/Hide About Section */}\r\n          {showAbout && (\r\n            <div\r\n              className={`${styles.aboutSection} ${\r\n                document.documentElement.classList.contains(\"dark\")\r\n                  ? styles.darkMode\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              {/* ✅ Editing Mode: Use Tiptap Rich Text Editor */}\r\n              {isEditing ? (\r\n                <>\r\n                  {/* ✅ Add Toolbar for Lists */}\r\n                  <div className=\"toolbar\">\r\n                    <button onClick={() => editor?.chain().focus().toggleBulletList().run()}>\r\n                      Bullet List\r\n                    </button>\r\n                    <button onClick={() => editor?.chain().focus().toggleOrderedList().run()}>\r\n                      Ordered List\r\n                    </button>\r\n                  </div>\r\n\r\n                  <EditorContent editor={editor} className={styles.richTextEditor} />\r\n\r\n                  {/* ✅ Show all images outside the editor */}\r\n                  {uploadedImages.length > 0 ? (\r\n                    <div className={styles.imageContainer}>\r\n                      {uploadedImages.map((image, index) => (\r\n                        <div key={index} className={styles.imageWrapper}>\r\n                          <img\r\n                            src={image.src}\r\n                            alt={image.alt}\r\n                            className={styles.uploadedImage}\r\n                          />\r\n                          {/* ✅ Remove button only renders in editing mode */}\r\n                          <button\r\n                            className={styles.removeImageButton}\r\n                            onClick={() => removeImage(index)}\r\n                          >\r\n                            ✖\r\n                          </button>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ) : (\r\n                    <p className={styles.imagePlaceholder}>No images uploaded</p>\r\n                  )}\r\n\r\n                  {/* ✅ File Upload Section (Only in Editing Mode) */}\r\n                  <div className={styles.uploadContainer}>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".txt, .docx\"\r\n                      onChange={handleFileUpload}\r\n                      className={styles.uploadInput}\r\n                    />\r\n                    {/* ✅ Show file name specific to the selected profile */}\r\n                    {selectedProfile &&\r\n                      profileData[selectedProfile]?.uploadedFileName && (\r\n                        <p>Uploaded: {profileData[selectedProfile].uploadedFileName}</p>\r\n                      )}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                /* ✅ Normal Mode: Display Formatted Content */\r\n                <>\r\n                  <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: sanitizeHTML(profileData[selectedProfile]?.description || \"<p>No description available.</p>\"),\r\n                      }}\r\n                  />\r\n                  {/* ✅ Show all images outside the editor */}\r\n                  {profileData[selectedProfile]?.images.length > 0 && (\r\n                    <div className={styles.imageContainer}>\r\n                      {selectedProfile && profileData[selectedProfile]?.images.map((image: { src: string; alt: string }, index: number) => (\r\n                        <div key={index} className={styles.imageWrapper}>\r\n                          <img \r\n                             src={image.src} \r\n                             alt={image.alt} \r\n                             className={styles.uploadedImage}\r\n                             onError={(e) => e.currentTarget.src = \"/fallback-image.png\"} // Provide a fallback image\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                {/* ✅ Save, Edit, and Download Buttons */}\r\n                <div className={styles.actionButtons}>\r\n                  {!isEditing && (\r\n                    <>\r\n                      <button\r\n                        onClick={() => saveToFile(\"txt\")}\r\n                        className={styles.downloadButton}\r\n                      >\r\n                        <FaDownload /> Save as .TXT\r\n                      </button>\r\n                      <button\r\n                        onClick={() => saveToFile(\"docx\")}\r\n                        className={styles.downloadButton}\r\n                      >\r\n                        <FaDownload /> Save as .DOCX\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                  {isEditing ? (\r\n                    <>\r\n                      <button\r\n                        onClick={saveEditedDescription}\r\n                        className={styles.saveButton}\r\n                      >\r\n                        <FaCheck /> Save\r\n                      </button>\r\n                      <button\r\n                        onClick={cancelEditing}\r\n                        className={styles.cancelButton}\r\n                      >\r\n                        <FaTimes /> Cancel\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button className={styles.editButton} onClick={startEditing}>\r\n                      <FaEdit />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n              {/* ✅ Test Type & Checkout Button Located Outside About Section */}\r\n              <h2 className={styles.testTypeHeader}>Test Type</h2>\r\n              <button className={styles.checkoutButton} onClick={toggleCheckout}>\r\n                <FaWrench /> Checkout\r\n              </button>\r\n   \r\n \r\n              {showCheckout && (\r\n                <div className={styles.checkoutSection}\r\n                  style={{\r\n                    backgroundColor: checkoutBgColor,\r\n                    transition: 'background-color 0.3s ease',\r\n                  }}\r\n                >\r\n\r\n{(() => { console.log(\"🔄 Checkout Section Re-rendered\"); return null; })()}\r\n\r\n                <div className={styles.checkoutHeader} style={{ display: 'flex', alignItems: 'center' }}>\r\n                  <h3 style={{ marginRight: '10px' }}>Test Selection:</h3>\r\n                  <button className={styles.editButton} onClick={toggleCheckoutEditMode}>\r\n                    <FaEdit />\r\n                  </button>\r\n        \r\n                  {!isCheckoutEditing && (\r\n  <button \r\n    className={styles.startTestButton} \r\n    style={{ marginLeft: 'auto' }}\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      \r\n      // Ensure we have items to test\r\n      if (droppedItems.length === 0) {\r\n        alert(\"Please add components to the checkout section before starting the test.\");\r\n        return;\r\n      }\r\n      \r\n      // Store a flag in localStorage to ensure window stays visible\r\n      localStorage.setItem('showCheckoutTest', 'true');\r\n      \r\n      // Ensure we have a socket ready\r\n      if (!mccSocket) {\r\n        // Initialize a simulated socket\r\n        const simSocket = {\r\n          simulateRead: (params: string[]) => params.map(p => `${p}=simulated`),\r\n          send: async () => Promise.resolve(),\r\n          receive: async () => Promise.resolve(\"simulated\")\r\n        };\r\n        setMccSocket(simSocket);\r\n      }\r\n      \r\n      // Set window visible\r\n      setShowCheckoutTest(true);\r\n      \r\n      // Force re-render\r\n      setDummyState(prev => !prev);\r\n      \r\n      console.log(\"🚀 CheckoutTest window activated\");\r\n    }}\r\n  >\r\n    <FaPlay /> Start Test\r\n  </button>\r\n)}\r\n                </div>\r\n\r\n                <DndContext\r\n  sensors={sensors}\r\n  collisionDetection={customCollisionDetection}\r\n  onDragStart={({ active }) => {\r\n    setActiveId(String(active.id));\r\n    setDragging(true);\r\n  }}\r\n  onDragEnd={handleDragEnd}\r\n  onDragCancel={() => {\r\n    setActiveId(null);\r\n    setDragging(false);\r\n  }}\r\n>\r\n  {/* Top Section Drop Zone */}\r\n  <div\r\n  key=\"top-section\"\r\n  ref={topSectionRef}\r\n  id=\"top-section\"\r\n  data-id=\"1\"\r\n  data-droppable=\"true\"\r\n  data-droppable-id=\"1\"\r\n  data-type=\"container\"\r\n  className={`${styles.topSection} dropZoneArea ${isOverTop ? \"isOver\" : \"\"}`}\r\n  data-is-over={isOverTop ? \"true\" : \"false\"}\r\n  style={dropZoneStyle}\r\n>\r\n    {droppedItems.length === 0 && isCheckoutEditing && (\r\n      <div style={{ \r\n        position: \"absolute\", \r\n        top: \"50%\", \r\n        left: \"50%\", \r\n        transform: \"translate(-50%, -50%)\",\r\n        color: \"#666\",\r\n        fontStyle: \"italic\"\r\n      }}>\r\n        Drop items here\r\n      </div>\r\n    )}\r\n<SortableContext key={sortableKey} items={droppedItems} strategy={verticalListSortingStrategy}>\r\n  {droppedItems.map((item) => (\r\n    <div key={`top-${item.id}`} className={styles.droppableBox} style={{ position: 'relative', overflow: 'visible' }}>\r\n      <DraggableBox \r\n        id={item.id}\r\n        header={item.header}\r\n        options={item.options}\r\n        data={{ type: \"draggable-item\" }}\r\n        isDropped={true}\r\n        removeDroppedItem={removeDroppedItem}\r\n        isCheckoutEditing={isCheckoutEditing}\r\n        checkedOptions={item.checkedOptions} // Pass checked state\r\n        onOptionChange={handleOptionChange} // Pass handler\r\n      />\r\n    </div>\r\n  ))}\r\n</SortableContext>\r\n  </div>\r\n\r\n  {/* Bottom Section */}\r\n  {isCheckoutEditing && (\r\n    <div\r\n    ref={bottomSectionRef}\r\n    id=\"bottom-section\"\r\n    data-id=\"2\"\r\n    data-droppable=\"true\"\r\n    data-droppable-id=\"2\"\r\n    data-type=\"container\"\r\n    data-current='{\"type\": \"container\"}'\r\n    className={styles.bottomSection}\r\n    style={{\r\n      minHeight: \"200px\",\r\n      padding: \"20px\",\r\n      position: \"relative\",\r\n      border: isOverBottom ? \"2px solid #2196F3\" : \"2px dashed #ccc\",\r\n      backgroundColor: isOverBottom ? \"rgba(33, 150, 243, 0.1)\" : \"transparent\",\r\n      touchAction: \"none\",\r\n      userSelect: \"none\",\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(auto-fill, minmax(150px, 1fr))\",\r\n      gap: \"10px\",\r\n      pointerEvents: \"auto\"  // Add this to ensure dragging works\r\n    }}\r\n  >\r\n  <h4>Available Components</h4>\r\n  <SortableContext key={sortableKey} items={items} strategy={verticalListSortingStrategy}>\r\n\r\n  {items.map((item) => {\r\n  const isInTopSection = droppedItems.some(droppedItem => droppedItem.id === item.id);\r\n  return (\r\n    <div\r\n      key={`bottom-${item.id}`}\r\n      className={styles.dragItem}\r\n      data-draggable-id={item.id}\r\n      data-dropped={isInTopSection ? \"true\" : \"false\"}\r\n      style={{\r\n        opacity: isInTopSection ? 0.3 : 1,\r\n        pointerEvents: isInTopSection ? 'none' : 'auto',\r\n        cursor: isInTopSection ? 'not-allowed' : 'grab'\r\n      }}\r\n    >\r\n      <DraggableBox\r\n        id={item.id}\r\n        header={item.header}\r\n        options={item.options}\r\n        data={{ type: \"draggable-item\" }}\r\n        isDropped={isInTopSection}\r\n        isInBottomSection={true} // ✅ Ensure it knows it's in the bottom section\r\n        checkedOptions={item.checkedOptions} // Pass checked state\r\n        onOptionChange={handleOptionChange} // Pass handler\r\n      />\r\n    </div>\r\n  );\r\n})}\r\n</SortableContext>\r\n</div>\r\n  )}\r\n\r\n<DragOverlay>\r\n  {activeId ? (\r\n    <DraggableBox\r\n      id={activeId}\r\n      header={(items.find(item => item.id === activeId) || droppedItems.find(item => item.id === activeId))?.header || \"\"}\r\n      options={(items.find(item => item.id === activeId) || droppedItems.find(item => item.id === activeId))?.options || []}\r\n      data={{ type: \"draggable-item\" }} // ✅ Ensure this is added\r\n    />\r\n  ) : null}\r\n</DragOverlay>\r\n\r\n</DndContext>\r\n\r\n              {isCheckoutEditing && (\r\n                <div className={styles.editModeButtons}>\r\n<button className={styles.saveButton} onClick={() => {\r\n                      handleSaveCheckout();\r\n                      toggleCheckoutEditMode(); // ✅ Exit edit mode after saving\r\n                  }}>\r\n                    <FaCheck /> Save\r\n                  </button>\r\n                  <button className={styles.cancelButton} onClick={() => {\r\n                      handleCancelCheckout();\r\n                      toggleCheckoutEditMode(); // ✅ Exit edit mode after canceling\r\n                  }}>\r\n                    <FaTimes /> Cancel\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          <h2 className={styles.ThreeDModelViewerHeader}>Satellite Model Viewer</h2>\r\n{/* ✅ Open the 3D Model Viewer for the selected profile */}\r\n<button\r\n  className={styles.threeDModelButton}\r\n  onClick={(e) => {\r\n    e.preventDefault();\r\n    console.log(\"🔘 3D Model button clicked\");\r\n    \r\n    // Find the profile to get its ID\r\n    const profile = profiles.find((p) => p.name === selectedProfile);\r\n    const profileId = profile?.id || 1;\r\n    \r\n    console.log(`📱 Opening 3D Model window for profile ID: ${profileId}`);\r\n    \r\n    // Ensure any pending state updates are completed first\r\n    setTimeout(() => {\r\n      // Call the openModelWindow function provided through props\r\n      openModelWindow(profileId);\r\n      \r\n      // Log the state after opening\r\n      setTimeout(() => {\r\n        console.log(\"🔍 After 3D Model button click:\");\r\n        console.log(\"- showThreeDModelWindow:\", showThreeDModelWindow);\r\n        console.log(\"- threeDModelProfileId:\", threeDModelProfileId);\r\n      }, 100);\r\n    }, 50);\r\n  }}\r\n>\r\n  <FaCube /> 3D Model Viewer\r\n</button>\r\n\r\n          </div>\r\n        ) : (\r\n          <div className={styles.profilePage}>\r\n            <h1 className={styles.profileHeading}>Satellite Automated Testing System</h1>\r\n            <p className={styles.profileSubtext}>Navigate using the side panel</p>\r\n          </div>\r\n        )}\r\n\r\n{(() => {\r\n    console.log(\"🔍 Rendering MainScreen component\");\r\n    console.log(\"- showCheckoutTest:\", showCheckoutTest);\r\n    console.log(\"- droppedItems length:\", droppedItems.length);\r\n    return null;\r\n  })()}\r\n\r\n{(showCheckoutTest || localStorage.getItem('showCheckoutTest') === 'true') && droppedItems.length > 0 && (\r\n  <div id=\"checkout-test-container\" style={{ position: 'relative', zIndex: 9999 }}>\r\n    {(() => {\r\n      console.log(\"⭐ Rendering CheckoutTestProgress window\", {\r\n        showCheckoutTest,\r\n        localStorageValue: localStorage.getItem('showCheckoutTest'),\r\n        droppedItemsLength: droppedItems.length\r\n      });\r\n      return null;\r\n    })()}\r\n    <CheckoutTestProgress\r\n      droppedItems={droppedItems}\r\n      onClose={handleCloseCheckoutTest}\r\n      zIndex={99999}\r\n      onMouseDown={() => {/* Nothing needed here */}}\r\n      sock={mccSocket || {}}\r\n    />\r\n  </div>\r\n)}\r\n      </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default MainScreen;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9651, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/ToTestList/ToTestList.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actions\": \"ToTestList-module__vY2V8W__actions\",\n  \"addButton\": \"ToTestList-module__vY2V8W__addButton\",\n  \"clearButton\": \"ToTestList-module__vY2V8W__clearButton\",\n  \"closeButton\": \"ToTestList-module__vY2V8W__closeButton\",\n  \"dark\": \"ToTestList-module__vY2V8W__dark\",\n  \"deleteButton\": \"ToTestList-module__vY2V8W__deleteButton\",\n  \"drag-handle\": \"ToTestList-module__vY2V8W__drag-handle\",\n  \"error\": \"ToTestList-module__vY2V8W__error\",\n  \"fadeOut\": \"ToTestList-module__vY2V8W__fadeOut\",\n  \"form\": \"ToTestList-module__vY2V8W__form\",\n  \"header\": \"ToTestList-module__vY2V8W__header\",\n  \"light\": \"ToTestList-module__vY2V8W__light\",\n  \"loadingIndicator\": \"ToTestList-module__vY2V8W__loadingIndicator\",\n  \"popup\": \"ToTestList-module__vY2V8W__popup\",\n  \"popup-show\": \"ToTestList-module__vY2V8W__popup-show\",\n  \"saveStatus\": \"ToTestList-module__vY2V8W__saveStatus\",\n  \"selectedRow\": \"ToTestList-module__vY2V8W__selectedRow\",\n  \"success\": \"ToTestList-module__vY2V8W__success\",\n  \"table\": \"ToTestList-module__vY2V8W__table\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 9678, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ToTestList/ToTestList.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styles from \"./ToTestList.module.css\";\r\nimport Draggable from \"react-draggable\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { WindowName } from \"@/types/types\";\r\n\r\ninterface ToTestListProps {\r\n  zIndex: number; \r\n  onMouseDown: () => void; \r\n  onClose: () => void;\r\n  bringWindowToFront: (windowName: WindowName) => void;\r\n  windowZIndexes: { [key: string]: number };\r\n  zIndexCounter: number;\r\n}\r\n\r\ninterface RowData {\r\n  id?: number;  // Database ID\r\n  sn: number;\r\n  test: string;\r\n  satellite: string;\r\n  dateTime: string;\r\n  loggedBy: string;\r\n  selected?: boolean;\r\n}\r\n\r\nconst ToTestList: React.FC<ToTestListProps> = ({ \r\n  zIndex, \r\n  onMouseDown, \r\n  onClose, \r\n  bringWindowToFront, \r\n  windowZIndexes, \r\n  zIndexCounter \r\n}) => {\r\n  // Use MutableRefObject instead of RefObject to satisfy Draggable's requirements\r\n  const nodeRef = useRef<HTMLDivElement>(null);\r\n  const [rows, setRows] = useState<RowData[]>([]);\r\n  const [formData, setFormData] = useState({\r\n    test: \"\",\r\n    satellite: \"\",\r\n    loggedBy: \"\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [saveStatus, setSaveStatus] = useState<string | null>(null);\r\n  \r\n  // Important: Add refs to prevent infinite focus loop\r\n  const hasFocused = useRef(false);\r\n  const initialMount = useRef(true);\r\n  const saveTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // API URL from environment or default\r\n  const API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  // Create portal element once on mount\r\n  const [portalElement] = useState(() => {\r\n    // Check if portal already exists\r\n    const existingPortal = document.getElementById(\"toTestList-root\");\r\n    if (existingPortal) {\r\n      return existingPortal;\r\n    }\r\n    \r\n    // Create new portal if needed\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"toTestList-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n  // Important: Store position in sessionStorage to maintain it across renders\r\n  const savedPosition = sessionStorage.getItem('toTestListPosition');\r\n  const defaultPosition = savedPosition ? JSON.parse(savedPosition) : {\r\n    x: (window.innerWidth - 800) / 2, \r\n    y: (window.innerHeight - 500) / 2\r\n  };\r\n\r\n  const [position, setPosition] = useState(defaultPosition);\r\n  \r\n  // Fetch data from the server when component mounts\r\n  useEffect(() => {\r\n    console.log(\"🔵 ToTestList mounted\");\r\n    \r\n    // Focus window, but only once on initial mount\r\n    if (initialMount.current && !hasFocused.current) {\r\n      const focusTimeout = setTimeout(() => {\r\n        console.log(\"🎯 ToTestList initial focusing\");\r\n        onMouseDown();\r\n        hasFocused.current = true;\r\n      }, 50);\r\n      \r\n      initialMount.current = false;\r\n      \r\n      return () => clearTimeout(focusTimeout);\r\n    }\r\n\r\n    // Fetch data from the server\r\n    fetchTestItems();\r\n  }, []); // Empty dependency array - run once on mount\r\n\r\n  // Clean up portal and timers on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      // Clear any pending save timeouts\r\n      if (saveTimeoutRef.current) {\r\n        clearTimeout(saveTimeoutRef.current);\r\n        saveTimeoutRef.current = null;\r\n      }\r\n      \r\n      hasFocused.current = false; // Reset focus state on unmount\r\n      \r\n      // Don't remove the portal element itself - this causes issues\r\n      // Just reset internal state for next mount\r\n    };\r\n  }, []);\r\n\r\n  // Save data to database whenever rows change\r\n  useEffect(() => {\r\n    // Don't save on initial mount\r\n    if (initialMount.current) {\r\n      return;\r\n    }\r\n\r\n    // Clear any existing timeout\r\n    if (saveTimeoutRef.current) {\r\n      clearTimeout(saveTimeoutRef.current);\r\n    }\r\n\r\n    // Set a new timeout to save data\r\n    saveTimeoutRef.current = setTimeout(() => {\r\n      saveTestItems();\r\n    }, 500); // Debounce saves to avoid too many API calls\r\n  }, [rows]);\r\n\r\n  // Save position to sessionStorage whenever it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('toTestListPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  // Fetch test items from the database\r\n  const fetchTestItems = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      console.log(\"📥 Fetching test items from server\");\r\n      const response = await fetch(`${API_URL}/test-items`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching test items: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"📊 Received test items:\", data);\r\n      \r\n      // Map the data to match our expected format\r\n      const formattedRows = data.map((item: any, index: number) => ({\r\n        id: item.id,\r\n        sn: index + 1, // Ensure sequential numbering\r\n        test: item.test,\r\n        satellite: item.satellite,\r\n        dateTime: item.dateTime,\r\n        loggedBy: item.loggedBy,\r\n        selected: false\r\n      }));\r\n      \r\n      setRows(formattedRows);\r\n      \r\n      // Fall back to localStorage if the server returns no data\r\n      if (formattedRows.length === 0) {\r\n        console.log(\"📝 No data from server, checking localStorage\");\r\n        const savedRows = localStorage.getItem(\"toTestListRows\");\r\n        if (savedRows) {\r\n          const parsedRows = JSON.parse(savedRows);\r\n          setRows(parsedRows);\r\n          \r\n          // Save the localStorage data to the server\r\n          saveTestItems(parsedRows);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching test items:\", error);\r\n      \r\n      // Fall back to localStorage on error\r\n      const savedRows = localStorage.getItem(\"toTestListRows\");\r\n      if (savedRows) {\r\n        setRows(JSON.parse(savedRows));\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Save test items to both localStorage and the database\r\n  const saveTestItems = async (itemsToSave = rows) => {\r\n    if (itemsToSave.length === 0) {\r\n      console.log(\"No items to save\");\r\n      return;\r\n    }\r\n    \r\n    // Save to localStorage first (as backup)\r\n    localStorage.setItem(\"toTestListRows\", JSON.stringify(itemsToSave));\r\n    \r\n    // Save to the database\r\n    try {\r\n      console.log(\"💾 Saving test items to server:\", itemsToSave);\r\n      setSaveStatus(\"Saving...\");\r\n      \r\n      const response = await fetch(`${API_URL}/test-items`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ items: itemsToSave }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error saving test items: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"✅ Server response:\", data);\r\n      setSaveStatus(\"Saved\");\r\n      \r\n      // Clear saved status after 2 seconds\r\n      setTimeout(() => setSaveStatus(null), 2000);\r\n    } catch (error) {\r\n      console.error(\"Error saving test items:\", error);\r\n      setSaveStatus(\"Error saving\");\r\n      \r\n      // Clear error status after 3 seconds\r\n      setTimeout(() => setSaveStatus(null), 3000);\r\n    }\r\n  };\r\n\r\n  const addItem = () => {\r\n    if (!formData.test) return; // Prevent adding empty items\r\n    \r\n    const newRow: RowData = {\r\n      sn: rows.length + 1,\r\n      test: formData.test,\r\n      satellite: formData.satellite,\r\n      dateTime: new Date().toLocaleString(),\r\n      loggedBy: formData.loggedBy || \"Anonymous\",\r\n    };\r\n    \r\n    setRows([...rows, newRow]);\r\n    setFormData({ test: \"\", satellite: \"\", loggedBy: \"\" });\r\n  };\r\n\r\n  const deleteItem = async () => {\r\n    const selectedIndex = rows.findIndex((row) => row.selected);\r\n    if (selectedIndex !== -1) {\r\n      const selectedRow = rows[selectedIndex];\r\n      const updatedRows = rows.filter((_, index) => index !== selectedIndex);\r\n\r\n      // Update local state with recalculated S/N\r\n      setRows(\r\n        updatedRows.map((row, index) => ({\r\n          ...row,\r\n          sn: index + 1, // Recalculate S/N\r\n        }))\r\n      );\r\n\r\n      // If the deleted item has an ID, delete it from the server\r\n      if (selectedRow.id) {\r\n        try {\r\n          console.log(`🗑️ Deleting test item ID ${selectedRow.id} from server`);\r\n          \r\n          const response = await fetch(`${API_URL}/test-items/${selectedRow.id}`, {\r\n            method: 'DELETE',\r\n          });\r\n          \r\n          if (!response.ok) {\r\n            throw new Error(`Error deleting test item: ${response.status}`);\r\n          }\r\n          \r\n          console.log(\"✅ Item deleted from server\");\r\n        } catch (error) {\r\n          console.error(\"Error deleting test item:\", error);\r\n        }\r\n      }\r\n\r\n      // Update localStorage\r\n      if (updatedRows.length === 0) {\r\n        localStorage.removeItem(\"toTestListRows\");\r\n      } else {\r\n        localStorage.setItem(\"toTestListRows\", JSON.stringify(updatedRows));\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearList = async () => {\r\n    if (window.confirm(\"Are you sure you want to clear all items?\")) {\r\n      setRows([]);\r\n      localStorage.removeItem(\"toTestListRows\"); // Explicitly clear localStorage\r\n      \r\n      // Clear all items from the server\r\n      try {\r\n        console.log(\"🧹 Clearing all test items from server\");\r\n        \r\n        const response = await fetch(`${API_URL}/test-items/clear`, {\r\n          method: 'DELETE',\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Error clearing test items: ${response.status}`);\r\n        }\r\n        \r\n        console.log(\"✅ All items cleared from server\");\r\n      } catch (error) {\r\n        console.error(\"Error clearing test items:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleRowSelection = (index: number) => {\r\n    const updatedRows = rows.map((row, i) => ({\r\n      ...row,\r\n      selected: i === index ? !row.selected : false,\r\n    }));\r\n    setRows(updatedRows);\r\n  };\r\n\r\n  // When the window is clicked, bring it to front using the passed function\r\n  const handleWindowClick = (e: React.MouseEvent) => {\r\n    // Prevent bringing to front for clicks on inputs and buttons\r\n    if (\r\n      e.target instanceof HTMLInputElement || \r\n      e.target instanceof HTMLButtonElement ||\r\n      (e.target instanceof HTMLElement && e.target.closest('button') !== null)\r\n    ) {\r\n      return;\r\n    }\r\n    \r\n    console.log(`🖱️ Clicked ToTestList, bringing to front`);\r\n    onMouseDown();\r\n  };\r\n\r\n  // Add state to track dark mode\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  \r\n  // Update dark mode state on component mount and when theme changes\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      const isDark = document.documentElement.classList.contains(\"dark\");\r\n      setIsDarkMode(isDark);\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Set up observer for theme changes\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        if (mutation.attributeName === \"class\") {\r\n          checkDarkMode();\r\n        }\r\n      });\r\n    });\r\n    \r\n    observer.observe(document.documentElement, {\r\n      attributes: true,\r\n      attributeFilter: [\"class\"]\r\n    });\r\n    \r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n  \r\n  // Force immediate theme check when component renders\r\n  useEffect(() => {\r\n    setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n  }, []);\r\n\r\n  // Compute actual z-index to use, falling back to provided zIndex if needed\r\n  const effectiveZIndex = windowZIndexes[\"ToTestList\"] || zIndex;\r\n\r\n  // Handle close with confirmation\r\n  const handleClose = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation(); // Prevents accidental reopening\r\n    console.log(\"🔴 ToTestList close button clicked\");\r\n    \r\n    // Update sessionStorage directly to ensure persistence\r\n    try {\r\n      const savedState = sessionStorage.getItem('windowVisibility');\r\n      if (savedState) {\r\n        const state = JSON.parse(savedState);\r\n        state.ToTestList = false;\r\n        sessionStorage.setItem('windowVisibility', JSON.stringify(state));\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error updating sessionStorage:\", e);\r\n    }\r\n    \r\n    onClose();\r\n  };\r\n\r\n  return createPortal(\r\n    <div \r\n      style={{\r\n        position: \"absolute\",\r\n        zIndex: effectiveZIndex,\r\n        opacity: 1,\r\n        visibility: \"visible\",\r\n        pointerEvents: \"auto\",\r\n        display: \"block\", /* Force display */\r\n        willChange: \"z-index\",\r\n        top: 0,          /* Make sure it's not hidden below viewport */\r\n        left: 0          /* Make sure it's not hidden off-screen */\r\n      }}\r\n      data-window=\"ToTestList\"\r\n      id=\"toTestList-window\"\r\n    >\r\n      <Draggable\r\n        nodeRef={nodeRef as React.RefObject<HTMLElement>}\r\n        handle=\".drag-handle\"\r\n        position={position}\r\n        onStop={(e, data) => {\r\n          console.log(`📌 ToTestList moved to: x=${data.x}, y=${data.y}`);\r\n          setPosition({ x: data.x, y: data.y });\r\n        }}\r\n      >\r\n        <div \r\n          ref={nodeRef} \r\n          className={styles.popup} \r\n          style={{ \r\n            position: \"fixed\", \r\n            backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n            color: isDarkMode ? \"#fff\" : \"#000\",\r\n            boxShadow: \"0 5px 15px rgba(0,0,0,0.3)\",\r\n            width: \"800px\", // Add explicit width\r\n            minHeight: \"400px\", // Ensure minimum height  \r\n            userSelect: \"none\", // Prevent text selection during drag\r\n            willChange: \"transform\",\r\n            opacity: 1,\r\n            visibility: \"visible\",\r\n            display: \"block\" /* Force display */\r\n          }}\r\n          onClick={handleWindowClick}\r\n        >\r\n          {/* Window header */}\r\n          <div className={`${styles.header} drag-handle`} style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <h2>Tests to Conduct</h2>\r\n            <button\r\n              onClick={handleClose}\r\n              className={styles.closeButton}\r\n              style={{ \r\n                color: isDarkMode ? \"white\" : \"black\",\r\n                background: \"none\",\r\n                border: \"none\",\r\n                fontSize: \"18px\",\r\n                cursor: \"pointer\"\r\n              }}\r\n            >\r\n              ✖\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Save status indicator */}\r\n          {saveStatus && (\r\n            <div className={styles.saveStatus} style={{\r\n              padding: \"4px 10px\",\r\n              margin: \"0 0 10px 0\",\r\n              fontSize: \"14px\",\r\n              textAlign: \"center\",\r\n              backgroundColor: saveStatus.includes(\"Error\") ? \"#ffdddd\" : \"#ddffdd\",\r\n              color: saveStatus.includes(\"Error\") ? \"#cc0000\" : \"#007700\",\r\n              borderRadius: \"4px\"\r\n            }}>\r\n              {saveStatus}\r\n            </div>\r\n          )}\r\n          \r\n          {/* Loading indicator */}\r\n          {isLoading ? (\r\n            <div className={styles.loadingIndicator} style={{\r\n              textAlign: \"center\",\r\n              padding: \"20px\"\r\n            }}>\r\n              Loading test items...\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <table className={styles.table}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S/N</th>\r\n                    <th>Test</th>\r\n                    <th>Satellite</th>\r\n                    <th>Date/Time Logged</th>\r\n                    <th>Logged by</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows.length === 0 ? (\r\n                    <tr>\r\n    <td \r\n      colSpan={5} \r\n      style={{ \r\n        textAlign: \"center\", \r\n        padding: \"20px\",\r\n        color: \"#000000\", // Always black text\r\n      }}\r\n    >\r\n                        No items added yet. Add a test below.\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    rows.map((row, index) => (\r\n                      <tr\r\n                        key={index}\r\n                        style={{\r\n                          backgroundColor: row.selected\r\n                            ? isDarkMode\r\n                              ? \"#003366\" // Dark blue for dark mode\r\n                              : \"#d0ebff\" // Light blue for light mode\r\n                            : \"transparent\",\r\n                        }}\r\n                        className={row.selected ? styles.selectedRow : \"\"}\r\n                        onClick={(e) => {\r\n                          e.stopPropagation(); // Prevent window click handler\r\n                          toggleRowSelection(index);\r\n                        }}\r\n                      >\r\n                        <td>{row.sn}</td>\r\n                        <td>{row.test}</td>\r\n                        <td>{row.satellite}</td>\r\n                        <td>{row.dateTime}</td>\r\n                        <td>{row.loggedBy}</td>\r\n                      </tr>\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n              <div className={styles.form}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Test\"\r\n                  value={formData.test}\r\n                  onChange={(e) => setFormData({ ...formData, test: e.target.value })}\r\n                  onClick={(e) => e.stopPropagation()} // Prevent dragging when interacting with inputs\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Satellite\"\r\n                  value={formData.satellite}\r\n                  onChange={(e) => setFormData({ ...formData, satellite: e.target.value })}\r\n                  onClick={(e) => e.stopPropagation()}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Logged by\"\r\n                  value={formData.loggedBy}\r\n                  onChange={(e) => setFormData({ ...formData, loggedBy: e.target.value })}\r\n                  onClick={(e) => e.stopPropagation()}\r\n                />\r\n                <button \r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    addItem();\r\n                  }} \r\n                  className={styles.addButton}\r\n                >\r\n                  +\r\n                </button>\r\n              </div>\r\n              <div className={styles.actions}>\r\n                <button \r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    deleteItem();\r\n                  }} \r\n                  className={styles.deleteButton}\r\n                  disabled={!rows.some(row => row.selected)}\r\n                >\r\n                  Delete Item\r\n                </button>\r\n                <button \r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    clearList();\r\n                  }} \r\n                  className={styles.clearButton}\r\n                  disabled={rows.length === 0}\r\n                >\r\n                  Clear List\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Draggable>\r\n    </div>,\r\n    portalElement\r\n  );\r\n};\r\n\r\nexport default ToTestList;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10406, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/ServerWindow/ServerWindow.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"buttonContainer\": \"ServerWindow-module__wfqmlq__buttonContainer\",\n  \"closeButton\": \"ServerWindow-module__wfqmlq__closeButton\",\n  \"connectButton\": \"ServerWindow-module__wfqmlq__connectButton\",\n  \"drag-handle\": \"ServerWindow-module__wfqmlq__drag-handle\",\n  \"form\": \"ServerWindow-module__wfqmlq__form\",\n  \"header\": \"ServerWindow-module__wfqmlq__header\",\n  \"input\": \"ServerWindow-module__wfqmlq__input\",\n  \"logWindow\": \"ServerWindow-module__wfqmlq__logWindow\",\n  \"logs\": \"ServerWindow-module__wfqmlq__logs\",\n  \"minimizeButton\": \"ServerWindow-module__wfqmlq__minimizeButton\",\n  \"popup\": \"ServerWindow-module__wfqmlq__popup\",\n  \"popup-show\": \"ServerWindow-module__wfqmlq__popup-show\",\n  \"pulse\": \"ServerWindow-module__wfqmlq__pulse\",\n  \"realBadge\": \"ServerWindow-module__wfqmlq__realBadge\",\n  \"simulationBadge\": \"ServerWindow-module__wfqmlq__simulationBadge\",\n  \"statusBadge\": \"ServerWindow-module__wfqmlq__statusBadge\",\n  \"statusIndicator\": \"ServerWindow-module__wfqmlq__statusIndicator\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 10431, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ServerWindow/ServerWindow.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./ServerWindow.module.css\";\r\nimport Draggable from \"react-draggable\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { WindowName } from \"@/types/types\";\r\nimport { testWebSocketConnection } from \"@/utils/mccUtils\";\r\n\r\ninterface ServerWindowProps {\r\n  onClose: () => void;\r\n  onMinimize: (status: string) => void; // Prop for minimization\r\n  zIndex: number; \r\n  onMouseDown: () => void; \r\n  bringWindowToFront: (windowName: WindowName) => void;\r\n  windowZIndexes: { [key: string]: number };\r\n  zIndexCounter: number;\r\n}\r\n\r\nconst ServerWindow: React.FC<ServerWindowProps> = ({ \r\n  zIndex, \r\n  onMouseDown, \r\n  onClose,\r\n  onMinimize,\r\n  bringWindowToFront, \r\n  windowZIndexes, \r\n  zIndexCounter \r\n}) => {\r\n  const [serverAddress, setServerAddress] = useState<string>(\"\");\r\n  const [serverPort, setServerPort] = useState<string>(\"9377\"); // Default MCC port\r\n  const [status, setStatus] = useState<string>(\"Disconnected\");\r\n  const [isConnecting, setIsConnecting] = useState<boolean>(false);\r\n  const [connectFailed, setConnectFailed] = useState<boolean>(false);\r\n  const [logs, setLogs] = useState<{ timestamp: string; message: string }[]>([]);\r\n  const [wsConnectionVerified, setWsConnectionVerified] = useState<boolean>(false);\r\n  const [shouldAutoMinimize, setShouldAutoMinimize] = useState<boolean>(false);\r\n\r\n  const logsEndRef = useRef<HTMLDivElement | null>(null);\r\n  const navigate = useNavigate();\r\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  // Create portal element once on mount\r\n  const [portalElement] = useState(() => {\r\n    const existingPortal = document.getElementById(\"serverWindow-root\");\r\n    if (existingPortal) {\r\n      return existingPortal;\r\n    }\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"serverWindow-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n  // Initialize with previous values from localStorage if available\r\n  useEffect(() => {\r\n    try {\r\n      const socketInfo = localStorage.getItem('mccSocketInfo');\r\n      if (socketInfo) {\r\n        const info = JSON.parse(socketInfo);\r\n        if (info.address) {\r\n          const parts = info.address.split(':');\r\n          if (parts.length === 2) {\r\n            setServerAddress(parts[0]);\r\n            setServerPort(parts[1]);\r\n          }\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error loading saved server info:\", e);\r\n    }\r\n  }, []);\r\n\r\n  // Important: Store position in sessionStorage to maintain it across renders\r\n  const savedPosition = sessionStorage.getItem('serverWindowPosition');\r\n  const defaultPosition = savedPosition ? JSON.parse(savedPosition) : {\r\n    x: (window.innerWidth - 600) / 2, \r\n    y: (window.innerHeight - 500) / 2\r\n  };\r\n\r\n  const [position, setPosition] = useState(defaultPosition);\r\n  const nodeRef = useRef<HTMLDivElement>(null!);\r\n  \r\n  // Auto-scroll logs to bottom when new logs are added\r\n  useEffect(() => {\r\n    if (logsEndRef.current) {\r\n      logsEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [logs]);\r\n\r\n  // Auto-minimize after successful connection and navigation\r\n  useEffect(() => {\r\n    // If shouldAutoMinimize flag is set, minimize the window\r\n    if (shouldAutoMinimize) {\r\n      console.log(\"🔄 Auto-minimizing ServerWindow after navigation\");\r\n      onMinimize(status);\r\n      setShouldAutoMinimize(false);\r\n    }\r\n  }, [shouldAutoMinimize, onMinimize, status]);\r\n\r\n  const appendLog = (message: string) => {\r\n    const timestamp = new Date().toLocaleString();\r\n    setLogs((prevLogs) => [...prevLogs, { timestamp, message }]);\r\n  };\r\n\r\n  // When the window is clicked, bring it to front\r\n  const handleWindowClick = () => {\r\n    console.log(`Clicked ServerWindow, bringing to front`);\r\n    onMouseDown();\r\n  };\r\n\r\n  // Handle minimize button click - call the parent component's onMinimize function\r\n  const handleMinimize = (e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    console.log(\"Minimizing ServerWindow, current status:\", status);\r\n    onMinimize(status);\r\n  };\r\n\r\n  // Directly test WebSocket connectivity\r\n  const testDirectWebSocketConnection = async (address: string, port: string): Promise<boolean> => {\r\n    try {\r\n      appendLog(`Testing direct WebSocket connection to ws://${address}:${port}...`);\r\n      const isConnected = await testWebSocketConnection(`${address}:${port}`);\r\n      \r\n      if (isConnected) {\r\n        appendLog(\"✅ Direct WebSocket connection successful!\");\r\n        appendLog(\"✅ REAL CONNECTION MODE is possible\");\r\n        setWsConnectionVerified(true);\r\n      } else {\r\n        appendLog(\"❌ Direct WebSocket connection failed.\");\r\n        appendLog(\"⚠️ This indicates SIMULATION MODE will likely be used\");\r\n      }\r\n      \r\n      return isConnected;\r\n    } catch (error) {\r\n      appendLog(`WebSocket test error: ${error instanceof Error ? error.message : String(error)}`);\r\n      appendLog(\"⚠️ Due to test error, SIMULATION MODE will be used\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleConnect = async () => {\r\n    console.log(\"Connect button pressed\");\r\n    \r\n    // Reset status\r\n    setConnectFailed(false);\r\n    setWsConnectionVerified(false);\r\n    \r\n    // Trim any whitespace from inputs\r\n    const trimmedAddress = serverAddress.trim();\r\n    const trimmedPort = serverPort.trim();\r\n    \r\n    if (!trimmedAddress || !trimmedPort) {\r\n      alert(\"Please provide both Server Address and Port.\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log(\"Starting connection process\");\r\n      setIsConnecting(true);\r\n      setStatus(\"Connecting...\");\r\n      appendLog(`Attempting to connect to MCC server at ${trimmedAddress}:${trimmedPort} via proxy...`);\r\n      \r\n      // First try to check if the proxy server is running\r\n      try {\r\n        appendLog(\"🔍 Checking if proxy server is running...\");\r\n        \r\n        const proxyCheck = await fetch(\"http://localhost:8080\", {\r\n          method: 'GET',\r\n          mode: 'cors',\r\n          headers: {\r\n            'Accept': 'text/plain'\r\n          }\r\n        });\r\n        \r\n        if (proxyCheck.ok) {\r\n          appendLog(\"✅ Proxy server is running and accessible\");\r\n        } else {\r\n          appendLog(`❌ Proxy server returned status ${proxyCheck.status}`);\r\n          appendLog(\"ℹ️ Please start the proxy server using 'node mcc-proxy.js'\");\r\n          setStatus(\"Proxy Unavailable\");\r\n          setConnectFailed(true);\r\n          setIsConnecting(false);\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Proxy check error:\", error);\r\n        appendLog(\"❌ Proxy server is not running or not reachable\");\r\n        appendLog(\"ℹ️ Please start the proxy server using 'node mcc-proxy.js'\");\r\n        setStatus(\"Proxy Unavailable\");\r\n        setConnectFailed(true);\r\n        setIsConnecting(false);\r\n        return;\r\n      }\r\n      \r\n      // Perform WebSocket connectivity test - this helps determine if we can use real mode\r\n      const wsConnected = await testDirectWebSocketConnection(trimmedAddress, trimmedPort);\r\n      \r\n      // Try to connect via the proxy and backend\r\n      console.log(`Sending connection request to ${backendUrl}/connect_mcc`);\r\n      \r\n      const response = await fetch(`${backendUrl}/connect_mcc`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          server_address: trimmedAddress,\r\n          server_port: trimmedPort,\r\n          server_id: \"mcc_client\",\r\n          force_real: wsConnected, // Only force real mode if websocket test succeeded\r\n          use_proxy: true\r\n        }),\r\n      });\r\n      \r\n      // Process the response\r\n      let result;\r\n      let errorText = \"\";\r\n      \r\n      try {\r\n        // Try to parse the response as JSON\r\n        result = await response.json();\r\n        console.log(\"Backend response:\", result);\r\n      } catch (error) {\r\n        // If parsing fails, get the raw text\r\n        errorText = await response.text();\r\n        console.error(\"Non-JSON response:\", errorText);\r\n        appendLog(`HTTP error! Status: ${response.status} - ${errorText}`);\r\n        setStatus(\"Connection Error\");\r\n        setConnectFailed(true);\r\n        setIsConnecting(false);\r\n        return;\r\n      }\r\n      \r\n      console.log(\"Successfully parsed response:\", result);\r\n      \r\n      // Handle different response statuses\r\n      if (result.status === \"success\") {\r\n        console.log(\"Connection successful, handling success case\");\r\n        // Verify if this is a fully verified connection or just a simulated success\r\n        if (result.verified === true) {\r\n          setStatus(\"Connected\");\r\n          appendLog(`✅ ${result.message}`);\r\n          if (wsConnected) {\r\n            appendLog(\"✅ WebSocket and backend connection tests both successful!\");\r\n            appendLog(\"✅ USING REAL CONNECTION MODE - Test results will use real data\");\r\n          } else {\r\n            appendLog(\"⚠️ Backend reports success but WebSocket test failed.\");\r\n            appendLog(\"🔄 ENTERING SIMULATION MODE - Test results will be simulated\");\r\n          }\r\n        } else if (result.simulation === true) {\r\n          setStatus(\"Connected (Simulation)\");\r\n          appendLog(`ℹ️ ${result.message}`);\r\n          appendLog(\"🔄 SIMULATION MODE ACTIVE - All test results will be generated\");\r\n          appendLog(\"ℹ️ No real hardware communication will occur\");\r\n        } else {\r\n          setStatus(\"Connected (Unverified)\");\r\n          appendLog(`⚠️ ${result.message}`);\r\n          appendLog(\"🔄 SIMULATION MODE ACTIVE (Unverified Connection)\");\r\n          appendLog(\"⚠️ Connection reported as successful but not fully verified.\");\r\n        }\r\n      \r\n        // Save the socket connection info in localStorage\r\n        const mccSocketInfo = {\r\n          isReal: !result.simulation && (result.verified || wsConnected),\r\n          address: `${trimmedAddress}:${trimmedPort}`,\r\n          simulation: result.simulation || !wsConnected,\r\n          verified: result.verified || wsConnected\r\n        };\r\n        \r\n        // Store in localStorage so it persists across navigation\r\n        localStorage.setItem('mccSocketInfo', JSON.stringify(mccSocketInfo));\r\n        appendLog(\"📦 Connection information saved for use in the application.\");\r\n        \r\n        // Add explicit simulation status indicator\r\n        if (mccSocketInfo.simulation) {\r\n          appendLog(\"⚠️ SIMULATION MODE will be used for all hardware operations\");\r\n        } else {\r\n          appendLog(\"✅ REAL MODE will be used for hardware operations\");\r\n        }\r\n        \r\n        // Check if ToTestList is visible from sessionStorage\r\n        const savedVisibility = sessionStorage.getItem('windowVisibility');\r\n        let windowVisibility = { \r\n          ToTestList: false,\r\n          ServerWindow: true, // Keep ServerWindow visible\r\n          ThreeDModelWindow: false\r\n        };\r\n        \r\n        if (savedVisibility) {\r\n          try {\r\n            const parsedVisibility = JSON.parse(savedVisibility);\r\n            windowVisibility.ToTestList = parsedVisibility.ToTestList || false;\r\n            windowVisibility.ThreeDModelWindow = parsedVisibility.ThreeDModelWindow || false;\r\n          } catch (e) {\r\n            console.error(\"Error parsing window visibility:\", e);\r\n          }\r\n        }\r\n        \r\n        // Store window state in sessionStorage for persistence with ServerWindow visible\r\n        sessionStorage.setItem('windowVisibility', JSON.stringify(windowVisibility));\r\n        console.log(\"Saved window state before navigation:\", windowVisibility);\r\n        \r\n        // Navigate to main screen\r\n        appendLog(\"🚀 Navigating to main application screen...\");\r\n        console.log(\"📱 About to navigate to /main\");\r\n        \r\n        // Set flag to auto-minimize after navigation\r\n        setShouldAutoMinimize(true);\r\n        \r\n        // Add a small delay to ensure all state updates complete\r\n        setTimeout(() => {\r\n          try {\r\n            navigate(\"/main\");\r\n            console.log(\"📱 Navigation command executed\");\r\n          } catch (error) {\r\n            console.error(\"Navigation error:\", error);\r\n            appendLog(`❌ Error navigating to main screen: ${error}`);\r\n          }\r\n        }, 500);\r\n      } else if (result.status === \"partial\") {\r\n        setStatus(\"Partial Connection\");\r\n        appendLog(`⚠️ ${result.message}`);\r\n        appendLog(\"🔄 SIMULATION MODE ACTIVE - Partial connection detected\");\r\n        appendLog(\"⚠️ The application will use simulation mode for all features.\");\r\n        setConnectFailed(true);\r\n      } else {\r\n        setStatus(\"Failed to Connect\");\r\n        appendLog(`❌ ${result.message}`);\r\n        appendLog(\"🔄 SIMULATION MODE will be used if you continue to main screen\");\r\n        setConnectFailed(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error connecting to MCC:\", error);\r\n      setStatus(\"Connection Error\");\r\n      appendLog(`❌ Connection error: ${error instanceof Error ? error.message : String(error)}`);\r\n      appendLog(\"🔄 SIMULATION MODE will be used if you continue to main screen\");\r\n      setConnectFailed(true);\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      const isDark = document.documentElement.classList.contains(\"dark\");\r\n      setIsDarkMode(isDark);\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Set up observer for theme changes\r\n    const observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        if (mutation.attributeName === \"class\") {\r\n          checkDarkMode();\r\n        }\r\n      });\r\n    });\r\n    \r\n    observer.observe(document.documentElement, {\r\n      attributes: true,\r\n      attributeFilter: [\"class\"]\r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  // Get the effective z-index value\r\n  const effectiveZIndex = windowZIndexes[\"ServerWindow\"] || zIndex;\r\n  \r\n  // Save position to sessionStorage whenever it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('serverWindowPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  // Get status color based on connection state\r\n  const getStatusColor = () => {\r\n    if (status === 'Connected') return '#10b981'; // Green\r\n    if (status === 'Connected (Simulation)') return '#f59e0b'; // Amber\r\n    if (status === 'Connecting...') return '#3b82f6'; // Blue\r\n    if (status.includes('Failed') || status.includes('Error') || status === 'Server Unreachable') {\r\n      return '#ef4444'; // Red\r\n    }\r\n    return '#6b7280'; // Gray\r\n  };\r\n\r\n  return createPortal(\r\n    <Draggable\r\n      nodeRef={nodeRef}\r\n      handle=\".drag-handle\"\r\n      position={position}\r\n      onStop={(e, d) => {\r\n        console.log(`ServerWindow moved to: x=${d.x}, y=${d.y}`);\r\n        setPosition({ x: d.x, y: d.y });\r\n      }}\r\n    >\r\n      <div \r\n        ref={nodeRef}\r\n        className={styles.popup}\r\n        data-window=\"ServerWindow\"\r\n        id=\"serverWindow-wrapper\"\r\n        style={{ \r\n          position: \"fixed\",\r\n          zIndex: effectiveZIndex,\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n          color: isDarkMode ? \"#fff\" : \"#000\",\r\n          border: `1px solid ${isDarkMode ? \"#333\" : \"#ddd\"}`,\r\n          borderRadius: \"10px\",\r\n          boxShadow: \"0 4px 20px rgba(0, 0, 0, 0.2)\"\r\n        }}\r\n        onClick={handleWindowClick}\r\n      >\r\n        <div className={`${styles.header} drag-handle`}>\r\n          <h2>Server Connection</h2>\r\n          <div className={styles.buttonContainer}>\r\n            <button\r\n              onClick={handleMinimize}\r\n              className={styles.minimizeButton}\r\n              title=\"Minimize\"\r\n            >\r\n              —\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                onClose();\r\n              }}\r\n              className={styles.closeButton}\r\n              title=\"Close\"\r\n            >\r\n              ✖\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className={styles.form}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Server Address\"\r\n            value={serverAddress}\r\n            onChange={(e) => setServerAddress(e.target.value)}\r\n            className={styles.input}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Port\"\r\n            value={serverPort}\r\n            onChange={(e) => setServerPort(e.target.value)}\r\n            className={styles.input}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n          <button \r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleConnect();\r\n            }} \r\n            className={styles.connectButton}\r\n            disabled={isConnecting}\r\n            style={{ \r\n              backgroundColor: isConnecting ? '#9ca3af' : connectFailed ? '#ef4444' : '#00bcd4',\r\n              cursor: isConnecting ? 'wait' : 'pointer'\r\n            }}\r\n          >\r\n            {isConnecting ? \"Connecting...\" : connectFailed ? \"Retry\" : \"Connect\"}\r\n          </button>\r\n        </div>\r\n        \r\n        <div style={{ \r\n          padding: '8px 0',\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center'\r\n        }}>\r\n          <div className={styles.statusIndicator}>\r\n            Status: \r\n            <span style={{ \r\n              color: getStatusColor(),\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: '8px'\r\n            }}>\r\n              {status}\r\n              \r\n              {/* Pulse animation for \"Connecting...\" state */}\r\n              {status === 'Connecting...' && (\r\n                <span className={styles.pulse}>⟲</span>\r\n              )}\r\n            </span>\r\n            \r\n            {/* Show simulation badge when appropriate */}\r\n            {(status.includes('Simulation') || \r\n              (status === 'Connected' && serverAddress.toLowerCase() === 'localhost') ||\r\n              status === 'Partial Connection') && (\r\n              <span className={`${styles.statusBadge} ${styles.simulationBadge}`}>\r\n                SIMULATION MODE\r\n              </span>\r\n            )}\r\n            \r\n            {/* Only show real mode badge when verified and not localhost */}\r\n            {status === 'Connected' && \r\n              wsConnectionVerified && \r\n              serverAddress.toLowerCase() !== 'localhost' && (\r\n              <span className={`${styles.statusBadge} ${styles.realBadge}`}>\r\n                REAL CONNECTION\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {wsConnectionVerified && (\r\n            <span style={{\r\n              backgroundColor: '#10b981', \r\n              color: 'white', \r\n              padding: '2px 8px', \r\n              borderRadius: '9999px', \r\n              fontSize: '12px'\r\n            }}>\r\n              WebSocket Verified\r\n            </span>\r\n          )}\r\n        </div>\r\n        \r\n        <div className={styles.logs}>\r\n          <h3>Connection Logs</h3>\r\n          <div\r\n            className={styles.logWindow}\r\n            style={{\r\n              backgroundColor: isDarkMode ? \"#2a2a2a\" : \"#f5f5f5\",\r\n              maxHeight: '180px',\r\n              overflowY: 'auto'\r\n            }}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            {logs.map((log, index) => (\r\n              <div key={index} style={{ display: \"flex\", alignItems: \"flex-start\", marginBottom: '4px' }}>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    minWidth: \"150px\",\r\n                    marginRight: \"8px\",\r\n                    textAlign: \"right\",\r\n                    fontSize: '12px',\r\n                    color: isDarkMode ? '#9ca3af' : '#6b7280'\r\n                  }}\r\n                >\r\n                  [{log.timestamp}]\r\n                </span>\r\n                <span style={{ \r\n                  flex: 1,\r\n                  color: log.message.includes('✅') ? '#10b981' :\r\n                          log.message.includes('❌') ? '#ef4444' :\r\n                          log.message.includes('⚠️') ? '#f59e0b' :\r\n                          log.message.includes('SIMULATION MODE') ? '#ff9800' :\r\n                          log.message.includes('REAL MODE') ? '#4caf50' :\r\n                          isDarkMode ? '#f3f4f6' : '#1f2937',\r\n                  fontWeight: log.message.includes('SIMULATION MODE') || log.message.includes('REAL MODE') ? 'bold' : 'normal'\r\n                }}>\r\n                  {log.message}\r\n                </span>\r\n              </div>\r\n            ))}\r\n            <div ref={logsEndRef}></div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Tips and information */}\r\n        <div style={{ \r\n          marginTop: '10px', \r\n          padding: '10px', \r\n          backgroundColor: isDarkMode ? '#374151' : '#f0f9ff',\r\n          borderRadius: '6px',\r\n          fontSize: '12px'\r\n        }}>\r\n          <p style={{ margin: '0 0 4px 0', fontWeight: 'bold' }}>Connection Notes:</p>\r\n          <ul style={{ margin: '0', paddingLeft: '20px' }}>\r\n            <li>Ensure the MCC server is running at the specified address/port</li>\r\n            <li>Verify MCC Proxy <code>mcc-proxy.js</code> is running</li>\r\n            <li>Simulation mode will be used if there is no connection</li>\r\n            <li>Minimise this window to keep the connection while working</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Draggable>,\r\n    portalElement\r\n  );\r\n}\r\n\r\nexport default ServerWindow;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 11195, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/ModelWindow/ThreeDModelWindow.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"closeButton\": \"ThreeDModelWindow-module__5BjfpW__closeButton\",\n  \"content\": \"ThreeDModelWindow-module__5BjfpW__content\",\n  \"dark\": \"ThreeDModelWindow-module__5BjfpW__dark\",\n  \"drag-handle\": \"ThreeDModelWindow-module__5BjfpW__drag-handle\",\n  \"header\": \"ThreeDModelWindow-module__5BjfpW__header\",\n  \"light\": \"ThreeDModelWindow-module__5BjfpW__light\",\n  \"paused\": \"ThreeDModelWindow-module__5BjfpW__paused\",\n  \"popup\": \"ThreeDModelWindow-module__5BjfpW__popup\",\n  \"popup-show\": \"ThreeDModelWindow-module__5BjfpW__popup-show\",\n  \"rotate-icon\": \"ThreeDModelWindow-module__5BjfpW__rotate-icon\",\n  \"spin\": \"ThreeDModelWindow-module__5BjfpW__spin\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 11214, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/ModelWindow/ThreeDModelWindow.jsx"],"sourcesContent":["// ThreeDModelWindow.jsx - Performance-optimized for large models\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Draggable from \"react-draggable\";\r\nimport styles from \"./ThreeDModelWindow.module.css\";\r\n\r\n// Create a global variable outside the component to persist across renders\r\nlet globalPortalElement = null;\r\n\r\n// Component implementation with fixed visibility\r\nconst ThreeDModelWindow = (props) => {\r\n  const {\r\n    profileId,\r\n    zIndex,\r\n    onMouseDown,\r\n    onClose,\r\n    windowZIndexes,\r\n    showThreeDModelWindow,\r\n    zIndexCounter,\r\n    bringWindowToFront\r\n  } = props;\r\n  \r\n  // Refs\r\n  const portalRef = useRef(null);\r\n  const hasCalledOnMouseDownRef = useRef(false);\r\n  const threeInstanceRef = useRef(null);\r\n  const nodeRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const isInitializedRef = useRef(false);\r\n  const modelRef = useRef(null);\r\n  const threeRef = useRef(null);\r\n  const controlsRef = useRef(null);\r\n  const loaderRef = useRef(null);\r\n  const dracoLoaderRef = useRef(null); // For draco compression\r\n  const dataFetchedRef = useRef(false);\r\n  const lastProfileIdRef = useRef(null);\r\n  const portalCleanupDone = useRef(false);\r\n  const isAutoRotatingRef = useRef(true);\r\n  const resizeTimeoutRef = useRef(null); // For resize throttling\r\n\r\n  // State\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [modelPath, setModelPath] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [loadError, setLoadError] = useState(null);\r\n  const [loadingProgress, setLoadingProgress] = useState(0);\r\n  const [loadingBytes, setLoadingBytes] = useState(0); // Add bytes loaded\r\n  const [totalBytes, setTotalBytes] = useState(0); // Add total bytes\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState(null);\r\n  const [isModelReady, setIsModelReady] = useState(false);\r\n  const [portalError, setPortalError] = useState(false);\r\n  const [portalCreated, setPortalCreated] = useState(false);\r\n  const [isAutoRotating, setIsAutoRotating] = useState(true);\r\n  const [adaptiveBackgroundColor, setAdaptiveBackgroundColor] = useState(null);\r\n  const [modelStats, setModelStats] = useState({ vertices: 0, size: 0 }); // Track model stats\r\n  const [showDetailedStats, setShowDetailedStats] = useState(false); // Toggle for stats display\r\n  \r\n  const API_URL = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  // Z-index management\r\n  const effectiveZIndex = windowZIndexes?.ThreeDModelWindow || zIndex;\r\n\r\n  useEffect(() => {\r\n    console.log(`ThreeDModelWindow z-index updated to ${effectiveZIndex}`);\r\n  }, [effectiveZIndex]);\r\n\r\n  // Create or get the portal element only once on component mount\r\n  useEffect(() => {\r\n    // Create portal element if it doesn't exist globally\r\n    if (!globalPortalElement) {\r\n      globalPortalElement = document.createElement(\"div\");\r\n      globalPortalElement.id = \"threeDModelWindow-root\";\r\n      document.body.appendChild(globalPortalElement);\r\n      console.log(\"🌐 Created global portal element for 3D Model Window\");\r\n    }\r\n    \r\n    // Set the portal reference\r\n    portalRef.current = globalPortalElement;\r\n    \r\n    // Only clean up Three.js resources on unmount, but DON'T remove the portal element\r\n    return () => {\r\n      console.log(\"⚠️ ThreeDModelWindow unmounting - cleaning up resources but keeping portal\");\r\n      \r\n      // Prevent React from removing Three.js nodes directly\r\n      const restore = preventReactTreeCleanup(containerRef);\r\n      \r\n      // Cancel animation frames\r\n      if (window.threeDModelAnimationFrame) {\r\n        cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n        delete window.threeDModelAnimationFrame;\r\n      }\r\n      \r\n      // Clean up Three.js resources directly\r\n      if (threeInstanceRef.current && threeInstanceRef.current.removeListeners) {\r\n        threeInstanceRef.current.removeListeners();\r\n      }\r\n      \r\n      if (threeInstanceRef.current && threeInstanceRef.current.renderer) {\r\n        threeInstanceRef.current.renderer.dispose();\r\n      }\r\n      \r\n      // Clean up Draco loader if it exists\r\n      if (dracoLoaderRef.current) {\r\n        dracoLoaderRef.current.dispose && dracoLoaderRef.current.dispose();\r\n        dracoLoaderRef.current = null;\r\n      }\r\n\r\n      // Clear all timeouts\r\n      if (resizeTimeoutRef.current) {\r\n        clearTimeout(resizeTimeoutRef.current);\r\n      }\r\n      \r\n      threeInstanceRef.current = null;\r\n      isInitializedRef.current = false;\r\n      portalRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  const handleWindowClick = () => {\r\n    console.log(\"🖱️ Clicked ThreeDModelWindow, bringing to front\");\r\n    if (onMouseDown) {\r\n      onMouseDown();\r\n    }\r\n  };\r\n\r\n  // Implement a custom close handler that cleans up properly\r\n  const handleClose = () => {\r\n    console.log(\"🔴 User closing ThreeDModelWindow\");\r\n    \r\n    // Call the provided onClose function\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // Toggle auto rotation\r\n  const toggleAutoRotation = () => {\r\n    const newState = !isAutoRotating;\r\n    \r\n    // Update React state\r\n    setIsAutoRotating(newState);\r\n    \r\n    // Update ref for direct access\r\n    isAutoRotatingRef.current = newState;\r\n    \r\n    // Apply directly to the OrbitControls if they exist\r\n    if (controlsRef.current) {\r\n      console.log(`🔄 Directly setting autoRotate to ${newState}`);\r\n      controlsRef.current.autoRotate = newState;\r\n    }\r\n    \r\n    // Also update in threeInstance for other code to reference\r\n    if (threeInstanceRef.current) {\r\n      threeInstanceRef.current.autoRotate = newState;\r\n      console.log(`🔄 Auto-rotation ${newState ? 'enabled' : 'disabled'} in threeInstance`);\r\n    }\r\n  };\r\n\r\n  // Add this helper outside your component\r\n  const preventReactTreeCleanup = (targetRef) => {\r\n    if (!targetRef || !targetRef.current) return;\r\n    \r\n    // Save any existing DOM content to a document fragment\r\n    const fragment = document.createDocumentFragment();\r\n    while (targetRef.current.firstChild) {\r\n      fragment.appendChild(targetRef.current.firstChild);\r\n    }\r\n    \r\n    // Replace the ref's content with a dummy element that React can safely remove\r\n    const placeholder = document.createElement('div');\r\n    targetRef.current.appendChild(placeholder);\r\n    \r\n    // Return a cleanup function that can restore the original content if needed\r\n    return () => {\r\n      if (targetRef.current) {\r\n        targetRef.current.appendChild(fragment);\r\n      }\r\n    };\r\n  };\r\n\r\n  // Add keyframes animation\r\n  useEffect(() => {\r\n    const pulseAnimation = `\r\n      @keyframes pulse {\r\n        0% { opacity: 0.6; }\r\n        50% { opacity: 1; }\r\n        100% { opacity: 0.6; }\r\n      }\r\n      @keyframes spin {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n      }\r\n    `;\r\n    \r\n    const styleEl = document.createElement('style');\r\n    styleEl.innerHTML = pulseAnimation;\r\n    document.head.appendChild(styleEl);\r\n    \r\n    return () => {\r\n      if (document.head.contains(styleEl)) {\r\n        document.head.removeChild(styleEl);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Path testing effect with proper conditional\r\n  useEffect(() => {\r\n    // Always call the hook, but guard the internal logic\r\n    if (!modelPath || !API_URL || !showThreeDModelWindow) return;\r\n\r\n    const pathTestKey = `${modelPath}-${profileId}`;\r\n    if (window._testedPaths && window._testedPaths[pathTestKey]) return;\r\n\r\n    // Initialize tracking object if needed\r\n    if (!window._testedPaths) window._testedPaths = {};\r\n    window._testedPaths[pathTestKey] = true;\r\n\r\n    // Now perform the tests\r\n    const testPaths = [\r\n        modelPath,\r\n        `${API_URL}${modelPath.startsWith('/') ? '' : '/'}${modelPath}`,\r\n        `/models/profile_${profileId}.glb`,\r\n        `${window.location.origin}/models/profile_${profileId}.glb`,\r\n        `${API_URL}/models/profile_${profileId}.glb`\r\n    ];\r\n\r\n    console.log(\"🧪 Testing all possible model paths (one-time check):\");\r\n    testPaths.forEach((path, index) => {\r\n        fetch(path, { method: 'HEAD' })\r\n            .then(response => {\r\n                console.log(`Path ${index + 1}: ${path} - ${response.status} ${response.ok ? '✓' : '✗'}`);\r\n            })\r\n            .catch(err => {\r\n                console.log(`Path ${index + 1}: ${path} - Error: ${err.message}`);\r\n            });\r\n    });\r\n  }, [modelPath, API_URL, profileId, showThreeDModelWindow]);\r\n\r\n  // API URL validation\r\n  useEffect(() => {\r\n    // GUARD: Only run once per API URL\r\n    if (!API_URL || window._checkedApiUrl === API_URL) return;\r\n    window._checkedApiUrl = API_URL;\r\n    \r\n    let baseUrl = API_URL;\r\n    \r\n    // Check if API_URL ends with a slash and remove it for consistency\r\n    if (baseUrl.endsWith('/')) {\r\n      baseUrl = baseUrl.slice(0, -1);\r\n    }\r\n    \r\n    // Validate and log the API URL\r\n    console.log(`🔗 Using API URL: ${baseUrl}`);\r\n    \r\n    // Verify that the server is reachable - only once per URL\r\n    fetch(`${baseUrl}/profiles`, { \r\n      method: 'HEAD',\r\n      headers: { 'Cache-Control': 'no-cache' } \r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          console.log(`✅ API server is reachable (${response.status})`);\r\n        } else {\r\n          console.warn(`⚠️ API server returned status ${response.status}`);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(`❌ Cannot reach API server: ${err.message}`);\r\n      });\r\n  }, [API_URL]);\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n  \r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    // Only execute the fetch if we're showing the window and have an API URL\r\n    if (!showThreeDModelWindow || !API_URL) {\r\n      // We need to still reset this flag when not visible\r\n      if (!showThreeDModelWindow) {\r\n        hasCalledOnMouseDownRef.current = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Skip if we've already fetched data for this profile\r\n    if (dataFetchedRef.current && lastProfileIdRef.current === profileId) {\r\n      console.log(`🔄 Skipping redundant API call for profile ${profileId}`);\r\n      return;\r\n    }\r\n\r\n    console.log(`🪟 ThreeDModelWindow mounted for profile ${profileId}`);\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`${API_URL}/api/profile/${profileId}`);\r\n        if (!response.ok) throw new Error(`Failed to fetch model data: ${response.status}`);\r\n\r\n        const data = await response.json();\r\n        console.log(\"📄 Model data response:\", data);\r\n\r\n        if (isMounted) {\r\n          if (data.model_path) {\r\n            setModelPath(data.model_path);\r\n            console.log(`🔗 Setting model path to: ${data.model_path}`);\r\n          } else {\r\n            setLoadError(\"No 3D model available for this profile\");\r\n            setIsLoading(false);\r\n          }\r\n          \r\n          // Mark as fetched to prevent repeated calls\r\n          dataFetchedRef.current = true;\r\n          lastProfileIdRef.current = profileId;\r\n        }\r\n      } catch (error) {\r\n        if (isMounted) {\r\n          console.error(\"❌ Error fetching model data:\", error);\r\n          setLoadError(error instanceof Error ? error.message : \"Failed to load model\");\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    if (onMouseDown && !hasCalledOnMouseDownRef.current) {\r\n      console.log(\"📱 Bringing 3D Model Window to front (one-time call)\");\r\n      onMouseDown();\r\n      hasCalledOnMouseDownRef.current = true; // Mark that we've called it\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      \r\n      // Only reset fetch flag if profileId changed\r\n      if (lastProfileIdRef.current !== profileId) {\r\n        dataFetchedRef.current = false;\r\n      }\r\n    };\r\n  }, [profileId, showThreeDModelWindow, API_URL, onMouseDown]);\r\n  \r\n  // Helper function to properly dispose of Three.js resources\r\n  function disposeNode(node) {\r\n    if (!node) return;\r\n    \r\n    if (node.geometry) {\r\n      node.geometry.dispose();\r\n    }\r\n    \r\n    if (node.material) {\r\n      if (Array.isArray(node.material)) {\r\n        node.material.forEach(material => disposeMaterial(material));\r\n      } else {\r\n        disposeMaterial(node.material);\r\n      }\r\n    }\r\n  }\r\n\r\n  function disposeMaterial(material) {\r\n    if (!material) return;\r\n    \r\n    // Dispose of all material properties that could be textures\r\n    Object.keys(material).forEach(prop => {\r\n      if (material[prop] && material[prop].isTexture) {\r\n        material[prop].dispose();\r\n      }\r\n    });\r\n    \r\n    material.dispose();\r\n  }\r\n  \r\n  // Top-level cleanup function with improved resource disposal\r\n  const cleanup = () => {\r\n    try {\r\n      console.log(\"🧹 Running top-level cleanup\");\r\n      \r\n      // Cancel any animation frames\r\n      if (window.threeDModelAnimationFrame) {\r\n        cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n        delete window.threeDModelAnimationFrame;\r\n      }\r\n\r\n      // Clear any pending resize timeouts\r\n      if (resizeTimeoutRef.current) {\r\n        clearTimeout(resizeTimeoutRef.current);\r\n        resizeTimeoutRef.current = null;\r\n      }\r\n      \r\n      // Properly dispose of model resources\r\n      if (modelRef.current) {\r\n        modelRef.current.traverse(disposeNode);\r\n      }\r\n      \r\n      // Clear Three.js resources\r\n      if (threeInstanceRef.current) {\r\n        // Dispose scene and renderer if they exist\r\n        if (threeInstanceRef.current.renderer) {\r\n          threeInstanceRef.current.renderer.dispose();\r\n        }\r\n        \r\n        // Remove event listeners if they were added\r\n        if (threeInstanceRef.current.removeListeners) {\r\n          threeInstanceRef.current.removeListeners();\r\n        }\r\n        \r\n        // Clear the reference\r\n        threeInstanceRef.current = null;\r\n      }\r\n\r\n      // Clear controls reference\r\n      if (controlsRef.current) {\r\n        controlsRef.current.dispose && controlsRef.current.dispose();\r\n        controlsRef.current = null;\r\n      }\r\n      \r\n      // Clear loader reference\r\n      loaderRef.current = null;\r\n      \r\n      // Clear Draco loader reference\r\n      if (dracoLoaderRef.current) {\r\n        dracoLoaderRef.current.dispose && dracoLoaderRef.current.dispose();\r\n        dracoLoaderRef.current = null;\r\n      }\r\n\r\n      // Reset the initialization flag but DON'T clear container contents through React\r\n      isInitializedRef.current = false;\r\n      setIsModelReady(false);\r\n      \r\n      // Reset model reference\r\n      modelRef.current = null;\r\n      \r\n      // Reset adaptive background color\r\n      setAdaptiveBackgroundColor(null);\r\n    } catch (error) {\r\n      console.error(\"❌ Safe Cleanup Error:\", error);\r\n    }\r\n  };\r\n  \r\n  // Setup Three.js after component is fully mounted\r\n  useEffect(() => {\r\n    if (!showThreeDModelWindow || !containerRef.current || !modelPath || isInitializedRef.current) {\r\n      return;\r\n    }\r\n    \r\n    console.log(\"🔧 Ready to initialize Three.js:\", {\r\n      showThreeDModelWindow,\r\n      containerExists: !!containerRef.current,\r\n      modelPath,\r\n      alreadyInitialized: isInitializedRef.current\r\n    });\r\n    \r\n    // Delay Three.js initialization to ensure DOM stability\r\n    const initTimer = setTimeout(() => {\r\n      if (containerRef.current) {\r\n        console.log(\"⏱️ Delayed initialization starting now\");\r\n        initThreeJS();\r\n      } else {\r\n        console.log(\"❌ Container no longer exists after delay\");\r\n      }\r\n    }, 300);\r\n    \r\n    return () => {\r\n      clearTimeout(initTimer);\r\n    };\r\n  }, [showThreeDModelWindow, modelPath]);\r\n\r\n  // Initialize Three.js safely with performance optimizations\r\n  const initThreeJS = () => {\r\n    // Early exit if already initialized or container disappeared\r\n    if (isInitializedRef.current || !containerRef.current) return;\r\n    isInitializedRef.current = true;\r\n    \r\n    import('three')\r\n      .then(THREE => {\r\n        // Store THREE reference for use in other functions\r\n        threeRef.current = THREE;\r\n        \r\n        // First import DRACOLoader for compression support\r\n        import('three/examples/jsm/loaders/DRACOLoader.js')\r\n          .then(({ DRACOLoader }) => {\r\n            // Then import GLTFLoader\r\n            import('three/examples/jsm/loaders/GLTFLoader.js')\r\n              .then(({ GLTFLoader }) => {\r\n                // Finally import OrbitControls\r\n                import('three/examples/jsm/controls/OrbitControls.js')\r\n                  .then(({ OrbitControls }) => {\r\n                    // Safe check if component is still mounted\r\n                    if (!containerRef.current) {\r\n                      console.log(\"Container no longer exists, aborting Three.js setup\");\r\n                      return;\r\n                    }\r\n                    \r\n                    try {\r\n                      // Setup Three.js scene\r\n                      const width = containerRef.current.clientWidth;\r\n                      const height = containerRef.current.clientHeight;\r\n                      \r\n                      // Create renderer with optimizations\r\n                      const renderer = new THREE.WebGLRenderer({ \r\n                        antialias: true,\r\n                        alpha: true,\r\n                        powerPreference: \"high-performance\", // Performance optimization\r\n                        precision: \"mediump\" // Medium precision is usually sufficient\r\n                      });\r\n                      \r\n                      // Optimize renderer settings\r\n                      renderer.setSize(width, height);\r\n                      // Limit pixel ratio for high DPI displays\r\n                      renderer.setPixelRatio(window.devicePixelRatio > 1 ? 2 : 1);\r\n                      \r\n                      // Create scene with frustum culling enabled\r\n                      const scene = new THREE.Scene();\r\n                      scene.frustumCulled = true; // Enable frustum culling\r\n                      scene.background = new THREE.Color(isDarkMode ? 0x1a1a1a : 0xf5f5f5);\r\n                      \r\n                      // Create camera\r\n                      const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);\r\n                      camera.position.set(5, 5, 10);\r\n                      \r\n                      // Add lights\r\n                      const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\r\n                      scene.add(ambientLight);\r\n                      \r\n                      const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\r\n                      directionalLight.position.set(10, 10, 5);\r\n                      scene.add(directionalLight);\r\n                      \r\n                      // Create controls with auto-rotation\r\n                      const controls = new OrbitControls(camera, renderer.domElement);\r\n                      controls.enableDamping = true;\r\n                      controls.dampingFactor = 0.05; // Add damping for smoother movement\r\n                      \r\n                      // Get the initial auto-rotation state from state/ref\r\n                      controls.autoRotate = isAutoRotatingRef.current;\r\n                      controls.autoRotateSpeed = 1.0; // Slower for better performance\r\n                      \r\n                      // Store controls in ref for direct access from UI\r\n                      controlsRef.current = controls;\r\n                      \r\n                      // Log the initial auto-rotation state\r\n                      console.log(`🔄 Controls created with autoRotate=${controls.autoRotate}`);\r\n                      \r\n                      // Add renderer to container\r\n                      if (containerRef.current) {\r\n                        containerRef.current.appendChild(renderer.domElement);\r\n                      } else {\r\n                        console.error(\"Container lost during initialization\");\r\n                        return;\r\n                      }\r\n                      \r\n                      // Function to clean up resources\r\n                      const cleanupThreeResources = () => {\r\n                        try {\r\n                          // Cancel any animation frames first\r\n                          if (window.threeDModelAnimationFrame) {\r\n                            cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n                            delete window.threeDModelAnimationFrame;\r\n                          }\r\n                          \r\n                          // Dispose of resources\r\n                          if (controls) controls.dispose();\r\n                          \r\n                          // Remove DOM elements carefully\r\n                          if (renderer && renderer.domElement) {\r\n                            try {\r\n                              const parent = renderer.domElement.parentNode;\r\n                              if (parent && parent.contains(renderer.domElement)) {\r\n                                parent.removeChild(renderer.domElement);\r\n                              }\r\n                            } catch (e) {\r\n                              console.warn(\"Could not remove renderer element:\", e);\r\n                            }\r\n                            renderer.dispose();\r\n                          }\r\n                          \r\n                          // Clear references\r\n                          scene.clear();\r\n                          \r\n                          isInitializedRef.current = false;\r\n                        } catch (error) {\r\n                          console.error(\"❌ Local cleanup error:\", error);\r\n                        }\r\n                      };\r\n                      \r\n                      // Function to calculate dominant color from a model\r\n                      const calculateDominantColor = (model) => {\r\n                        try {\r\n                          // Make sure we have a valid THREE reference\r\n                          if (!threeRef.current) {\r\n                            console.error(\"THREE not available for color calculation\");\r\n                            return null;\r\n                          }\r\n                          \r\n                          // Create a small offscreen renderer to capture the model\r\n                          const offscreenRenderer = new threeRef.current.WebGLRenderer({ \r\n                            antialias: false, // Turn off for performance\r\n                            preserveDrawingBuffer: true \r\n                          });\r\n                          offscreenRenderer.setSize(16, 16); // Smaller for better performance\r\n                          \r\n                          // Create temporary camera and scene\r\n                          const tempScene = new threeRef.current.Scene();\r\n                          const tempCamera = new threeRef.current.PerspectiveCamera(45, 1, 0.1, 1000);\r\n                          tempCamera.position.set(5, 5, 10);\r\n                          \r\n                          // Add model to temp scene\r\n                          tempScene.add(model.clone());\r\n                          \r\n                          // Add lighting\r\n                          const ambientLight = new threeRef.current.AmbientLight(0xffffff, 0.7);\r\n                          tempScene.add(ambientLight);\r\n                          \r\n                          // Render the scene\r\n                          offscreenRenderer.render(tempScene, tempCamera);\r\n                          \r\n                          // Get pixel data\r\n                          const gl = offscreenRenderer.getContext();\r\n                          const pixels = new Uint8Array(16 * 16 * 4);\r\n                          gl.readPixels(0, 0, 16, 16, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n                          \r\n                          // Calculate average color, skipping black/transparent pixels\r\n                          let r = 0, g = 0, b = 0, total = 0;\r\n                          \r\n                          for (let i = 0; i < pixels.length; i += 4) {\r\n                            // Skip transparent or black pixels\r\n                            if (pixels[i+3] > 10 && (pixels[i] > 5 || pixels[i+1] > 5 || pixels[i+2] > 5)) {\r\n                              r += pixels[i];\r\n                              g += pixels[i+1];\r\n                              b += pixels[i+2];\r\n                              total++;\r\n                            }\r\n                          }\r\n                          \r\n                          // Cleanup\r\n                          offscreenRenderer.dispose();\r\n                          \r\n                          if (total === 0) return null; // No valid pixels\r\n                          \r\n                          // Get average\r\n                          r = Math.floor(r / total);\r\n                          g = Math.floor(g / total);\r\n                          b = Math.floor(b / total);\r\n                          \r\n                          // Create a contrasting background color (inverted with reduced intensity)\r\n                          const invR = 255 - r;\r\n                          const invG = 255 - g;\r\n                          const invB = 255 - b;\r\n                          \r\n                          // Create a subtle background (blend inverted with white/black)\r\n                          const baseColor = isDarkMode ? 0 : 255;\r\n                          const blendFactor = 0.85; // Subtlety factor\r\n                          \r\n                          const bgR = Math.floor(invR * (1-blendFactor) + baseColor * blendFactor);\r\n                          const bgG = Math.floor(invG * (1-blendFactor) + baseColor * blendFactor);\r\n                          const bgB = Math.floor(invB * (1-blendFactor) + baseColor * blendFactor);\r\n                          \r\n                          console.log(`🎨 Detected dominant color: rgb(${r},${g},${b})`);\r\n                          console.log(`🎨 Created background color: rgb(${bgR},${bgG},${bgB})`);\r\n                          \r\n                          return new threeRef.current.Color(bgR/255, bgG/255, bgB/255);\r\n                        } catch (err) {\r\n                          console.error(\"❌ Error calculating dominant color:\", err);\r\n                          return null;\r\n                        }\r\n                      };\r\n                      \r\n                      // Make sure we have the correct full path to the model\r\n                      let fullModelPath = modelPath;\r\n                      if (modelPath) {\r\n                        if (modelPath.startsWith('http')) {\r\n                          // Already a full URL\r\n                          fullModelPath = modelPath;\r\n                        } else if (modelPath.startsWith('/models/')) {\r\n                          // This is a path to the API server's models folder\r\n                          fullModelPath = `${API_URL}${modelPath}`;\r\n                        } else if (modelPath.startsWith('/')) {\r\n                          // Some other absolute path\r\n                          fullModelPath = `${API_URL}${modelPath}`;\r\n                        } else {\r\n                          // Relative path\r\n                          fullModelPath = `${API_URL}/${modelPath}`;\r\n                        }\r\n                      }\r\n\r\n                      console.log('🔍 Path Construction (Improved):');\r\n                      console.log(`- Original model path: \"${modelPath}\"`);\r\n                      console.log(`- API URL: \"${API_URL}\"`);\r\n                      console.log(`- Using path: \"${fullModelPath}\"`);\r\n\r\n                      // Only use these two paths for model loading:\r\n                      const priorityPaths = [\r\n                        fullModelPath,\r\n                        `${API_URL}/models/profile_${profileId}.glb`\r\n                      ];\r\n\r\n                      // Add timeout handling with longer initial timeout\r\n                      let loadTimeout = setTimeout(() => {\r\n                        console.warn(\"⚠️ Model loading timeout - retrying with cache busting...\");\r\n                        retryLoading();\r\n                      }, 30000); // 30 second timeout for large models\r\n\r\n                      // Setup Draco compression loader for better performance\r\n                      const dracoLoader = new DRACOLoader();\r\n                      dracoLoader.setDecoderPath('https://www.gstatic.com/draco/versioned/decoders/1.5.5/');\r\n                      dracoLoader.setDecoderConfig({ type: 'js' });\r\n                      dracoLoaderRef.current = dracoLoader;\r\n                      \r\n                      // Create the loader with Draco compression\r\n                      const loader = new GLTFLoader();\r\n                      loader.setDRACOLoader(dracoLoader);\r\n                      loaderRef.current = loader;\r\n                      \r\n                      const retryLoading = () => {\r\n                        clearTimeout(loadTimeout);\r\n                        console.log(\"🔄 Retrying model load with cache busting...\");\r\n                        \r\n                        // Try with a cache-busting parameter\r\n                        const cacheBuster = `?t=${Date.now()}`;\r\n                        \r\n                        // Try a different path construction approach on retry\r\n                        const retryPath = modelPath?.startsWith('/')\r\n                          ? `${window.location.origin}${modelPath}${cacheBuster}`\r\n                          : `${fullModelPath}${cacheBuster}`;\r\n                        \r\n                        console.log(`🔄 Retry path: ${retryPath}`);\r\n                        \r\n                        // Use loaderRef.current instead of loader\r\n                        if (loaderRef.current) {\r\n                          loaderRef.current.load(\r\n                            retryPath,\r\n                            onModelLoaded,\r\n                            onProgress,\r\n                            onError\r\n                          );\r\n                        } else {\r\n                          console.error(\"❌ Loader is not available for retry\");\r\n                          setLoadError(\"Cannot load model: loader unavailable\");\r\n                          setIsLoading(false);\r\n                        }\r\n                      };\r\n\r\n                      // Helper function to simplify geometry for better performance\r\n                      const optimizeMesh = (mesh) => {\r\n                        // Skip non-mesh objects\r\n                        if (!mesh.isMesh) return mesh;\r\n                      \r\n                        // Skip already optimized meshes\r\n                        if (mesh.userData.optimized) return mesh;\r\n                      \r\n                        try {\r\n                          // Get original geometry\r\n                          const geometry = mesh.geometry;\r\n                          \r\n                          // Skip non-BufferGeometry\r\n                          if (!geometry.isBufferGeometry) return mesh;\r\n                          \r\n                          // Skip geometries with missing attributes\r\n                          if (!geometry.attributes.position) return mesh;\r\n                          \r\n                          // Mark as optimized to avoid processing it again\r\n                          mesh.userData.optimized = true;\r\n                          \r\n                          // Add frustum culling\r\n                          mesh.frustumCulled = true;\r\n                          \r\n                          return mesh;\r\n                        } catch (err) {\r\n                          console.warn(\"Error optimizing mesh:\", err);\r\n                          return mesh;\r\n                        }\r\n                      };\r\n\r\n                      // Create Level of Detail for large models\r\n                      const setupLOD = (model, box, size) => {\r\n                        try {\r\n                          // If the model isn't very large, return it as is\r\n                          if (countVertices(model) < 100000) {\r\n                            return model;\r\n                          }\r\n                          \r\n                          // If THREE.LOD isn't available, return the original model\r\n                          if (!threeRef.current.LOD) {\r\n                            return model;\r\n                          }\r\n                          \r\n                          console.log(\"📊 Setting up LOD for large model\");\r\n                          \r\n                          // Create a new LOD object\r\n                          const lod = new threeRef.current.LOD();\r\n                          \r\n                          // Add the original model as the highest detail level\r\n                          lod.addLevel(model, 0);\r\n                          \r\n                          // Clone the model for lower detail levels\r\n                          const simplifiedModel = model.clone();\r\n                          \r\n                          // Simplify the model by traversing it and applying optimizations\r\n                          simplifiedModel.traverse((node) => {\r\n                            if (node.isMesh) {\r\n                              optimizeMesh(node);\r\n                            }\r\n                          });\r\n                          \r\n                          // Add the simplified model for viewing at a distance\r\n                          lod.addLevel(simplifiedModel, size * 1.5);\r\n                          \r\n                          // Return the LOD object\r\n                          return lod;\r\n                        } catch (err) {\r\n                          console.warn(\"Failed to setup LOD:\", err);\r\n                          return model;\r\n                        }\r\n                      };\r\n\r\n                      // Model loaded handler with performance optimizations\r\n                      const onModelLoaded = (gltf) => {\r\n                        clearTimeout(loadTimeout);\r\n                        \r\n                        if (!containerRef.current) {\r\n                          cleanupThreeResources();\r\n                          return;\r\n                        }\r\n                        \r\n                        try {\r\n                          console.log(\"✅ Model loaded successfully - processing model data\");\r\n                          const model = gltf.scene;\r\n                          \r\n                          // Store model in ref for rotation controls\r\n                          modelRef.current = model;\r\n                          \r\n                          // Center and scale model\r\n                          const box = new THREE.Box3().setFromObject(model);\r\n                          const center = new THREE.Vector3();\r\n                          box.getCenter(center);\r\n                          \r\n                          model.position.sub(center);\r\n                          \r\n                          const size = box.getSize(new THREE.Vector3()).length();\r\n                          const scale = 5 / size;\r\n                          model.scale.set(scale, scale, scale);\r\n                          \r\n                          // Add more detailed diagnostic logging\r\n                          const vertexCount = countVertices(model);\r\n                          console.log(`📊 Model stats: vertices=${vertexCount}, size=${size}`);\r\n                          \r\n                          // Store model stats for UI display\r\n                          setModelStats({\r\n                            vertices: vertexCount,\r\n                            triangles: Math.round(vertexCount / 3),\r\n                            size: size,\r\n                            fileSize: totalBytes > 0 ? \r\n                                     (totalBytes / (1024 * 1024)).toFixed(2) + \" MB\" : \r\n                                     \"Unknown\"\r\n                          });\r\n                          \r\n                          // Optimize entire model for better performance\r\n                          model.traverse((node) => {\r\n                            if (node.isMesh) {\r\n                              // Apply optimizations to each mesh\r\n                              optimizeMesh(node);\r\n                              \r\n                              // Simplify material if possible\r\n                              if (node.material) {\r\n                                if (node.material.map) {\r\n                                  // Downscale textures for better performance\r\n                                  node.material.map.minFilter = THREE.LinearFilter;\r\n                                  node.material.map.magFilter = THREE.LinearFilter;\r\n                                  node.material.map.anisotropy = 1; // Lower anisotropy for performance\r\n                                }\r\n                              }\r\n                            }\r\n                          });\r\n                          \r\n                          // Calculate and set adaptive background color based on model\r\n                          try {\r\n                            console.log(\"🎨 Analyzing model for dominant color...\");\r\n                            const dominantColor = calculateDominantColor(model);\r\n                            if (dominantColor) {\r\n                              scene.background = dominantColor;\r\n                              setAdaptiveBackgroundColor(dominantColor.getStyle());\r\n                              console.log(`🎨 Set background to: ${dominantColor.getStyle()}`);\r\n                            }\r\n                          } catch (err) {\r\n                            console.error(\"❌ Error setting adaptive background:\", err);\r\n                          }\r\n                          \r\n                          // Apply Level of Detail for large models\r\n                          const finalModel = vertexCount > 100000 ? \r\n                                            setupLOD(model, box, size) : \r\n                                            model;\r\n                          \r\n                          scene.add(finalModel);\r\n                          \r\n                          setIsLoading(false);\r\n                          setIsModelReady(true);\r\n                          console.log(\"✅ Model successfully added to scene\");\r\n                        } catch (err) {\r\n                          console.error(\"❌ Error processing loaded model:\", err);\r\n                          setLoadError(`Error processing model: ${err.message}`);\r\n                          setIsLoading(false);\r\n                        }\r\n                      };\r\n\r\n                      // Helper function to count vertices (for diagnostics)\r\n                      const countVertices = (model) => {\r\n                        let count = 0;\r\n                        model.traverse((obj) => {\r\n                          if (obj.isMesh && obj.geometry) {\r\n                            const position = obj.geometry.getAttribute('position');\r\n                            if (position) count += position.count;\r\n                          }\r\n                        });\r\n                        return count;\r\n                      };\r\n\r\n                      // Improved progress tracking\r\n                      const onProgress = (progress) => {\r\n                        try {\r\n                          // Log all progress events for debugging\r\n                          console.log(`📊 Progress: loaded=${progress.loaded} bytes, total=${progress.total || 'unknown'} bytes`);\r\n                          \r\n                          // Store bytes loaded for better user feedback\r\n                          setLoadingBytes(progress.loaded || 0);\r\n                          \r\n                          // Ensure we have valid progress values\r\n                          if (progress.total > 0) {\r\n                            setTotalBytes(progress.total);\r\n                            const percent = Math.round((progress.loaded / progress.total) * 100);\r\n                            setLoadingProgress(percent);\r\n                            console.log(`📊 Loading progress: ${percent}%`);\r\n                          } else {\r\n                            // If we can't calculate percentage, show indeterminate progress\r\n                            console.log(`📊 Loading in progress (bytes: ${progress.loaded})`);\r\n                            // Simulate progress to give user feedback\r\n                            setLoadingProgress((prev) => (prev < 90 ? prev + 5 : prev));\r\n                          }\r\n                        } catch (err) {\r\n                          console.warn(\"⚠️ Error reporting progress:\", err);\r\n                          // Keep advancing progress to provide feedback\r\n                          setLoadingProgress((prev) => (prev < 90 ? prev + 5 : prev));\r\n                        }\r\n                      };\r\n\r\n                      const onError = (error) => {\r\n                        clearTimeout(loadTimeout);\r\n                        console.error(\"❌ Error loading model:\", error);\r\n                        \r\n                        // Direct fetch check for file existence\r\n                        console.log(`🔍 Checking if GLB file exists at: ${fullModelPath}`);\r\n                        fetch(fullModelPath, { method: 'HEAD' })\r\n                          .then(response => {\r\n                            console.log(`📋 HEAD check for ${fullModelPath}: ${response.status} ${response.ok ? '✓' : '✗'}`);\r\n                            if (!response.ok) {\r\n                              console.log('⚠️ Primary file path returned error, will try alternatives');\r\n                            }\r\n                          })\r\n                          .catch(err => {\r\n                            console.log(`❌ Error checking file: ${err.message}`);\r\n                          });\r\n\r\n                        // Detailed error reporting\r\n                        if (error.target && error.target instanceof XMLHttpRequest) {\r\n                          console.error(`❌ XHR Error Status: ${error.target.status}`);\r\n                          console.error(`❌ XHR Error Response: ${error.target.responseText || 'No response'}`);\r\n                        }\r\n                        \r\n                        setLoadError(`Error loading model: ${error.message || \"Unknown error\"}`);\r\n                        setIsLoading(false);\r\n                        \r\n                        // Attempt to provide more specific error information\r\n                        if (error.message && error.message.includes(\"404\")) {\r\n                          setLoadError(`Model file not found (404). Check if '${fullModelPath}' exists on the server.`);\r\n                        } else if (error.message && error.message.includes(\"Failed to fetch\")) {\r\n                          setLoadError(\"Network error. Check your internet connection or server status.\");\r\n                        } else if (error.message && error.message.includes(\"Unexpected token\")) {\r\n                          setLoadError(\"Invalid model format. The file may be corrupted or not a valid GLB file.\");\r\n                        } else if (error.message && error.message.includes(\"Cross-Origin\")) {\r\n                          setLoadError(\"Cross-origin (CORS) error. Server configuration issue.\");\r\n                        }\r\n                      };\r\n\r\n                      // Log the paths we'll try\r\n                      console.log('🚀 Will attempt to load from:', priorityPaths);\r\n\r\n                      // Load model with proper loader reference\r\n                      const tryLoadModel = (path, onSuccess, onProgress, onError) => {\r\n                        console.log(`🔄 Attempting to load model from: ${path}`);\r\n                        // Make sure we use the loader from the ref\r\n                        if (loaderRef.current) {\r\n                          loaderRef.current.load(path, onSuccess, onProgress, onError);\r\n                        } else {\r\n                          console.error(\"❌ Loader is not available\");\r\n                          setLoadError(\"Cannot load model: loader unavailable\");\r\n                          setIsLoading(false);\r\n                        }\r\n                      };\r\n\r\n                      // Start with the first path\r\n                      tryLoadModel(priorityPaths[0], onModelLoaded, onProgress, (error) => {\r\n                        console.error(`❌ Failed to load from primary path: ${error.message}`);\r\n                        \r\n                        // If that fails, try the second path\r\n                        if (priorityPaths.length > 1) {\r\n                          console.log(`🔄 Trying fallback path: ${priorityPaths[1]}`);\r\n                          tryLoadModel(priorityPaths[1], onModelLoaded, onProgress, (finalError) => {\r\n                            console.error(`❌ All paths failed: ${finalError.message}`);\r\n                            setLoadError(\"Could not load model file. Please upload a model file.\");\r\n                            setIsLoading(false);\r\n                          });\r\n                        } else {\r\n                          setLoadError(`Error loading model: ${error.message}`);\r\n                          setIsLoading(false);\r\n                        }\r\n                      });\r\n\r\n                      // Optimized animation loop\r\n                      const animate = () => {\r\n                        if (!containerRef.current) {\r\n                          if (window.threeDModelAnimationFrame) {\r\n                            cancelAnimationFrame(window.threeDModelAnimationFrame);\r\n                            delete window.threeDModelAnimationFrame;\r\n                          }\r\n                          return;\r\n                        }\r\n                        \r\n                        // Update controls - this is critical for auto-rotation to work\r\n                        if (controlsRef.current) {\r\n                          // Ensure auto-rotation state is always synced from React state\r\n                          controlsRef.current.autoRotate = isAutoRotatingRef.current;\r\n                          controlsRef.current.update();\r\n                        }\r\n                        \r\n                        renderer.render(scene, camera);\r\n                        window.threeDModelAnimationFrame = requestAnimationFrame(animate);\r\n                      };\r\n                      \r\n                      // Throttled resize handler for better performance\r\n                      const handleResize = () => {\r\n                        if (resizeTimeoutRef.current) {\r\n                          clearTimeout(resizeTimeoutRef.current);\r\n                        }\r\n                        \r\n                        resizeTimeoutRef.current = setTimeout(() => {\r\n                          if (!containerRef.current) return;\r\n                          \r\n                          const width = containerRef.current.clientWidth;\r\n                          const height = containerRef.current.clientHeight;\r\n                          \r\n                          renderer.setSize(width, height);\r\n                          camera.aspect = width / height;\r\n                          camera.updateProjectionMatrix();\r\n                        }, 100); // 100ms throttle\r\n                      };\r\n                      \r\n                      window.addEventListener('resize', handleResize);\r\n                      \r\n                      // Store instance functions for cleanup\r\n                      threeInstanceRef.current = {\r\n                        animate,\r\n                        renderer,\r\n                        removeListeners: () => {\r\n                          window.removeEventListener('resize', handleResize);\r\n                          if (resizeTimeoutRef.current) {\r\n                            clearTimeout(resizeTimeoutRef.current);\r\n                            resizeTimeoutRef.current = null;\r\n                          }\r\n                        },\r\n                        autoRotate: isAutoRotatingRef.current\r\n                      };\r\n                      \r\n                      // Start animation loop\r\n                      animate();\r\n                      \r\n                    } catch (error) {\r\n                      console.error(\"Error initializing Three.js:\", error);\r\n                      setLoadError(\"Failed to initialize 3D viewer\");\r\n                      setIsLoading(false);\r\n                    }\r\n                  });\r\n              });\r\n          });\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error loading Three.js libraries:\", error);\r\n        setLoadError(\"Failed to load 3D libraries\");\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  \r\n  // Format file size for display\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return \"0 Bytes\";\r\n    const k = 1024;\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\r\n  };\r\n  \r\n  // Handle file upload\r\n  const handleFileUpload = async () => {\r\n    if (!selectedFile) {\r\n      setUploadStatus('Error: No file selected');\r\n      return;\r\n    }\r\n    \r\n    if (!selectedFile.name.endsWith('.glb')) {\r\n      setUploadStatus('Error: Only .glb files are supported');\r\n      return;\r\n    }\r\n    \r\n    // Check file size (100MB limit)\r\n    const maxSize = 100 * 1024 * 1024; // 100MB in bytes\r\n    if (selectedFile.size > maxSize) {\r\n      setUploadStatus(`Error: File exceeds 100MB limit (${(selectedFile.size/1024/1024).toFixed(2)}MB)`);\r\n      return;\r\n    }\r\n    \r\n    // Clean up existing Three.js instance before uploading\r\n    cleanup();\r\n    isInitializedRef.current = false;\r\n    \r\n    setIsLoading(true);\r\n    setUploadStatus('Uploading model...');\r\n    \r\n    // Create FormData with progress tracking\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('profile_id', String(profileId));\r\n    \r\n    try {\r\n      console.log(`📤 Starting upload for ${selectedFile.name}`);\r\n      \r\n      // Track upload progress using XMLHttpRequest\r\n      const xhr = new XMLHttpRequest();\r\n      \r\n      // Set up progress tracking\r\n      xhr.upload.addEventListener('progress', (event) => {\r\n        if (event.lengthComputable) {\r\n          const percentComplete = Math.round((event.loaded / event.total) * 100);\r\n          setUploadStatus(`Uploading: ${percentComplete}%`);\r\n          console.log(`📤 Upload progress: ${percentComplete}%`);\r\n        }\r\n      });\r\n      \r\n      // Create a promise to handle the XHR response\r\n      const uploadPromise = new Promise((resolve, reject) => {\r\n        xhr.addEventListener('load', () => {\r\n          if (xhr.status >= 200 && xhr.status < 300) {\r\n            try {\r\n              const response = JSON.parse(xhr.responseText);\r\n              resolve(response);\r\n            } catch (e) {\r\n              reject(new Error('Invalid response format'));\r\n            }\r\n          } else {\r\n            reject(new Error(`Server returned ${xhr.status}: ${xhr.statusText}`));\r\n          }\r\n        });\r\n        \r\n        xhr.addEventListener('error', () => {\r\n          reject(new Error('Network error during upload'));\r\n        });\r\n        \r\n        xhr.addEventListener('abort', () => {\r\n          reject(new Error('Upload aborted'));\r\n        });\r\n      });\r\n      \r\n      // Set up the request\r\n      xhr.open('POST', `${API_URL}/api/upload-glb`, true);\r\n      xhr.send(formData);\r\n      \r\n      // Wait for the upload to complete\r\n      const result = await uploadPromise;\r\n      \r\n      console.log('✅ Upload successful:', result);\r\n      \r\n      // Reset data fetched flag to load new model\r\n      dataFetchedRef.current = false;\r\n      \r\n      setModelPath(result.model_path);\r\n      setUploadStatus('Model uploaded successfully! Loading model...');\r\n      setLoadError(null);\r\n      setSelectedFile(null);\r\n      \r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n      \r\n      // Preload the model with direct fetch to validate\r\n      const modelUrl = result.model_path.startsWith('http') \r\n        ? result.model_path \r\n        : `${API_URL}${result.model_path.startsWith('/') ? '' : '/'}${result.model_path}`;\r\n        \r\n      console.log(`🔎 Checking uploaded model at: ${modelUrl}`);\r\n      \r\n      // Validate the uploaded file with a HEAD request\r\n      fetch(modelUrl, { method: 'HEAD' })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            console.log('✅ Uploaded model file is accessible');\r\n          } else {\r\n            console.warn(`⚠️ Uploaded model file returned status ${response.status}`);\r\n            setUploadStatus(`Warning: Model may not load correctly (HTTP ${response.status})`);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error('❌ Error validating uploaded file:', err);\r\n        });\r\n      \r\n      // Automatically hide success message after delay\r\n      setTimeout(() => {\r\n        setUploadStatus(null);\r\n      }, 5000);\r\n    } catch (error) {\r\n      console.error('❌ Error uploading model:', error);\r\n      setUploadStatus(`Error: ${error.message}`);\r\n      setLoadError(`Upload failed: ${error.message}`);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Check if portal is ready before attempting to render\r\n  const portalReady = !!portalRef.current;\r\n\r\n  // Don't render if window shouldn't be visible or portal ref isn't ready\r\n  // CRITICAL FIX: Always place useState, useRef, useEffect BEFORE any conditional return\r\n  if (!showThreeDModelWindow || !portalReady) {\r\n    console.log(\"🚫 Not rendering ThreeDModelWindow - visibility:\", showThreeDModelWindow, \"portal ready:\", portalReady);\r\n    return null;\r\n  }\r\n  \r\n  // Get position from sessionStorage or use default\r\n  const defaultPosition = {\r\n    x: Math.max(0, (window.innerWidth - 600) / 2),\r\n    y: Math.max(0, (window.innerHeight - 550) / 2)\r\n  };\r\n  \r\n  console.log(\"📍 Model window position:\", defaultPosition);\r\n  console.log(\"✅ Rendering ThreeDModelWindow - visibility:\", showThreeDModelWindow);\r\n  console.log(\"📊 Z-index:\", effectiveZIndex);\r\n\r\n  try {\r\n    // Use portalRef.current instead of portalElement\r\n    return createPortal(\r\n      <div \r\n        className=\"three-model-window-container\" \r\n        style={{ \r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          zIndex: effectiveZIndex,\r\n          pointerEvents: \"none\" // Allow clicks to pass through the container but not the window\r\n        }}\r\n      >\r\n        <Draggable\r\n          nodeRef={nodeRef}\r\n          handle=\".drag-handle\"\r\n          defaultPosition={defaultPosition}\r\n          bounds=\"parent\"\r\n        >\r\n          <div \r\n            ref={nodeRef} \r\n            style={{ \r\n              position: \"absolute\",\r\n              zIndex: effectiveZIndex,\r\n              backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n              color: isDarkMode ? \"#fff\" : \"#000\",\r\n              width: \"600px\",\r\n              borderRadius: \"10px\",\r\n              boxShadow: \"0 4px 20px rgba(0, 0, 0, 0.3)\",\r\n              overflow: \"hidden\",\r\n              pointerEvents: \"auto\", // Ensure clicks work on the window\r\n              visibility: \"visible\",\r\n              opacity: 1,\r\n              willChange: \"transform, z-index\"\r\n            }}\r\n            onClick={handleWindowClick}\r\n          >\r\n            <div \r\n              className=\"drag-handle\"\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                padding: \"15px\",\r\n                backgroundColor: isDarkMode ? \"#2c2c2c\" : \"#f0f0f0\",\r\n                borderTopLeftRadius: \"10px\",\r\n                borderTopRightRadius: \"10px\",\r\n                cursor: \"grab\"\r\n              }}\r\n            >\r\n              <h2 style={{ margin: 0 }}>Satellite Model Viewer</h2>\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation(); // Prevent event bubbling to the window\r\n                  handleClose();\r\n                }}\r\n                style={{ \r\n                  color: isDarkMode ? \"white\" : \"black\",\r\n                  background: \"none\",\r\n                  border: \"none\",\r\n                  fontSize: \"18px\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n              >\r\n                ✖\r\n              </button>\r\n            </div>\r\n            \r\n            <div style={{ padding: \"20px\" }}>\r\n              {/* Upload status message */}\r\n              {uploadStatus && (\r\n                <div style={{ \r\n                  margin: \"10px 0\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"4px\",\r\n                  backgroundColor: uploadStatus.includes('Error') \r\n                    ? (isDarkMode ? \"#3d0000\" : \"#ffdddd\") \r\n                    : (isDarkMode ? \"#004d00\" : \"#ddffdd\"),\r\n                  color: uploadStatus.includes('Error')\r\n                    ? (isDarkMode ? \"#ff8080\" : \"#d00000\")\r\n                    : (isDarkMode ? \"#80ff80\" : \"#00b000\")\r\n                }}>\r\n                  {uploadStatus}\r\n                </div>\r\n              )}\r\n\r\n              {/* Control buttons */}\r\n              <div style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                marginBottom: \"10px\"\r\n              }}>\r\n                {/* Stats toggle button */}\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setShowDetailedStats(!showDetailedStats);\r\n                  }}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    padding: \"8px 14px\",\r\n                    backgroundColor: showDetailedStats ? \"#00bcd4\" : (isDarkMode ? \"#444\" : \"#f0f0f0\"),\r\n                    color: showDetailedStats ? \"white\" : (isDarkMode ? \"#fff\" : \"#444\"),\r\n                    border: \"none\",\r\n                    borderRadius: \"4px\",\r\n                    cursor: \"pointer\",\r\n                    fontSize: \"14px\",\r\n                    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                    transition: \"all 0.2s ease\"\r\n                  }}\r\n                >\r\n                  {showDetailedStats ? \"Hide Stats\" : \"Show Stats\"}\r\n                </button>\r\n                \r\n                {/* Auto-rotation toggle button */}\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    toggleAutoRotation();\r\n                  }}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    padding: \"8px 14px\",\r\n                    backgroundColor: isAutoRotating ? \"#00bcd4\" : (isDarkMode ? \"#444\" : \"#f0f0f0\"),\r\n                    color: isAutoRotating ? \"white\" : (isDarkMode ? \"#fff\" : \"#444\"),\r\n                    border: \"none\",\r\n                    borderRadius: \"4px\",\r\n                    cursor: \"pointer\",\r\n                    fontSize: \"14px\",\r\n                    fontWeight: \"bold\",\r\n                    boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                    transition: \"all 0.2s ease\"\r\n                  }}\r\n                >\r\n                  <span style={{ \r\n                    display: \"inline-block\",\r\n                    marginRight: \"8px\",\r\n                    animation: isAutoRotating ? \"spin 2s linear infinite\" : \"none\" \r\n                  }}>\r\n                    🔄\r\n                  </span>\r\n                  {isAutoRotating ? \"Stop Rotation\" : \"Auto-Rotate\"}\r\n                </button>\r\n              </div>\r\n\r\n              {/* Model stats (when toggled) */}\r\n              {showDetailedStats && modelStats.vertices > 0 && (\r\n                <div style={{\r\n                  backgroundColor: isDarkMode ? \"#111\" : \"#f5f5f5\",\r\n                  borderRadius: \"4px\",\r\n                  padding: \"8px 12px\",\r\n                  marginBottom: \"10px\",\r\n                  fontSize: \"14px\"\r\n                }}>\r\n                  <div><strong>Vertices:</strong> {modelStats.vertices.toLocaleString()}</div>\r\n                  <div><strong>Triangles:</strong> {modelStats.triangles.toLocaleString()}</div>\r\n                  {totalBytes > 0 && (\r\n                    <div><strong>File Size:</strong> {formatFileSize(totalBytes)}</div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {/* 3D Model Viewer */}\r\n              <div \r\n                ref={containerRef}\r\n                id=\"model-container\"\r\n                style={{ \r\n                  height: \"400px\", \r\n                  marginBottom: \"20px\",\r\n                  borderRadius: \"4px\",\r\n                  overflow: \"hidden\",\r\n                  border: `1px solid ${isDarkMode ? \"#333\" : \"#ddd\"}`,\r\n                  position: \"relative\",\r\n                  backgroundColor: adaptiveBackgroundColor || (isDarkMode ? \"#111\" : \"#f5f5f5\")\r\n                }}\r\n              >\r\n                {/* Enhanced loading overlay */}\r\n                {isLoading && (\r\n                  <div style={{ \r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    backgroundColor: isDarkMode ? \"rgba(0,0,0,0.7)\" : \"rgba(255,255,255,0.7)\",\r\n                    zIndex: 10\r\n                  }}>\r\n                    <div style={{ marginBottom: \"20px\", textAlign: \"center\" }}>\r\n                      <div style={{ fontSize: \"18px\", marginBottom: \"8px\" }}>\r\n                        Loading 3D model...\r\n                      </div>\r\n                      <div style={{ fontSize: \"14px\", opacity: 0.8 }}>\r\n                        {loadingProgress > 0 ? \r\n                          `${loadingProgress}% (${formatFileSize(loadingBytes)})` : \r\n                          \"Initializing...\"}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div style={{ \r\n                      width: \"70%\", \r\n                      height: \"12px\", \r\n                      backgroundColor: isDarkMode ? \"#333\" : \"#ddd\",\r\n                      borderRadius: \"6px\",\r\n                      overflow: \"hidden\",\r\n                      boxShadow: \"inset 0 1px 3px rgba(0,0,0,0.2)\"\r\n                    }}>\r\n                      <div style={{\r\n                        width: `${loadingProgress > 0 ? loadingProgress : 5}%`,\r\n                        height: \"100%\",\r\n                        backgroundColor: loadingProgress > 0 ? \"#00bcd4\" : \"#999\",\r\n                        transition: \"width 0.3s ease\",\r\n                        animation: loadingProgress === 0 ? \"pulse 1.5s infinite\" : \"none\"\r\n                      }} />\r\n                    </div>\r\n                    \r\n                    {/* Add retry button if stuck for too long */}\r\n                    {loadingProgress === 0 && (\r\n                      <button \r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          console.log(\"🔄 Manual retry requested\");\r\n                          // Force remount of component\r\n                          cleanup();\r\n                          isInitializedRef.current = false;\r\n                          setModelPath(null);\r\n                          setTimeout(() => {\r\n                            fetch(`${API_URL}/api/profile/${profileId}`)\r\n                              .then(res => res.json())\r\n                              .then(data => {\r\n                                if (data.model_path) {\r\n                                  setModelPath(data.model_path);\r\n                                  console.log(\"🔄 Forced model reload\");\r\n                                }\r\n                              });\r\n                          }, 500);\r\n                        }}\r\n                        style={{\r\n                          marginTop: \"20px\",\r\n                          padding: \"8px 16px\",\r\n                          backgroundColor: isDarkMode ? \"#444\" : \"#eee\",\r\n                          border: \"none\",\r\n                          borderRadius: \"4px\",\r\n                          cursor: \"pointer\",\r\n                          color: isDarkMode ? \"#fff\" : \"#000\"\r\n                        }}\r\n                      >\r\n                        Retry Loading\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                \r\n                {/* Error message */}\r\n                {loadError && !isLoading && (\r\n                  <div style={{ \r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    backgroundColor: isDarkMode ? \"#1a1a1a\" : \"#f5f5f5\",\r\n                    color: \"#e74c3c\",\r\n                    padding: \"20px\",\r\n                    textAlign: \"center\",\r\n                    zIndex: 10\r\n                  }}>\r\n                    <div style={{ marginBottom: \"20px\" }}>\r\n                      <svg width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                        <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n                        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />\r\n                        <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div>{loadError}</div>\r\n                  </div>\r\n                )}\r\n                \r\n                {/* No model message */}\r\n                {!modelPath && !isLoading && !loadError && (\r\n                  <div style={{ \r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    backgroundColor: isDarkMode ? \"#1a1a1a\" : \"#f5f5f5\",\r\n                    zIndex: 10\r\n                  }}>\r\n                    <div style={{ marginBottom: \"10px\" }}>No 3D model available</div>\r\n                    <div style={{ fontSize: \"14px\", opacity: 0.7 }}>Upload a .glb file below</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* File Upload Section */}\r\n              <div style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                gap: \"10px\",\r\n                padding: \"15px\",\r\n                backgroundColor: isDarkMode ? \"#111\" : \"#f5f5f5\",\r\n                borderRadius: \"4px\",\r\n                border: \"1px solid \" + (isDarkMode ? \"#333\" : \"#ddd\"),\r\n                marginTop: \"10px\"\r\n              }}>\r\n                <p style={{ margin: 0, fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n                  Upload 3D Model\r\n                </p>\r\n                \r\n                <div style={{ fontSize: \"14px\", opacity: 0.8, marginBottom: \"8px\" }}>\r\n                  Accepts <b>.glb</b> files - Max size: 100MB\r\n                </div>\r\n                \r\n                <div style={{ display: \"flex\", gap: \"10px\", alignItems: \"center\" }}>\r\n                  <input \r\n                    type=\"file\" \r\n                    accept=\".glb\"\r\n                    ref={fileInputRef}\r\n                    onClick={(e) => e.stopPropagation()}\r\n                    onChange={(e) => {\r\n                      if (e.target.files && e.target.files.length > 0) {\r\n                        const file = e.target.files[0];\r\n                        console.log(`📦 Selected file: ${file.name}, size: ${(file.size/1024/1024).toFixed(2)}MB`);\r\n                        setSelectedFile(file);\r\n                      }\r\n                    }}\r\n                    style={{ \r\n                      flex: 1,\r\n                      padding: \"8px\",\r\n                      border: \"1px solid \" + (isDarkMode ? \"#444\" : \"#ccc\"),\r\n                      borderRadius: \"4px\",\r\n                      backgroundColor: isDarkMode ? \"#222\" : \"#fff\",\r\n                      color: isDarkMode ? \"#fff\" : \"#000\"\r\n                    }}\r\n                  />\r\n                  \r\n                  <button \r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleFileUpload();\r\n                    }}\r\n                    disabled={!selectedFile || isLoading}\r\n                    style={{\r\n                      padding: \"10px 16px\",\r\n                      backgroundColor: selectedFile && !isLoading ? \"#4caf50\" : \"#ccc\",\r\n                      color: \"white\",\r\n                      border: \"none\",\r\n                      borderRadius: \"4px\",\r\n                      cursor: selectedFile && !isLoading ? \"pointer\" : \"not-allowed\",\r\n                      fontWeight: \"bold\",\r\n                      minWidth: \"80px\"\r\n                    }}\r\n                  >\r\n                    {isLoading ? \"Uploading...\" : \"Upload\"}\r\n                  </button>\r\n                </div>\r\n                \r\n                {selectedFile && (\r\n                  <div style={{\r\n                    marginTop: \"8px\",\r\n                    padding: \"8px\",\r\n                    backgroundColor: isDarkMode ? \"#222\" : \"#e7f7e7\",\r\n                    borderRadius: \"4px\",\r\n                    fontSize: \"14px\"\r\n                  }}>\r\n                    <div>Selected: <b>{selectedFile.name}</b></div>\r\n                    <div>Size: {(selectedFile.size/1024/1024).toFixed(2)}MB</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Draggable>\r\n      </div>,\r\n      portalRef.current\r\n    );\r\n  } catch (err) {\r\n    console.error(\"Error rendering portal:\", err);\r\n    setPortalError(true);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default ThreeDModelWindow;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 13021, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/WelcomeWindow/WelcomeWindow.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"buttonContainer\": \"WelcomeWindow-module__WdKywW__buttonContainer\",\n  \"buttonWithNotification\": \"WelcomeWindow-module__WdKywW__buttonWithNotification\",\n  \"dark\": \"WelcomeWindow-module__WdKywW__dark\",\n  \"dateTime\": \"WelcomeWindow-module__WdKywW__dateTime\",\n  \"logo\": \"WelcomeWindow-module__WdKywW__logo\",\n  \"notificationDot\": \"WelcomeWindow-module__WdKywW__notificationDot\",\n  \"welcomeButton\": \"WelcomeWindow-module__WdKywW__welcomeButton\",\n  \"welcomeHeader\": \"WelcomeWindow-module__WdKywW__welcomeHeader\",\n  \"welcomeWindow\": \"WelcomeWindow-module__WdKywW__welcomeWindow\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 13038, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/WelcomeWindow/WelcomeWindow.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport ToTestList from \"../ToTestList/ToTestList\"; // Import the ToTestList popup window React Component\r\nimport ServerWindow from \"../ServerWindow/ServerWindow\"; // Import Server Window Component\r\nimport styles from \"./WelcomeWindow.module.css\";\r\nimport { WindowName } from \"@/types/types\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Use require if not using images.d.ts\r\n//const logo = require(\"../../assets/logo.jpg\");\r\n\r\nconst WelcomeWindow: React.FC<{\r\n  openToTestList: () => void;\r\n  openServerWindow: () => void;\r\n}> = ({ \r\n  openToTestList,\r\n  openServerWindow\r\n}) => {\r\n\r\n  const [dateTime, setDateTime] = useState<string | null>(null);\r\n  const [showToTestList, setShowToTestList] = useState(false);\r\n  const [showServerWindow, setShowServerWindow] = useState(false);\r\n  const [hasTests, setHasTests] = useState(false); // Track if there are rows in the list\r\n  const nodeRef = useRef<HTMLDivElement>(null!);\r\n  const navigate = useNavigate();\r\n\r\n  // Check if the page is in dark mode\r\n  const isDarkMode = document.documentElement.classList.contains(\"dark\");\r\n\r\n// Function to format date and time as DD/MM/YYYY HH:MM:SS Timezone\r\nconst formatDateTime = (date: Date) => {\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const year = date.getFullYear();\r\n  const hours = String(date.getHours()).padStart(2, \"0\");\r\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n  const seconds = String(date.getSeconds()).padStart(2, \"0\");\r\n  \r\n  // Add timezone information\r\n\r\n  // in format e.g. \"America/New_York\" or \"Asia/Singapore\"\r\n  // const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n\r\n  // alternative, in format e.g. \"GMT+0800\"\r\n  const timezoneOffset = date.toTimeString().split(' ')[1];\r\n  \r\n  // update const here accordingly as timezone or timezoneOffset\r\n  return `${day}/${month}/${year} ${hours}:${minutes}:${seconds} (${timezoneOffset})`;\r\n};\r\n\r\n  // Update the date/time every second\r\n  useEffect(() => {\r\n    const updateDateTime = () => setDateTime(formatDateTime(new Date()));\r\n    updateDateTime();\r\n    const interval = setInterval(updateDateTime, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Check for rows in localStorage\r\n  useEffect(() => {\r\n    const savedRows = localStorage.getItem(\"toTestListRows\");\r\n    const hasRows = savedRows ? JSON.parse(savedRows).length > 0 : false;\r\n    // setHasTests is always passed a valid boolean (true or false).\r\n    // may receive null or an empty string due to the logic\r\n    // without true / false and just > 0\r\n    setHasTests(hasRows);\r\n  }, [showToTestList]);\r\n\r\n  const handleToTestListOpen = () => {\r\n    console.log(\"Calling openToTestList\");\r\n    openToTestList(); // This will invoke the function from page.tsx\r\n  };\r\n\r\n  const handleToTestListClose = () => {\r\n    console.log(\"ToTestList closed\");\r\n    setShowToTestList(false);\r\n  };\r\n\r\n  const handleServerWindowOpen = () => {\r\n    console.log(\"Calling openServerWindow\");\r\n    openServerWindow(); // This will invoke the function from page.tsx\r\n  };\r\n\r\n  const handleServerWindowClose = () => {\r\n    console.log(\"ServerWindow closed\");\r\n    setShowServerWindow(false);\r\n  };\r\n  \r\n  return (\r\n    <Draggable nodeRef={nodeRef} handle={`.${styles.welcomeHeader}`} positionOffset={{ x: \"-50%\", y: \"-50%\" }}>\r\n      <div\r\n        ref={nodeRef}\r\n        className={styles.welcomeWindow}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          minHeight: \"200px\",\r\n          background: isDarkMode\r\n            ? \"linear-gradient(135deg, #000000, #1a1a1a)\"\r\n            : \"linear-gradient(135deg, #ffffff, #e6f7ff)\",\r\n        }}\r\n    >\r\n      <header className={`${styles.welcomeHeader} drag-handle`}>\r\n      <img \r\n          src=\"/assets/SaRCLogo.png\" \r\n          alt=\"Satellite Research Centre Logo\" \r\n          className={styles.logo} \r\n          draggable=\"false\" \r\n          onDragStart={(e) => e.preventDefault()}\r\n        />\r\n        <h2>Satellite Research Centre</h2>\r\n        <h1>Satellite Automated Testing System</h1>\r\n        {dateTime && <p className={styles.dateTime}>{dateTime}</p>}\r\n      </header>\r\n      <div className={styles.buttonContainer}>\r\n        <div className={styles.buttonWithNotification}>\r\n          <button\r\n            className={styles.welcomeButton}\r\n            onClick={handleToTestListOpen}\r\n          >\r\n            Tests to Conduct\r\n          </button>\r\n          {hasTests && <span className={styles.notificationDot}></span>}\r\n        </div>\r\n        <button\r\n          className={styles.welcomeButton}\r\n          onClick={handleServerWindowOpen}\r\n        >\r\n          MCC\r\n        </button>\r\n      </div>\r\n    </div>\r\n</Draggable>\r\n  );\r\n};\r\n\r\nexport default WelcomeWindow;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 13256, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/Taskbar/Taskbar.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"pulse\": \"Taskbar-module__gjB6Va__pulse\",\n  \"pulseAnimation\": \"Taskbar-module__gjB6Va__pulseAnimation\",\n  \"statusConnected\": \"Taskbar-module__gjB6Va__statusConnected\",\n  \"statusError\": \"Taskbar-module__gjB6Va__statusError\",\n  \"statusIndicator\": \"Taskbar-module__gjB6Va__statusIndicator\",\n  \"statusSimulation\": \"Taskbar-module__gjB6Va__statusSimulation\",\n  \"statusWaiting\": \"Taskbar-module__gjB6Va__statusWaiting\",\n  \"taskAppear\": \"Taskbar-module__gjB6Va__taskAppear\",\n  \"taskbar\": \"Taskbar-module__gjB6Va__taskbar\",\n  \"taskbarItem\": \"Taskbar-module__gjB6Va__taskbarItem\",\n  \"taskbarItemIcon\": \"Taskbar-module__gjB6Va__taskbarItemIcon\",\n  \"taskbarItemProgress\": \"Taskbar-module__gjB6Va__taskbarItemProgress\",\n  \"taskbarItemProgressFill\": \"Taskbar-module__gjB6Va__taskbarItemProgressFill\",\n  \"taskbarItemTitle\": \"Taskbar-module__gjB6Va__taskbarItemTitle\",\n  \"taskbarItems\": \"Taskbar-module__gjB6Va__taskbarItems\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 13279, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/Taskbar/Taskbar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './Taskbar.module.css';\r\n\r\ninterface MinimizedWindow {\r\n  id: string;\r\n  title: string;\r\n  icon?: React.ReactNode;\r\n  status?: string;\r\n  progress?: number;\r\n  onRestore: () => void;\r\n}\r\n\r\ninterface TaskbarProps {\r\n  minimizedWindows: MinimizedWindow[];\r\n}\r\n\r\nconst Taskbar: React.FC<TaskbarProps> = ({ minimizedWindows }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      setIsDarkMode(document.documentElement.classList.contains(\"dark\"));\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  // Don't render if there are no minimized windows\r\n  if (minimizedWindows.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // Get icon based on window type and status\r\n  const getWindowIcon = (windowId: string, status?: string) => {\r\n    if (windowId === \"ServerWindow\") {\r\n      // Server window with status-based icon\r\n      if (status?.includes(\"Connected\")) {\r\n        return (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <rect x=\"2\" y=\"2\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect>\r\n            <rect x=\"2\" y=\"14\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect>\r\n            <line x1=\"6\" y1=\"6\" x2=\"6.01\" y2=\"6\"></line>\r\n            <line x1=\"6\" y1=\"18\" x2=\"6.01\" y2=\"18\"></line>\r\n          </svg>\r\n        );\r\n      } else if (status?.includes(\"Error\") || status?.includes(\"Failed\")) {\r\n        return (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path>\r\n            <line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line>\r\n            <line x1=\"12\" y1=\"17\" x2=\"12.01\" y2=\"17\"></line>\r\n          </svg>\r\n        );\r\n      } else {\r\n        return (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n            <rect x=\"2\" y=\"2\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect>\r\n            <rect x=\"2\" y=\"14\" width=\"20\" height=\"8\" rx=\"2\" ry=\"2\"></rect>\r\n            <line x1=\"6\" y1=\"6\" x2=\"6.01\" y2=\"6\"></line>\r\n            <line x1=\"6\" y1=\"18\" x2=\"6.01\" y2=\"18\"></line>\r\n          </svg>\r\n        );\r\n      }\r\n    } else if (windowId === \"ToTestList\") {\r\n      return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <path d=\"M8 6h13\"></path>\r\n          <path d=\"M8 12h13\"></path>\r\n          <path d=\"M8 18h13\"></path>\r\n          <path d=\"M3 6h.01\"></path>\r\n          <path d=\"M3 12h.01\"></path>\r\n          <path d=\"M3 18h.01\"></path>\r\n        </svg>\r\n      );\r\n    } else if (windowId === \"ThreeDModelWindow\") {\r\n      return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n          <path d=\"M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z\"></path>\r\n          <polyline points=\"3.27 6.96 12 12.01 20.73 6.96\"></polyline>\r\n          <line x1=\"12\" y1=\"22.08\" x2=\"12\" y2=\"12\"></line>\r\n        </svg>\r\n      );\r\n    }\r\n    \r\n    // Default icon for other windows\r\n    return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n        <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\r\n        <line x1=\"3\" y1=\"9\" x2=\"21\" y2=\"9\"></line>\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  // Get status text for display\r\n  const getStatusText = (windowId: string, status?: string) => {\r\n    if (windowId === \"ServerWindow\") {\r\n      if (status?.includes(\"Connected\")) {\r\n        return status.includes(\"Simulation\") ? \"Sim Mode\" : \"Connected\";\r\n      } else if (status?.includes(\"Error\")) {\r\n        return \"Error\";\r\n      } else if (status?.includes(\"Failed\")) {\r\n        return \"Failed\";\r\n      } else if (status?.includes(\"Partial\")) {\r\n        return \"Partial\";\r\n      } else {\r\n        return status || \"Offline\";\r\n      }\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  // Get status class for the indicator\r\n  const getStatusClass = (windowId: string, status?: string) => {\r\n    if (windowId === \"ServerWindow\") {\r\n      if (status?.includes(\"Connected\")) {\r\n        return status.includes(\"Simulation\") ? styles.statusSimulation : styles.statusConnected;\r\n      } else if (status?.includes(\"Error\") || status?.includes(\"Failed\")) {\r\n        return styles.statusError;\r\n      } else if (status?.includes(\"Partial\")) {\r\n        return styles.statusSimulation;\r\n      } else {\r\n        return styles.statusWaiting;\r\n      }\r\n    }\r\n    return styles.statusWaiting;\r\n  };\r\n\r\n  // Get icon color based on status\r\n  const getIconColor = (windowId: string, status?: string) => {\r\n    if (windowId === \"ServerWindow\") {\r\n      if (status?.includes(\"Connected\")) {\r\n        return status.includes(\"Simulation\") ? \"#f59e0b\" : \"#10b981\";\r\n      } else if (status?.includes(\"Error\") || status?.includes(\"Failed\")) {\r\n        return \"#ef4444\";\r\n      } else if (status?.includes(\"Partial\")) {\r\n        return \"#f59e0b\";\r\n      }\r\n    }\r\n    return isDarkMode ? \"rgba(255, 255, 255, 0.7)\" : \"rgba(17, 24, 39, 0.7)\";\r\n  };\r\n\r\n  return (\r\n    <div className={styles.taskbar}>\r\n      <div className={styles.taskbarItems}>\r\n        {minimizedWindows.map((window) => {\r\n          const statusText = getStatusText(window.id, window.status);\r\n          const iconColor = getIconColor(window.id, window.status);\r\n          const statusClass = getStatusClass(window.id, window.status);\r\n          const isActive = window.status?.includes(\"Running\") || window.status === \"Connecting...\";\r\n          \r\n          return (\r\n            <div \r\n              key={window.id}\r\n              className={styles.taskbarItem}\r\n              onClick={() => {\r\n                console.log(`Restoring window: ${window.id}`);\r\n                window.onRestore();\r\n              }}\r\n            >\r\n              {/* Status indicator dot */}\r\n              <div className={`${styles.statusIndicator} ${statusClass} ${isActive ? styles.pulseAnimation : ''}`}></div>\r\n              \r\n              <span className={styles.taskbarItemIcon} style={{ color: iconColor }}>\r\n                {getWindowIcon(window.id, window.status)}\r\n              </span>\r\n              \r\n              <div style={{ display: 'flex', flexDirection: 'column', overflow: 'hidden', flex: 1 }}>\r\n                <span className={styles.taskbarItemTitle}>\r\n                  {window.title}\r\n                </span>\r\n                {statusText && (\r\n                  <span style={{ \r\n                    fontSize: '10px', \r\n                    color: iconColor,\r\n                    whiteSpace: 'nowrap',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis'\r\n                  }}>\r\n                    {statusText}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              \r\n              {window.progress !== undefined && (\r\n                <div className={styles.taskbarItemProgress}>\r\n                  <div \r\n                    className={styles.taskbarItemProgressFill}\r\n                    style={{ \r\n                      width: `${window.progress}%`,\r\n                      backgroundColor: iconColor\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Taskbar;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 13805, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/SettingsWindow/SettingsWindow.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"aboutInfo\": \"SettingsWindow-module__hn1lxq__aboutInfo\",\n  \"aboutText\": \"SettingsWindow-module__hn1lxq__aboutText\",\n  \"activeTab\": \"SettingsWindow-module__hn1lxq__activeTab\",\n  \"appTitle\": \"SettingsWindow-module__hn1lxq__appTitle\",\n  \"backgroundGrid\": \"SettingsWindow-module__hn1lxq__backgroundGrid\",\n  \"backgroundName\": \"SettingsWindow-module__hn1lxq__backgroundName\",\n  \"backgroundOption\": \"SettingsWindow-module__hn1lxq__backgroundOption\",\n  \"backgroundPreview\": \"SettingsWindow-module__hn1lxq__backgroundPreview\",\n  \"backgroundSelector\": \"SettingsWindow-module__hn1lxq__backgroundSelector\",\n  \"buttonRow\": \"SettingsWindow-module__hn1lxq__buttonRow\",\n  \"closeButton\": \"SettingsWindow-module__hn1lxq__closeButton\",\n  \"colorInput\": \"SettingsWindow-module__hn1lxq__colorInput\",\n  \"colorInputContainer\": \"SettingsWindow-module__hn1lxq__colorInputContainer\",\n  \"colorPicker\": \"SettingsWindow-module__hn1lxq__colorPicker\",\n  \"colorText\": \"SettingsWindow-module__hn1lxq__colorText\",\n  \"contentArea\": \"SettingsWindow-module__hn1lxq__contentArea\",\n  \"customSelect\": \"SettingsWindow-module__hn1lxq__customSelect\",\n  \"customSelectButton\": \"SettingsWindow-module__hn1lxq__customSelectButton\",\n  \"customSelectOption\": \"SettingsWindow-module__hn1lxq__customSelectOption\",\n  \"customSelectOptions\": \"SettingsWindow-module__hn1lxq__customSelectOptions\",\n  \"drag-handle\": \"SettingsWindow-module__hn1lxq__drag-handle\",\n  \"errorMessage\": \"SettingsWindow-module__hn1lxq__errorMessage\",\n  \"fadeOut\": \"SettingsWindow-module__hn1lxq__fadeOut\",\n  \"fileInput\": \"SettingsWindow-module__hn1lxq__fileInput\",\n  \"fontPreview\": \"SettingsWindow-module__hn1lxq__fontPreview\",\n  \"fontSelector\": \"SettingsWindow-module__hn1lxq__fontSelector\",\n  \"header\": \"SettingsWindow-module__hn1lxq__header\",\n  \"loadingSpinner\": \"SettingsWindow-module__hn1lxq__loadingSpinner\",\n  \"logo\": \"SettingsWindow-module__hn1lxq__logo\",\n  \"logoContainer\": \"SettingsWindow-module__hn1lxq__logoContainer\",\n  \"saveButton\": \"SettingsWindow-module__hn1lxq__saveButton\",\n  \"savedMessage\": \"SettingsWindow-module__hn1lxq__savedMessage\",\n  \"sectionTitle\": \"SettingsWindow-module__hn1lxq__sectionTitle\",\n  \"select\": \"SettingsWindow-module__hn1lxq__select\",\n  \"selectedBackground\": \"SettingsWindow-module__hn1lxq__selectedBackground\",\n  \"settingGroup\": \"SettingsWindow-module__hn1lxq__settingGroup\",\n  \"settingsSection\": \"SettingsWindow-module__hn1lxq__settingsSection\",\n  \"settingsWindow\": \"SettingsWindow-module__hn1lxq__settingsWindow\",\n  \"smallNote\": \"SettingsWindow-module__hn1lxq__smallNote\",\n  \"solidColorPreview\": \"SettingsWindow-module__hn1lxq__solidColorPreview\",\n  \"spin\": \"SettingsWindow-module__hn1lxq__spin\",\n  \"successMessage\": \"SettingsWindow-module__hn1lxq__successMessage\",\n  \"tabButton\": \"SettingsWindow-module__hn1lxq__tabButton\",\n  \"tabIcon\": \"SettingsWindow-module__hn1lxq__tabIcon\",\n  \"tabsContainer\": \"SettingsWindow-module__hn1lxq__tabsContainer\",\n  \"titleIcon\": \"SettingsWindow-module__hn1lxq__titleIcon\",\n  \"uploadBackground\": \"SettingsWindow-module__hn1lxq__uploadBackground\",\n  \"versionInfo\": \"SettingsWindow-module__hn1lxq__versionInfo\",\n  \"versionLabel\": \"SettingsWindow-module__hn1lxq__versionLabel\",\n  \"versionRow\": \"SettingsWindow-module__hn1lxq__versionRow\",\n  \"versionValue\": \"SettingsWindow-module__hn1lxq__versionValue\",\n  \"windowTitle\": \"SettingsWindow-module__hn1lxq__windowTitle\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 13865, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/FontLoader/FontLoader.tsx"],"sourcesContent":["// src/components/FontLoader/FontLoader.tsx\r\nimport React, { useEffect, useState } from 'react';\r\n\r\ninterface FontLoaderProps {\r\n  fontFamily?: string;\r\n}\r\n\r\nconst FontLoader: React.FC<FontLoaderProps> = ({ fontFamily = 'System Default' }) => {\r\n  // Add a state to track loaded fonts and force re-renders when needed\r\n  const [loadedFonts, setLoadedFonts] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Font loading logic - only load non-system fonts\r\n    const loadFonts = async () => {\r\n      // Map of font names to Google Fonts URLs\r\n      const fontUrls: Record<string, string> = {\r\n        'Roboto': 'https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap',\r\n        'Open Sans': 'https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap',\r\n        'Montserrat': 'https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&display=swap',\r\n        'Source Code Pro': 'https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600&display=swap'\r\n      };\r\n\r\n      // Extract the base font name from the fontFamily string\r\n      const baseFontName = fontFamily.split(',')[0].trim().replace(/[\"']/g, '');\r\n      \r\n      // Skip loading for system default\r\n      if (baseFontName === 'Arial' || baseFontName === 'System Default') {\r\n        return;\r\n      }\r\n\r\n      // Find matching font URL\r\n      let fontUrl = '';\r\n      for (const [fontName, url] of Object.entries(fontUrls)) {\r\n        if (baseFontName.includes(fontName) || fontName.includes(baseFontName)) {\r\n          fontUrl = url;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!fontUrl) return;\r\n\r\n      // Add the font link to the document head if not already loaded\r\n      if (!loadedFonts.includes(baseFontName)) {\r\n        const link = document.createElement('link');\r\n        link.href = fontUrl;\r\n        link.rel = 'stylesheet';\r\n        document.head.appendChild(link);\r\n        \r\n        // Update loaded fonts state\r\n        setLoadedFonts(prev => [...prev, baseFontName]);\r\n        \r\n        console.log(`Loaded font: ${baseFontName}`);\r\n      }\r\n\r\n      // Add a specific style element for this font to force the preview to update\r\n      const styleId = `font-preview-style-${baseFontName.replace(/\\s+/g, '-')}`;\r\n      let styleEl = document.getElementById(styleId);\r\n      \r\n      if (!styleEl) {\r\n        styleEl = document.createElement('style');\r\n        styleEl.id = styleId;\r\n        document.head.appendChild(styleEl);\r\n      }\r\n      \r\n      styleEl.textContent = `\r\n        .font-preview-${baseFontName.replace(/\\s+/g, '-')} {\r\n          font-family: ${fontFamily} !important;\r\n        }\r\n      `;\r\n    };\r\n\r\n    loadFonts();\r\n    \r\n    // Force a re-render with setTimeout to ensure the font has loaded\r\n    const forceUpdateTimer = setTimeout(() => {\r\n      // This empty function will trigger a re-render due to the useEffect dependency\r\n      setLoadedFonts(prev => [...prev]);\r\n    }, 100);\r\n    \r\n    return () => clearTimeout(forceUpdateTimer);\r\n  }, [fontFamily, loadedFonts]); // Add loadedFonts as a dependency\r\n\r\n  // This component doesn't render anything visible\r\n  return null;\r\n};\r\n\r\nexport default FontLoader;"],"names":[],"mappings":"AAAA,2CAA2C;;;;AAC3C;;;AAMA,MAAM,aAAwC,CAAC,EAAE,aAAa,gBAAgB,EAAE;;IAC9E,qEAAqE;IACrE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAE3D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,kDAAkD;YAClD,MAAM;kDAAY;oBAChB,yCAAyC;oBACzC,MAAM,WAAmC;wBACvC,UAAU;wBACV,aAAa;wBACb,cAAc;wBACd,mBAAmB;oBACrB;oBAEA,wDAAwD;oBACxD,MAAM,eAAe,WAAW,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,OAAO,CAAC,SAAS;oBAEtE,kCAAkC;oBAClC,IAAI,iBAAiB,WAAW,iBAAiB,kBAAkB;wBACjE;oBACF;oBAEA,yBAAyB;oBACzB,IAAI,UAAU;oBACd,KAAK,MAAM,CAAC,UAAU,IAAI,IAAI,OAAO,OAAO,CAAC,UAAW;wBACtD,IAAI,aAAa,QAAQ,CAAC,aAAa,SAAS,QAAQ,CAAC,eAAe;4BACtE,UAAU;4BACV;wBACF;oBACF;oBAEA,IAAI,CAAC,SAAS;oBAEd,+DAA+D;oBAC/D,IAAI,CAAC,YAAY,QAAQ,CAAC,eAAe;wBACvC,MAAM,OAAO,SAAS,aAAa,CAAC;wBACpC,KAAK,IAAI,GAAG;wBACZ,KAAK,GAAG,GAAG;wBACX,SAAS,IAAI,CAAC,WAAW,CAAC;wBAE1B,4BAA4B;wBAC5B;8DAAe,CAAA,OAAQ;uCAAI;oCAAM;iCAAa;;wBAE9C,QAAQ,GAAG,CAAC,CAAC,aAAa,EAAE,cAAc;oBAC5C;oBAEA,4EAA4E;oBAC5E,MAAM,UAAU,CAAC,mBAAmB,EAAE,aAAa,OAAO,CAAC,QAAQ,MAAM;oBACzE,IAAI,UAAU,SAAS,cAAc,CAAC;oBAEtC,IAAI,CAAC,SAAS;wBACZ,UAAU,SAAS,aAAa,CAAC;wBACjC,QAAQ,EAAE,GAAG;wBACb,SAAS,IAAI,CAAC,WAAW,CAAC;oBAC5B;oBAEA,QAAQ,WAAW,GAAG,CAAC;sBACP,EAAE,aAAa,OAAO,CAAC,QAAQ,KAAK;uBACnC,EAAE,WAAW;;MAE9B,CAAC;gBACH;;YAEA;YAEA,kEAAkE;YAClE,MAAM,mBAAmB;yDAAW;oBAClC,+EAA+E;oBAC/E;iEAAe,CAAA,OAAQ;mCAAI;6BAAK;;gBAClC;wDAAG;YAEH;wCAAO,IAAM,aAAa;;QAC5B;+BAAG;QAAC;QAAY;KAAY,GAAG,kCAAkC;IAEjE,iDAAiD;IACjD,OAAO;AACT;GA7EM;KAAA;uCA+ES","debugId":null}},
    {"offset": {"line": 13970, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/components/SettingsWindow/SettingsWindow.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Draggable from \"react-draggable\";\r\nimport styles from \"./SettingsWindow.module.css\";\r\nimport { WindowName } from \"@/types/types\";\r\nimport FontLoader from '../FontLoader/FontLoader';\r\n\r\n// Define supported fonts for the application\r\nconst SUPPORTED_FONTS = [\r\n  { name: \"System Default\", value: \"Arial, sans-serif\" },\r\n  { name: \"Roboto\", value: \"Roboto, sans-serif\" },\r\n  { name: \"Open Sans\", value: \"Open Sans, sans-serif\" },\r\n  { name: \"Montserrat\", value: \"Montserrat, sans-serif\" },\r\n  { name: \"Source Code Pro\", value: \"Source Code Pro, monospace\" },\r\n];\r\n\r\ninterface BackgroundOption {\r\n  name: string;\r\n  path: string;\r\n}\r\n\r\ninterface SettingsWindowProps {\r\n  zIndex: number;\r\n  onMouseDown: () => void;\r\n  onClose: () => void;\r\n  bringWindowToFront: (windowName: WindowName) => void;\r\n  windowZIndexes: { [key: string]: number };\r\n  zIndexCounter: number;\r\n}\r\n\r\nconst SettingsWindow: React.FC<SettingsWindowProps> = ({\r\n  zIndex,\r\n  onMouseDown,\r\n  onClose,\r\n  bringWindowToFront,\r\n  windowZIndexes,\r\n  zIndexCounter,\r\n}) => {\r\n  // State for settings\r\n  const [selectedFont, setSelectedFont] = useState<string>(\"System Default\");\r\n  const [selectedBackground, setSelectedBackground] = useState<string>(\"/assets/curve_background.png\");\r\n  const [selectedLightBackground, setSelectedLightBackground] = useState<string>(\"/assets/lightcurve_background.png\");\r\n  const [defaultBackgrounds, setDefaultBackgrounds] = useState<BackgroundOption[]>([]);\r\n  const [customBackgrounds, setCustomBackgrounds] = useState<BackgroundOption[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSaved, setIsSaved] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<string>(\"appearance\");\r\n  const [savedMessage, setSavedMessage] = useState<string | null>(null);\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [bgColor, setBgColor] = useState<string>(\"#000000\");\r\n  const [lightBgColor, setLightBgColor] = useState<string>(\"#ffffff\");\r\n  const [currentViewMode, setCurrentViewMode] = useState<'dark' | 'light'>('dark');\r\n  const [isSelectOpen, setIsSelectOpen] = useState(false);\r\n  \r\n  // App version info\r\n  const appVersion = \"1.0.0\";\r\n  const buildDate = \"May 31, 2025\";\r\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || \"http://127.0.0.1:5000\";\r\n\r\n  // Refs\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  \r\n  // Dragging functionality\r\n  const nodeRef = useRef<HTMLDivElement>(null!);\r\n  const savedPosition = sessionStorage.getItem('settingsWindowPosition');\r\n  const defaultPosition = savedPosition ? JSON.parse(savedPosition) : {\r\n    x: (window.innerWidth - 600) / 2,\r\n    y: (window.innerHeight - 500) / 2\r\n  };\r\n  const [position, setPosition] = useState(defaultPosition);\r\n\r\n  // Create portal element once on mount\r\n  const [portalElement] = useState(() => {\r\n    const existingPortal = document.getElementById(\"settingsWindow-root\");\r\n    if (existingPortal) {\r\n      return existingPortal;\r\n    }\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"settingsWindow-root\";\r\n    document.body.appendChild(element);\r\n    return element;\r\n  });\r\n\r\n// 1. Create a ref for the font preview element\r\nconst fontPreviewRef = useRef<HTMLDivElement>(null);\r\n\r\n// 2. Add a function to directly apply the font to the preview element\r\nconst applyFontToPreview = useCallback((fontFamily: string) => {\r\n  if (fontPreviewRef.current) {\r\n    fontPreviewRef.current.style.fontFamily = fontFamily;\r\n    \r\n    // Force a repaint by briefly modifying another style property\r\n    fontPreviewRef.current.style.opacity = '0.99';\r\n    setTimeout(() => {\r\n      if (fontPreviewRef.current) {\r\n        fontPreviewRef.current.style.opacity = '1';\r\n      }\r\n    }, 10);\r\n  }\r\n}, []);\r\n\r\n// 3. Add effect to apply the font whenever it changes\r\nuseEffect(() => {\r\n  const fontValue = SUPPORTED_FONTS.find(f => f.name === selectedFont)?.value || 'Arial, sans-serif';\r\n  applyFontToPreview(fontValue);\r\n}, [selectedFont, applyFontToPreview]);\r\n  \r\n  // Check for dark mode\r\n  useEffect(() => {\r\n    const checkDarkMode = () => {\r\n      const newIsDarkMode = document.documentElement.classList.contains(\"dark\");\r\n      setIsDarkMode(newIsDarkMode);\r\n      \r\n      // Update the current view mode based on document theme\r\n      setCurrentViewMode(newIsDarkMode ? 'dark' : 'light');\r\n    };\r\n    \r\n    // Initial check\r\n    checkDarkMode();\r\n    \r\n    // Watch for theme changes\r\n    const observer = new MutationObserver(() => {\r\n      checkDarkMode();\r\n    });\r\n    \r\n    observer.observe(document.documentElement, { \r\n      attributes: true, \r\n      attributeFilter: ['class'] \r\n    });\r\n    \r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  // Load settings and custom backgrounds from backend on mount\r\n  useEffect(() => {\r\n    loadSettings();\r\n    loadBackgrounds();\r\n  }, []);\r\n\r\n  // Save position to sessionStorage whenever it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem('settingsWindowPosition', JSON.stringify(position));\r\n  }, [position]);\r\n\r\n  // Handle any saved message display timeout\r\n  useEffect(() => {\r\n    if (savedMessage) {\r\n      const timer = setTimeout(() => {\r\n        setSavedMessage(null);\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [savedMessage]);\r\n\r\n  // Load backgrounds from the backend\r\n  const loadBackgrounds = async () => {\r\n    try {\r\n      const response = await fetch(`${backendUrl}/backgrounds`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setDefaultBackgrounds(data.default_backgrounds || []);\r\n        setCustomBackgrounds(data.custom_backgrounds || []);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading backgrounds:\", error);\r\n    }\r\n  };\r\n\r\n  // Load settings from the backend\r\n  const loadSettings = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`${backendUrl}/settings`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(\"Loaded settings:\", data);\r\n        \r\n        // Set font if available\r\n        if (data.font) {\r\n          const fontName = SUPPORTED_FONTS.find(f => f.value === data.font)?.name || \"System Default\";\r\n          setSelectedFont(fontName);\r\n        }\r\n        \r\n        // Set background if available (dark mode background)\r\n        if (data.background) {\r\n          setSelectedBackground(data.background);\r\n        }\r\n        \r\n        // Set light mode background if available\r\n        if (data.background_light) {\r\n          setSelectedLightBackground(data.background_light);\r\n        }\r\n        \r\n        // Set background color if available\r\n        if (data.backgroundColor) {\r\n          setBgColor(data.backgroundColor);\r\n        }\r\n        \r\n        // Set light background color if available\r\n        if (data.backgroundColorLight) {\r\n          setLightBgColor(data.backgroundColorLight);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading settings:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Save settings to the backend, immediate font preview update\r\nconst saveSettings = async () => {\r\n  setIsLoading(true);\r\n  try {\r\n    const fontValue = SUPPORTED_FONTS.find(f => f.name === selectedFont)?.value || 'Arial, sans-serif';\r\n    applyFontToPreview(fontValue);\r\n    \r\n    // Get the refreshThemeSettings function\r\n    const { refreshThemeSettings } = await import('@/utils/themeInitializer');\r\n    \r\n    const response = await fetch(`${backendUrl}/settings`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        font: fontValue,\r\n        background: selectedBackground,\r\n        background_light: selectedLightBackground,\r\n        backgroundColor: bgColor,\r\n        backgroundColorLight: lightBgColor\r\n      }),\r\n    });\r\n    \r\n    if (response.ok) {\r\n      setIsSaved(true);\r\n      setSavedMessage(\"Settings saved successfully!\");\r\n      \r\n      // Apply font to document - COMPREHENSIVE APPROACH\r\n      document.documentElement.style.setProperty('--app-font-family', fontValue);\r\n      \r\n      // Force the font preview to update by re-rendering it\r\n      // This is done by triggering a state change\r\n      setSelectedFont(prevFont => {\r\n        // Re-set to the same value, but this will trigger a re-render with the new key\r\n        return prevFont;\r\n      });\r\n      \r\n      // Create or update the font style element\r\n      let fontStyle = document.getElementById('app-font-style');\r\n      if (!fontStyle) {\r\n        fontStyle = document.createElement('style');\r\n        fontStyle.id = 'app-font-style';\r\n        document.head.appendChild(fontStyle);\r\n      }\r\n      \r\n      // Enhanced CSS with highest specificity selectors to override component styles\r\n      // Target all components directly, especially those in the sidebar\r\n      fontStyle.textContent = `\r\n        /* General elements */\r\n        html body,\r\n        html button,\r\n        html input,\r\n        html select,\r\n        html textarea,\r\n        html a,\r\n        html p,\r\n        html h1, html h2, html h3, html h4, html h5, html h6,\r\n        html span, html div,\r\n        \r\n        /* Application components with direct targeting */\r\n        html .popup,\r\n        html .welcomeWindow,\r\n        html .mainScreen,\r\n        html .content,\r\n        html .aboutSection,\r\n        html .checkoutSection,\r\n        html .settingsWindow,\r\n        html .topSection,\r\n        html .bottomSection,\r\n        \r\n        /* Sidebar specific elements - high specificity */\r\n        html .sidebar,\r\n        html .sidebar *,\r\n        html .menu,\r\n        html .menu *,\r\n        html .menuItem,\r\n        html .profilesButton,\r\n        html .profileContainer,\r\n        html .profileSidebarItem,\r\n        html .profileButtonGroup,\r\n        html .settingsContainer,\r\n        \r\n        /* Tabs and interactive elements */\r\n        html .tabsContainer *,\r\n        html .activeTab,\r\n        html .tabButton,\r\n        \r\n        /* Force all elements to use the selected font */\r\n        html * {\r\n          font-family: ${fontValue} !important;\r\n        }\r\n      `;\r\n      \r\n      // Apply background to document body based on current theme using the improved refreshThemeSettings\r\n      if (refreshThemeSettings) {\r\n        await refreshThemeSettings();\r\n      } else {\r\n        // Fallback to direct application if import fails\r\n        applyBackground();\r\n      }\r\n      \r\n      // After 2 seconds, reset the saved state\r\n      setTimeout(() => {\r\n        setIsSaved(false);\r\n      }, 2000);\r\n      \r\n      // Also directly update sidebar elements for immediate effect\r\n      const sidebarItems = document.querySelectorAll('.sidebar, .menuItem, .profilesButton, .profileSidebarItem');\r\n      sidebarItems.forEach(el => {\r\n        (el as HTMLElement).style.fontFamily = fontValue;\r\n      });\r\n    } else {\r\n      setSavedMessage(\"Error saving settings\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error saving settings:\", error);\r\n    setSavedMessage(\"Error: Could not connect to server\");\r\n  } finally {\r\n    setIsLoading(false);\r\n  }\r\n};\r\n\r\n  // Apply background to the page\r\nconst applyBackground = async () => {\r\n  // Import the refreshThemeSettings function dynamically\r\n  const { refreshThemeSettings, applyBackgroundSettings } = await import('@/utils/themeInitializer');\r\n  \r\n  // Determine which background to apply based on current theme mode\r\n  const bgPath = isDarkMode ? selectedBackground : selectedLightBackground;\r\n  const bgColorValue = isDarkMode ? bgColor : lightBgColor;\r\n  \r\n  try {\r\n    // First, try to apply using the refreshThemeSettings function which fetches fresh settings\r\n    if (refreshThemeSettings) {\r\n      console.log(\"Using refreshThemeSettings to apply background changes\");\r\n      await refreshThemeSettings();\r\n    } else {\r\n      // Fallback: Apply directly if we couldn't import the function\r\n      console.log(\"Using direct method to apply background changes\");\r\n      \r\n      // Create a settings object that mimics what would come from the server\r\n      const settings = {\r\n        background: selectedBackground,\r\n        background_light: selectedLightBackground,\r\n        backgroundColor: bgColor,\r\n        backgroundColorLight: lightBgColor\r\n      };\r\n      \r\n      // If we have the applyBackgroundSettings function, use it\r\n      if (applyBackgroundSettings) {\r\n        applyBackgroundSettings(settings, isDarkMode);\r\n      } else {\r\n        // Otherwise, fall back to direct DOM manipulation\r\n        if (bgPath === \"none\") {\r\n          document.body.style.backgroundImage = \"none\";\r\n          document.body.style.backgroundColor = bgColorValue;\r\n        } else {\r\n          document.body.style.backgroundImage = `url(${bgPath})`;\r\n          document.body.style.backgroundSize = \"cover\";\r\n          document.body.style.backgroundPosition = \"center\";\r\n          document.body.style.backgroundRepeat = \"no-repeat\";\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Tell the backend to apply the background\r\n    fetch(`${backendUrl}/apply-background`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        path: bgPath,\r\n        isDarkMode: isDarkMode\r\n      }),\r\n    }).catch(error => {\r\n      console.error(\"Error notifying backend about background change:\", error);\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error applying background:\", error);\r\n  }\r\n};\r\n\r\n  // Handle background image upload\r\n  const handleBackgroundUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n    \r\n    // Check if file is an image\r\n    if (!file.type.match('image.*')) {\r\n      setSavedMessage(\"Error: Please upload an image file\");\r\n      return;\r\n    }\r\n    \r\n    // Create a formData object\r\n    const formData = new FormData();\r\n    formData.append('background', file);\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`${backendUrl}/upload-background`, {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        \r\n        // Add the new background to custom backgrounds\r\n        setCustomBackgrounds(prev => [\r\n          ...prev,\r\n          { name: file.name, path: data.path }\r\n        ]);\r\n        \r\n        // Select the newly uploaded background for the current theme mode\r\n        if (isDarkMode) {\r\n          setSelectedBackground(data.path);\r\n        } else {\r\n          setSelectedLightBackground(data.path);\r\n        }\r\n        \r\n        setSavedMessage(\"Background uploaded successfully!\");\r\n        \r\n        // Refresh background list\r\n        loadBackgrounds();\r\n      } else {\r\n        setSavedMessage(\"Error uploading background\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading background:\", error);\r\n      setSavedMessage(\"Error: Could not upload background\");\r\n    } finally {\r\n      setIsLoading(false);\r\n      // Clear the file input\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle the window click event\r\n  const handleWindowClick = () => {\r\n    console.log(\"🖱️ Clicked SettingsWindow, bringing to front\");\r\n    onMouseDown();\r\n  };\r\n\r\n  // Get the effective z-index from the windowZIndexes or fall back to the provided zIndex\r\n  const effectiveZIndex = windowZIndexes[\"SettingsWindow\"] || zIndex;\r\n\r\n  // Function to toggle view mode (Dark/Light) during setting selection\r\n  const toggleViewMode = () => {\r\n    setCurrentViewMode(prev => prev === 'dark' ? 'light' : 'dark');\r\n  };\r\n\r\n  // Get the current background and color based on view mode (not based on actual theme)\r\n  const getCurrentBackground = () => {\r\n    return currentViewMode === 'dark' ? selectedBackground : selectedLightBackground;\r\n  };\r\n\r\n  const getCurrentBgColor = () => {\r\n    return currentViewMode === 'dark' ? bgColor : lightBgColor;\r\n  };\r\n\r\n  // Update the appropriate background setting based on current view mode\r\n  const handleBackgroundSelect = (path: string) => {\r\n    if (currentViewMode === 'dark') {\r\n      setSelectedBackground(path);\r\n    } else {\r\n      setSelectedLightBackground(path);\r\n    }\r\n  };\r\n\r\n  // Update the appropriate background color based on current view mode\r\n  const handleBgColorChange = (color: string) => {\r\n    if (currentViewMode === 'dark') {\r\n      setBgColor(color);\r\n    } else {\r\n      setLightBgColor(color);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (\r\n        isSelectOpen &&\r\n        document.querySelector(`.${styles.customSelect}`) && \r\n        !(document.querySelector(`.${styles.customSelect}`) as HTMLElement).contains(event.target as Node)\r\n      ) {\r\n        setIsSelectOpen(false);\r\n      }\r\n    };\r\n  \r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isSelectOpen, styles.customSelect]);\r\n\r\n  return (\r\n    <>\r\n      <FontLoader fontFamily={selectedFont} />\r\n      {createPortal(\r\n    <Draggable\r\n      nodeRef={nodeRef}\r\n      handle=\".drag-handle\"\r\n      position={position}\r\n      onStop={(e, data) => {\r\n        console.log(`📍 SettingsWindow moved to: x=${data.x}, y=${data.y}`);\r\n        setPosition({ x: data.x, y: data.y });\r\n      }}\r\n    >\r\n      <div\r\n        ref={nodeRef}\r\n        className={styles.settingsWindow}\r\n        style={{\r\n          position: \"fixed\",\r\n          zIndex: effectiveZIndex,\r\n          backgroundColor: isDarkMode ? \"#1e1e1e\" : \"#ffffff\",\r\n          color: isDarkMode ? \"#fff\" : \"#000\",\r\n        }}\r\n        onClick={handleWindowClick}\r\n      >\r\n        {/* Window header */}\r\n        <div className={`${styles.header} drag-handle`}>\r\n          <h2 className={styles.windowTitle}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={styles.titleIcon}>\r\n              <path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\" />\r\n              <circle cx=\"12\" cy=\"12\" r=\"3\" />\r\n            </svg>\r\n            Settings\r\n          </h2>\r\n          <button\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onClose();\r\n            }}\r\n            className={styles.closeButton}\r\n          >\r\n            ✖\r\n          </button>\r\n        </div>\r\n\r\n        {/* Tabs navigation */}\r\n        <div className={styles.tabsContainer}>\r\n          <button \r\n            className={`${styles.tabButton} ${activeTab === 'appearance' ? styles.activeTab : ''}`}\r\n            onClick={() => setActiveTab('appearance')}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={styles.tabIcon}>\r\n              <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n              <path d=\"M12 2a10 10 0 1 0 10 10\" />\r\n              <path d=\"M12 12h.01\" />\r\n            </svg>\r\n            Appearance\r\n          </button>\r\n          <button \r\n            className={`${styles.tabButton} ${activeTab === 'about' ? styles.activeTab : ''}`}\r\n            onClick={() => setActiveTab('about')}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className={styles.tabIcon}>\r\n              <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n              <path d=\"M12 16v-4\" />\r\n              <path d=\"M12 8h.01\" />\r\n            </svg>\r\n            About\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content area */}\r\n        <div className={styles.contentArea}>\r\n          {/* Appearance Tab */}\r\n          {activeTab === 'appearance' && (\r\n            <div className={styles.settingsSection}>\r\n              <div className={styles.settingGroup}>\r\n                <h3 className={styles.sectionTitle}>Background</h3>\r\n                \r\n                {/* Theme toggle for background previews */}\r\n                <div style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center',\r\n                  marginBottom: '16px'\r\n                }}>\r\n                  <h4>Editing {currentViewMode === 'dark' ? 'Dark' : 'Light'} Mode Background</h4>\r\n                  <button \r\n                    onClick={toggleViewMode}\r\n                    style={{\r\n                      padding: '8px 12px',\r\n                      backgroundColor: '#00bcd4',\r\n                      color: 'white',\r\n                      border: 'none',\r\n                      borderRadius: '4px',\r\n                      cursor: 'pointer',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: '8px'\r\n                    }}\r\n                  >\r\n                    <span>{currentViewMode === 'dark' ? '☀️' : '🌙'}</span>\r\n                    Switch to {currentViewMode === 'dark' ? 'Light' : 'Dark'} Mode Editor\r\n                  </button>\r\n                </div>\r\n                \r\n                <div className={styles.backgroundSelector}>\r\n                  <div className={styles.backgroundGrid}>\r\n                    {/* Default backgrounds */}\r\n                    {defaultBackgrounds.map((bg) => (\r\n                      <div \r\n                        key={bg.path} \r\n                        className={`${styles.backgroundOption} ${getCurrentBackground() === bg.path ? styles.selectedBackground : ''}`}\r\n                        onClick={() => handleBackgroundSelect(bg.path)}\r\n                      >\r\n                        {bg.path === \"none\" ? (\r\n                          <div className={styles.solidColorPreview} style={{ backgroundColor: getCurrentBgColor() }}>\r\n                            <span>Solid Color</span>\r\n                          </div>\r\n                        ) : (\r\n                          <div className={styles.backgroundPreview}>\r\n                            <img src={bg.path} alt={bg.name} />\r\n                          </div>\r\n                        )}\r\n                        <div className={styles.backgroundName}>{bg.name}</div>\r\n                      </div>\r\n                    ))}\r\n                    \r\n                    {/* Custom backgrounds */}\r\n                    {customBackgrounds.map((bg) => (\r\n                      <div \r\n                        key={bg.path} \r\n                        className={`${styles.backgroundOption} ${getCurrentBackground() === bg.path ? styles.selectedBackground : ''}`}\r\n                        onClick={() => handleBackgroundSelect(bg.path)}\r\n                      >\r\n                        <div className={styles.backgroundPreview}>\r\n                          <img src={bg.path} alt={bg.name} />\r\n                        </div>\r\n                        <div className={styles.backgroundName}>{bg.name}</div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  {/* Upload new background */}\r\n                  <div className={styles.uploadBackground}>\r\n                    <h4>Upload New Background</h4>\r\n                    <input \r\n                      type=\"file\" \r\n                      accept=\"image/*\" \r\n                      ref={fileInputRef}\r\n                      onChange={handleBackgroundUpload}\r\n                      className={styles.fileInput}\r\n                    />\r\n                    <div className={styles.smallNote}>\r\n                      Recommended size: 1920x1080px or larger\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {/* Background color picker (for solid color option) */}\r\n                  {getCurrentBackground() === \"none\" && (\r\n                    <div className={styles.colorPicker}>\r\n                      <h4>Background Color</h4>\r\n                      <div className={styles.colorInputContainer}>\r\n                        <input \r\n                          type=\"color\" \r\n                          value={getCurrentBgColor()}\r\n                          onChange={(e) => handleBgColorChange(e.target.value)}\r\n                          className={styles.colorInput}\r\n                        />\r\n                        <input \r\n                          type=\"text\" \r\n                          value={getCurrentBgColor()}\r\n                          onChange={(e) => handleBgColorChange(e.target.value)}\r\n                          className={styles.colorText}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles.settingGroup}>\r\n                <h3 className={styles.sectionTitle}>Font</h3>\r\n                <div className={styles.fontSelector}>\r\n  {/* Custom select with fonts displayed in their own typeface */}\r\n  <div className={styles.customSelect}>\r\n    <button \r\n      className={styles.customSelectButton}\r\n      onClick={() => setIsSelectOpen(!isSelectOpen)}\r\n      type=\"button\"\r\n    >\r\n      <span>{selectedFont}</span>\r\n      <span>{isSelectOpen ? '▲' : '▼'}</span>\r\n    </button>\r\n    \r\n    {isSelectOpen && (\r\n      <div className={styles.customSelectOptions}>\r\n        {SUPPORTED_FONTS.map((font) => (\r\n          <div \r\n            key={font.name} \r\n            className={styles.customSelectOption}\r\n            onClick={() => {\r\n              setSelectedFont(font.name);\r\n              setIsSelectOpen(false);\r\n            }}\r\n            style={{\r\n              fontFamily: font.value\r\n            }}\r\n          >\r\n            {font.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )}\r\n  </div>\r\n  \r\n  {/* Font preview with iframe that loads all fonts */}\r\n  <div className={styles.fontPreview}>\r\n  <h4 style={{ \r\n    marginBottom: '8px', \r\n    fontSize: '14px', \r\n    fontWeight: '500' \r\n  }}>Preview</h4>\r\n    <iframe\r\n      srcDoc={`\r\n        <html>\r\n        <head>\r\n          <!-- Load all fonts directly in the iframe -->\r\n          <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap\" rel=\"stylesheet\">\r\n          <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap\" rel=\"stylesheet\">\r\n          <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&display=swap\" rel=\"stylesheet\">\r\n          <link href=\"https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600&display=swap\" rel=\"stylesheet\">\r\n          <style>\r\n            body {\r\n              font-family: ${SUPPORTED_FONTS.find(f => f.name === selectedFont)?.value || 'Arial, sans-serif'};\r\n              margin: 0;\r\n              padding: 16px;\r\n              color: ${isDarkMode ? '#fff' : '#000'};\r\n              background-color: ${isDarkMode ? '#1e1e1e' : '#f5f5f5'};\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <p>The quick brown fox jumps over the lazy dog.</p>\r\n          <p>0123456789</p>\r\n        </body>\r\n        </html>\r\n      `}\r\n      style={{\r\n        width: '100%',\r\n        height: '100px',\r\n        border: 'none',\r\n        overflow: 'hidden',\r\n        backgroundColor: 'transparent'\r\n      }}\r\n      title=\"Font Preview\"\r\n    />\r\n  </div>\r\n</div>\r\n              </div>\r\n\r\n              <div className={styles.buttonRow}>\r\n                <button \r\n                  className={styles.saveButton}\r\n                  onClick={saveSettings}\r\n                  disabled={isLoading || isSaved}\r\n                >\r\n                  {isLoading ? (\r\n                    <span className={styles.loadingSpinner}>⟳</span>\r\n                  ) : isSaved ? (\r\n                    <span>✓ Saved</span>\r\n                  ) : (\r\n<span>Save Settings</span>\r\n                  )}\r\n                </button>\r\n                \r\n                {savedMessage && (\r\n                  <div className={`${styles.savedMessage} ${\r\n                    savedMessage.includes('Error') ? styles.errorMessage : styles.successMessage\r\n                  }`}>\r\n                    {savedMessage}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* About Tab */}\r\n          {activeTab === 'about' && (\r\n            <div className={styles.settingsSection}>\r\n              <div className={styles.aboutInfo}>\r\n                <div className={styles.logoContainer}>\r\n                  <img \r\n                    src=\"/assets/SaRCLogo.png\" \r\n                    alt=\"Satellite Research Centre Logo\" \r\n                    className={styles.logo}\r\n                  />\r\n                </div>\r\n                \r\n                <h3 className={styles.appTitle}>Satellite Automated Testing System</h3>\r\n                <div className={styles.versionInfo}>\r\n                  <div className={styles.versionRow}>\r\n                    <span className={styles.versionLabel}>Version:</span>\r\n                    <span className={styles.versionValue}>{appVersion}</span>\r\n                  </div>\r\n                  <div className={styles.versionRow}>\r\n                    <span className={styles.versionLabel}>Build Date:</span>\r\n                    <span className={styles.versionValue}>{buildDate}</span>\r\n                  </div>\r\n                  <div className={styles.versionRow}>\r\n                    <span className={styles.versionLabel}>Environment:</span>\r\n                    <span className={styles.versionValue}>{process.env.NODE_ENV}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className={styles.aboutText}>\r\n                  <p>\r\n                    This application provides a comprehensive interface for automated testing\r\n                    of satellite components and systems. It facilitates test management, execution,\r\n                    and result analysis.\r\n                  </p>\r\n                  \r\n                  <h4>Main Features:</h4>\r\n<ul>\r\n  <li>Checkout Test - Subsystems and Components</li>\r\n  <li>Real-time hardware integration with simulation fallback capability</li>\r\n  <li>Interactive Satellite 3D model Viewer</li>\r\n  <li>Comprehensive test result logging and report generation</li>\r\n  <li>Customisability features</li>\r\n</ul>\r\n                  \r\n\r\n<h4>NTU Professional Internship Project:</h4>\r\n<p><em>Building Satellite - Development and implementation of Automated Testing System for Satellite</em></p>\r\n<p>Developed from January to May 2025</p>\r\n\r\n<p className=\"mt-4 text-sm\">\r\n  <span className=\"opacity-60\">For more information: </span>\r\n  <a href=\"https://github.com/JoeUIUX\" className=\"text-blue-500 hover:underline\" target=\"_blank\" rel=\"noopener noreferrer\">github.com/JoeUIUX</a>\r\n</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Draggable>,\r\n    portalElement\r\n  )}\r\n  </>\r\n  );\r\n}\r\n\r\nexport default SettingsWindow;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 15401, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/joeg0001/Documents/SATS%20Satellite%20Automated%20Testing%20System/beautify%20frontend/src/app/page.tsx"],"sourcesContent":["// Fixed page.tsx - Key changes to avoid infinite rendering loop and keep ServerWindow open\n\n/* implement routing using react-router-dom, \nyou'll need to transform your page.tsx into an entry point for routing. */\n\n/* npm install react-router-dom */\n\n\"use client\";\n\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, useLocation } from \"react-router-dom\";\nimport MainScreen from \"../components/MainScreen/MainScreen\";\nimport ToTestList from \"../components/ToTestList/ToTestList\";\nimport ServerWindow from \"../components/ServerWindow/ServerWindow\";\nimport ThreeDModelWindow from \"../components/ModelWindow/ThreeDModelWindow\";\nimport WelcomeWindow from \"../components/WelcomeWindow/WelcomeWindow\";\nimport Taskbar from \"../components/Taskbar/Taskbar\"; // Import the Taskbar component\nimport { WindowName } from \"@/types/types\";\nimport SettingsWindow from \"../components/SettingsWindow/SettingsWindow\";\n\n// Global variable to track ToTestList state across routes and navigations\nlet isToTestListOpen = false;\n\n// Interface for minimized windows\ninterface MinimizedWindow {\n  id: string;\n  title: string;\n  status?: string;\n}\n\nexport default function Page() {\n  // Window visibility state - Use refs to avoid state race conditions\n  const windowVisibilityRef = useRef({\n    ToTestList: false,\n    ServerWindow: false,\n    ThreeDModelWindow: false,\n    SettingsWindow: false,\n  });\n  \n  // State for reactive UI updates\n  const [windowVisibility, setWindowVisibility] = useState({\n    ToTestList: false,\n    ServerWindow: false,\n    ThreeDModelWindow: false,\n    SettingsWindow: false\n  });\n\n  // New state for minimized windows - only for ServerWindow\n  // Store just the window info, not the restore function\n  const [minimizedWindows, setMinimizedWindows] = useState<MinimizedWindow[]>([]);\n\n  const [zIndexCounter, setZIndexCounter] = useState(10000); // Base z-index\n  const [windowZIndexes, setWindowZIndexes] = useState<{\n    ToTestList: number;\n    ServerWindow: number;\n    ThreeDModelWindow: number;\n    SettingsWindow: number;\n  }>({\n    ToTestList: 10002,\n    ServerWindow: 10001,\n    ThreeDModelWindow: 10000,\n    SettingsWindow: 10003, // Start as highest z-index\n  });\n  \n  const [threeDModelProfileId, setThreeDModelProfileId] = useState<number | null>(1);\n  const [isOnMainScreen, setIsOnMainScreen] = useState(false);\n  const [serverWindowKey, setServerWindowKey] = useState(Date.now()); // Key for ServerWindow\n  \n  // Monitor current route to track if we're on main screen\n  const RouteObserver = () => {\n    const location = useLocation();\n    \n    useEffect(() => {\n      const isMain = location.pathname === '/main';\n      setIsOnMainScreen(isMain);\n      \n      // When navigating to main screen, restore window visibility from global state\n      if (isMain) {\n        console.log(\"🧭 Navigated to main screen, checking window states\");\n        \n        // Check if ToTestList should be open based on global flag\n        if (isToTestListOpen && !windowVisibility.ToTestList) {\n          console.log(\"🔄 ToTestList should be visible - restoring state\");\n          setWindowVisibility(prev => ({ ...prev, ToTestList: true }));\n          \n          // Force the ref to match as well\n          windowVisibilityRef.current = {\n            ...windowVisibilityRef.current,\n            ToTestList: true\n          };\n        }\n      }\n    }, [location]);\n    \n    return null;\n  };\n\n  // Load window state from sessionStorage on initial mount\n  useEffect(() => {\n    // Load window visibility from sessionStorage on mount\n    const savedVisibility = sessionStorage.getItem('windowVisibility');\n    if (savedVisibility) {\n      try {\n        const parsed = JSON.parse(savedVisibility);\n        windowVisibilityRef.current = parsed;\n        setWindowVisibility(parsed);\n        \n        // Update global flag for ToTestList\n        isToTestListOpen = parsed.ToTestList;\n        \n        console.log(\"📂 Loaded window visibility state:\", parsed);\n      } catch (e) {\n        console.error(\"Error parsing saved window visibility:\", e);\n      }\n    }\n  }, []);\n\n  // Save window visibility to sessionStorage whenever it changes\n  useEffect(() => {\n    // Save visibility state to sessionStorage for persistence\n    sessionStorage.setItem('windowVisibility', JSON.stringify(windowVisibility));\n    console.log(\"💾 Saved window visibility state:\", windowVisibility);\n    \n    // Update global flag for ToTestList\n    isToTestListOpen = windowVisibility.ToTestList;\n  }, [windowVisibility]);\n\n  // Extra check to ensure ToTestList stays visible when it should be\n  useEffect(() => {\n    // If global flag is true but component is not visible, fix it\n    if (isToTestListOpen && !windowVisibility.ToTestList) {\n      console.log(\"🔄 Fixing ToTestList visibility mismatch\");\n      setWindowVisibility(prev => ({\n        ...prev,\n        ToTestList: true\n      }));\n    }\n  }, [windowVisibility.ToTestList, isOnMainScreen]);\n\n  // Dedicated function to restore a window from taskbar\n  const restoreWindowFromTaskbar = (windowId: WindowName) => {\n    console.log(`♻️ Restoring ${windowId} from taskbar with direct method`);\n    \n    // 1. Remove from minimized windows\n    setMinimizedWindows(prev => prev.filter(w => w.id !== windowId));\n    \n    // 2. Update sessionStorage directly\n    try {\n      const visibility = JSON.parse(sessionStorage.getItem('windowVisibility') || '{}');\n      visibility[windowId] = true;\n      sessionStorage.setItem('windowVisibility', JSON.stringify(visibility));\n    } catch (e) {\n      console.error(\"Error updating sessionStorage:\", e);\n    }\n    \n    // 3. Update windowVisibilityRef\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      [windowId]: true\n    };\n    \n    // 4. Force UI state update\n    setWindowVisibility(prev => ({ ...prev, [windowId]: true }));\n    \n    // 5. Force a remount of the window (for ServerWindow only)\n    if (windowId === \"ServerWindow\") {\n      console.log(\"🔄 Generating new ServerWindow key to force remount\");\n      setServerWindowKey(Date.now());\n    }\n    \n    // 6. Update z-index to bring to front\n    setWindowZIndexes(prev => {\n      const highestZIndex = Math.max(...Object.values(prev), 10000);\n      return { ...prev, [windowId]: highestZIndex + 1 };\n    });\n    \n    // 7. Increment z-index counter\n    setZIndexCounter(prev => prev + 1);\n  };\n\n  // Main function to bring a window to front\n  const bringWindowToFront = useCallback((windowName: WindowName) => {\n    console.log(`🎯 Bringing ${windowName} to front`);\n    \n    // Update both state and ref to prevent race conditions\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      [windowName]: true\n    };\n    \n    // Check if the window is minimized and restore it\n    const isMinimized = minimizedWindows.some(win => win.id === windowName);\n    \n    if (isMinimized) {\n      // Use the direct restore method instead of handling here\n      restoreWindowFromTaskbar(windowName);\n      return; // Exit early since restoreWindowFromTaskbar handles everything\n    }\n    \n    // Update visibility in state for UI rendering if not already visible\n    setWindowVisibility(prev => {\n      if (prev[windowName] === true && !isMinimized) {\n        return prev; // No change needed unless it was minimized\n      }\n      return { ...prev, [windowName]: true };\n    });\n    \n    // Prevent z-index increases if window is already on top\n    setWindowZIndexes((prevIndexes) => {\n      const highestZIndex = Math.max(...Object.values(prevIndexes), 10000);\n      \n      if (prevIndexes[windowName] >= highestZIndex && !isMinimized) {\n        console.log(`Window ${windowName} already at highest z-index (${prevIndexes[windowName]})`);\n        return prevIndexes; // Return unchanged to prevent loops\n      }\n      \n      // Only update if we're actually bringing something to the front\n      console.log(`Updating z-index for ${windowName} from ${prevIndexes[windowName]} to ${highestZIndex + 1}`);\n      // FIX: Use prevIndexes instead of prev\n      return { ...prevIndexes, [windowName]: highestZIndex + 1 };\n    });\n    \n    // Only increment counter when actually changing z-indexes\n    setZIndexCounter(prev => prev + 1);\n  }, [minimizedWindows]);\n\n  // Function to minimize a window - ONLY for ServerWindow\n  const minimizeServerWindow = useCallback((status: string) => {\n    console.log(`⬇️ Minimizing ServerWindow with status: ${status}`);\n    \n    // Add to minimized windows - just the window info, not the restore function\n    setMinimizedWindows(prev => {\n      // Check if already minimized\n      if (prev.some(win => win.id === \"ServerWindow\")) {\n        // Update the status of the existing window\n        return prev.map(win => \n          win.id === \"ServerWindow\" \n            ? { ...win, status }\n            : win\n        );\n      }\n      \n      // Add to minimized windows - ONLY STORE THE DATA, NOT THE FUNCTION\n      return [...prev, {\n        id: \"ServerWindow\",\n        title: \"Server Connection\",\n        status\n      }];\n    });\n    \n    // Hide the window\n    setWindowVisibility(prev => ({\n      ...prev,\n      ServerWindow: false\n    }));\n    \n    // Update ref\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      ServerWindow: false\n    };\n    \n  }, []);\n\n// Enhanced openToTestList function with force render option\nconst openToTestList = useCallback((forceRender = false) => {\n  console.log(\"🔍 openToTestList called with forceRender:\", forceRender);\n  console.log(\"🔍 Current visibility state:\", windowVisibility.ToTestList);\n  console.log(\"🟢 Opening ToTestList window, force:\", forceRender);\n  \n  // If force render, skip the check for already being open\n  if (!forceRender && windowVisibility.ToTestList === true) {\n    console.log(\"ToTestList already open - just bringing to front\");\n    \n    // Check if the actual window exists in the DOM\n    const elementExists = !!document.querySelector('[data-window=\"ToTestList\"]');\n    if (!elementExists) {\n      console.log(\"⚠️ ToTestList state is true but window not in DOM - forcing render\");\n      // Continue execution to render the window\n    } else {\n      // Just bring to front and exit\n      bringWindowToFront(\"ToTestList\");\n      return;\n    }\n  }\n  \n  // Set global flag for cross-component communication\n  isToTestListOpen = true;\n  \n  // Update ref (for immediate access without waiting for re-render)\n  windowVisibilityRef.current = {\n    ...windowVisibilityRef.current,\n    ToTestList: true\n  };\n  \n  // Update state (to trigger re-render)\n  setWindowVisibility(prev => ({ ...prev, ToTestList: true }));\n  \n  // Update z-index to bring window to front\n  setWindowZIndexes((prevIndexes) => {\n    const highestZIndex = Math.max(...Object.values(prevIndexes), 10000);\n    return { ...prevIndexes, ToTestList: highestZIndex + 1 };\n  });\n  \n  setZIndexCounter(prev => prev + 1);\n  \n  // Save state to sessionStorage for persistence\n  const currentState = {\n    ...windowVisibilityRef.current,\n    ToTestList: true\n  };\n  \n  sessionStorage.setItem('windowVisibility', JSON.stringify(currentState));\n  console.log(\"Updated sessionStorage:\", currentState);\n  \n  // Verify if window was actually rendered\n  setTimeout(() => {\n    const elementExists = !!document.querySelector('[data-window=\"ToTestList\"]');\n    console.log(`Verification after opening: ToTestList in DOM: ${elementExists}`);\n    \n    // If it still doesn't exist, try one more time with a state reset\n    if (!elementExists) {\n      console.log(\"⚠️ ToTestList still not in DOM after opening - trying state reset\");\n      \n      // Force a clear state first\n      setWindowVisibility(prev => ({ ...prev, ToTestList: false }));\n      \n      // Then re-render after a short delay\n      setTimeout(() => {\n        setWindowVisibility(prev => ({ ...prev, ToTestList: true }));\n      }, 10);\n    }\n  }, 50);\n}, [bringWindowToFront, windowVisibility.ToTestList]);\n\n  const closeToTestList = useCallback(() => {\n    console.log(\"🔍 closeToTestList called\");\n    console.log(\"🔍 Current visibility state:\", windowVisibility.ToTestList);\n    console.log(\"🔴 Closing ToTestList window\");\n    \n    // Update global flag\n    isToTestListOpen = false;\n    \n    // Update ref immediately\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      ToTestList: false\n    };\n    \n    // Update state for UI\n    setWindowVisibility(prev => ({ \n      ...prev, \n      ToTestList: false \n    }));\n    \n    // Update sessionStorage immediately\n    try {\n      const currentState = {\n        ...windowVisibilityRef.current,\n        ToTestList: false\n      };\n      \n      sessionStorage.setItem('windowVisibility', JSON.stringify(currentState));\n      console.log(\"Updated sessionStorage when closing:\", currentState);\n    } catch (e) {\n      console.error(\"Error updating sessionStorage:\", e);\n    }\n  }, []);\n\n  const openServerWindow = useCallback(() => {\n    console.log(\"🟢 Opening ServerWindow window\");\n    \n    // Check if window is minimized\n    const isMinimized = minimizedWindows.some(win => win.id === \"ServerWindow\");\n    if (isMinimized) {\n      // Use the direct restore method\n      restoreWindowFromTaskbar(\"ServerWindow\");\n      return;\n    }\n    \n    // Update ref first\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      ServerWindow: true\n    };\n    \n    // Set visibility directly\n    setWindowVisibility(prev => ({ ...prev, ServerWindow: true }));\n    \n    // Update z-index\n    setWindowZIndexes((prevIndexes) => {\n      const highestZIndex = Math.max(...Object.values(prevIndexes), 10000);\n      return { ...prevIndexes, ServerWindow: highestZIndex + 1 };\n    });\n    \n    setZIndexCounter(prev => prev + 1);\n  }, [minimizedWindows]);\n\n  const closeServerWindow = useCallback(() => {\n    console.log(\"🔴 Closing ServerWindow\");\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      ServerWindow: false\n    };\n    setWindowVisibility(prev => ({ ...prev, ServerWindow: false }));\n    \n    // Remove from minimized windows if it was minimized\n    setMinimizedWindows(prev => prev.filter(win => win.id !== \"ServerWindow\"));\n  }, []);\n\n  const openModelWindow = useCallback((profileId: number = 1) => {\n    console.log(`🛰️ Opening 3D Model window for profile ID: ${profileId}`);\n    \n    // Update profile ID once\n    setThreeDModelProfileId(profileId);\n    \n    // Update visibility\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      ThreeDModelWindow: true\n    };\n    setWindowVisibility(prev => ({\n      ...prev,\n      ThreeDModelWindow: true\n    }));\n\n    // Update z-index\n    setWindowZIndexes(prev => {\n      const highestZIndex = Math.max(...Object.values(prev), 10000);\n      return { ...prev, ThreeDModelWindow: highestZIndex + 1 };\n    });\n\n    setZIndexCounter(prev => prev + 1);\n  }, []);\n\n  const closeModelWindow = useCallback(() => {\n    console.log(\"🔴 Closing ThreeDModelWindow...\");\n    \n    // Just update visibility\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      ThreeDModelWindow: false\n    };\n    setWindowVisibility(prev => ({ \n      ...prev, \n      ThreeDModelWindow: false \n    }));\n  }, []);\n\n  const openSettingsWindow = useCallback(() => {\n    console.log(\"🟢 Opening SettingsWindow\");\n    \n    // Update ref first\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      SettingsWindow: true\n    };\n    \n    // Set visibility directly\n    setWindowVisibility(prev => ({ ...prev, SettingsWindow: true }));\n    \n    // Update z-index\n    setWindowZIndexes((prevIndexes) => {\n      const highestZIndex = Math.max(...Object.values(prevIndexes), 10000);\n      return { ...prevIndexes, SettingsWindow: highestZIndex + 1 };\n    });\n    \n    setZIndexCounter(prev => prev + 1);\n  }, []);\n  \n  const closeSettingsWindow = useCallback(() => {\n    console.log(\"🔴 Closing SettingsWindow\");\n    windowVisibilityRef.current = {\n      ...windowVisibilityRef.current,\n      SettingsWindow: false\n    };\n    setWindowVisibility(prev => ({ ...prev, SettingsWindow: false }));\n  }, []);\n  \n\n  return (\n    <Router>\n      <RouteObserver />\n      \n      <Routes>\n        <Route path=\"/\" element={\n          <WelcomeWindow \n            openToTestList={openToTestList} \n            openServerWindow={openServerWindow}\n          />\n        } />\n        <Route path=\"/main\" element={\n          <MainScreen \n            showSettingsWindow={windowVisibility.SettingsWindow}\n            openSettingsWindow={openSettingsWindow}\n            closeSettingsWindow={closeSettingsWindow}\n            openToTestList={openToTestList}\n            closeToTestList={closeToTestList}\n            openServerWindow={openServerWindow}\n            openModelWindow={openModelWindow}\n            closeModelWindow={closeModelWindow}\n            showToTestList={windowVisibility.ToTestList}\n            showThreeDModelWindow={windowVisibility.ThreeDModelWindow}\n            threeDModelProfileId={threeDModelProfileId}\n            windowZIndexes={windowZIndexes}\n            bringWindowToFront={bringWindowToFront}\n            zIndexCounter={zIndexCounter}\n          />\n        } />\n      </Routes>\n\n      {/* Floating windows */}\n      <div className=\"window-container\">\n        {windowVisibility.ToTestList && (\n          <ToTestList\n            key={`ToTestList-${Date.now()}`} // Force new instance on every render\n            zIndex={windowZIndexes.ToTestList}\n            onMouseDown={() => bringWindowToFront(\"ToTestList\")}\n            onClose={closeToTestList}\n            bringWindowToFront={bringWindowToFront}\n            windowZIndexes={windowZIndexes}\n            zIndexCounter={zIndexCounter}\n          />\n        )}\n\n        {windowVisibility.ServerWindow && (\n          <ServerWindow\n            key={`ServerWindow-${serverWindowKey}`} // ✓ Use dynamic key for forced remount\n            zIndex={windowZIndexes.ServerWindow}\n            onMouseDown={() => bringWindowToFront(\"ServerWindow\")}\n            onClose={closeServerWindow}\n            onMinimize={minimizeServerWindow}\n            bringWindowToFront={bringWindowToFront}\n            windowZIndexes={windowZIndexes}\n            zIndexCounter={zIndexCounter}\n          />\n        )}\n\n        {windowVisibility.ThreeDModelWindow && (\n          <ThreeDModelWindow\n            key={`ThreeDModel-${threeDModelProfileId}`}\n            profileId={threeDModelProfileId}\n            zIndex={windowZIndexes.ThreeDModelWindow}\n            onMouseDown={() => bringWindowToFront(\"ThreeDModelWindow\")}\n            onClose={closeModelWindow}\n            showThreeDModelWindow={windowVisibility.ThreeDModelWindow}\n            windowZIndexes={windowZIndexes}\n            zIndexCounter={zIndexCounter}\n            bringWindowToFront={bringWindowToFront}\n          />\n        )}\n\n{windowVisibility.SettingsWindow && (\n  <SettingsWindow\n    zIndex={windowZIndexes.SettingsWindow}\n    onMouseDown={() => bringWindowToFront(\"SettingsWindow\")}\n    onClose={closeSettingsWindow}\n    bringWindowToFront={bringWindowToFront}\n    windowZIndexes={windowZIndexes}\n    zIndexCounter={zIndexCounter}\n  />\n)}\n      </div>\n\n      {/* Add Taskbar component - with direct restore handler */}\n      <Taskbar \n        minimizedWindows={minimizedWindows.map(window => ({\n          ...window,\n          onRestore: () => restoreWindowFromTaskbar(window.id as WindowName)\n        }))} \n      />\n    </Router>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}